---
import { GoogleFontsOptimizer } from "astro-google-fonts-optimizer";
import NavbarSplit from "@components/NavbarSplit.astro";
import Footer from "@components/Footer.astro";
import ScrollTop from "@components/ui/ScrollTop.astro";
import "@/styles/global.scss";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/images/favicon.png" />
    <meta name="generator" content={Astro.generator} />

    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"
    />

    <GoogleFontsOptimizer
      url={[
        "https://fonts.googleapis.com/css2?family=Roboto+Flex:opsz,wght@8..144,300;8..144,400;8..144,500;8..144,600",
        "https://fonts.googleapis.com/css2?family=Titillium+Web:wght@300;400;600;700&display=swap",
      ]}
    />

    <slot name="head" />
  </head>
  <body>
    <div id="Top"></div>
    <NavbarSplit />
    <slot />
    <!-- <WhatsAppButton client:load /> -->
    <ScrollTop />
    <Footer />

    <script>
      import { MASONRY_THEME, MASONRY_LOGGEDIN } from "@/constants";

      document.addEventListener("alpine:init", () => {
        //@ts-ignore
        Alpine.store("app", {
          init() {
            this.isDark =
              MASONRY_THEME in localStorage
                ? localStorage.getItem(MASONRY_THEME) === "dark"
                : window.matchMedia("(prefers-color-scheme: dark)").matches;

            this.isLoggedIn =
              MASONRY_LOGGEDIN in localStorage
                ? localStorage.getItem(MASONRY_LOGGEDIN) === "true"
                : false;
          },
          toggleTheme() {
            this.isDark = !this.isDark;
            localStorage.setItem(MASONRY_THEME, this.isDark ? "dark" : "light");
          },
          login() {
            this.isLoggedIn = true;
            localStorage.setItem(MASONRY_LOGGEDIN, "true");
          },
          logout() {
            this.isLoggedIn = false;
            localStorage.setItem(MASONRY_LOGGEDIN, "false");
          },
          isDark: false,
          isLoggedIn: false,
        });
      });
    </script>
    <script is:inline>
      document.getElementById("showHide").onclick = function () {
        var theDiv = document.getElementById("listing2");
        var doorText = this.querySelector(".door-text");
        if (theDiv.style.display == "none" || theDiv.style.display === "") {
          theDiv.style.display = "grid";
          doorText.innerHTML = "Show Less";
        } else {
          theDiv.style.display = "none";
          doorText.innerHTML = "Enter through here to see more listings";
        }
      };
    </script>

    <script is:inline>
      document.getElementById("showHide").onclick = function () {
        var theDiv = document.getElementById("listing2");
        var doorText = this.querySelector(".door-text");
        if (theDiv.style.display == "none" || theDiv.style.display === "") {
          theDiv.style.display = "grid";
          doorText.innerHTML = "Exit Display";
          this.classList.add("opened"); // Add the 'opened' class
        } else {
          theDiv.style.display = "none";
          doorText.innerHTML = "More Listings Here";
          this.classList.remove("opened"); // Remove the 'opened' class
        }
      };

      window.initMap = function () {
        // Define the initMap function in the global scope
        console.log("Google Maps API initialized");
      };
    </script>
    <script
      is:inline
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBX8EfMV4hWzdWqiP2iieh7eA3ZMJUQUDE&callback=initMap"
      async
      defer></script>
    <script
      is:inline
      src="https://cdn.jsdelivr.net/npm/flowbite@2.4.1/dist/flowbite.min.js"
    ></script>
  </body>
</html>
