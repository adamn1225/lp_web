---
import { APP } from '@data/config'
import { Icon } from 'astro-icon/components'
import Logo from './ui/Logo.astro'
import MegaMenu from './ui/MegaMenu.astro'
import AccountMenu from './ui/AccountMenu.astro'
---

<div id="HeaderWrapper" x-data="navbar" x-on:scroll.window="scroll()" x-on:mouseleave="megamenuOpened = false" role="navigation" aria-label="main navigation" class="fixed top-0 start-0 w-full z-50">
  <div
    id="header"
    class="border-b transition-all duration-300"
    :class="scrolled || megamenuOpened || mobileOpen  ? 'bg-white border-muted-200 dark:border-muted-800 dark:bg-muted-950 shadow-lg shadow-muted-300/30 dark:shadow-muted-800/20': 'lg:bg-transparent border-transparent' "
  >
    <header id="MainHeader" class="min-h-[70px] w-full max-w-7xl mx-auto flex justify-start items-stretch gap-3 shadow lg:shadow-none px-3 lg:px-0">
      <div class="brand flex justify-between lg:justify-start items-center w-full lg:w-auto min-h-[3.25rem]">
        <a href="/" class="flex gap-4 items-center py-2">
          <Logo class="size-8 aspect-square" />
          <p class="font-medium text-2xl font-sans text-muted-900 dark:text-white">
            {APP.name}
          </p>
        </a>
        <div class="flex items-stretch gap-3">
          <button id="MenuToggle" class="lg:hidden" @click="mobileOpen = !mobileOpen">
            <Icon id="OpenIcon" x-show="!mobileOpen" name="lucide:menu" class="pointer-events-none text-muted-500 dark:text-white size-6 aspect-auto" />
            <Icon id="CloseIcon" x-show="mobileOpen" name="lucide:x" class="pointer-events-none text-muted-500 dark:text-white size-6 aspect-auto" />
          </button>

          <template x-if="$store.app.isLoggedIn">
            <div class="lg:hidden flex items-center justify-center">
              <AccountMenu />
            </div>
          </template>
        </div>
      </div>

      <nav
        aria-label="Main Navigation"
        x-cloak
        class="absolute top-full bg-white lg:bg-transparent start-0 w-full lg:static px-3 lg:px-0 lg:flex-grow items-stretch justify-between"
        :class="mobileOpen ? 'block pt-5 pb-8 lg:p-0 -translate-y-px border-b border-muted-200 dark:border-muted-800 dark:bg-muted-950 shadow-lg shadow-muted-300/30 dark:shadow-muted-800/20': 'hidden lg:flex'"
      >
        <ul id="LeftLinks" class="flex flex-col lg:flex-row items-stretch [&>li>a]:h-full">
          <li>
            <a
              href="#"
              x-on:mouseover="megamenuOpened = true, openedMegamenu = 'megamenu-1'"
              @click="megamenuOpened = true, openedMegamenu = 'megamenu-1'"
              class="py-2 px-3 leading-6 text-base group text-muted-500 dark:text-muted-400 hover:text-muted-600 dark:hover:text-white transition-all duration-300 flex items-center justify-center gap-1"
            >
              <span>Properties</span>
              <Icon name="lucide:chevron-down" class="size-4 group-hover:rotate-180 transition-transform duration-300" />
            </a>
          </li>
          <li>
            <a
              href="#"
              x-on:mouseover="megamenuOpened = true, openedMegamenu = 'megamenu-2'"
              @click="megamenuOpened = true, openedMegamenu = 'megamenu-2'"
              class="py-2 px-3 leading-6 group text-base text-muted-500 dark:text-muted-400 hover:text-muted-600 dark:hover:text-white transition-all duration-300 flex items-center justify-center gap-1"
            >
              <span>Rentals</span>
              <Icon name="lucide:chevron-down" class="size-4 group-hover:rotate-180 transition-transform duration-300" />
            </a>
          </li>
          <li>
            <a href="/about" class="py-2 px-3 leading-6 grid place-items-center text-base text-muted-500 dark:text-muted-400 hover:text-muted-600 dark:hover:text-white transition-all duration-300">About</a>
          </li>
        </ul>

        <ul id="RightLinks" class="flex flex-col lg:flex-row items-stretch gap-6 [&>li>a]:h-full [&>li>a]:grid [&>li>a]:place-items-center">
          <template x-if="$store.app.isLoggedIn === false">
            <li>
              <a
                href="/login"
                class="py-2 leading-6 text-base hover:text-muted-600 dark:hover:text-white transition-all duration-300"
                :class="scrolled ||  megamenuOpened ? 'text-muted-500 dark:text-muted-400 hover:text-muted-600' : 'text-muted-500 hover:text-muted-600 lg:text-white'">Sign In</a
              >
            </li>
          </template>

          <!-- search -->
          <li class="search lg:ps-6 hidden lg:block" :class="scrolled || megamenuOpened ? 'border-muted-200 dark:border-muted-800': 'border-transparent',{'lg:border-l':!$store.app.isLoggedIn}">
            <a href="" class="inline-block text-base text-muted-500 hover:text-muted-600 dark:hover:text-white transition-all duration-300" :class="scrolled || megamenuOpened ? '' : 'lg:text-white'">
              <Icon name="lucide:search" class="size-4" />
            </a>
          </li>

          <!-- whishlist -->
          <li class="hidden lg:block">
            <a href="/whishlist" class="inline-block text-base text-white hover:text-muted-500 dark:hover:text-white transition-all duration-300">
              <Icon
                name="lucide:heart"
                class="w-4 aspect-auto"
                :class="{'text-muted-500 hover:text-muted-600 dark:hover:text-white transition-all duration-300': scrolled  ||  megamenuOpened || mobileOpen }"
              />
            </a>
          </li>

          <!-- dark/light mode switch -->
          <li class="flex justify-center items-center">
            <button
              class="darkToggle relative size-9 aspect-square rounded-full overflow-hidden border-muted-200 dark:border-muted-800"
              :class="scrolled || megamenuOpened || mobileOpen ? 'border [&>svg]:text-yellow-400 dark:bg-muted-900' : '[&>svg]:text-white'"
              @click="$store.app.toggleTheme()"
            >
              <!-- sun -->
              <Icon
                name="lucide:sun"
                class="lightIcon start-1/2 aspect-auto absolute top-1/2 [&>*]:fill-current transition-all duration-300"
                :class="$store.app.isDark ? 'opacity-0 -translate-x-[45%] translate-y-[150%]' : 'opacity-100  -translate-x-1/2 -translate-y-1/2' "
              />

              <!-- moon -->
              <Icon
                name="lucide:moon"
                class="darkIcon start-1/2 aspect-auto absolute top-1/2 [&>*]:fill-current transition-all duration-300"
                :class="$store.app.isDark ? 'opacity-100  -translate-x-[45%] -translate-y-1/2' : 'opacity-0 -translate-x-[45%] -translate-y-[150%]' "
              />
            </button>
          </li>

          <template x-if="$store.app.isLoggedIn === false">
            <!-- register -->
            <li class="w-full md:w-3/5 mx-auto lg:mx-0 lg:w-auto flex items-center justify-center">
              <a
                href="/signup"
                class="!h-[46px] w-full lg:w-auto min-w-[120px] font-medium text-sm leading-6 px-3.5 py-1.5 flex justify-center items-center transition-all duration-300 rounded bg-primary-500 text-white"
                :class="{'shadow-lg shadow-primary-500/30': scrolled}">Register</a
              >
            </li>
          </template>

          <template x-if="$store.app.isLoggedIn">
            <div class="hidden lg:flex items-center justify-center">
              <AccountMenu />
            </div>
          </template>
        </ul>
      </nav>
    </header>
  </div>
  <MegaMenu />
</div>

<script>
  document.addEventListener('alpine:init', () => {
    //@ts-ignore
    Alpine.data('navbar', () => ({
      scrolled: false,
      height: 60,
      mobileOpen: false,
      megamenuOpened: false,
      openedMegamenu: 'megamenu-1',

      scroll() {
        let scrollValue = window.scrollY
        if (scrollValue >= this.height) {
          this.scrolled = true
        } else {
          this.scrolled = false
        }
        //@ts-ignore
        this.searchExpanded = false
      },
      openMobileMenu() {
        this.mobileOpen = !this.mobileOpen
      },
      logout() {
        setTimeout(() => {
          //@ts-ignore
          this.$store.app.logout()
          window.location.href = '/home'
        }, 200)
      },
      init() {
        document.querySelectorAll('.scroll-link[href^="#"]').forEach((trigger) => {
          //@ts-ignore
          trigger.onclick = function (e: any) {
            e.preventDefault()
            let hash = this.getAttribute('href')
            //@ts-ignore
            let target = document.querySelector(hash)
            let headerOffset = 100
            //@ts-ignore
            let elementPosition = target.offsetTop
            let offsetPosition = elementPosition - headerOffset

            window.scrollTo({
              top: offsetPosition,
              behavior: 'smooth',
            })
          }
        })
      },
    }))
  })
</script>
