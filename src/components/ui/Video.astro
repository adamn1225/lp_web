---
interface Props {
  poster: string
  sources: { src: string; type: string }[]
}
const { poster, sources } = Astro.props
---

<section class="video-wrapper relative lg:bg-black flex justify-start w-max">
  <video class="lazy w-[330px] h-[303px] accent-yellow-500 md:aspect-auto md:w-[480px] md:h-[440px]" loop muted playsinline poster={poster}>
    {sources.map((source) => <source data-src={source.src} type={source.type} />)}
  </video>

  <!-- PLAY BUTTON -->
  <button
    class="playBtn transition-all duration-200 grid place-items-center size-14 cursor-pointer aspect-square absolute top-1/2 start-1/2 -translate-y-1/2 -translate-x-1/2 rounded-full hover:bg-primary-500 group bg-white border border-primary hover:text-white text-primary-500"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="size-8" viewBox="0 0 24 24"
      ><path fill="currentColor" d="M8 6.82v10.36c0 .79.87 1.27 1.54.84l8.14-5.18a1 1 0 0 0 0-1.69L9.54 5.98A.998.998 0 0 0 8 6.82z"></path></svg
    >
  </button>
</section>

<style>
  .playBtn[data-is-playing='true'] {
    @apply opacity-0;
  }
  .playBtn[data-is-playing='false'] {
    @apply opacity-100;
  }
</style>
