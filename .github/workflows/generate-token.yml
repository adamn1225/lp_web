name: Generate Bearer Token

on:
  schedule:
    - cron: '0 */12 * * *' # Every 12 hours
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  generate-token:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install pnpm
      run: |
        npm install -g pnpm

    - name: Generate Bearer Token
      id: generate-token
      env:
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      run: |
        # Replace the following URL and request with the specifics of your API
        RESPONSE=$(curl -X POST "https://open-api.guesty.com/oauth2/token" \
          -H "accept: application/json" \
          -d "client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&grant_type=client_credentials&scope=open-api")

        # Extract the bearer token from the response (update jq filter as needed)
        BEARER_TOKEN=$(echo $RESPONSE | jq -r '.access_token')

        # Log the bearer token for debugging purposes (remove this in production)
        echo "Generated Bearer Token: $BEARER_TOKEN"

        # Set the bearer token as an environment variable
        echo "BEARER_TOKEN=${BEARER_TOKEN}" >> $GITHUB_ENV

    - name: Use Bearer Token in Astro Project
      run: |
        # Ensure the .env file exists
        touch .env.production
        # Append the bearer token to the .env file
        echo "VITE_API_TOKEN=${BEARER_TOKEN}" >> .env.production
        # Log the .env file content for debugging purposes
        cat .env.production

      

    - name: Install Dependencies and Build Project
      run: |
        # Install dependencies
        pnpm install
        # Build the Astro project
        pnpm build
        # Deploy or perform any other necessary tasks
        # e.g., pnpm deploy
      shell: /usr/bin/bash -e {0}
      env:
        BEARER_TOKEN: ${{ env.BEARER_TOKEN }}
        VITE_API_TOKEN: ${{ env.BEARER_TOKEN }}

      # Add, commit, then push the new file to the repo
    - name: Adds the new log file to the repo
      run: git add .
    - name: Commit change to repo
      run: git commit -m "refresh"
    - name: git config
      run: git config user.email "anoah1225@gmail.com"
           git config user.name "adamn1225"
    - name: Push change to repo
      run: git push origin m
