{
  "openapi": "3.0.3",
  "info": {
    "description": "Core application API",
    "title": "GUESTY OPEN API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://open-api.guesty.com/v1"
    }
  ],
  "externalDocs": {
    "description": "Visit Listings Github page",
    "url": "https://github.com/guestyorg/listings"
  },
  "security": [
    {
      "bearerAuth": ["eyJraWQiOiI1OVBtSUFVdG91YjNQS1RWaE1VRF9JZ0E1WUd6QUN4djhPMlkteTdnS1JjIiwiYWxnIjoiUlMyNTYifQ.eyJ2ZXIiOjEsImp0aSI6IkFULjF2WmVoNFh2WGhmaU5taVhKZDI3YmZRbjd1SzBVdkQ5Um1LVzRFNFJqcTQiLCJpc3MiOiJodHRwczovL2xvZ2luLmd1ZXN0eS5jb20vb2F1dGgyL2F1czFwOHFyaDUzQ2NRVEk5NWQ3IiwiYXVkIjoiaHR0cHM6Ly9vcGVuLWFwaS5ndWVzdHkuY29tIiwiaWF0IjoxNzIxMzM1MTUzLCJleHAiOjE3MjE0MjE1NTMsImNpZCI6IjBvYWlkZ2R0eTZORG9kMGpxNWQ3Iiwic2NwIjpbIm9wZW4tYXBpIl0sInJlcXVlc3RlciI6IkVYVEVSTkFMIiwiYWNjb3VudElkIjoiNjUzYjBmOGQ3ZTg5ODJkZWZhZmFhZjViIiwic3ViIjoiMG9haWRnZHR5Nk5Eb2QwanE1ZDciLCJ1c2VyUm9sZXMiOlt7InJvbGVJZCI6eyJwZXJtaXNzaW9ucyI6WyJhZG1pbiJdfX1dLCJyb2xlIjoidXNlciIsImNsaWVudFR5cGUiOiJvcGVuYXBpIiwiaWFtIjoidjMiLCJhY2NvdW50TmFtZSI6IkxpbmUgcHJvcGVydGllcyBJbmMiLCJuYW1lIjoibHBfd2ViIn0.L_fl04JX-upTYTsf6vidG76o9fNem8UNSb5AcBkDB6cFlQJ9VKKaEaO1gSO6q_nsAYA0sfblN73Xpu4gytRvrcdS1G5AqvAbTtVbnAjwQOmY45iwRHPJ6qHsjkCF9HttRvkJ7WUxM4t8HZ7NcxFaXbuBXVLi4QdDmjKd27kE7uRb0aemhPIkfben1R2F2tcBc7NTxG5k6bcN9EWzWMyvkFxH_g4LXizi2AUoA9m4-h8bKGj6aqbBeMlgRuv0HkscKSxsRtKS4Hi87e0i-VhWoXqN0mywC35Xqi6TKsjEY9_qZpVVgsJsxKMpGENPTt5NWisllNrgzTLoSsN45yprSA"]
    }
  ],
  "tags": [
    {
      "name": "calendar",
      "description": "Everything about calendar"
    },
    {
      "name": "AdditionalFees",
      "description": "additional fees operations"
    },
    {
      "name": "listings",
      "description": "Everything about listings",
      "externalDocs": {
        "description": "Extra documentation for the service",
        "url": "https://github.com/guestyorg/listings/wiki/API"
      }
    },
    {
      "name": "billing",
      "description": "Operation with listings related to billing functionality only. Private.",
      "externalDocs": {
        "description": "Extra documentation for the service",
        "url": "https://github.com/guestyorg/listings/wiki/API"
      }
    },
    {
      "name": "properties",
      "description": "API for property level"
    },
    {
      "name": "unit-types",
      "description": "API for unit types level"
    },
    {
      "name": "units",
      "description": "API for units level"
    }
  ],
  "components": {
    "schemas": {
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "active": {
            "type": "boolean",
            "description": "Status of connection"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "timezone": {
            "type": "string"
          },
          "mailgun": {
            "type": "object",
            "properties": {}
          },
          "isInterestedInServiceOnExistingReservations": {
            "type": "boolean"
          },
          "siqnupQuestions": {
            "type": "object",
            "properties": {}
          },
          "ignoredHooks": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "5981b4b8c97c260f0067c499"
            }
          },
          "initialLocation": {
            "type": "string"
          },
          "recognizedRevenueDays": {
            "type": "number"
          },
          "initialReferrer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "question": {
                "type": "string"
              },
              "answer": {
                "type": "string"
              }
            }
          },
          "mailingAddress": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number"
              },
              "lng": {
                "type": "number"
              },
              "full": {
                "type": "string"
              }
            }
          },
          "sisenseAccess": {
            "type": "boolean"
          },
          "recognizedRevenueMode": {
            "type": "string",
            "enum": [
              "check-in",
              "check-out",
              "per_night"
            ]
          },
          "companyInformation": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "contactFirstname": {
                "type": "string"
              },
              "contactLastname": {
                "type": "string"
              },
              "contactEmail": {
                "type": "string",
                "format": "email"
              },
              "contactPhone": {
                "type": "string"
              },
              "businessType": {
                "type": "string"
              },
              "vatNum": {
                "type": "number"
              },
              "country": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "zipCode": {
                "type": "string"
              },
              "corporationPlace": {
                "type": "string"
              },
              "submittedAt": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "RUFeeActivation": {
            "type": "boolean"
          },
          "currency": {
            "type": "string"
          },
          "companyLogo": {
            "type": "string"
          },
          "accountCategorization": {
            "type": "number"
          },
          "accountCategorizationIsManual": {
            "type": "boolean"
          },
          "agodaEmail": {
            "type": "string",
            "format": "email"
          },
          "onBoarding": {
            "type": "object",
            "properties": {
              "createdFirstHookAt": {
                "type": "string",
                "format": "date"
              },
              "zendeskTicketId": {
                "type": "string"
              }
            }
          },
          "migration": {
            "type": "object",
            "properties": {
              "rateStrategy": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "pricePlanMinimum": {
            "type": "number"
          },
          "pricePlanMaximum": {
            "type": "number"
          },
          "SaaS": {
            "type": "object",
            "properties": {}
          },
          "billing": {
            "type": "object",
            "properties": {
              "billingCycle": {
                "type": "string"
              },
              "billingDay": {
                "type": "number"
              },
              "nextBillingDate": {
                "type": "string",
                "format": "date"
              },
              "paymentMethods": {
                "type": "array",
                "items": {}
              },
              "noFreezingFlow": {
                "type": "boolean"
              },
              "stripeCustomerId": {
                "type": "string"
              }
            }
          },
          "weekendBasePriceMigrationDone": {
            "type": "boolean"
          },
          "pms": {
            "type": "object",
            "properties": {
              "website": {
                "type": "object",
                "properties": {
                  "defaultStatusForNewReservations": {
                    "type": "string"
                  },
                  "defaultSort": {
                    "type": "string"
                  },
                  "includedListings": {
                    "type": "array",
                    "items": {}
                  },
                  "excludedListings": {
                    "type": "array",
                    "items": {}
                  }
                }
              },
              "calendar": {
                "type": "object",
                "properties": {
                  "requireReasonForUpdatingPricing": {
                    "type": "boolean"
                  }
                }
              },
              "cleaningStatus": {
                "type": "object",
                "properties": {
                  "statusFade": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "days": {
                        "type": "number"
                      },
                      "toStatus": {
                        "type": "string"
                      }
                    }
                  },
                  "markAsDirtyOnCheckIn": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "whiteLabel": {
            "type": "object",
            "properties": {
              "integrationEmailDomains": {
                "type": "array",
                "items": {}
              },
              "shouldWhiteLabelApp": {
                "type": "boolean"
              }
            }
          },
          "hadFirstBookingAt": {
            "type": "string",
            "format": "date"
          },
          "availablePhoneNumbers": {
            "type": "array",
            "items": {}
          },
          "customFields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "isPublic": {
                  "type": "boolean"
                },
                "key": {
                  "type": "string"
                },
                "object": {
                  "type": "string",
                  "enum": [
                    "listing",
                    "reservation"
                  ]
                },
                "options": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "user",
                    "boolean",
                    "enum",
                    "longtext",
                    "date",
                    "text",
                    "time",
                    "contact",
                    "number"
                  ]
                }
              }
            }
          },
          "plan": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "planType": {
                  "type": "string"
                },
                "value": {
                  "type": "number"
                },
                "isLocked": {
                  "type": "boolean"
                }
              }
            }
          },
          "financials": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "channelCommission": {
                "type": "object",
                "properties": {
                  "rentalsUnited": {
                    "type": "object",
                    "properties": {
                      "bookingCom": {
                        "type": "object",
                        "properties": {
                          "tax": {
                            "type": "number"
                          }
                        }
                      },
                      "expedia": {
                        "type": "object",
                        "properties": {
                          "commission": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "of": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tax": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      },
                      "agoda": {
                        "type": "object",
                        "properties": {
                          "commission": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "of": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tax": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "bookingCom": {
                    "type": "object",
                    "properties": {
                      "tax": {
                        "type": "number"
                      }
                    }
                  },
                  "homeaway2": {
                    "type": "object",
                    "properties": {
                      "commission": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "number"
                          },
                          "of": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "tax": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  "useAccountSettings": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "commissionFormula": {
            "type": "string"
          },
          "netIncomeFormula": {
            "type": "string"
          },
          "ownerRevenueFormula": {
            "type": "string"
          },
          "cancellationSurvey": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date"
                },
                "reasons": {
                  "type": "object",
                  "properties": {
                    "Onboarding experience": {
                      "type": "string",
                      "enum": [
                        "hidden",
                        "unselected",
                        "selected"
                      ]
                    },
                    "Missing features": {
                      "type": "string",
                      "enum": [
                        "hidden",
                        "unselected",
                        "selected"
                      ]
                    },
                    "Technical issues": {
                      "type": "string",
                      "enum": [
                        "hidden",
                        "unselected",
                        "selected"
                      ]
                    },
                    "System usability": {
                      "type": "string",
                      "enum": [
                        "hidden",
                        "unselected",
                        "selected"
                      ]
                    },
                    "Value for money": {
                      "type": "string",
                      "enum": [
                        "hidden",
                        "unselected",
                        "selected"
                      ]
                    },
                    "Customer support": {
                      "type": "string",
                      "enum": [
                        "hidden",
                        "unselected",
                        "selected"
                      ]
                    },
                    "Guest Communication Service": {
                      "type": "string",
                      "enum": [
                        "hidden",
                        "unselected",
                        "selected"
                      ]
                    },
                    "Other": {
                      "type": "string",
                      "enum": [
                        "hidden",
                        "unselected",
                        "selected"
                      ]
                    }
                  }
                },
                "subReasons": {
                  "type": "object",
                  "properties": {
                    "Other": {
                      "type": "object",
                      "properties": {
                        "Other": {
                          "type": "string",
                          "enum": [
                            "hidden",
                            "unselected",
                            "selected"
                          ]
                        },
                        "OtherInput": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "internalData": {
            "type": "object",
            "properties": {
              "agreedToTOS": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "userEmail": {
                    "type": "string",
                    "format": "email"
                  },
                  "date": {
                    "type": "string",
                    "format": "email"
                  }
                }
              },
              "features": {
                "type": "object",
                "properties": {
                  "airbnbIntegration": {
                    "type": "string"
                  }
                }
              },
              "oldOnboardingStatus": {
                "type": "string"
              },
              "accountManager": {
                "type": "string"
              },
              "onboardingStatus": {
                "type": "string"
              }
            }
          },
          "taxes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "units": {
                  "type": "string"
                },
                "quantifier": {
                  "type": "string"
                },
                "amount": {
                  "type": "number"
                }
              }
            }
          },
          "commissionTaxPercentage": {
            "type": "number"
          },
          "systemEmailsRecipients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "apiKeys": {
            "type": "array",
            "items": {}
          },
          "markups": {
            "type": "object",
            "properties": {
              "agoda": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "units": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "signupQuestions": {
            "type": "array",
            "items": {}
          },
          "receptionistsService": {
            "type": "object",
            "properties": {
              "receptionDesk": {
                "type": "object",
                "properties": {
                  "ittt": {
                    "type": "array",
                    "items": {}
                  }
                }
              },
              "screening": {
                "type": "object",
                "properties": {
                  "checklist": {
                    "type": "array",
                    "items": {}
                  }
                }
              },
              "contactPersonUserId": {
                "type": "string"
              }
            }
          }
        }
      },
      "Owner": {
        "type": "object",
        "properties": {
          "ownersPortalSettings": {
            "type": "object",
            "description": "The OPSettings object",
            "properties": {
              "bookedNights": {
                "type": "boolean"
              },
              "revenue": {
                "type": "boolean"
              },
              "accommodationFare": {
                "type": "boolean"
              },
              "guestsReports": {
                "type": "boolean"
              },
              "occupancy": {
                "type": "boolean"
              },
              "avgNightlyRate": {
                "type": "boolean"
              },
              "revPal": {
                "type": "boolean"
              },
              "hostPayout": {
                "type": "boolean"
              }
            },
            "example": {
              "ownersPortalSettings": {
                "bookedNights": true,
                "revenue": true
              }
            }
          },
          "listings": {
            "type": "array",
            "description": "Listings Id",
            "items": {
              "type": "string"
            },
            "example": [
              "5e32fc021690ba0026f6f778",
              "5e32fc021690d15417543012",
              "5e32fc021690d15417543013"
            ]
          },
          "_id": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "locale": {
            "type": "string",
            "description": "Localization",
            "example": "en-US"
          },
          "active": {
            "type": "boolean",
            "example": "false"
          },
          "allowReservations": {
            "type": "boolean",
            "example": "false"
          },
          "showReservationTooltips": {
            "type": "boolean",
            "example": "false"
          },
          "vatOrTaxId": {
            "type": "string"
          },
          "workingCapital": {
            "description": "Deprecated. Use new [API](/reference/ownerscontroller_update)",
            "type": "number",
            "example": 0
          },
          "firstName": {
            "type": "string",
            "example": "Elad"
          },
          "lastName": {
            "type": "string",
            "example": "Kremer"
          },
          "fullName": {
            "type": "string",
            "example": "Elad Kremer"
          },
          "email": {
            "type": "string",
            "example": "example@guesty.com",
            "description": "Primary email address"
          },
          "address": {
            "type": "string",
            "example": "test address"
          },
          "phone": {
            "type": "string",
            "example": "15417543010",
            "description": "Primary phone number"
          },
          "picture": {
            "type": "object",
            "properties": {
              "thumbnail": {
                "type": "string"
              },
              "regular": {
                "type": "string"
              },
              "large": {
                "type": "string"
              }
            },
            "example": {
              "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
              "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
            }
          },
          "notes": {
            "type": "string",
            "example": "this is a note"
          },
          "createdAt": {
            "type": "string",
            "description": "date ISO",
            "example": "2020-03-13T12:17:06.758Z"
          }
        }
      },
      "OwnerWithListingIdAsObject": {
        "type": "object",
        "title": "title test",
        "description": "desctiption test",
        "properties": {
          "ownersPortalSettings": {
            "type": "object",
            "description": "The OPSettings object",
            "properties": {
              "bookedNights": {
                "type": "boolean"
              },
              "revenue": {
                "type": "boolean"
              },
              "accommodationFare": {
                "type": "boolean"
              },
              "guestsReports": {
                "type": "boolean"
              },
              "occupancy": {
                "type": "boolean"
              },
              "avgNightlyRate": {
                "type": "boolean"
              },
              "revPal": {
                "type": "boolean"
              },
              "hostPayout": {
                "type": "boolean"
              }
            },
            "example": {
              "ownersPortalSettings": {
                "bookedNights": true,
                "revenue": true
              }
            }
          },
          "listings": {
            "type": "array",
            "description": "Listings Id",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "563e0b6a08a2710e00057b82",
                  "description": "Unique Id"
                }
              }
            },
            "example": [
              {
                "_id": "5e32fc021690ba0sds6f6f778"
              },
              {
                "_id": "5e32fc021690ba002dsklf778"
              }
            ]
          },
          "locale": {
            "type": "string",
            "description": "Localization",
            "example": "en-US"
          },
          "active": {
            "type": "boolean",
            "example": "false"
          },
          "allowReservations": {
            "type": "boolean",
            "example": "false"
          },
          "showReservationTooltips": {
            "type": "boolean",
            "example": "false"
          },
          "vatOrTaxId": {
            "type": "string"
          },
          "workingCapital": {
            "description": "Deprecated. Use new [API](/reference/ownerscontroller_retrieve)",
            "type": "number",
            "example": 0
          },
          "firstName": {
            "type": "string",
            "example": "Elad"
          },
          "lastName": {
            "type": "string",
            "example": "Kremer"
          },
          "fullName": {
            "type": "string",
            "example": "Elad Kremer"
          },
          "email": {
            "type": "string",
            "example": "example@guesty.com",
            "description": "Primary email address"
          },
          "address": {
            "type": "string",
            "example": "test address"
          },
          "phone": {
            "type": "string",
            "example": "15417543010",
            "description": "Primary phone number"
          },
          "picture": {
            "type": "object",
            "properties": {
              "thumbnail": {
                "type": "string"
              },
              "regular": {
                "type": "string"
              },
              "large": {
                "type": "string"
              }
            },
            "example": {
              "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
              "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
            }
          },
          "notes": {
            "type": "string",
            "example": "this is a note"
          },
          "createdAt": {
            "type": "string",
            "description": "date ISO",
            "example": "2020-03-13T12:17:06.758Z"
          }
        }
      },
      "Integration": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique Id",
            "example": "5958c7e5884e961000817799"
          },
          "airbnb2": {
            "type": "object",
            "properties": {
              "credentials": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": "integer"
                  },
                  "accessToken": {
                    "type": "string"
                  },
                  "refreshToken": {
                    "type": "string"
                  },
                  "lastForceRefresh": {
                    "type": "string",
                    "description": "date"
                  }
                }
              },
              "forwardEmails": {
                "type": "object",
                "properties": {
                  "all": {
                    "type": "boolean",
                    "default": true
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "description": "date"
              }
            },
            "description": "Only if platform is airbnb",
            "example": {
              "ignored": {
                "reservations": [],
                "listings": []
              },
              "emailsFromSupport": []
            }
          },
          "forwardEmails": {
            "type": "object",
            "properties": {
              "all": {
                "type": "boolean",
                "default": true
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "active": {
            "type": "boolean",
            "description": "Status of connection"
          },
          "platform": {
            "type": "string"
          },
          "listings": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Listing details"
            }
          },
          "complexes": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Complex details"
            }
          },
          "nickname": {
            "type": "string",
            "example": "naama"
          },
          "channelId": {
            "type": "string"
          },
          "activatedAt": {
            "type": "string",
            "description": "Date"
          },
          "disconnectedAt": {
            "type": "string",
            "description": "Date"
          },
          "proxyEmail": {
            "type": "string"
          },
          "incomingEmail": {
            "type": "string"
          },
          "externalAccountId": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "example": "naama@user.guesty.com",
            "description": "External ID"
          },
          "companyName": {
            "type": "string"
          },
          "fetchRequests": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "fetchAllListings": {
                  "type": "boolean"
                },
                "externalListingIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NOT_STARTED",
                    "IN_PROGRESS",
                    "COMPLETED",
                    "FAILED",
                    "TIMEOUT"
                  ]
                },
                "createTime": {
                  "type": "string",
                  "description": "Date"
                },
                "updateTime": {
                  "type": "string",
                  "description": "Date"
                },
                "finishedTime": {
                  "type": "string",
                  "description": "Date"
                }
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "NOT_CONNECTED",
              "CONNECTING",
              "CONNECTED",
              "FAILED",
              "TIMEOUT",
              "DISCONNECTED",
              "PENDING"
            ]
          },
          "migration": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "IN_PROGRESS",
                  "COMPLETED",
                  "FAILED"
                ]
              },
              "createTime": {
                "type": "string",
                "description": "Date"
              },
              "updateTime": {
                "type": "string",
                "description": "Date"
              },
              "finishedTime": {
                "type": "string",
                "description": "Date"
              },
              "steps": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Step details"
                }
              },
              "discrepancyStepExecuted": {
                "type": "boolean",
                "default": false
              },
              "discrepancyResolution": {
                "type": "string",
                "enum": [
                  "GUESTY",
                  "AIRBNB"
                ]
              },
              "listingQuantityDiscrepancyStepExecuted": {
                "type": "boolean",
                "default": false
              },
              "error": {
                "type": "object",
                "properties": {
                  "at": {
                    "type": "string",
                    "description": "Date"
                  },
                  "code": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "raw": {
                    "type": "object"
                  }
                }
              },
              "notes": {
                "type": "string"
              },
              "isRollingBack": {
                "type": "boolean",
                "default": false
              }
            }
          },
          "userId": {
            "type": "string",
            "example": "563e0b6a08a2710e00057b85"
          },
          "accountId": {
            "type": "string",
            "description": "Owner",
            "example": "563e0b6a08a2710e00057b82"
          },
          "tripAdvisor": {
            "type": "object",
            "description": "TripAdvisor details"
          },
          "homeaway2": {
            "type": "object",
            "description": "Homeaway details"
          },
          "bookingCom": {
            "type": "object",
            "properties": {
              "legalEntityId": {
                "type": "string"
              }
            },
            "description": "BookingCom details"
          },
          "createdAt": {
            "type": "string",
            "description": "Date"
          },
          "missingStep": {
            "type": "string"
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "COMPLETED",
                    "IN_PROGRESS"
                  ]
                },
                "createTime": {
                  "type": "string",
                  "description": "Date"
                },
                "updateTime": {
                  "type": "string",
                  "description": "Date"
                }
              }
            }
          },
          "newIntegrationBackup": {
            "type": "object"
          },
          "threadIdsMigrated": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "string",
            "description": "Date"
          }
        }
      },
      "Field": {
        "type": "string",
        "description": "Subject of the filter",
        "properties": {
          "confirmedAt": {
            "type": "string",
            "description": "YYYY-MM-DD"
          },
          "checkIn": {
            "type": "string",
            "description": "YYYY-MM-DD"
          },
          "checkOut": {
            "type": "string",
            "description": "YYYY-MM-DD"
          },
          "customFields": {
            "type": "string",
            "description": "customFields.fieldName"
          },
          "owner": {
            "type": "string",
            "description": "owner.fieldName",
            "example": "owner._id"
          },
          "listing": {
            "type": "string",
            "description": "listing.fieldName",
            "example": "listing.nickname"
          }
        }
      },
      "ObjectIdObj": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "563e0b6a08a2710e00057b82",
            "description": "Unique Id"
          }
        }
      },
      "AccountId": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "example": "563e0b6a08a2710e00057b82",
            "description": "Unique Id"
          }
        }
      },
      "ObjectId": {
        "type": "string",
        "description": "Unique Id",
        "example": "563e0b6a08a2710e00057b82"
      },
      "Money": {
        "type": "object",
        "properties": {
          "altered": {
            "type": "boolean"
          },
          "invoiceItems": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                },
                "title": {
                  "type": "string"
                },
                "amount": {
                  "type": "number"
                },
                "currency": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "isLocked": {
                  "type": "boolean"
                },
                "isTax": {
                  "type": "boolean"
                },
                "normalType": {
                  "type": "string"
                },
                "isAutoAdditionalFee": {
                  "type": "boolean"
                },
                "secondIdentifier": {
                  "type": "string"
                }
              }
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "authenticationRequiredData": {
                  "type": "object",
                  "properties": {
                    "lastAuthMsgSentDate": {
                      "type": "string",
                      "example": "2021-08-16T08:38:20.280Z"
                    },
                    "authenticationUrl": {
                      "type": "string"
                    }
                  }
                },
                "paymentMethodStatus": {
                  "type": "string"
                },
                "isAuthorizationHold": {
                  "type": "boolean"
                },
                "status": {
                  "type": "string"
                },
                "refunds": {
                  "type": "array"
                },
                "authorizationHoldCaptures": {
                  "type": "array"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-08-16T08:38:20.280Z"
                },
                "attempts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "createdAt": {
                        "type": "string",
                        "example": "2021-08-16T08:38:20.280Z"
                      },
                      "_id": {
                        "type": "string",
                        "description": "Unique Id",
                        "example": "563e0b6a08a2710e00057b82"
                      },
                      "status": {
                        "type": "string"
                      },
                      "error": {
                        "type": "string"
                      },
                      "payload": {
                        "type": "object",
                        "properties": {
                          "charge": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          },
                          "decline_code": {
                            "type": "string"
                          },
                          "doc_url": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "payment_intent": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "object": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "amount_capturable": {
                                "type": "number"
                              },
                              "amount_received": {
                                "type": "number"
                              },
                              "application": {
                                "type": "string"
                              },
                              "capture_method": {
                                "type": "string"
                              },
                              "charges": {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string"
                                  },
                                  "data": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "object": {
                                          "type": "string"
                                        },
                                        "amount": {
                                          "type": "number"
                                        },
                                        "amount_captured": {
                                          "type": "number"
                                        },
                                        "amount_refunded": {
                                          "type": "number"
                                        },
                                        "application": {
                                          "type": "string"
                                        },
                                        "billing_details": {
                                          "type": "object",
                                          "properties": {
                                            "address": {
                                              "type": "object",
                                              "properties": {
                                                "city": {
                                                  "type": "string"
                                                },
                                                "country": {
                                                  "type": "string"
                                                },
                                                "line1": {
                                                  "type": "string"
                                                },
                                                "line2": {
                                                  "type": "string"
                                                },
                                                "postal_code": {
                                                  "type": "string"
                                                },
                                                "state": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "email": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "phone": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "calculated_statement_descriptor": {
                                          "type": "string"
                                        },
                                        "captured": {
                                          "type": "boolean"
                                        },
                                        "created": {
                                          "type": "number"
                                        },
                                        "currency": {
                                          "type": "string"
                                        },
                                        "customer": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        },
                                        "disputed": {
                                          "type": "boolean"
                                        },
                                        "failure_code": {
                                          "type": "string"
                                        },
                                        "failure_message": {
                                          "type": "string"
                                        },
                                        "livemode": {
                                          "type": "boolean"
                                        },
                                        "metadata": {
                                          "type": "object",
                                          "properties": {
                                            "accountId": {
                                              "type": "string",
                                              "description": "Unique Id",
                                              "example": "563e0b6a08a2710e00057b82"
                                            },
                                            "confirmationCode": {
                                              "type": "string"
                                            },
                                            "reservationId": {
                                              "type": "string",
                                              "description": "Unique Id",
                                              "example": "563e0b6a08a2710e00057b82"
                                            },
                                            "OTA": {
                                              "type": "string"
                                            },
                                            "listingId": {
                                              "type": "string",
                                              "description": "Unique Id",
                                              "example": "563e0b6a08a2710e00057b82"
                                            }
                                          }
                                        },
                                        "outcome": {
                                          "type": "object",
                                          "properties": {
                                            "network_status": {
                                              "type": "string"
                                            },
                                            "reason": {
                                              "type": "string"
                                            },
                                            "risk_level": {
                                              "type": "string"
                                            },
                                            "risk_score": {
                                              "type": "number"
                                            },
                                            "seller_message": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "paid": {
                                          "type": "boolean"
                                        },
                                        "payment_intent": {
                                          "type": "string"
                                        },
                                        "payment_method": {
                                          "type": "string"
                                        },
                                        "payment_method_details": {
                                          "type": "object",
                                          "properties": {
                                            "card": {
                                              "type": "object",
                                              "properties": {
                                                "brand": {
                                                  "type": "string"
                                                },
                                                "checks": {
                                                  "type": "object",
                                                  "properties": {
                                                    "cvc_check": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "country": {
                                                  "type": "string"
                                                },
                                                "exp_month": {
                                                  "type": "number"
                                                },
                                                "exp_year": {
                                                  "type": "number"
                                                },
                                                "fingerprint": {
                                                  "type": "string"
                                                },
                                                "funding": {
                                                  "type": "string"
                                                },
                                                "last4": {
                                                  "type": "string"
                                                },
                                                "network": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "refunded": {
                                          "type": "boolean"
                                        },
                                        "refunds": {
                                          "type": "object",
                                          "properties": {
                                            "object": {
                                              "type": "string"
                                            },
                                            "data": {
                                              "type": "array"
                                            },
                                            "has_more": {
                                              "type": "boolean"
                                            },
                                            "total_count": {
                                              "type": "number"
                                            },
                                            "url": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "statement_descriptor": {
                                          "type": "string"
                                        },
                                        "status": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "has_more": {
                                    "type": "boolean"
                                  },
                                  "total_count": {
                                    "type": "number"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                }
                              },
                              "client_secret": {
                                "type": "string"
                              },
                              "confirmation_method": {
                                "type": "string"
                              },
                              "created": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "customer": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "livemode": {
                                "type": "boolean"
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "accountId": {
                                    "type": "string",
                                    "description": "Unique Id",
                                    "example": "563e0b6a08a2710e00057b82"
                                  },
                                  "confirmationCode": {
                                    "type": "string"
                                  },
                                  "reservationId": {
                                    "type": "string",
                                    "description": "Unique Id",
                                    "example": "563e0b6a08a2710e00057b82"
                                  },
                                  "OTA": {
                                    "type": "string"
                                  },
                                  "listingId": {
                                    "type": "string",
                                    "description": "Unique Id",
                                    "example": "563e0b6a08a2710e00057b82"
                                  }
                                }
                              },
                              "next_action": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "use_stripe_sdk": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "merchant": {
                                        "type": "string"
                                      },
                                      "three_d_secure_2_source": {
                                        "type": "string"
                                      },
                                      "directory_server_name": {
                                        "type": "string"
                                      },
                                      "server_transaction_id": {
                                        "type": "string"
                                      },
                                      "three_ds_method_url": {
                                        "type": "string"
                                      },
                                      "three_ds_optimizations": {
                                        "type": "string"
                                      },
                                      "directory_server_encryption": {
                                        "type": "object",
                                        "properties": {
                                          "directory_server_id": {
                                            "type": "string"
                                          },
                                          "algorithm": {
                                            "type": "string"
                                          },
                                          "certificate": {
                                            "type": "string"
                                          },
                                          "root_certificate_authorities": {
                                            "type": "array"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "payment_method": {
                                "type": "string"
                              },
                              "payment_method_options": {
                                "type": "object",
                                "properties": {
                                  "card": {
                                    "type": "object",
                                    "properties": {
                                      "request_three_d_secure": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "payment_method_types": {
                                "type": "array"
                              },
                              "statement_descriptor": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              }
                            }
                          },
                          "payment_method": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "object": {
                                "type": "string"
                              },
                              "billing_details": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "object",
                                    "properties": {
                                      "city": {
                                        "type": "string"
                                      },
                                      "country": {
                                        "type": "string"
                                      },
                                      "line1": {
                                        "type": "string"
                                      },
                                      "line2": {
                                        "type": "string"
                                      },
                                      "postal_code": {
                                        "type": "string"
                                      },
                                      "state": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "email": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "phone": {
                                    "type": "string"
                                  }
                                }
                              },
                              "card": {
                                "type": "object",
                                "properties": {
                                  "brand": {
                                    "type": "string"
                                  },
                                  "checks": {
                                    "type": "object",
                                    "properties": {
                                      "cvc_check": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "country": {
                                    "type": "string"
                                  },
                                  "exp_month": {
                                    "type": "number"
                                  },
                                  "exp_year": {
                                    "type": "number"
                                  },
                                  "fingerprint": {
                                    "type": "string"
                                  },
                                  "funding": {
                                    "type": "string"
                                  },
                                  "last4": {
                                    "type": "string"
                                  },
                                  "networks": {
                                    "type": "object",
                                    "properties": {
                                      "available": {
                                        "type": "array"
                                      }
                                    }
                                  },
                                  "three_d_secure_usage": {
                                    "type": "object",
                                    "properties": {
                                      "supported": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              },
                              "created": {
                                "type": "number"
                              },
                              "customer": {
                                "type": "string"
                              },
                              "livemode": {
                                "type": "boolean"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string"
                          },
                          "statusCode": {
                            "type": "number"
                          },
                          "requestId": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "receiptTargets": {
                  "type": "array"
                },
                "_id": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                },
                "amount": {
                  "type": "number"
                },
                "shouldBePaidAt": {
                  "type": "string",
                  "example": "2021-08-16T08:38:20.280Z"
                },
                "paymentMethodId": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                },
                "guestId": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                },
                "currency": {
                  "type": "string"
                }
              }
            }
          },
          "autoPaymentsPolicy": {
            "type": "array"
          },
          "currency": {
            "type": "string"
          },
          "paymentProviderIds": {
            "type": "array"
          },
          "fareAccommodationAdjustment": {
            "type": "number"
          },
          "fareAccommodationDiscount": {
            "type": "number"
          },
          "fareAccommodation": {
            "type": "number"
          },
          "fareAccommodationAdjusted": {
            "type": "number"
          },
          "fareCleaning": {
            "type": "number"
          },
          "hostServiceFee": {
            "type": "number"
          },
          "hostServiceFeeTax": {
            "type": "number"
          },
          "hostServiceFeeIncTax": {
            "type": "number"
          },
          "subTotalPrice": {
            "type": "number"
          },
          "hostPayout": {
            "type": "number"
          },
          "hostPayoutUsd": {
            "type": "number"
          },
          "totalTaxes": {
            "type": "number"
          },
          "totalRefunded": {
            "type": "number"
          },
          "totalPaid": {
            "type": "number"
          },
          "paymentsDue": {
            "type": "number"
          },
          "balanceDue": {
            "type": "number"
          },
          "isFullyPaid": {
            "type": "boolean"
          },
          "useAccountRevenueShare": {
            "type": "boolean"
          },
          "netIncomeFormula": {
            "type": "string"
          },
          "netIncome": {
            "type": "number"
          },
          "commissionFormula": {
            "type": "string"
          },
          "commission": {
            "type": "number"
          },
          "commissionTaxPercentage": {
            "type": "number"
          },
          "commissionTax": {
            "type": "number"
          },
          "commissionIncTax": {
            "type": "number"
          },
          "ownerRevenueFormula": {
            "type": "string"
          },
          "ownerRevenue": {
            "type": "number"
          },
          "currencyConversionRateToAccount": {
            "type": "number"
          },
          "isTouchedPayments": {
            "type": "boolean"
          }
        }
      },
      "Reservation": {
        "type": "object",
        "properties": {
          "integration": {
            "type": "object",
            "properties": {
              "limitations": {
                "type": "object",
                "properties": {
                  "availableStatuses": {
                    "type": "array"
                  }
                }
              },
              "bookingCom": {
                "type": "object",
                "properties": {
                  "invalidCreditCards": {
                    "type": "array"
                  },
                  "reports": {
                    "type": "array"
                  }
                }
              },
              "_id": {
                "type": "string",
                "description": "Unique Id",
                "example": "563e0b6a08a2710e00057b82"
              },
              "platform": {
                "type": "string"
              }
            }
          },
          "guestyFeeDetails": {
            "type": "object",
            "properties": {
              "commission": {
                "type": "number"
              },
              "feeMinimum": {
                "type": "number"
              },
              "fee": {
                "type": "number"
              },
              "feeUsd": {
                "type": "number"
              },
              "isMinimumFee": {
                "type": "boolean"
              },
              "isMaximumFee": {
                "type": "boolean"
              },
              "planItems": {
                "type": "array"
              }
            }
          },
          "review": {
            "type": "object",
            "properties": {
              "shouldReview": {
                "type": "boolean"
              }
            }
          },
          "atTimeOfConfirmation": {
            "type": "object",
            "properties": {
              "snapshotCreated": {
                "type": "boolean"
              },
              "channelCommission": {
                "type": "object",
                "properties": {
                  "useAccountSettings": {
                    "type": "boolean"
                  },
                  "_id": {
                    "type": "string",
                    "description": "Unique Id",
                    "example": "563e0b6a08a2710e00057b82"
                  },
                  "manual": {
                    "type": "array"
                  }
                }
              },
              "taxes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "appliedOnFees": {
                      "type": "string"
                    },
                    "appliedByDefaultOnChannels": {
                      "type": "array"
                    },
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "name": {
                      "type": "string"
                    },
                    "units": {
                      "type": "string"
                    },
                    "quantifier": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "appliedToAllFees": {
                      "type": "boolean"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              },
              "monthlyPriceFactor": {
                "type": "number"
              },
              "weeklyPriceFactor": {
                "type": "number"
              },
              "useAccountRevenueShare": {
                "type": "boolean"
              }
            }
          },
          "flag": {
            "type": "boolean"
          },
          "accountingEnabled": {
            "type": "boolean"
          },
          "isBMApplied": {
            "type": "boolean"
          },
          "confirmedPreBookings": {
            "type": "array"
          },
          "pulledByDailySync": {
            "type": "boolean"
          },
          "manuallyCreated": {
            "type": "boolean"
          },
          "_id": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "status": {
            "type": "string"
          },
          "checkIn": {
            "type": "string",
            "example": "2021-08-17T07:00:00.000Z"
          },
          "checkOut": {
            "type": "string",
            "example": "2021-08-17T07:00:00.000Z"
          },
          "nightsCount": {
            "type": "number"
          },
          "guestsCount": {
            "type": "number"
          },
          "money": {
            "type": "object",
            "properties": {
              "altered": {
                "type": "boolean"
              },
              "invoiceItems": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "title": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "isTax": {
                      "type": "boolean"
                    },
                    "normalType": {
                      "type": "string"
                    },
                    "isAutoAdditionalFee": {
                      "type": "boolean"
                    },
                    "secondIdentifier": {
                      "type": "string"
                    }
                  }
                }
              },
              "payments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "authenticationRequiredData": {
                      "type": "object",
                      "properties": {
                        "lastAuthMsgSentDate": {
                          "type": "string",
                          "example": "2021-08-16T08:38:20.280Z"
                        },
                        "authenticationUrl": {
                          "type": "string"
                        }
                      }
                    },
                    "paymentMethodStatus": {
                      "type": "string"
                    },
                    "isAuthorizationHold": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string"
                    },
                    "refunds": {
                      "type": "array"
                    },
                    "authorizationHoldCaptures": {
                      "type": "array"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-08-16T08:38:20.280Z"
                    },
                    "attempts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "example": "2021-08-16T08:38:20.280Z"
                          },
                          "_id": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "status": {
                            "type": "string"
                          },
                          "error": {
                            "type": "string"
                          },
                          "payload": {
                            "type": "object",
                            "properties": {
                              "charge": {
                                "type": "string"
                              },
                              "code": {
                                "type": "string"
                              },
                              "decline_code": {
                                "type": "string"
                              },
                              "doc_url": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              },
                              "payment_intent": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique Id",
                                    "example": "563e0b6a08a2710e00057b82"
                                  },
                                  "object": {
                                    "type": "string"
                                  },
                                  "amount": {
                                    "type": "number"
                                  },
                                  "amount_capturable": {
                                    "type": "number"
                                  },
                                  "amount_received": {
                                    "type": "number"
                                  },
                                  "application": {
                                    "type": "string"
                                  },
                                  "capture_method": {
                                    "type": "string"
                                  },
                                  "charges": {
                                    "type": "object",
                                    "properties": {
                                      "object": {
                                        "type": "string"
                                      },
                                      "data": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "object": {
                                              "type": "string"
                                            },
                                            "amount": {
                                              "type": "number"
                                            },
                                            "amount_captured": {
                                              "type": "number"
                                            },
                                            "amount_refunded": {
                                              "type": "number"
                                            },
                                            "application": {
                                              "type": "string"
                                            },
                                            "billing_details": {
                                              "type": "object",
                                              "properties": {
                                                "address": {
                                                  "type": "object",
                                                  "properties": {
                                                    "city": {
                                                      "type": "string"
                                                    },
                                                    "country": {
                                                      "type": "string"
                                                    },
                                                    "line1": {
                                                      "type": "string"
                                                    },
                                                    "line2": {
                                                      "type": "string"
                                                    },
                                                    "postal_code": {
                                                      "type": "string"
                                                    },
                                                    "state": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "email": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "phone": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "calculated_statement_descriptor": {
                                              "type": "string"
                                            },
                                            "captured": {
                                              "type": "boolean"
                                            },
                                            "created": {
                                              "type": "number"
                                            },
                                            "currency": {
                                              "type": "string"
                                            },
                                            "customer": {
                                              "type": "string"
                                            },
                                            "description": {
                                              "type": "string"
                                            },
                                            "disputed": {
                                              "type": "boolean"
                                            },
                                            "failure_code": {
                                              "type": "string"
                                            },
                                            "failure_message": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "metadata": {
                                              "type": "object",
                                              "properties": {
                                                "accountId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                },
                                                "confirmationCode": {
                                                  "type": "string"
                                                },
                                                "reservationId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                },
                                                "OTA": {
                                                  "type": "string"
                                                },
                                                "listingId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                }
                                              }
                                            },
                                            "outcome": {
                                              "type": "object",
                                              "properties": {
                                                "network_status": {
                                                  "type": "string"
                                                },
                                                "reason": {
                                                  "type": "string"
                                                },
                                                "risk_level": {
                                                  "type": "string"
                                                },
                                                "risk_score": {
                                                  "type": "number"
                                                },
                                                "seller_message": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "paid": {
                                              "type": "boolean"
                                            },
                                            "payment_intent": {
                                              "type": "string"
                                            },
                                            "payment_method": {
                                              "type": "string"
                                            },
                                            "payment_method_details": {
                                              "type": "object",
                                              "properties": {
                                                "card": {
                                                  "type": "object",
                                                  "properties": {
                                                    "brand": {
                                                      "type": "string"
                                                    },
                                                    "checks": {
                                                      "type": "object",
                                                      "properties": {
                                                        "cvc_check": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "country": {
                                                      "type": "string"
                                                    },
                                                    "exp_month": {
                                                      "type": "number"
                                                    },
                                                    "exp_year": {
                                                      "type": "number"
                                                    },
                                                    "fingerprint": {
                                                      "type": "string"
                                                    },
                                                    "funding": {
                                                      "type": "string"
                                                    },
                                                    "last4": {
                                                      "type": "string"
                                                    },
                                                    "network": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "refunded": {
                                              "type": "boolean"
                                            },
                                            "refunds": {
                                              "type": "object",
                                              "properties": {
                                                "object": {
                                                  "type": "string"
                                                },
                                                "data": {
                                                  "type": "array"
                                                },
                                                "has_more": {
                                                  "type": "boolean"
                                                },
                                                "total_count": {
                                                  "type": "number"
                                                },
                                                "url": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "statement_descriptor": {
                                              "type": "string"
                                            },
                                            "status": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "has_more": {
                                        "type": "boolean"
                                      },
                                      "total_count": {
                                        "type": "number"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "client_secret": {
                                    "type": "string"
                                  },
                                  "confirmation_method": {
                                    "type": "string"
                                  },
                                  "created": {
                                    "type": "number"
                                  },
                                  "currency": {
                                    "type": "string"
                                  },
                                  "customer": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "livemode": {
                                    "type": "boolean"
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "properties": {
                                      "accountId": {
                                        "type": "string",
                                        "description": "Unique Id",
                                        "example": "563e0b6a08a2710e00057b82"
                                      },
                                      "confirmationCode": {
                                        "type": "string"
                                      },
                                      "reservationId": {
                                        "type": "string",
                                        "description": "Unique Id",
                                        "example": "563e0b6a08a2710e00057b82"
                                      },
                                      "OTA": {
                                        "type": "string"
                                      },
                                      "listingId": {
                                        "type": "string",
                                        "description": "Unique Id",
                                        "example": "563e0b6a08a2710e00057b82"
                                      }
                                    }
                                  },
                                  "next_action": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "use_stripe_sdk": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "merchant": {
                                            "type": "string"
                                          },
                                          "three_d_secure_2_source": {
                                            "type": "string"
                                          },
                                          "directory_server_name": {
                                            "type": "string"
                                          },
                                          "server_transaction_id": {
                                            "type": "string"
                                          },
                                          "three_ds_method_url": {
                                            "type": "string"
                                          },
                                          "three_ds_optimizations": {
                                            "type": "string"
                                          },
                                          "directory_server_encryption": {
                                            "type": "object",
                                            "properties": {
                                              "directory_server_id": {
                                                "type": "string"
                                              },
                                              "algorithm": {
                                                "type": "string"
                                              },
                                              "certificate": {
                                                "type": "string"
                                              },
                                              "root_certificate_authorities": {
                                                "type": "array"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "payment_method": {
                                    "type": "string"
                                  },
                                  "payment_method_options": {
                                    "type": "object",
                                    "properties": {
                                      "card": {
                                        "type": "object",
                                        "properties": {
                                          "request_three_d_secure": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "payment_method_types": {
                                    "type": "array"
                                  },
                                  "statement_descriptor": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  }
                                }
                              },
                              "payment_method": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "object": {
                                    "type": "string"
                                  },
                                  "billing_details": {
                                    "type": "object",
                                    "properties": {
                                      "address": {
                                        "type": "object",
                                        "properties": {
                                          "city": {
                                            "type": "string"
                                          },
                                          "country": {
                                            "type": "string"
                                          },
                                          "line1": {
                                            "type": "string"
                                          },
                                          "line2": {
                                            "type": "string"
                                          },
                                          "postal_code": {
                                            "type": "string"
                                          },
                                          "state": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "email": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "phone": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "card": {
                                    "type": "object",
                                    "properties": {
                                      "brand": {
                                        "type": "string"
                                      },
                                      "checks": {
                                        "type": "object",
                                        "properties": {
                                          "cvc_check": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "country": {
                                        "type": "string"
                                      },
                                      "exp_month": {
                                        "type": "number"
                                      },
                                      "exp_year": {
                                        "type": "number"
                                      },
                                      "fingerprint": {
                                        "type": "string"
                                      },
                                      "funding": {
                                        "type": "string"
                                      },
                                      "last4": {
                                        "type": "string"
                                      },
                                      "networks": {
                                        "type": "object",
                                        "properties": {
                                          "available": {
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "three_d_secure_usage": {
                                        "type": "object",
                                        "properties": {
                                          "supported": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "created": {
                                    "type": "number"
                                  },
                                  "customer": {
                                    "type": "string"
                                  },
                                  "livemode": {
                                    "type": "boolean"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string"
                              },
                              "statusCode": {
                                "type": "number"
                              },
                              "requestId": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "receiptTargets": {
                      "type": "array"
                    },
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "shouldBePaidAt": {
                      "type": "string",
                      "example": "2021-08-16T08:38:20.280Z"
                    },
                    "paymentMethodId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "guestId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "currency": {
                      "type": "string"
                    }
                  }
                }
              },
              "autoPaymentsPolicy": {
                "type": "array"
              },
              "currency": {
                "type": "string"
              },
              "paymentProviderIds": {
                "type": "array"
              },
              "fareAccommodationAdjustment": {
                "type": "number"
              },
              "fareAccommodationDiscount": {
                "type": "number"
              },
              "fareAccommodation": {
                "type": "number"
              },
              "fareAccommodationAdjusted": {
                "type": "number"
              },
              "fareCleaning": {
                "type": "number"
              },
              "hostServiceFee": {
                "type": "number"
              },
              "hostServiceFeeTax": {
                "type": "number"
              },
              "hostServiceFeeIncTax": {
                "type": "number"
              },
              "subTotalPrice": {
                "type": "number"
              },
              "hostPayout": {
                "type": "number"
              },
              "hostPayoutUsd": {
                "type": "number"
              },
              "totalTaxes": {
                "type": "number"
              },
              "totalRefunded": {
                "type": "number"
              },
              "totalPaid": {
                "type": "number"
              },
              "paymentsDue": {
                "type": "number"
              },
              "balanceDue": {
                "type": "number"
              },
              "isFullyPaid": {
                "type": "boolean"
              },
              "useAccountRevenueShare": {
                "type": "boolean"
              },
              "netIncomeFormula": {
                "type": "string"
              },
              "netIncome": {
                "type": "number"
              },
              "commissionFormula": {
                "type": "string"
              },
              "commission": {
                "type": "number"
              },
              "commissionTaxPercentage": {
                "type": "number"
              },
              "commissionTax": {
                "type": "number"
              },
              "commissionIncTax": {
                "type": "number"
              },
              "ownerRevenueFormula": {
                "type": "string"
              },
              "ownerRevenue": {
                "type": "number"
              },
              "currencyConversionRateToAccount": {
                "type": "number"
              },
              "isTouchedPayments": {
                "type": "boolean"
              }
            }
          },
          "listingId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "checkInDateLocalized": {
            "type": "string"
          },
          "checkOutDateLocalized": {
            "type": "string"
          },
          "accountId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "guestId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "source": {
            "type": "string"
          },
          "confirmationCode": {
            "type": "string"
          },
          "mtl": {
            "type": "object",
            "properties": {
              "assigned": {
                "type": "boolean"
              },
              "_id": {
                "type": "string",
                "description": "Unique Id",
                "example": "563e0b6a08a2710e00057b82"
              }
            }
          },
          "isReturningGuest": {
            "type": "boolean"
          },
          "confirmedAt": {
            "type": "string",
            "example": "2021-08-17T07:00:00.000Z"
          },
          "importedAt": {
            "type": "string",
            "example": "2021-08-17T07:00:00.000Z"
          },
          "additionalFeesAtCreation": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "automationSources": {
                  "type": "array"
                },
                "_id": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                },
                "isPercentage": {
                  "type": "boolean"
                },
                "isAutomated": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "number"
                },
                "accountId": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                },
                "multiplier": {
                  "type": "string"
                },
                "targetFee": {
                  "type": "string"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "example": "2021-08-17T07:00:00.000Z"
          },
          "pendingTasks": {
            "type": "array"
          },
          "customFields": {
            "type": "array"
          },
          "lastUpdatedAt": {
            "type": "string",
            "example": "2021-08-17T07:00:00.000Z"
          },
          "__v": {
            "type": "number"
          },
          "conversationId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "id": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          }
        }
      },
      "OwnerReservation": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "status": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "accountId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "listingId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "checkIn": {
            "type": "string"
          },
          "checkOut": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "__v": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "checkInDateLocalized": {
            "type": "string"
          },
          "checkOutDateLocalized": {
            "type": "string"
          },
          "plannedDeparture": {
            "type": "string"
          },
          "plannedArrival": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "listing": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "String (ObjectId)",
                "example": "59ac245d27cb310f0017afe3"
              },
              "accountId": {
                "type": "string",
                "description": "String (ObjectId)",
                "example": "59ac245d27cb310f0017afe3"
              },
              "createdAt": {
                "type": "string",
                "example": "2017-09-03T15:48:45.070Z"
              },
              "integrations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "5958c7e5884e961000817799"
                    },
                    "airbnb2": {
                      "type": "object",
                      "properties": {
                        "credentials": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "expiresAt": {
                              "type": "integer"
                            },
                            "accessToken": {
                              "type": "string"
                            },
                            "refreshToken": {
                              "type": "string"
                            },
                            "lastForceRefresh": {
                              "type": "string",
                              "description": "date"
                            }
                          }
                        },
                        "forwardEmails": {
                          "type": "object",
                          "properties": {
                            "all": {
                              "type": "boolean",
                              "default": true
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "date"
                        }
                      },
                      "description": "Only if platform is airbnb",
                      "example": {
                        "ignored": {
                          "reservations": [],
                          "listings": []
                        },
                        "emailsFromSupport": []
                      }
                    },
                    "forwardEmails": {
                      "type": "object",
                      "properties": {
                        "all": {
                          "type": "boolean",
                          "default": true
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Status of connection"
                    },
                    "platform": {
                      "type": "string"
                    },
                    "listings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Listing details"
                      }
                    },
                    "complexes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Complex details"
                      }
                    },
                    "nickname": {
                      "type": "string",
                      "example": "naama"
                    },
                    "channelId": {
                      "type": "string"
                    },
                    "activatedAt": {
                      "type": "string",
                      "description": "Date"
                    },
                    "disconnectedAt": {
                      "type": "string",
                      "description": "Date"
                    },
                    "proxyEmail": {
                      "type": "string"
                    },
                    "incomingEmail": {
                      "type": "string"
                    },
                    "externalAccountId": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer",
                      "example": "naama@user.guesty.com",
                      "description": "External ID"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "fetchRequests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fetchAllListings": {
                            "type": "boolean"
                          },
                          "externalListingIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "NOT_STARTED",
                              "IN_PROGRESS",
                              "COMPLETED",
                              "FAILED",
                              "TIMEOUT"
                            ]
                          },
                          "createTime": {
                            "type": "string",
                            "description": "Date"
                          },
                          "updateTime": {
                            "type": "string",
                            "description": "Date"
                          },
                          "finishedTime": {
                            "type": "string",
                            "description": "Date"
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "NOT_CONNECTED",
                        "CONNECTING",
                        "CONNECTED",
                        "FAILED",
                        "TIMEOUT",
                        "DISCONNECTED",
                        "PENDING"
                      ]
                    },
                    "migration": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "IN_PROGRESS",
                            "COMPLETED",
                            "FAILED"
                          ]
                        },
                        "createTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "finishedTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "steps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Step details"
                          }
                        },
                        "discrepancyStepExecuted": {
                          "type": "boolean",
                          "default": false
                        },
                        "discrepancyResolution": {
                          "type": "string",
                          "enum": [
                            "GUESTY",
                            "AIRBNB"
                          ]
                        },
                        "listingQuantityDiscrepancyStepExecuted": {
                          "type": "boolean",
                          "default": false
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "at": {
                              "type": "string",
                              "description": "Date"
                            },
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "raw": {
                              "type": "object"
                            }
                          }
                        },
                        "notes": {
                          "type": "string"
                        },
                        "isRollingBack": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "userId": {
                      "type": "string",
                      "example": "563e0b6a08a2710e00057b85"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Owner",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "tripAdvisor": {
                      "type": "object",
                      "description": "TripAdvisor details"
                    },
                    "homeaway2": {
                      "type": "object",
                      "description": "Homeaway details"
                    },
                    "bookingCom": {
                      "type": "object",
                      "properties": {
                        "legalEntityId": {
                          "type": "string"
                        }
                      },
                      "description": "BookingCom details"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Date"
                    },
                    "missingStep": {
                      "type": "string"
                    },
                    "steps": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "COMPLETED",
                              "IN_PROGRESS"
                            ]
                          },
                          "createTime": {
                            "type": "string",
                            "description": "Date"
                          },
                          "updateTime": {
                            "type": "string",
                            "description": "Date"
                          }
                        }
                      }
                    },
                    "newIntegrationBackup": {
                      "type": "object"
                    },
                    "threadIdsMigrated": {
                      "type": "boolean"
                    },
                    "isDeleted": {
                      "type": "boolean"
                    },
                    "deletedAt": {
                      "type": "string",
                      "description": "Date"
                    }
                  }
                }
              },
              "isVirtual": {
                "type": "boolean"
              },
              "nickname": {
                "type": "string"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "isListed": {
                "type": "boolean"
              },
              "title": {
                "type": "string"
              },
              "propertyType": {
                "type": "string"
              },
              "roomType": {
                "type": "string"
              },
              "bedType": {
                "type": "string"
              },
              "accommodates": {
                "type": "number"
              },
              "bedrooms": {
                "type": "number"
              },
              "areaSquareFeet": {
                "type": "number"
              },
              "address": {
                "type": "object",
                "properties": {
                  "full": {
                    "type": "string",
                    "description": "full address",
                    "example": "Kaplan St 2, Ramat Gan, Israel"
                  },
                  "lng": {
                    "type": "number",
                    "example": 34.8202173
                  },
                  "lat": {
                    "type": "number",
                    "example": 32.0695525
                  },
                  "street": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                }
              },
              "publishedAddress": {
                "type": "object",
                "properties": {
                  "full": {
                    "type": "string",
                    "description": "full address",
                    "example": "Kaplan St 2, Ramat Gan, Israel"
                  },
                  "lng": {
                    "type": "number",
                    "example": 34.8202173
                  },
                  "lat": {
                    "type": "number",
                    "example": 32.0695525
                  },
                  "street": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  }
                }
              },
              "timezone": {
                "type": "string"
              },
              "defaultCheckInTime": {
                "type": "string"
              },
              "defaultCheckOutTime": {
                "type": "string"
              },
              "cleaning": {
                "type": "object",
                "properties": {
                  "defaultCleaningTime": {
                    "type": "string"
                  },
                  "instructions": {
                    "type": "string"
                  }
                }
              },
              "cleaningStatus": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "enum": [
                      "clean",
                      "waitingForInspection",
                      "dirty",
                      "unknown"
                    ]
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2019-08-24T14:15:22Z"
                  }
                }
              },
              "picture": {
                "type": "object",
                "properties": {
                  "regular": {
                    "type": "string"
                  },
                  "thumbnail": {
                    "type": "string",
                    "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                  },
                  "large": {
                    "type": "string"
                  },
                  "caption": {
                    "type": "string"
                  },
                  "height": {
                    "type": "number",
                    "example": 756
                  },
                  "original": {
                    "type": "string",
                    "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                  },
                  "size": {
                    "type": "number",
                    "example": 39516
                  },
                  "width": {
                    "type": "number",
                    "example": 756
                  }
                }
              },
              "pictures": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "regular": {
                      "type": "string"
                    },
                    "thumbnail": {
                      "type": "string",
                      "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                    },
                    "large": {
                      "type": "string"
                    },
                    "caption": {
                      "type": "string"
                    },
                    "height": {
                      "type": "number",
                      "example": 756
                    },
                    "original": {
                      "type": "string",
                      "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                    },
                    "size": {
                      "type": "number",
                      "example": 39516
                    },
                    "width": {
                      "type": "number",
                      "example": 756
                    }
                  }
                }
              },
              "amenities": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "amenitiesNotIncluded": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "terms": {
                "type": "object",
                "properties": {
                  "minNights": {
                    "type": "number"
                  },
                  "maxNights": {
                    "type": "number"
                  },
                  "cancellation": {
                    "type": "string"
                  }
                }
              },
              "prices": {
                "type": "object",
                "properties": {
                  "guestsIncludedInRegularFee": {
                    "type": "number"
                  },
                  "extraPersonFee": {
                    "type": "number"
                  },
                  "basePrice": {
                    "type": "number"
                  },
                  "basePriceUSD": {
                    "type": "number"
                  },
                  "monthlyPriceFactor": {
                    "type": "number"
                  },
                  "weeklyPriceFactor": {
                    "type": "number"
                  },
                  "weekendBasePrice": {
                    "type": "number"
                  },
                  "securityDepositFee": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "cleaningFee": {
                    "type": "number"
                  }
                }
              },
              "netIncomeFormula": {
                "type": "string"
              },
              "commissionFormula": {
                "type": "string"
              },
              "commissionTaxPrecentage": {
                "type": "string"
              },
              "pms": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "automation": {
                    "type": "object",
                    "properties": {
                      "autoList": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "boolean"
                          },
                          "config": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "inbox": {
                    "type": "object",
                    "properties": {
                      "customSignature": {
                        "type": "string"
                      }
                    }
                  },
                  "cleaningStatus": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "enum": [
                          "clean",
                          "waitingForInspection",
                          "dirty",
                          "unknown"
                        ]
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2019-08-24T14:15:22Z"
                      }
                    }
                  },
                  "paymentProcessing": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "paymentProviders": {
                        "type": "object",
                        "properties": {
                          "stripe": {
                            "type": "object",
                            "properties": {
                              "active": {
                                "type": "boolean"
                              },
                              "status": {
                                "type": "string"
                              },
                              "accountName": {
                                "type": "string"
                              },
                              "defaultCurrency": {
                                "type": "string"
                              },
                              "syncedAt": {
                                "type": "string",
                                "format": "date"
                              },
                              "payload": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "livemode": {
                                    "type": "boolean"
                                  },
                                  "token_type": {
                                    "type": "string"
                                  },
                                  "stripe_publishable_key": {
                                    "type": "string"
                                  },
                                  "stripe_user_id": {
                                    "type": "string"
                                  },
                                  "scope": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "autoPayments": {
                    "type": "object",
                    "properties": {
                      "policy": {
                        "type": "array"
                      }
                    }
                  }
                }
              },
              "receptionistsService": {
                "title": "object",
                "properties": {
                  "receptionDesk": {
                    "type": "object",
                    "properties": {
                      "ittt": {
                        "type": "array",
                        "items": {}
                      }
                    }
                  },
                  "screening": {
                    "type": "object",
                    "properties": {
                      "checklist": {
                        "type": "array",
                        "items": {}
                      }
                    }
                  },
                  "contactPersonUserId": {
                    "type": "string"
                  }
                }
              },
              "active": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "calendarRules": {
                "type": "object"
              },
              "publicDescription": {
                "type": "object"
              },
              "privateDescription": {
                "type": "object"
              },
              "markups": {
                "type": "object"
              }
            }
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownersPortalSettings": {
                "type": "object",
                "description": "The OPSettings object",
                "properties": {
                  "bookedNights": {
                    "type": "boolean"
                  },
                  "revenue": {
                    "type": "boolean"
                  },
                  "accommodationFare": {
                    "type": "boolean"
                  },
                  "guestsReports": {
                    "type": "boolean"
                  },
                  "occupancy": {
                    "type": "boolean"
                  },
                  "avgNightlyRate": {
                    "type": "boolean"
                  },
                  "revPal": {
                    "type": "boolean"
                  },
                  "hostPayout": {
                    "type": "boolean"
                  }
                },
                "example": {
                  "ownersPortalSettings": {
                    "bookedNights": true,
                    "revenue": true
                  }
                }
              },
              "listings": {
                "type": "array",
                "description": "Listings Id",
                "items": {
                  "type": "string"
                },
                "example": [
                  "5e32fc021690ba0026f6f778",
                  "5e32fc021690d15417543012",
                  "5e32fc021690d15417543013"
                ]
              },
              "_id": {
                "type": "string",
                "description": "Unique Id",
                "example": "563e0b6a08a2710e00057b82"
              },
              "locale": {
                "type": "string",
                "description": "Localization",
                "example": "en-US"
              },
              "active": {
                "type": "boolean",
                "example": "false"
              },
              "allowReservations": {
                "type": "boolean",
                "example": "false"
              },
              "showReservationTooltips": {
                "type": "boolean",
                "example": "false"
              },
              "vatOrTaxId": {
                "type": "string"
              },
              "workingCapital": {
                "description": "Deprecated. Use new [API](/reference/ownerscontroller_update)",
                "type": "number",
                "example": 0
              },
              "firstName": {
                "type": "string",
                "example": "Elad"
              },
              "lastName": {
                "type": "string",
                "example": "Kremer"
              },
              "fullName": {
                "type": "string",
                "example": "Elad Kremer"
              },
              "email": {
                "type": "string",
                "example": "example@guesty.com",
                "description": "Primary email address"
              },
              "address": {
                "type": "string",
                "example": "test address"
              },
              "phone": {
                "type": "string",
                "example": "15417543010",
                "description": "Primary phone number"
              },
              "picture": {
                "type": "object",
                "properties": {
                  "thumbnail": {
                    "type": "string"
                  },
                  "regular": {
                    "type": "string"
                  },
                  "large": {
                    "type": "string"
                  }
                },
                "example": {
                  "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                  "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                }
              },
              "notes": {
                "type": "string",
                "example": "this is a note"
              },
              "createdAt": {
                "type": "string",
                "description": "date ISO",
                "example": "2020-03-13T12:17:06.758Z"
              }
            }
          },
          "nightsCount": {
            "type": "number"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "OwnerId": {
        "type": "object",
        "properties": {
          "locale": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "listings": {
            "type": "array"
          },
          "_id": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "active": {
            "type": "boolean"
          },
          "allowReservations": {
            "type": "boolean"
          },
          "showReservationTooltips": {
            "type": "boolean"
          },
          "vatOrTaxId": {
            "type": "string"
          },
          "workingCapital": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "accountId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "createdAt": {
            "type": "string"
          },
          "ownersPortalSettings": {
            "type": "object",
            "properties": {
              "bookedNights": {
                "type": "boolean"
              },
              "revenue": {
                "type": "boolean"
              }
            }
          },
          "forgotPassword": {
            "type": "object",
            "properties": {
              "expiresAt": {
                "type": "string"
              },
              "hash": {
                "type": "string"
              }
            }
          },
          "__v": {
            "type": "number"
          }
        }
      },
      "OwnerReservationResponse": {
        "type": "object",
        "properties": {
          "ownerReservation": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Unique Id",
                "example": "563e0b6a08a2710e00057b82"
              },
              "status": {
                "type": "string"
              },
              "source": {
                "type": "string"
              },
              "accountId": {
                "type": "string",
                "description": "Unique Id",
                "example": "563e0b6a08a2710e00057b82"
              },
              "listingId": {
                "type": "string",
                "description": "Unique Id",
                "example": "563e0b6a08a2710e00057b82"
              },
              "checkIn": {
                "type": "string"
              },
              "checkOut": {
                "type": "string"
              },
              "note": {
                "type": "string"
              },
              "__v": {
                "type": "number"
              },
              "createdAt": {
                "type": "string"
              },
              "checkInDateLocalized": {
                "type": "string"
              },
              "checkOutDateLocalized": {
                "type": "string"
              },
              "plannedDeparture": {
                "type": "string"
              },
              "plannedArrival": {
                "type": "string"
              },
              "lastUpdatedAt": {
                "type": "string"
              },
              "listing": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "String (ObjectId)",
                    "example": "59ac245d27cb310f0017afe3"
                  },
                  "accountId": {
                    "type": "string",
                    "description": "String (ObjectId)",
                    "example": "59ac245d27cb310f0017afe3"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2017-09-03T15:48:45.070Z"
                  },
                  "integrations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "5958c7e5884e961000817799"
                        },
                        "airbnb2": {
                          "type": "object",
                          "properties": {
                            "credentials": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "expiresAt": {
                                  "type": "integer"
                                },
                                "accessToken": {
                                  "type": "string"
                                },
                                "refreshToken": {
                                  "type": "string"
                                },
                                "lastForceRefresh": {
                                  "type": "string",
                                  "description": "date"
                                }
                              }
                            },
                            "forwardEmails": {
                              "type": "object",
                              "properties": {
                                "all": {
                                  "type": "boolean",
                                  "default": true
                                },
                                "emails": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "description": "date"
                            }
                          },
                          "description": "Only if platform is airbnb",
                          "example": {
                            "ignored": {
                              "reservations": [],
                              "listings": []
                            },
                            "emailsFromSupport": []
                          }
                        },
                        "forwardEmails": {
                          "type": "object",
                          "properties": {
                            "all": {
                              "type": "boolean",
                              "default": true
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "active": {
                          "type": "boolean",
                          "description": "Status of connection"
                        },
                        "platform": {
                          "type": "string"
                        },
                        "listings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Listing details"
                          }
                        },
                        "complexes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Complex details"
                          }
                        },
                        "nickname": {
                          "type": "string",
                          "example": "naama"
                        },
                        "channelId": {
                          "type": "string"
                        },
                        "activatedAt": {
                          "type": "string",
                          "description": "Date"
                        },
                        "disconnectedAt": {
                          "type": "string",
                          "description": "Date"
                        },
                        "proxyEmail": {
                          "type": "string"
                        },
                        "incomingEmail": {
                          "type": "string"
                        },
                        "externalAccountId": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer",
                          "example": "naama@user.guesty.com",
                          "description": "External ID"
                        },
                        "companyName": {
                          "type": "string"
                        },
                        "fetchRequests": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "fetchAllListings": {
                                "type": "boolean"
                              },
                              "externalListingIds": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "NOT_STARTED",
                                  "IN_PROGRESS",
                                  "COMPLETED",
                                  "FAILED",
                                  "TIMEOUT"
                                ]
                              },
                              "createTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "updateTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "finishedTime": {
                                "type": "string",
                                "description": "Date"
                              }
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "NOT_CONNECTED",
                            "CONNECTING",
                            "CONNECTED",
                            "FAILED",
                            "TIMEOUT",
                            "DISCONNECTED",
                            "PENDING"
                          ]
                        },
                        "migration": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": [
                                "IN_PROGRESS",
                                "COMPLETED",
                                "FAILED"
                              ]
                            },
                            "createTime": {
                              "type": "string",
                              "description": "Date"
                            },
                            "updateTime": {
                              "type": "string",
                              "description": "Date"
                            },
                            "finishedTime": {
                              "type": "string",
                              "description": "Date"
                            },
                            "steps": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Step details"
                              }
                            },
                            "discrepancyStepExecuted": {
                              "type": "boolean",
                              "default": false
                            },
                            "discrepancyResolution": {
                              "type": "string",
                              "enum": [
                                "GUESTY",
                                "AIRBNB"
                              ]
                            },
                            "listingQuantityDiscrepancyStepExecuted": {
                              "type": "boolean",
                              "default": false
                            },
                            "error": {
                              "type": "object",
                              "properties": {
                                "at": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "message": {
                                  "type": "string"
                                },
                                "raw": {
                                  "type": "object"
                                }
                              }
                            },
                            "notes": {
                              "type": "string"
                            },
                            "isRollingBack": {
                              "type": "boolean",
                              "default": false
                            }
                          }
                        },
                        "userId": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b85"
                        },
                        "accountId": {
                          "type": "string",
                          "description": "Owner",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "tripAdvisor": {
                          "type": "object",
                          "description": "TripAdvisor details"
                        },
                        "homeaway2": {
                          "type": "object",
                          "description": "Homeaway details"
                        },
                        "bookingCom": {
                          "type": "object",
                          "properties": {
                            "legalEntityId": {
                              "type": "string"
                            }
                          },
                          "description": "BookingCom details"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "Date"
                        },
                        "missingStep": {
                          "type": "string"
                        },
                        "steps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "COMPLETED",
                                  "IN_PROGRESS"
                                ]
                              },
                              "createTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "updateTime": {
                                "type": "string",
                                "description": "Date"
                              }
                            }
                          }
                        },
                        "newIntegrationBackup": {
                          "type": "object"
                        },
                        "threadIdsMigrated": {
                          "type": "boolean"
                        },
                        "isDeleted": {
                          "type": "boolean"
                        },
                        "deletedAt": {
                          "type": "string",
                          "description": "Date"
                        }
                      }
                    }
                  },
                  "isVirtual": {
                    "type": "boolean"
                  },
                  "nickname": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isListed": {
                    "type": "boolean"
                  },
                  "title": {
                    "type": "string"
                  },
                  "propertyType": {
                    "type": "string"
                  },
                  "roomType": {
                    "type": "string"
                  },
                  "bedType": {
                    "type": "string"
                  },
                  "accommodates": {
                    "type": "number"
                  },
                  "bedrooms": {
                    "type": "number"
                  },
                  "areaSquareFeet": {
                    "type": "number"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "full": {
                        "type": "string",
                        "description": "full address",
                        "example": "Kaplan St 2, Ramat Gan, Israel"
                      },
                      "lng": {
                        "type": "number",
                        "example": 34.8202173
                      },
                      "lat": {
                        "type": "number",
                        "example": 32.0695525
                      },
                      "street": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "publishedAddress": {
                    "type": "object",
                    "properties": {
                      "full": {
                        "type": "string",
                        "description": "full address",
                        "example": "Kaplan St 2, Ramat Gan, Israel"
                      },
                      "lng": {
                        "type": "number",
                        "example": 34.8202173
                      },
                      "lat": {
                        "type": "number",
                        "example": 32.0695525
                      },
                      "street": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "defaultCheckInTime": {
                    "type": "string"
                  },
                  "defaultCheckOutTime": {
                    "type": "string"
                  },
                  "cleaning": {
                    "type": "object",
                    "properties": {
                      "defaultCleaningTime": {
                        "type": "string"
                      },
                      "instructions": {
                        "type": "string"
                      }
                    }
                  },
                  "cleaningStatus": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string",
                        "enum": [
                          "clean",
                          "waitingForInspection",
                          "dirty",
                          "unknown"
                        ]
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2019-08-24T14:15:22Z"
                      }
                    }
                  },
                  "picture": {
                    "type": "object",
                    "properties": {
                      "regular": {
                        "type": "string"
                      },
                      "thumbnail": {
                        "type": "string",
                        "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                      },
                      "large": {
                        "type": "string"
                      },
                      "caption": {
                        "type": "string"
                      },
                      "height": {
                        "type": "number",
                        "example": 756
                      },
                      "original": {
                        "type": "string",
                        "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                      },
                      "size": {
                        "type": "number",
                        "example": 39516
                      },
                      "width": {
                        "type": "number",
                        "example": 756
                      }
                    }
                  },
                  "pictures": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "regular": {
                          "type": "string"
                        },
                        "thumbnail": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                        },
                        "large": {
                          "type": "string"
                        },
                        "caption": {
                          "type": "string"
                        },
                        "height": {
                          "type": "number",
                          "example": 756
                        },
                        "original": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                        },
                        "size": {
                          "type": "number",
                          "example": 39516
                        },
                        "width": {
                          "type": "number",
                          "example": 756
                        }
                      }
                    }
                  },
                  "amenities": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "amenitiesNotIncluded": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "terms": {
                    "type": "object",
                    "properties": {
                      "minNights": {
                        "type": "number"
                      },
                      "maxNights": {
                        "type": "number"
                      },
                      "cancellation": {
                        "type": "string"
                      }
                    }
                  },
                  "prices": {
                    "type": "object",
                    "properties": {
                      "guestsIncludedInRegularFee": {
                        "type": "number"
                      },
                      "extraPersonFee": {
                        "type": "number"
                      },
                      "basePrice": {
                        "type": "number"
                      },
                      "basePriceUSD": {
                        "type": "number"
                      },
                      "monthlyPriceFactor": {
                        "type": "number"
                      },
                      "weeklyPriceFactor": {
                        "type": "number"
                      },
                      "weekendBasePrice": {
                        "type": "number"
                      },
                      "securityDepositFee": {
                        "type": "number"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "cleaningFee": {
                        "type": "number"
                      }
                    }
                  },
                  "netIncomeFormula": {
                    "type": "string"
                  },
                  "commissionFormula": {
                    "type": "string"
                  },
                  "commissionTaxPrecentage": {
                    "type": "string"
                  },
                  "pms": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "automation": {
                        "type": "object",
                        "properties": {
                          "autoList": {
                            "type": "object",
                            "properties": {
                              "active": {
                                "type": "boolean"
                              },
                              "config": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "inbox": {
                        "type": "object",
                        "properties": {
                          "customSignature": {
                            "type": "string"
                          }
                        }
                      },
                      "cleaningStatus": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "enum": [
                              "clean",
                              "waitingForInspection",
                              "dirty",
                              "unknown"
                            ]
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2019-08-24T14:15:22Z"
                          }
                        }
                      },
                      "paymentProcessing": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "boolean"
                          },
                          "paymentProviders": {
                            "type": "object",
                            "properties": {
                              "stripe": {
                                "type": "object",
                                "properties": {
                                  "active": {
                                    "type": "boolean"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "accountName": {
                                    "type": "string"
                                  },
                                  "defaultCurrency": {
                                    "type": "string"
                                  },
                                  "syncedAt": {
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "payload": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "livemode": {
                                        "type": "boolean"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "stripe_publishable_key": {
                                        "type": "string"
                                      },
                                      "stripe_user_id": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "autoPayments": {
                        "type": "object",
                        "properties": {
                          "policy": {
                            "type": "array"
                          }
                        }
                      }
                    }
                  },
                  "receptionistsService": {
                    "title": "object",
                    "properties": {
                      "receptionDesk": {
                        "type": "object",
                        "properties": {
                          "ittt": {
                            "type": "array",
                            "items": {}
                          }
                        }
                      },
                      "screening": {
                        "type": "object",
                        "properties": {
                          "checklist": {
                            "type": "array",
                            "items": {}
                          }
                        }
                      },
                      "contactPersonUserId": {
                        "type": "string"
                      }
                    }
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "customFields": {
                    "type": "object"
                  },
                  "calendarRules": {
                    "type": "object"
                  },
                  "publicDescription": {
                    "type": "object"
                  },
                  "privateDescription": {
                    "type": "object"
                  },
                  "markups": {
                    "type": "object"
                  }
                }
              },
              "owner": {
                "type": "object",
                "properties": {
                  "ownersPortalSettings": {
                    "type": "object",
                    "description": "The OPSettings object",
                    "properties": {
                      "bookedNights": {
                        "type": "boolean"
                      },
                      "revenue": {
                        "type": "boolean"
                      },
                      "accommodationFare": {
                        "type": "boolean"
                      },
                      "guestsReports": {
                        "type": "boolean"
                      },
                      "occupancy": {
                        "type": "boolean"
                      },
                      "avgNightlyRate": {
                        "type": "boolean"
                      },
                      "revPal": {
                        "type": "boolean"
                      },
                      "hostPayout": {
                        "type": "boolean"
                      }
                    },
                    "example": {
                      "ownersPortalSettings": {
                        "bookedNights": true,
                        "revenue": true
                      }
                    }
                  },
                  "listings": {
                    "type": "array",
                    "description": "Listings Id",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "5e32fc021690ba0026f6f778",
                      "5e32fc021690d15417543012",
                      "5e32fc021690d15417543013"
                    ]
                  },
                  "_id": {
                    "type": "string",
                    "description": "Unique Id",
                    "example": "563e0b6a08a2710e00057b82"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Localization",
                    "example": "en-US"
                  },
                  "active": {
                    "type": "boolean",
                    "example": "false"
                  },
                  "allowReservations": {
                    "type": "boolean",
                    "example": "false"
                  },
                  "showReservationTooltips": {
                    "type": "boolean",
                    "example": "false"
                  },
                  "vatOrTaxId": {
                    "type": "string"
                  },
                  "workingCapital": {
                    "description": "Deprecated. Use new [API](/reference/ownerscontroller_update)",
                    "type": "number",
                    "example": 0
                  },
                  "firstName": {
                    "type": "string",
                    "example": "Elad"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Kremer"
                  },
                  "fullName": {
                    "type": "string",
                    "example": "Elad Kremer"
                  },
                  "email": {
                    "type": "string",
                    "example": "example@guesty.com",
                    "description": "Primary email address"
                  },
                  "address": {
                    "type": "string",
                    "example": "test address"
                  },
                  "phone": {
                    "type": "string",
                    "example": "15417543010",
                    "description": "Primary phone number"
                  },
                  "picture": {
                    "type": "object",
                    "properties": {
                      "thumbnail": {
                        "type": "string"
                      },
                      "regular": {
                        "type": "string"
                      },
                      "large": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                      "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                    }
                  },
                  "notes": {
                    "type": "string",
                    "example": "this is a note"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "date ISO",
                    "example": "2020-03-13T12:17:06.758Z"
                  }
                }
              },
              "nightsCount": {
                "type": "number"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "conversation": {
            "type": "object",
            "properties": {
              "accountId": {
                "type": "string",
                "description": "Unique Id",
                "example": "563e0b6a08a2710e00057b82"
              },
              "_id": {
                "type": "string",
                "description": "Unique Id",
                "example": "563e0b6a08a2710e00057b82"
              },
              "ownerId": {
                "type": "string",
                "description": "Unique Id",
                "example": "563e0b6a08a2710e00057b82"
              },
              "OwnerReservationId": {
                "type": "string",
                "description": "Unique Id",
                "example": "563e0b6a08a2710e00057b82"
              },
              "id": {
                "type": "string"
              },
              "lastModifiedAt": {
                "type": "string"
              },
              "lastUpdatedAt": {
                "type": "string"
              },
              "lastUpdatedFromGuest": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "snoozedUntil": {
                "type": "string"
              },
              "isRead": {
                "type": "boolean"
              },
              "language": {
                "type": "string"
              },
              "priority": {
                "type": "number"
              },
              "conversationWith": {
                "type": "string",
                "example": "owner"
              },
              "readlog": {
                "type": "array"
              },
              "pendingTask": {
                "type": "array"
              },
              "__v": {
                "type": "number"
              },
              "meta": {
                "type": "object",
                "properties": {
                  "reservations": {
                    "type": "array"
                  }
                }
              },
              "thread": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "module": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "body": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Thread": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "module": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "_id": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "body": {
            "type": "string"
          },
          "attachments": {
            "type": "array"
          }
        }
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "_id": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "ownerId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "OwnerReservationId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "id": {
            "type": "string"
          },
          "lastModifiedAt": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string"
          },
          "lastUpdatedFromGuest": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "snoozedUntil": {
            "type": "string"
          },
          "isRead": {
            "type": "boolean"
          },
          "language": {
            "type": "string"
          },
          "priority": {
            "type": "number"
          },
          "conversationWith": {
            "type": "string",
            "example": "owner"
          },
          "readlog": {
            "type": "array"
          },
          "pendingTask": {
            "type": "array"
          },
          "__v": {
            "type": "number"
          },
          "meta": {
            "type": "object",
            "properties": {
              "reservations": {
                "type": "array"
              }
            }
          },
          "thread": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "module": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "_id": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                },
                "body": {
                  "type": "string"
                },
                "attachments": {
                  "type": "array"
                }
              }
            }
          }
        }
      },
      "SearchFilters": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "field": {
              "type": "string",
              "description": "Subject of the filter",
              "example": "checkIn"
            },
            "operator": {
              "type": "string",
              "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between\n\n **IMPORTANT NOTE:**\n In order to use the $between operator please check the syntax of the example below:\n `[{\"field\":\"checkIn\", \"operator\":\"$between\",\"from\":\"2023-03-02T00:00:00%2B01:00\",\"to\":\"2023-03-02T23:59:59%2B01:00\"}]`",
              "example": "$gt"
            },
            "value": {
              "type": "integer",
              "description": "Value to filter by",
              "example": 0
            },
            "context": {
              "type": "string",
              "description": "Optional preprocessing. Options are now, createdAt, confirmedAt, canceledAt, alteredAt. When given, the date in value is relative to the context.",
              "default": null,
              "example": "now"
            }
          }
        },
        "required": [
          "field",
          "operator",
          "value"
        ]
      },
      "OwnersFilters": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "field": {
              "type": "string",
              "description": "Subject of the filter",
              "properties": {
                "confirmedAt": {
                  "type": "string",
                  "description": "YYYY-MM-DD"
                },
                "checkIn": {
                  "type": "string",
                  "description": "YYYY-MM-DD"
                },
                "checkOut": {
                  "type": "string",
                  "description": "YYYY-MM-DD"
                },
                "customFields": {
                  "type": "string",
                  "description": "customFields.fieldName"
                },
                "owner": {
                  "type": "string",
                  "description": "owner.fieldName",
                  "example": "owner._id"
                },
                "listing": {
                  "type": "string",
                  "description": "listing.fieldName",
                  "example": "listing.nickname"
                }
              }
            },
            "operator": {
              "type": "string",
              "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, etc",
              "example": "$gt"
            },
            "value": {
              "type": "integer",
              "description": "Value to filter by",
              "example": 0
            }
          }
        },
        "required": [
          "field",
          "operator",
          "value"
        ]
      },
      "UpdateOwnersReservations": {
        "type": "object",
        "properties": {
          "checkIn": {
            "type": "string",
            "description": "Check in with format YYYY-MM-DD HH:mm:ss",
            "example": "2020-03-19 15:00:00"
          },
          "checkOut": {
            "type": "string",
            "description": "Check out with format YYYY-MM-DD HH:mm:ss",
            "example": "2020-03-20 10:00:00"
          },
          "note": {
            "type": "string",
            "example": "Free text"
          }
        },
        "required": [
          "checkIn",
          "checkOut"
        ]
      },
      "CreateReservation": {
        "type": "object",
        "properties": {
          "listingId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "checkInDateLocalized": {
            "type": "string",
            "description": "Date of the format YYYY-MM-DD",
            "example": "2023-01-01"
          },
          "checkOutDateLocalized": {
            "type": "string",
            "description": "Date of the format YYYY-MM-DD",
            "example": "2023-01-04"
          },
          "status": {
            "type": "string",
            "description": "Reservation status",
            "example": "confirmed"
          },
          "money": {
            "type": "object",
            "properties": {
              "fareAccommodation": {
                "type": "number",
                "example": "120"
              },
              "fareCleaning": {
                "type": "number",
                "example": "20"
              },
              "invoiceItems": {
                "type": "array",
                "items": {
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "normalType": {
                      "type": "string",
                      "enum": [
                        "AF",
                        "AFO",
                        "AFD",
                        "AFA",
                        "ARC",
                        "CF",
                        "PRO",
                        "CO",
                        "LOSD",
                        "GCD",
                        "AFE",
                        "LT",
                        "CT",
                        "TT",
                        "GST",
                        "VAT",
                        "ST",
                        "COT",
                        "OCT",
                        "TOT",
                        "HSHAT",
                        "HST",
                        "MAT",
                        "TRT",
                        "CFE",
                        "CM",
                        "PCM",
                        "PF",
                        "LGT",
                        "HT",
                        "TAF",
                        "RT",
                        "OT",
                        "TAX",
                        "SDC",
                        "ADF",
                        "OTHER"
                      ],
                      "description": "Invoice item's type identifier"
                    },
                    "description": {
                      "type": "string"
                    },
                    "secondIdentifier": {
                      "type": "string",
                      "enum": [
                        "ADDITIONAL_BED",
                        "AIR_CONDITIONING",
                        "EARLY_CHECK_IN",
                        "LATE_CHECK_IN",
                        "BABY_BED",
                        "CLEANING",
                        "CLUB_CARD",
                        "CONCIERGE",
                        "EARLY_CHECKOUT",
                        "LATE_CHECKOUT",
                        "DEPOSIT",
                        "ELECTRICITY",
                        "FOOD",
                        "HEATING",
                        "INTERNET",
                        "LAUNDRY",
                        "LINENS",
                        "TOWELS",
                        "MANAGEMENT",
                        "OIL",
                        "PARKING",
                        "PET",
                        "POOL",
                        "POOL_HEATING",
                        "RESORT",
                        "SERVICE",
                        "TOILETRIES",
                        "TOUR",
                        "TRANSPORTATION",
                        "CAR_RENTAL",
                        "WATER",
                        "WOOD",
                        "TRANSFER",
                        "HOUSEKEEPING",
                        "INSURANCE",
                        "COMMUNITY",
                        "CREDIT_CARD_PROCESSING_FEE",
                        "DAMAGE_WAIVER"
                      ],
                      "description": "An additional optional identifier",
                      "example": "MANAGEMENT"
                    }
                  },
                  "required": [
                    "title",
                    "amount",
                    "normalType",
                    "secondIdentifier"
                  ]
                }
              },
              "currency": {
                "type": "string",
                "example": "USD"
              }
            },
            "required": [
              "fareAccommodation",
              "currency"
            ]
          },
          "guest": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "description": "Guest's first name",
                "example": "Tony"
              },
              "lastName": {
                "type": "string",
                "description": "Guest's last name",
                "example": "Stark"
              },
              "phone": {
                "type": "string",
                "description": "Guest's phone number",
                "example": "+97777777"
              },
              "email": {
                "type": "string",
                "description": "Guest's email",
                "example": "tony@stark.com"
              }
            }
          },
          "guestId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          }
        },
        "required": [
          "listingId",
          "checkInDateLocalized",
          "checkOutDateLocalized",
          "status"
        ]
      },
      "Listing": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "String (ObjectId)",
            "example": "59ac245d27cb310f0017afe3"
          },
          "accountId": {
            "type": "string",
            "description": "String (ObjectId)",
            "example": "59ac245d27cb310f0017afe3"
          },
          "createdAt": {
            "type": "string",
            "example": "2017-09-03T15:48:45.070Z"
          },
          "integrations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "5958c7e5884e961000817799"
                },
                "airbnb2": {
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "expiresAt": {
                          "type": "integer"
                        },
                        "accessToken": {
                          "type": "string"
                        },
                        "refreshToken": {
                          "type": "string"
                        },
                        "lastForceRefresh": {
                          "type": "string",
                          "description": "date"
                        }
                      }
                    },
                    "forwardEmails": {
                      "type": "object",
                      "properties": {
                        "all": {
                          "type": "boolean",
                          "default": true
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "date"
                    }
                  },
                  "description": "Only if platform is airbnb",
                  "example": {
                    "ignored": {
                      "reservations": [],
                      "listings": []
                    },
                    "emailsFromSupport": []
                  }
                },
                "forwardEmails": {
                  "type": "object",
                  "properties": {
                    "all": {
                      "type": "boolean",
                      "default": true
                    },
                    "emails": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "active": {
                  "type": "boolean",
                  "description": "Status of connection"
                },
                "platform": {
                  "type": "string"
                },
                "listings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Listing details"
                  }
                },
                "complexes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Complex details"
                  }
                },
                "nickname": {
                  "type": "string",
                  "example": "naama"
                },
                "channelId": {
                  "type": "string"
                },
                "activatedAt": {
                  "type": "string",
                  "description": "Date"
                },
                "disconnectedAt": {
                  "type": "string",
                  "description": "Date"
                },
                "proxyEmail": {
                  "type": "string"
                },
                "incomingEmail": {
                  "type": "string"
                },
                "externalAccountId": {
                  "type": "string"
                },
                "id": {
                  "type": "integer",
                  "example": "naama@user.guesty.com",
                  "description": "External ID"
                },
                "companyName": {
                  "type": "string"
                },
                "fetchRequests": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "fetchAllListings": {
                        "type": "boolean"
                      },
                      "externalListingIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "NOT_STARTED",
                          "IN_PROGRESS",
                          "COMPLETED",
                          "FAILED",
                          "TIMEOUT"
                        ]
                      },
                      "createTime": {
                        "type": "string",
                        "description": "Date"
                      },
                      "updateTime": {
                        "type": "string",
                        "description": "Date"
                      },
                      "finishedTime": {
                        "type": "string",
                        "description": "Date"
                      }
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NOT_CONNECTED",
                    "CONNECTING",
                    "CONNECTED",
                    "FAILED",
                    "TIMEOUT",
                    "DISCONNECTED",
                    "PENDING"
                  ]
                },
                "migration": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "IN_PROGRESS",
                        "COMPLETED",
                        "FAILED"
                      ]
                    },
                    "createTime": {
                      "type": "string",
                      "description": "Date"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "Date"
                    },
                    "finishedTime": {
                      "type": "string",
                      "description": "Date"
                    },
                    "steps": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Step details"
                      }
                    },
                    "discrepancyStepExecuted": {
                      "type": "boolean",
                      "default": false
                    },
                    "discrepancyResolution": {
                      "type": "string",
                      "enum": [
                        "GUESTY",
                        "AIRBNB"
                      ]
                    },
                    "listingQuantityDiscrepancyStepExecuted": {
                      "type": "boolean",
                      "default": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "at": {
                          "type": "string",
                          "description": "Date"
                        },
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "raw": {
                          "type": "object"
                        }
                      }
                    },
                    "notes": {
                      "type": "string"
                    },
                    "isRollingBack": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "userId": {
                  "type": "string",
                  "example": "563e0b6a08a2710e00057b85"
                },
                "accountId": {
                  "type": "string",
                  "description": "Owner",
                  "example": "563e0b6a08a2710e00057b82"
                },
                "tripAdvisor": {
                  "type": "object",
                  "description": "TripAdvisor details"
                },
                "homeaway2": {
                  "type": "object",
                  "description": "Homeaway details"
                },
                "bookingCom": {
                  "type": "object",
                  "properties": {
                    "legalEntityId": {
                      "type": "string"
                    }
                  },
                  "description": "BookingCom details"
                },
                "createdAt": {
                  "type": "string",
                  "description": "Date"
                },
                "missingStep": {
                  "type": "string"
                },
                "steps": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "COMPLETED",
                          "IN_PROGRESS"
                        ]
                      },
                      "createTime": {
                        "type": "string",
                        "description": "Date"
                      },
                      "updateTime": {
                        "type": "string",
                        "description": "Date"
                      }
                    }
                  }
                },
                "newIntegrationBackup": {
                  "type": "object"
                },
                "threadIdsMigrated": {
                  "type": "boolean"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "deletedAt": {
                  "type": "string",
                  "description": "Date"
                }
              }
            }
          },
          "isVirtual": {
            "type": "boolean"
          },
          "nickname": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isListed": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "propertyType": {
            "type": "string"
          },
          "roomType": {
            "type": "string"
          },
          "bedType": {
            "type": "string"
          },
          "accommodates": {
            "type": "number"
          },
          "bedrooms": {
            "type": "number"
          },
          "areaSquareFeet": {
            "type": "number"
          },
          "address": {
            "type": "object",
            "properties": {
              "full": {
                "type": "string",
                "description": "full address",
                "example": "Kaplan St 2, Ramat Gan, Israel"
              },
              "lng": {
                "type": "number",
                "example": 34.8202173
              },
              "lat": {
                "type": "number",
                "example": 32.0695525
              },
              "street": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          },
          "publishedAddress": {
            "type": "object",
            "properties": {
              "full": {
                "type": "string",
                "description": "full address",
                "example": "Kaplan St 2, Ramat Gan, Israel"
              },
              "lng": {
                "type": "number",
                "example": 34.8202173
              },
              "lat": {
                "type": "number",
                "example": 32.0695525
              },
              "street": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          },
          "timezone": {
            "type": "string"
          },
          "defaultCheckInTime": {
            "type": "string"
          },
          "defaultCheckOutTime": {
            "type": "string"
          },
          "cleaning": {
            "type": "object",
            "properties": {
              "defaultCleaningTime": {
                "type": "string"
              },
              "instructions": {
                "type": "string"
              }
            }
          },
          "cleaningStatus": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "clean",
                  "waitingForInspection",
                  "dirty",
                  "unknown"
                ]
              },
              "updatedAt": {
                "type": "string",
                "example": "2019-08-24T14:15:22Z"
              }
            }
          },
          "picture": {
            "type": "object",
            "properties": {
              "regular": {
                "type": "string"
              },
              "thumbnail": {
                "type": "string",
                "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
              },
              "large": {
                "type": "string"
              },
              "caption": {
                "type": "string"
              },
              "height": {
                "type": "number",
                "example": 756
              },
              "original": {
                "type": "string",
                "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
              },
              "size": {
                "type": "number",
                "example": 39516
              },
              "width": {
                "type": "number",
                "example": 756
              }
            }
          },
          "pictures": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "regular": {
                  "type": "string"
                },
                "thumbnail": {
                  "type": "string",
                  "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                },
                "large": {
                  "type": "string"
                },
                "caption": {
                  "type": "string"
                },
                "height": {
                  "type": "number",
                  "example": 756
                },
                "original": {
                  "type": "string",
                  "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                },
                "size": {
                  "type": "number",
                  "example": 39516
                },
                "width": {
                  "type": "number",
                  "example": 756
                }
              }
            }
          },
          "amenities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "amenitiesNotIncluded": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "terms": {
            "type": "object",
            "properties": {
              "minNights": {
                "type": "number"
              },
              "maxNights": {
                "type": "number"
              },
              "cancellation": {
                "type": "string"
              }
            }
          },
          "prices": {
            "type": "object",
            "properties": {
              "guestsIncludedInRegularFee": {
                "type": "number"
              },
              "extraPersonFee": {
                "type": "number"
              },
              "basePrice": {
                "type": "number"
              },
              "basePriceUSD": {
                "type": "number"
              },
              "monthlyPriceFactor": {
                "type": "number"
              },
              "weeklyPriceFactor": {
                "type": "number"
              },
              "weekendBasePrice": {
                "type": "number"
              },
              "securityDepositFee": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              },
              "cleaningFee": {
                "type": "number"
              }
            }
          },
          "netIncomeFormula": {
            "type": "string"
          },
          "commissionFormula": {
            "type": "string"
          },
          "commissionTaxPrecentage": {
            "type": "string"
          },
          "pms": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean"
              },
              "automation": {
                "type": "object",
                "properties": {
                  "autoList": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "config": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "inbox": {
                "type": "object",
                "properties": {
                  "customSignature": {
                    "type": "string"
                  }
                }
              },
              "cleaningStatus": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "enum": [
                      "clean",
                      "waitingForInspection",
                      "dirty",
                      "unknown"
                    ]
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2019-08-24T14:15:22Z"
                  }
                }
              },
              "paymentProcessing": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "paymentProviders": {
                    "type": "object",
                    "properties": {
                      "stripe": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "boolean"
                          },
                          "status": {
                            "type": "string"
                          },
                          "accountName": {
                            "type": "string"
                          },
                          "defaultCurrency": {
                            "type": "string"
                          },
                          "syncedAt": {
                            "type": "string",
                            "format": "date"
                          },
                          "payload": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "livemode": {
                                "type": "boolean"
                              },
                              "token_type": {
                                "type": "string"
                              },
                              "stripe_publishable_key": {
                                "type": "string"
                              },
                              "stripe_user_id": {
                                "type": "string"
                              },
                              "scope": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "autoPayments": {
                "type": "object",
                "properties": {
                  "policy": {
                    "type": "array"
                  }
                }
              }
            }
          },
          "receptionistsService": {
            "title": "object",
            "properties": {
              "receptionDesk": {
                "type": "object",
                "properties": {
                  "ittt": {
                    "type": "array",
                    "items": {}
                  }
                }
              },
              "screening": {
                "type": "object",
                "properties": {
                  "checklist": {
                    "type": "array",
                    "items": {}
                  }
                }
              },
              "contactPersonUserId": {
                "type": "string"
              }
            }
          },
          "active": {
            "type": "boolean"
          },
          "customFields": {
            "type": "object"
          },
          "calendarRules": {
            "type": "object"
          },
          "publicDescription": {
            "type": "object"
          },
          "privateDescription": {
            "type": "object"
          },
          "markups": {
            "type": "object"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "full": {
            "type": "string",
            "description": "full address",
            "example": "Kaplan St 2, Ramat Gan, Israel"
          },
          "lng": {
            "type": "number",
            "example": 34.8202173
          },
          "lat": {
            "type": "number",
            "example": 32.0695525
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "View": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique id"
          },
          "accountId": {
            "type": "string",
            "description": "Id of the user owning this view"
          },
          "title": {
            "type": "string",
            "description": "Title for the view"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "Subject of the filter"
                },
                "operator": {
                  "type": "string",
                  "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                },
                "value": {
                  "type": "string",
                  "description": "Value to filter by."
                },
                "context": {
                  "type": "string",
                  "default": null,
                  "description": "Optional preprocessing. Options are now, createdAt, confirmedAt, canceledAt, alteredAt. When given, the date in value is relative to the context."
                }
              },
              "required": [
                "field",
                "operator",
                "value"
              ]
            }
          },
          "fields": {
            "type": "string",
            "description": "Selection of fields, separated by space"
          },
          "sort": {
            "type": "string",
            "description": "ascending sort , use - to descending sort"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "scheduledEmails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "days": {
                  "type": "array",
                  "description": "Array of numbers 0-6, number per day",
                  "example": "4 (send on Thursday)"
                },
                "recipient": {
                  "type": "string",
                  "description": "Emails separated by comma"
                },
                "hour": {
                  "type": "number",
                  "description": "when the report should be sent"
                }
              },
              "required": [
                "hour"
              ]
            }
          },
          "shares": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "contactId": {
                  "type": "string",
                  "description": "Required Contact ID to share with",
                  "example": "5926bdfb1bfe871000d0a745"
                }
              }
            }
          }
        }
      },
      "CalendarRules": {
        "type": "object",
        "properties": {
          "defaultAvailability": {
            "type": "string",
            "enum": [
              "AVAILABLE",
              "BLOCKED"
            ]
          },
          "seasonalMinNights": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "date of the format YYYY-MM-DD"
                },
                "to": {
                  "type": "string",
                  "description": "date of the format YYYY-MM-DD"
                }
              }
            }
          },
          "preparationTime": {
            "type": "object",
            "description": "To set the preparation time to none, send the preparation time in the following way:\n '\"preparationTime\":{\"defaultSettings\":{\"days\":0}}'",
            "properties": {
              "defaultSettings": {
                "type": "object",
                "properties": {
                  "days": {
                    "type": "number"
                  },
                  "when": {
                    "type": "string",
                    "enum": [
                      "BEFORE",
                      "AFTER"
                    ]
                  }
                }
              }
            }
          },
          "rentalPeriods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "date of the format YYYY-MM-DD"
                },
                "to": {
                  "type": "string",
                  "description": "date of the format YYYY-MM-DD"
                }
              }
            }
          },
          "advanceNotice": {
            "type": "object",
            "properties": {
              "defaultSettings": {
                "type": "object",
                "properties": {
                  "hours": {
                    "type": "number"
                  },
                  "allowRequestToBook": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "bookingWindow": {
            "type": "object",
            "properties": {
              "defaultSettings": {
                "type": "object",
                "properties": {
                  "days": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "example": {
          "defaultAvailability": "AVAILABLE",
          "advanceNotice": {
            "defaultSettings": {
              "hours": 0,
              "allowRequestToBook": false
            }
          },
          "bookingWindow": {
            "defaultSettings": {
              "days": 180
            }
          },
          "weekendMinNights": 2,
          "rentalPeriods": [],
          "seasonalMinNights": [
            {
              "from": "2020-12-01",
              "to": "2021-12-01",
              "minNights": 1
            },
            {
              "from": "2020-02-29",
              "to": "2020-11-30",
              "minNights": 4
            }
          ]
        }
      },
      "AdvanceNotice": {
        "type": "object",
        "properties": {
          "defaultSettings": {
            "type": "object",
            "properties": {
              "hours": {
                "type": "number"
              },
              "allowRequestToBook": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "BookingWindow": {
        "type": "object",
        "properties": {
          "defaultSettings": {
            "type": "object",
            "properties": {
              "days": {
                "type": "number"
              }
            }
          }
        }
      },
      "Cleaning": {
        "type": "object",
        "properties": {
          "defaultCleaningTime": {
            "type": "string"
          },
          "instructions": {
            "type": "string"
          }
        }
      },
      "CleaningStatus": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "clean",
              "waitingForInspection",
              "dirty",
              "unknown"
            ]
          },
          "updatedAt": {
            "type": "string",
            "example": "2019-08-24T14:15:22Z"
          }
        }
      },
      "ListingPicture": {
        "type": "object",
        "properties": {
          "regular": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string",
            "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
          },
          "large": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "height": {
            "type": "number",
            "example": 756
          },
          "original": {
            "type": "string",
            "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
          },
          "size": {
            "type": "number",
            "example": 39516
          },
          "width": {
            "type": "number",
            "example": 756
          }
        }
      },
      "Pms": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "automation": {
            "type": "object",
            "properties": {
              "autoList": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "config": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "inbox": {
            "type": "object",
            "properties": {
              "customSignature": {
                "type": "string"
              }
            }
          },
          "cleaningStatus": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "clean",
                  "waitingForInspection",
                  "dirty",
                  "unknown"
                ]
              },
              "updatedAt": {
                "type": "string",
                "example": "2019-08-24T14:15:22Z"
              }
            }
          },
          "paymentProcessing": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean"
              },
              "paymentProviders": {
                "type": "object",
                "properties": {
                  "stripe": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "status": {
                        "type": "string"
                      },
                      "accountName": {
                        "type": "string"
                      },
                      "defaultCurrency": {
                        "type": "string"
                      },
                      "syncedAt": {
                        "type": "string",
                        "format": "date"
                      },
                      "payload": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "livemode": {
                            "type": "boolean"
                          },
                          "token_type": {
                            "type": "string"
                          },
                          "stripe_publishable_key": {
                            "type": "string"
                          },
                          "stripe_user_id": {
                            "type": "string"
                          },
                          "scope": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "autoPayments": {
            "type": "object",
            "properties": {
              "policy": {
                "type": "array"
              }
            }
          }
        }
      },
      "Prices": {
        "type": "object",
        "properties": {
          "guestsIncludedInRegularFee": {
            "type": "number"
          },
          "extraPersonFee": {
            "type": "number"
          },
          "basePrice": {
            "type": "number"
          },
          "basePriceUSD": {
            "type": "number"
          },
          "monthlyPriceFactor": {
            "type": "number"
          },
          "weeklyPriceFactor": {
            "type": "number"
          },
          "weekendBasePrice": {
            "type": "number"
          },
          "securityDepositFee": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "cleaningFee": {
            "type": "number"
          }
        }
      },
      "FinancialsGet": {
        "type": "object",
        "properties": {
          "guestsIncludedInRegularFee": {
            "type": "number",
            "description": "The higest number of guests that will not reauires to add extraPersonFee"
          },
          "extraPersonFee": {
            "type": "number",
            "description": "The amount of fee which is added for each extra person, above guestsIncludedInRegularFee, in the reservation"
          },
          "basePrice": {
            "type": "number",
            "description": "The cost per night for the listing"
          },
          "basePriceUSD": {
            "type": "number",
            "description": "The cost per night in USD for the listing"
          },
          "monthlyPriceFactor": {
            "type": "number",
            "description": "A factor for the nightly cost for reservations that are longer then a month"
          },
          "weeklyPriceFactor": {
            "type": "number",
            "description": "A factor for the nightly cost for reservations that are longer then a week"
          },
          "weekendBasePrice": {
            "type": "number",
            "description": "The base price for weekend"
          },
          "securityDepositFee": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "description": "The currency that is in use for the listing prices"
          },
          "cleaningFee": {
            "type": "object",
            "description": "Object to define cleaningFee settings",
            "properties": {
              "value": {
                "type": "object",
                "description": "Default settings for cleaning fee",
                "properties": {
                  "valueType": {
                    "type": "string",
                    "description": "Defines rather value is a fixed number or percentage",
                    "enum": [
                      "FIXED",
                      "PERCENTAGE"
                    ]
                  },
                  "multiplier": {
                    "type": "string",
                    "description": "Sets the factor by which cleaning fee value will be multiplied",
                    "enum": [
                      "PER_STAY",
                      "PER_GUEST",
                      "PER_NIGHT",
                      "PER_GUEST_PER_NIGHT"
                    ]
                  },
                  "formula": {
                    "type": "number",
                    "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                  }
                }
              },
              "lastUpdatedAt": {
                "type": "string",
                "format": "date",
                "description": "Last update date"
              },
              "airbnb": {
                "type": "object",
                "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                "properties": {
                  "value": {
                    "type": "object",
                    "properties": {
                      "valueType": {
                        "type": "string",
                        "description": "Defines rather value is a fixed number or percentage",
                        "enum": [
                          "FIXED",
                          "PERCENTAGE"
                        ]
                      },
                      "multiplier": {
                        "type": "string",
                        "description": "Sets the factor by which cleaning fee value will be multiplied",
                        "enum": [
                          "PER_STAY",
                          "PER_GUEST",
                          "PER_NIGHT",
                          "PER_GUEST_PER_NIGHT"
                        ]
                      },
                      "formula": {
                        "type": "number",
                        "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "rentalsUnited": {
                "type": "object",
                "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                "properties": {
                  "value": {
                    "type": "object",
                    "properties": {
                      "valueType": {
                        "type": "string",
                        "description": "Defines rather value is a fixed number or percentage",
                        "enum": [
                          "FIXED",
                          "PERCENTAGE"
                        ]
                      },
                      "multiplier": {
                        "type": "string",
                        "description": "Sets the factor by which cleaning fee value will be multiplied",
                        "enum": [
                          "PER_STAY",
                          "PER_GUEST",
                          "PER_NIGHT",
                          "PER_GUEST_PER_NIGHT"
                        ]
                      },
                      "formula": {
                        "type": "number",
                        "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "homeAway": {
                "type": "object",
                "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                "properties": {
                  "value": {
                    "type": "object",
                    "properties": {
                      "valueType": {
                        "type": "string",
                        "description": "Defines rather value is a fixed number or percentage",
                        "enum": [
                          "FIXED",
                          "PERCENTAGE"
                        ]
                      },
                      "multiplier": {
                        "type": "string",
                        "description": "Sets the factor by which cleaning fee value will be multiplied",
                        "enum": [
                          "PER_STAY",
                          "PER_GUEST",
                          "PER_NIGHT",
                          "PER_GUEST_PER_NIGHT"
                        ]
                      },
                      "formula": {
                        "type": "number",
                        "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "expedia": {
                "type": "object",
                "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                "properties": {
                  "value": {
                    "type": "object",
                    "properties": {
                      "valueType": {
                        "type": "string",
                        "description": "Defines rather value is a fixed number or percentage",
                        "enum": [
                          "FIXED",
                          "PERCENTAGE"
                        ]
                      },
                      "multiplier": {
                        "type": "string",
                        "description": "Sets the factor by which cleaning fee value will be multiplied",
                        "enum": [
                          "PER_STAY",
                          "PER_GUEST",
                          "PER_NIGHT",
                          "PER_GUEST_PER_NIGHT"
                        ]
                      },
                      "formula": {
                        "type": "number",
                        "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "despegar": {
                "type": "object",
                "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                "properties": {
                  "value": {
                    "type": "object",
                    "properties": {
                      "valueType": {
                        "type": "string",
                        "description": "Defines rather value is a fixed number or percentage",
                        "enum": [
                          "FIXED",
                          "PERCENTAGE"
                        ]
                      },
                      "multiplier": {
                        "type": "string",
                        "description": "Sets the factor by which cleaning fee value will be multiplied",
                        "enum": [
                          "PER_STAY",
                          "PER_GUEST",
                          "PER_NIGHT",
                          "PER_GUEST_PER_NIGHT"
                        ]
                      },
                      "formula": {
                        "type": "number",
                        "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "bookingCom": {
                "type": "object",
                "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                "properties": {
                  "value": {
                    "type": "object",
                    "properties": {
                      "valueType": {
                        "type": "string",
                        "description": "Defines rather value is a fixed number or percentage",
                        "enum": [
                          "FIXED",
                          "PERCENTAGE"
                        ]
                      },
                      "multiplier": {
                        "type": "string",
                        "description": "Sets the factor by which cleaning fee value will be multiplied",
                        "enum": [
                          "PER_STAY",
                          "PER_GUEST",
                          "PER_NIGHT",
                          "PER_GUEST_PER_NIGHT"
                        ]
                      },
                      "formula": {
                        "type": "number",
                        "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "FinancialsPut": {
        "type": "object",
        "description": "Select financials fields with updated values. Non-updated fields are not required in the body",
        "properties": {
          "guestsIncludedInRegularFee": {
            "type": "number",
            "description": "The higest number of guests that will not reauires to add extraPersonFee"
          },
          "extraPersonFee": {
            "type": "number",
            "description": "The amount of fee which is added for each extra person, above guestsIncludedInRegularFee, in the reservation"
          },
          "basePrice": {
            "type": "number",
            "description": "The cost per night for the listing"
          },
          "basePriceUSD": {
            "type": "number",
            "description": "The cost per night in USD for the listing"
          },
          "monthlyPriceFactor": {
            "type": "number",
            "description": "A factor for the nightly cost for reservations that are longer then a month"
          },
          "weeklyPriceFactor": {
            "type": "number",
            "description": "A factor for the nightly cost for reservations that are longer then a week"
          },
          "weekendBasePrice": {
            "type": "number",
            "description": "The base price for weekend"
          },
          "securityDepositFee": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "description": "The currency that is in use for the listing prices"
          },
          "cleaningFee": {
            "type": "object",
            "description": "Object to define cleaningFee settings",
            "properties": {
              "value": {
                "type": "object",
                "description": "Default settings for cleaning fee",
                "properties": {
                  "valueType": {
                    "type": "string",
                    "description": "Defines rather value is a fixed number or percentage",
                    "enum": [
                      "FIXED",
                      "PERCENTAGE"
                    ]
                  },
                  "multiplier": {
                    "type": "string",
                    "description": "Sets the factor by which cleaning fee value will be multiplied",
                    "enum": [
                      "PER_STAY",
                      "PER_GUEST",
                      "PER_NIGHT",
                      "PER_GUEST_PER_NIGHT"
                    ]
                  },
                  "formula": {
                    "type": "number",
                    "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                  }
                }
              },
              "lastUpdatedAt": {
                "type": "string",
                "format": "date",
                "description": "Last update date"
              },
              "airbnb": {
                "type": "object",
                "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                "properties": {
                  "value": {
                    "type": "object",
                    "properties": {
                      "valueType": {
                        "type": "string",
                        "description": "Defines rather value is a fixed number or percentage",
                        "enum": [
                          "FIXED",
                          "PERCENTAGE"
                        ]
                      },
                      "multiplier": {
                        "type": "string",
                        "description": "Sets the factor by which cleaning fee value will be multiplied",
                        "enum": [
                          "PER_STAY",
                          "PER_GUEST",
                          "PER_NIGHT",
                          "PER_GUEST_PER_NIGHT"
                        ]
                      },
                      "formula": {
                        "type": "number",
                        "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "rentalsUnited": {
                "type": "object",
                "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                "properties": {
                  "value": {
                    "type": "object",
                    "properties": {
                      "valueType": {
                        "type": "string",
                        "description": "Defines rather value is a fixed number or percentage",
                        "enum": [
                          "FIXED",
                          "PERCENTAGE"
                        ]
                      },
                      "multiplier": {
                        "type": "string",
                        "description": "Sets the factor by which cleaning fee value will be multiplied",
                        "enum": [
                          "PER_STAY",
                          "PER_GUEST",
                          "PER_NIGHT",
                          "PER_GUEST_PER_NIGHT"
                        ]
                      },
                      "formula": {
                        "type": "number",
                        "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "homeAway": {
                "type": "object",
                "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                "properties": {
                  "value": {
                    "type": "object",
                    "properties": {
                      "valueType": {
                        "type": "string",
                        "description": "Defines rather value is a fixed number or percentage",
                        "enum": [
                          "FIXED",
                          "PERCENTAGE"
                        ]
                      },
                      "multiplier": {
                        "type": "string",
                        "description": "Sets the factor by which cleaning fee value will be multiplied",
                        "enum": [
                          "PER_STAY",
                          "PER_GUEST",
                          "PER_NIGHT",
                          "PER_GUEST_PER_NIGHT"
                        ]
                      },
                      "formula": {
                        "type": "number",
                        "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "expedia": {
                "type": "object",
                "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                "properties": {
                  "value": {
                    "type": "object",
                    "properties": {
                      "valueType": {
                        "type": "string",
                        "description": "Defines rather value is a fixed number or percentage",
                        "enum": [
                          "FIXED",
                          "PERCENTAGE"
                        ]
                      },
                      "multiplier": {
                        "type": "string",
                        "description": "Sets the factor by which cleaning fee value will be multiplied",
                        "enum": [
                          "PER_STAY",
                          "PER_GUEST",
                          "PER_NIGHT",
                          "PER_GUEST_PER_NIGHT"
                        ]
                      },
                      "formula": {
                        "type": "number",
                        "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "despegar": {
                "type": "object",
                "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                "properties": {
                  "value": {
                    "type": "object",
                    "properties": {
                      "valueType": {
                        "type": "string",
                        "description": "Defines rather value is a fixed number or percentage",
                        "enum": [
                          "FIXED",
                          "PERCENTAGE"
                        ]
                      },
                      "multiplier": {
                        "type": "string",
                        "description": "Sets the factor by which cleaning fee value will be multiplied",
                        "enum": [
                          "PER_STAY",
                          "PER_GUEST",
                          "PER_NIGHT",
                          "PER_GUEST_PER_NIGHT"
                        ]
                      },
                      "formula": {
                        "type": "number",
                        "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "bookingCom": {
                "type": "object",
                "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                "properties": {
                  "value": {
                    "type": "object",
                    "properties": {
                      "valueType": {
                        "type": "string",
                        "description": "Defines rather value is a fixed number or percentage",
                        "enum": [
                          "FIXED",
                          "PERCENTAGE"
                        ]
                      },
                      "multiplier": {
                        "type": "string",
                        "description": "Sets the factor by which cleaning fee value will be multiplied",
                        "enum": [
                          "PER_STAY",
                          "PER_GUEST",
                          "PER_NIGHT",
                          "PER_GUEST_PER_NIGHT"
                        ]
                      },
                      "formula": {
                        "type": "number",
                        "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Value": {
        "type": "object",
        "description": "Default settings for cleaning fee",
        "properties": {
          "valueType": {
            "type": "string",
            "description": "Defines rather value is a fixed number or percentage",
            "enum": [
              "FIXED",
              "PERCENTAGE"
            ]
          },
          "multiplier": {
            "type": "string",
            "description": "Sets the factor by which cleaning fee value will be multiplied",
            "enum": [
              "PER_STAY",
              "PER_GUEST",
              "PER_NIGHT",
              "PER_GUEST_PER_NIGHT"
            ]
          },
          "formula": {
            "type": "number",
            "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
          }
        }
      },
      "ValueForChannelsCleaningFee": {
        "type": "object",
        "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
        "properties": {
          "value": {
            "type": "object",
            "properties": {
              "valueType": {
                "type": "string",
                "description": "Defines rather value is a fixed number or percentage",
                "enum": [
                  "FIXED",
                  "PERCENTAGE"
                ]
              },
              "multiplier": {
                "type": "string",
                "description": "Sets the factor by which cleaning fee value will be multiplied",
                "enum": [
                  "PER_STAY",
                  "PER_GUEST",
                  "PER_NIGHT",
                  "PER_GUEST_PER_NIGHT"
                ]
              },
              "formula": {
                "type": "number",
                "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
              },
              "_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "Terms": {
        "type": "object",
        "properties": {
          "minNights": {
            "type": "number"
          },
          "maxNights": {
            "type": "number"
          },
          "cancellation": {
            "type": "string"
          }
        }
      },
      "ListingPaymentProviderId": {
        "type": "object",
        "properties": {
          "paymentProviderId": {
            "type": "string"
          },
          "paymentProvider": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "syncedAt": {
                "type": "string",
                "format": "date"
              },
              "lastPendingPaymentDate": {
                "type": "string",
                "format": "date"
              },
              "pendingPaymentsCount": {
                "type": "number"
              },
              "paymentMethodsCount": {
                "type": "number"
              },
              "providerAccountId": {
                "type": "string"
              },
              "isDefault": {
                "type": "boolean"
              },
              "providerType": {
                "type": "string"
              },
              "connectedBy": {
                "type": "string"
              },
              "accountName": {
                "type": "string"
              },
              "defaultCurrency": {
                "type": "string"
              },
              "statsLastUpdated": {
                "type": "string",
                "format": "date"
              }
            }
          }
        }
      },
      "CreateReservationInvoice": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the invoice item",
            "example": "Accommodation fare"
          },
          "amount": {
            "type": "number",
            "description": "Price to be charged for the invoice item",
            "example": 98.52
          },
          "normalType": {
            "type": "string",
            "description": "Invoice item's type identifier",
            "example": "AFE"
          },
          "description": {
            "type": "string",
            "description": "Description of the invoice item",
            "example": "Management fee description"
          },
          "secondIdentifier": {
            "type": "string",
            "description": "An additional optional identifier",
            "example": "MANAGEMENT"
          }
        },
        "required": [
          "amount",
          "title",
          "normalType",
          "secondIdentifier"
        ]
      },
      "CreateReservationPayment": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "enum": [
                  "CASH",
                  "CREDIT",
                  "DEBIT",
                  "ECHECK",
                  "AIRBNB",
                  "BANK_TRANSFER",
                  "CREDIT_NOTE",
                  "VOUCHER",
                  "CHECK",
                  "STRIPE",
                  "AMARYLLIS",
                  "OTHER"
                ],
                "example": "CASH"
              },
              "saveForFutureUse": {
                "type": "boolean"
              },
              "id": {
                "type": "string",
                "example": "5fa02fa358d2db673e17bc2d",
                "description": "Required only for payments processed using credit cards (i.e not cash, echeck etc). \n Please see 'List guest's payment methods' request for more info."
              }
            },
            "required": [
              "method, id"
            ]
          },
          "amount": {
            "type": "number",
            "example": 10
          },
          "shouldBePaidAt": {
            "type": "string",
            "format": "date",
            "description": "Expected charge date. \n Not passing this param at all or passing it with a past date, will immediately charge the payment.",
            "example": "2023-05-30T12:00:00.000Z"
          },
          "paidAt": {
            "type": "string",
            "format": "date",
            "description": "Used when adding a record to payment history - the actual charge date.",
            "example": "2023-05-30T12:00:00.000Z"
          },
          "note": {
            "type": "string",
            "description": "Free text"
          },
          "isAuthorizationHold": {
            "type": "boolean",
            "example": false,
            "description": "True in case of Authorization hold kind of payments"
          }
        },
        "required": [
          "paymentMethod",
          "amount"
        ]
      },
      "UpdateReservationPayment": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Payment status",
            "enum": [
              "PENDING",
              "PENDING_AUTH",
              "FAILED",
              "SUCCEEDED",
              "CANCELLED",
              "AUTHORIZATION_HOLD_SUCCEEDED",
              "FAILED_FULLY_PAID",
              "PENDING_ACTIVATION"
            ],
            "example": "SUCCEEDED"
          },
          "paymentMethod": {
            "type": "object",
            "description": "Payment method object\n **\"Recorded\" cash payment method example**",
            "properties": {
              "method": {
                "type": "string",
                "enum": [
                  "CASH",
                  "STRIPE",
                  "AMARYLLIS",
                  "CREDIT",
                  "DEBIT",
                  "ECHECK",
                  "AIRBNB",
                  "BANK_TRANSFER",
                  "CREDIT_NOTE",
                  "VOUCHER",
                  "CHECK",
                  "OTHER"
                ],
                "example": "CASH"
              },
              "saveForFutureUse": {
                "type": "boolean"
              },
              "id": {
                "type": "string",
                "example": "5fa02fa358d2db673e17bc2d"
              }
            },
            "required": [
              "method"
            ]
          },
          "amount": {
            "type": "number",
            "example": 10
          },
          "shouldBePaidAt": {
            "type": "string",
            "format": "date",
            "description": "Expected charge date. \n Not passing this param at all or passing it with a past date, will immediately charge the payment.",
            "example": "2023-05-30T12:00:00.000Z"
          },
          "paidAt": {
            "type": "string",
            "format": "date",
            "description": "Used when adding a record to payment history - the actual charge date.",
            "example": "2023-05-30T12:00:00.000Z"
          },
          "note": {
            "type": "string",
            "example": "Free text"
          },
          "stripePaymentMethodToken": {
            "type": "string",
            "description": "Stripe pm_ token representing a credit card\n **tok_ kind of tokens are NOT supported**",
            "example": "pm_stipetoken"
          }
        },
        "required": [
          "paymentId",
          "paymentMethod"
        ]
      },
      "RefundReservationPayment": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "example": 100
          },
          "note": {
            "type": "string",
            "example": "Free text"
          }
        },
        "required": [
          "amount"
        ]
      },
      "CancelReservationPayment": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Payment status",
            "example": "CANCELLED"
          },
          "paymentMethod": {
            "type": "object",
            "description": "Payment method object\n **\"Recorded\" cash payment method example**",
            "properties": {
              "method": {
                "type": "string",
                "enum": [
                  "RECORDED_CASH",
                  "STRIPE",
                  "AMARYLLIS",
                  "CREDIT",
                  "DEBIT",
                  "ECHECK",
                  "AIRBNB",
                  "BANK_TRANSFER",
                  "CREDIT_NOTE",
                  "VOUCHER",
                  "CHECK",
                  "OTHER"
                ],
                "example": "RECORDED_CASH"
              },
              "id": {
                "type": "string",
                "example": "5fa02fa358d2db673e17bc2d"
              }
            },
            "required": [
              "method"
            ]
          },
          "amount": {
            "type": "number",
            "example": 10
          },
          "cancelledAt": {
            "type": "string",
            "format": "date",
            "description": "Date of cancellation",
            "example": "2023-05-30T12:00:00.000Z"
          },
          "note": {
            "type": "string",
            "example": "Free text"
          }
        },
        "required": [
          "paymentId"
        ]
      },
      "Create_Stripe_Payment_Method": {
        "type": "object",
        "description": "Create payment method with Stripe token from tokenization process.",
        "properties": {
          "stripeCardToken": {
            "type": "string",
            "description": "ID from Stripe payment method",
            "example": "pm_..."
          },
          "skipSetupIntent": {
            "type": "boolean",
            "description": "TRUE if credit card was collected with setup_intent performed on the frontend",
            "default": false,
            "example": false
          },
          "paymentProviderId": {
            "type": "string",
            "description": "The payment processing account Id used in the tokenization process",
            "default": null,
            "example": "5fe4b21675087f01a3c5ab5b"
          },
          "reservationId": {
            "type": "string",
            "description": "Reservation ID",
            "example": "563e0b6a08a2710e00057b82"
          },
          "reuse": {
            "type": "boolean",
            "description": "Allow this payment method for reusage in other guest's reservations",
            "example": false,
            "default": false
          }
        },
        "required": [
          "stripeCardToken"
        ]
      },
      "Create_Payment_Method_By_Id": {
        "description": "Create payment method using the _id received from Guesty's [credit card tokenization process](https://open-api-docs.guesty.com/docs/tokenizing-payment-methods)",
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "_id from tokenization process response",
            "example": "6265d1b6a08a2710e00057b82"
          },
          "paymentProviderId": {
            "type": "string",
            "description": "The payment processing account Id used in the tokenization process",
            "default": null,
            "example": "5fe4b21675087f01a3c5ab5b"
          },
          "reservationId": {
            "type": "string",
            "description": "Reservation ID",
            "example": "563e0b6a08a2710e00057b82"
          },
          "reuse": {
            "type": "boolean",
            "description": "Allow this payment method for reusage in other guest's reservations",
            "example": false,
            "default": false
          }
        },
        "required": [
          "_id"
        ]
      },
      "GuestResponse": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Guest's full name",
            "example": "Kristen"
          },
          "firstName": {
            "type": "string",
            "description": "Guest's first name",
            "example": "Kristen"
          },
          "lastName": {
            "type": "string",
            "description": "Guest's last name"
          },
          "hasVerifiedId": {
            "type": "boolean",
            "example": false
          },
          "hometown": {
            "type": "string",
            "description": "Guest's hometown",
            "example": "New York"
          },
          "languages": {
            "type": "string",
            "description": "TODO-d: fill here",
            "example": "Spanish"
          },
          "paymentMethods": {
            "type": "array",
            "items": {}
          },
          "communicationMethods": {
            "type": "array",
            "items": {
              "type": "array",
              "example": "airbnb"
            }
          },
          "airbnb": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Airbnb's guest identifier",
                "example": 32931005
              },
              "url": {
                "type": "string",
                "example": "https://www.airbnb.com/users/show/32931005"
              },
              "firstName": {
                "type": "string",
                "description": "First name on airbnb",
                "example": "Kristen"
              },
              "lastName": {
                "type": "string",
                "description": "Last name on airbnb",
                "example": "Kristen"
              },
              "fullName": {
                "type": "string",
                "description": "Full name on airbnb",
                "example": "Kristen"
              }
            }
          },
          "phones": {
            "type": "array",
            "description": "list of phone numbers",
            "items": {
              "type": "string"
            },
            "example": [
              "15417543010",
              "15417543012",
              "15417543013"
            ]
          },
          "emails": {
            "description": "Array of of the guest's emails",
            "type": "array",
            "items": {
              "type": "string",
              "example": "ari@example.com"
            }
          },
          "pictures": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "list of phone numbers",
              "properties": {
                "thumbnail": {
                  "type": "string",
                  "example": "//guestybookings.s3.amazonaws.com/guests/thumbnail_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
                },
                "large": {
                  "type": "string",
                  "example": "//guestybookings.s3.amazonaws.com/guests/large_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
                },
                "regular": {
                  "type": "string",
                  "example": "//guestybookings.s3.amazonaws.com/guests/regular_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
                },
                "_id": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                }
              }
            }
          },
          "verifications": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Email address"
            }
          },
          "company": {
            "type": "string"
          },
          "privateEmail": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "example": "2609  Haul Road"
              },
              "city": {
                "type": "string",
                "example": "Saint Paul"
              },
              "country": {
                "type": "string",
                "example": "US"
              },
              "countryCode": {
                "type": "string",
                "example": "001"
              },
              "zipCode": {
                "type": "string",
                "example": "55102"
              }
            }
          },
          "phone": {
            "type": "string"
          },
          "hasPossiblyBadReviews": {
            "type": "boolean",
            "example": false
          },
          "picture": {
            "type": "object",
            "properties": {
              "thumbnail": {
                "type": "string",
                "example": "//guestybookings.s3.amazonaws.com/guests/thumbnail_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
              },
              "large": {
                "type": "string",
                "example": "//guestybookings.s3.amazonaws.com/guests/large_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
              },
              "regular": {
                "type": "string",
                "example": "//guestybookings.s3.amazonaws.com/guests/regular_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
              }
            }
          },
          "confirmed": {
            "type": "boolean"
          },
          "rentalsUnited": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "description": "First name on rentals united",
                "example": "Sergey"
              },
              "lastName": {
                "type": "string",
                "description": "Last name on rentals united",
                "example": "Grinblat"
              },
              "fullName": {
                "type": "string",
                "description": "Full name on rentals united",
                "example": "Sergey Grinblat"
              }
            }
          },
          "bookingCom": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "description": "First name on booking",
                "example": "Sergey"
              },
              "lastName": {
                "type": "string",
                "description": "Last name on booking",
                "example": "Grinblat"
              },
              "fullName": {
                "type": "string",
                "description": "Full name on booking",
                "example": "Sergey Grinblat"
              }
            }
          },
          "airbnb2": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Airbnb's guest identifier",
                "example": 32931005
              },
              "index": {
                "type": "string",
                "example": "1111111111111"
              },
              "url": {
                "type": "string",
                "example": "https://www.airbnb.com/users/show/32931005"
              },
              "firstName": {
                "type": "string",
                "description": "First name on airbnb",
                "example": "Kristen"
              },
              "lastName": {
                "type": "string",
                "description": "Last name on airbnb",
                "example": "Kristen"
              },
              "fullName": {
                "type": "string",
                "description": "Full name on airbnb",
                "example": "Kristen"
              }
            }
          },
          "homeAway": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "",
                "example": "Prof"
              },
              "firstName": {
                "type": "string",
                "description": "First name on homeAway",
                "example": "Sergey"
              },
              "lastName": {
                "type": "string",
                "description": "Last name on homeAway",
                "example": "Grinblat"
              },
              "fullName": {
                "type": "string",
                "description": "Full name on homeAway",
                "example": "Sergey Grinblat"
              }
            }
          },
          "tripAdvisor": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "",
                "example": "Prof"
              },
              "firstName": {
                "type": "string",
                "description": "First name on tripAdvisor",
                "example": "Sergey"
              },
              "lastName": {
                "type": "string",
                "description": "Last name on tripAdvisor",
                "example": "Grinblat"
              },
              "fullName": {
                "type": "string",
                "description": "Full name on tripAdvisor",
                "example": "Sergey Grinblat"
              }
            }
          },
          "notes": {
            "type": "string"
          },
          "paymentProviders": {
            "type": "object"
          },
          "stripe": {
            "type": "object"
          },
          "customerId": {
            "type": "string"
          },
          "policy": {
            "type": "object",
            "properties": {
              "privacy": {
                "type": "object"
              },
              "dateOfAcceptance": {
                "type": "string"
              },
              "isAccepted": {
                "type": "boolean"
              },
              "version": {
                "type": "number"
              },
              "marketing": {
                "type": "object"
              }
            }
          }
        },
        "example": {
          "_id": "5803ca18e48f450300c76173",
          "fullName": "Kristen",
          "firstName": "Kristen",
          "accountId": "563e0b6a08a2710e00057b82",
          "hasVerifiedId": false,
          "hometown": "US",
          "languages": "",
          "paymentMethods": [],
          "communicationMethods": [
            "airbnb"
          ],
          "airbnb": {
            "id": 32931005,
            "url": "https://www.airbnb.com/users/show/32931005",
            "firstName": "Kristen",
            "lastName": null,
            "fullName": "Kristen"
          },
          "phones": [],
          "emails": [],
          "pictures": [
            {
              "thumbnail": "//guestybookings.s3.amazonaws.com/guests/thumbnail_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
              "large": "//guestybookings.s3.amazonaws.com/guests/large_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
              "regular": "//guestybookings.s3.amazonaws.com/guests/regular_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
              "_id": "5803ca18e48f450300c76174"
            }
          ],
          "verifications": [
            "Email address"
          ],
          "__v": 0
        }
      },
      "Guest": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Guest's full name",
            "example": "Kristen"
          },
          "firstName": {
            "type": "string",
            "description": "Guest's first name",
            "example": "Kristen"
          },
          "lastName": {
            "type": "string",
            "description": "Guest's last name"
          },
          "hasVerifiedId": {
            "type": "boolean",
            "example": false
          },
          "hometown": {
            "type": "string",
            "description": "Guest's hometown",
            "example": "New York"
          },
          "languages": {
            "type": "string",
            "description": "TODO-d: fill here",
            "example": "Spanish"
          },
          "communicationMethods": {
            "type": "array",
            "items": {
              "type": "array",
              "example": "airbnb"
            }
          },
          "phones": {
            "type": "array",
            "description": "list of phone numbers",
            "items": {
              "type": "string"
            },
            "example": [
              "15417543010",
              "15417543012",
              "15417543013"
            ]
          },
          "emails": {
            "description": "Array of of the guest's emails",
            "type": "array",
            "items": {
              "type": "string",
              "example": "ari@example.com"
            }
          },
          "pictures": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "list of phone numbers",
              "properties": {
                "thumbnail": {
                  "type": "string",
                  "example": "//guestybookings.s3.amazonaws.com/guests/thumbnail_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
                },
                "large": {
                  "type": "string",
                  "example": "//guestybookings.s3.amazonaws.com/guests/large_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
                },
                "regular": {
                  "type": "string",
                  "example": "//guestybookings.s3.amazonaws.com/guests/regular_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
                },
                "_id": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                }
              }
            }
          },
          "verifications": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Email address"
            }
          },
          "company": {
            "type": "string"
          },
          "privateEmail": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "example": "2609  Haul Road"
              },
              "city": {
                "type": "string",
                "example": "Saint Paul"
              },
              "country": {
                "type": "string",
                "example": "US"
              },
              "countryCode": {
                "type": "string",
                "example": "001"
              },
              "zipCode": {
                "type": "string",
                "example": "55102"
              }
            }
          },
          "phone": {
            "type": "string"
          },
          "hasPossiblyBadReviews": {
            "type": "boolean",
            "example": false
          },
          "picture": {
            "type": "object",
            "properties": {
              "thumbnail": {
                "type": "string",
                "example": "//guestybookings.s3.amazonaws.com/guests/thumbnail_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
              },
              "large": {
                "type": "string",
                "example": "//guestybookings.s3.amazonaws.com/guests/large_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
              },
              "regular": {
                "type": "string",
                "example": "//guestybookings.s3.amazonaws.com/guests/regular_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
              }
            }
          },
          "confirmed": {
            "type": "boolean"
          },
          "notes": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "policy": {
            "type": "object",
            "properties": {
              "privacy": {
                "type": "object"
              },
              "dateOfAcceptance": {
                "type": "string"
              },
              "isAccepted": {
                "type": "boolean"
              },
              "version": {
                "type": "number"
              },
              "marketing": {
                "type": "object"
              }
            }
          }
        },
        "example": {
          "_id": "5803ca18e48f450300c76173",
          "fullName": "Kristen",
          "firstName": "Kristen",
          "accountId": "563e0b6a08a2710e00057b82",
          "hasVerifiedId": false,
          "hometown": "US",
          "languages": "",
          "paymentMethods": [],
          "communicationMethods": [
            "airbnb"
          ],
          "airbnb": {
            "id": 32931005,
            "url": "https://www.airbnb.com/users/show/32931005",
            "firstName": "Kristen",
            "lastName": null,
            "fullName": "Kristen"
          },
          "phones": [],
          "emails": [],
          "pictures": [
            {
              "thumbnail": "//guestybookings.s3.amazonaws.com/guests/thumbnail_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
              "large": "//guestybookings.s3.amazonaws.com/guests/large_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
              "regular": "//guestybookings.s3.amazonaws.com/guests/regular_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
              "_id": "5803ca18e48f450300c76174"
            }
          ],
          "verifications": [
            "Email address"
          ],
          "__v": 0
        }
      },
      "Contact": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Elad"
          },
          "lastName": {
            "type": "string",
            "example": "Kremer"
          },
          "fullName": {
            "type": "string",
            "example": "Elad Kremer"
          },
          "nickName": {
            "type": "string",
            "example": "My Nickname"
          },
          "title": {
            "type": "string",
            "example": "My Title"
          },
          "company": {
            "type": "string",
            "example": "My Company"
          },
          "picture": {
            "type": "object",
            "properties": {
              "thumbnail": {
                "type": "string"
              },
              "regular": {
                "type": "string"
              },
              "large": {
                "type": "string"
              }
            },
            "example": {
              "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
              "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
              "regular": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": "['aaaa@darkforest.com']"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": "['+97777777777777']"
          },
          "preferredContactMethod": {
            "type": "string",
            "enum": [
              "email",
              "sms",
              "call"
            ],
            "example": "email"
          },
          "email": {
            "type": "string",
            "description": "Primary email for the contact",
            "example": "asdasdasdasd@darkforest.com"
          },
          "phone": {
            "type": "string",
            "description": "Primary phone for the contact",
            "example": "+97777777777777"
          },
          "notes": {
            "type": "string",
            "description": "Notes about the user",
            "example": "Some notes"
          }
        }
      },
      "Phones": {
        "type": "array",
        "description": "list of phone numbers",
        "items": {
          "type": "string"
        },
        "example": [
          "15417543010",
          "15417543012",
          "15417543013"
        ]
      },
      "Picture": {
        "type": "object",
        "description": "list of phone numbers",
        "properties": {
          "thumbnail": {
            "type": "string",
            "example": "//guestybookings.s3.amazonaws.com/guests/thumbnail_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
          },
          "large": {
            "type": "string",
            "example": "//guestybookings.s3.amazonaws.com/guests/large_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
          },
          "regular": {
            "type": "string",
            "example": "//guestybookings.s3.amazonaws.com/guests/regular_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
          },
          "_id": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          }
        }
      },
      "CustomFieldAsDedicatedObject": {
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "isPublic": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "listing",
              "reservation"
            ]
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "user",
              "boolean",
              "enum",
              "longtext",
              "date",
              "text",
              "time",
              "contact",
              "number"
            ]
          }
        }
      },
      "CustomField_Options_Payload": {
        "description": "Use when createing *options* customField: ```type:enum```\n This case required options arry in edition",
        "type": "object",
        "required": [
          "isPublic",
          "key",
          "object",
          "options",
          "type"
        ],
        "properties": {
          "isPublic": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "listing",
              "reservation"
            ]
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "enum"
            ]
          }
        }
      },
      "CustomField_None_Options_Payload": {
        "type": "object",
        "required": [
          "isPublic",
          "key",
          "object",
          "type"
        ],
        "properties": {
          "isPublic": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "object": {
            "type": "string",
            "enum": [
              "listing",
              "reservation"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "user",
              "boolean",
              "longtext",
              "date",
              "text",
              "time",
              "contact",
              "number"
            ]
          }
        }
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://www.hookurl.com"
          },
          "events": {
            "type": "array",
            "description": "add list of event to register for the provided url",
            "enum": [
              "guest.created",
              "guest.deleted",
              "guest.updated",
              "listing.new",
              "listing.updated",
              "listing.removed",
              "listing.calendar.updated",
              "payments.failed",
              "reservation.messageReceived",
              "reservation.new",
              "reservation.updated",
              "reservation.messageSent",
              "task.created",
              "task.deleted",
              "task.updated",
              "reservation_update_shortlist",
              "payments.method.received"
            ],
            "items": {
              "type": "string",
              "enum": [
                "guest.created",
                "guest.deleted",
                "guest.updated",
                "listing.new",
                "listing.updated",
                "listing.removed",
                "listing.calendar.updated",
                "payments.failed",
                "reservation.messageReceived",
                "reservation.new",
                "reservation.updated",
                "reservation.messageSent",
                "task.created",
                "task.deleted",
                "task.updated",
                "reservation_update_shortlist",
                "payments.method.received"
              ]
            }
          }
        }
      },
      "Mtl": {
        "type": "object",
        "properties": {
          "aas": {
            "type": "string",
            "example": "bc",
            "description": "Can be one of the following: 'oc'(on create), 'm'(manual), 'bc'(before check-in)"
          },
          "aao": {
            "type": "string",
            "example": "f",
            "nullable": true,
            "description": "Define the automatic assignment rules for the selected multi unit. Note that it is not relevant for listings that have manual assignment logic (aas: 'm'). Can be one of the following: 'f'(first free by unit's nickname), 'r'(randomly)"
          },
          "bc": {
            "type": "number",
            "nullable": true,
            "description": "Number of days before check-in"
          },
          "c": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "Array with children ids"
          },
          "p": {
            "type": "string",
            "nullable": true,
            "description": "Parent id"
          },
          "hdb4": {
            "type": "number",
            "nullable": true,
            "description": "Highlighting days before"
          },
          "lmcn": {
            "type": "boolean",
            "nullable": true,
            "description": "True if the availability should be calculated according to max consecutive nights. Otherwise it will be calculated according to the number of vacant sub-unit"
          }
        }
      },
      "SpacesBedTypes": {
        "type": "array",
        "example": [
          "KING_BED",
          "QUEEN_BED",
          "DOUBLE_BED",
          "SINGLE_BED",
          "SOFA_BED",
          "AIR_MATTRESS",
          "BUNK_BED",
          "FLOOR_MATTRESS",
          "WATER_BED",
          "TODDLER_BED",
          "CRIB"
        ],
        "items": {
          "type": "string"
        }
      },
      "SpacesRoomTypes": {
        "type": "array",
        "example": [
          "BEDROOM",
          "SHARED_SPACE"
        ],
        "items": {
          "type": "string"
        }
      },
      "SpacesBeds": {
        "type": "object",
        "properties": {
          "KING_BED": {
            "minimum": 0,
            "type": "number",
            "example": 1,
            "default": 0
          },
          "QUEEN_BED": {
            "minimum": 0,
            "type": "number",
            "example": 1,
            "default": 0
          },
          "DOUBLE_BED": {
            "minimum": 0,
            "type": "number",
            "example": 1,
            "default": 0
          },
          "SINGLE_BED": {
            "minimum": 0,
            "type": "number",
            "example": 1,
            "default": 0
          },
          "SOFA_BED": {
            "minimum": 0,
            "type": "number",
            "example": 1,
            "default": 0
          },
          "AIR_MATTRESS": {
            "minimum": 0,
            "type": "number",
            "example": 1,
            "default": 0
          },
          "BUNK_BED": {
            "minimum": 0,
            "type": "number",
            "example": 1,
            "default": 0
          }
        }
      },
      "SpacesOther": {
        "type": "object",
        "properties": {
          "FLOOR_MATTRESS": {
            "minimum": 0,
            "type": "number",
            "example": 1,
            "default": 0
          },
          "WATER_BED": {
            "minimum": 0,
            "type": "number",
            "example": 1,
            "default": 0
          },
          "TODDLER_BED": {
            "minimum": 0,
            "type": "number",
            "example": 1,
            "default": 0
          },
          "CRIB": {
            "minimum": 0,
            "type": "number",
            "example": 1,
            "default": 0
          }
        }
      },
      "Space_roomIds": {
        "type": "object",
        "properties": {
          "airbnb": {
            "type": "string"
          }
        }
      },
      "Space": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "accountId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "name": {
            "type": "string",
            "example": "Space room"
          },
          "roomIds": {
            "type": "object",
            "properties": {
              "airbnb": {
                "type": "string"
              }
            }
          },
          "beds": {
            "type": "object",
            "properties": {
              "KING_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "QUEEN_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "DOUBLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SINGLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SOFA_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "AIR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "BUNK_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          },
          "other": {
            "type": "object",
            "properties": {
              "FLOOR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "WATER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "TODDLER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "CRIB": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          }
        }
      },
      "AddSpaceRequestBody": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SHARED_SPACE",
              "BEDROOM"
            ]
          },
          "airbnb_room_id": {
            "type": "string"
          },
          "beds": {
            "type": "object",
            "properties": {
              "KING_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "QUEEN_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "DOUBLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SINGLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SOFA_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "AIR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "BUNK_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          },
          "other": {
            "type": "object",
            "properties": {
              "FLOOR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "WATER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "TODDLER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "CRIB": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          }
        }
      },
      "EditSpaceRequestBody": {
        "type": "object",
        "properties": {
          "beds": {
            "type": "object",
            "properties": {
              "KING_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "QUEEN_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "DOUBLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SINGLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SOFA_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "AIR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "BUNK_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          },
          "other": {
            "type": "object",
            "properties": {
              "FLOOR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "WATER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "TODDLER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "CRIB": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          }
        }
      },
      "EditSpaceDetailsRequestBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "SHARED_SPACE",
              "BEDROOM"
            ]
          },
          "airbnb_room_id": {
            "type": "string",
            "example": "123456"
          }
        }
      },
      "GetSpacesForUnitTypeIdResponse_bathrooms": {
        "type": "object",
        "properties": {
          "SHARED": {
            "type": "number",
            "example": 1
          },
          "PRIVATE": {
            "type": "number",
            "example": 1
          }
        }
      },
      "GetSpacesForUnitTypeIdResponse": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "spaces": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "unitTypeId": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                },
                "accountId": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                },
                "name": {
                  "type": "string",
                  "example": "Space room"
                },
                "roomIds": {
                  "type": "object",
                  "properties": {
                    "airbnb": {
                      "type": "string"
                    }
                  }
                },
                "beds": {
                  "type": "object",
                  "properties": {
                    "KING_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "QUEEN_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "DOUBLE_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "SINGLE_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "SOFA_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "AIR_MATTRESS": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "BUNK_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    }
                  }
                },
                "other": {
                  "type": "object",
                  "properties": {
                    "FLOOR_MATTRESS": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "WATER_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "TODDLER_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "CRIB": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "bedroomsAllowed": {
            "type": "boolean",
            "example": true
          },
          "bathrooms": {
            "type": "object",
            "properties": {
              "SHARED": {
                "type": "number",
                "example": 1
              },
              "PRIVATE": {
                "type": "number",
                "example": 1
              }
            }
          }
        }
      },
      "GetSpacesForComplexIdResponse": {
        "type": "object",
        "properties": {
          "complexId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "unitTypeSpaces": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "unitTypeId": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                },
                "spaces": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "unitTypeId": {
                        "type": "string",
                        "description": "Unique Id",
                        "example": "563e0b6a08a2710e00057b82"
                      },
                      "accountId": {
                        "type": "string",
                        "description": "Unique Id",
                        "example": "563e0b6a08a2710e00057b82"
                      },
                      "name": {
                        "type": "string",
                        "example": "Space room"
                      },
                      "roomIds": {
                        "type": "object",
                        "properties": {
                          "airbnb": {
                            "type": "string"
                          }
                        }
                      },
                      "beds": {
                        "type": "object",
                        "properties": {
                          "KING_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "QUEEN_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "DOUBLE_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "SINGLE_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "SOFA_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "AIR_MATTRESS": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "BUNK_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          }
                        }
                      },
                      "other": {
                        "type": "object",
                        "properties": {
                          "FLOOR_MATTRESS": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "WATER_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "TODDLER_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "CRIB": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          }
                        }
                      }
                    }
                  }
                },
                "bedroomsAllowed": {
                  "type": "boolean",
                  "example": true
                },
                "bathrooms": {
                  "type": "object",
                  "properties": {
                    "SHARED": {
                      "type": "number",
                      "example": 1
                    },
                    "PRIVATE": {
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SingleSpaceResponse": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "accountId": {
            "type": "string",
            "description": "Unique Id",
            "example": "563e0b6a08a2710e00057b82"
          },
          "name": {
            "type": "string",
            "example": "Space room"
          },
          "roomIds": {
            "type": "object",
            "properties": {
              "airbnb": {
                "type": "string"
              }
            }
          },
          "beds": {
            "type": "object",
            "properties": {
              "KING_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "QUEEN_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "DOUBLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SINGLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SOFA_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "AIR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "BUNK_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          },
          "other": {
            "type": "object",
            "properties": {
              "FLOOR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "WATER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "TODDLER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "CRIB": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          }
        }
      },
      "HouseRules": {
        "type": "object",
        "properties": {
          "suitableForChildren": {
            "type": "boolean"
          },
          "suitableForInfants": {
            "type": "boolean"
          },
          "petsAllowed": {
            "type": "boolean"
          },
          "petsCharged": {
            "type": "boolean"
          },
          "smokingAllowed": {
            "type": "boolean"
          },
          "partiesAllowed": {
            "type": "boolean"
          },
          "additional": {
            "type": "string"
          },
          "quietHours": {
            "type": "object",
            "properties": {
              "set": {
                "type": "boolean"
              },
              "start": {
                "type": "string"
              },
              "end": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "suitableForChildren": true,
          "suitableForInfants": false,
          "petsAllowed": true,
          "petsCharged": true,
          "smokingAllowed": false,
          "partiesAllowed": false,
          "additional": "No alcohol",
          "quietHours": {
            "set": true,
            "start": "22:00",
            "end": "08:00"
          }
        }
      },
      "ListHouseRulesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "suitableForChildren": {
              "type": "boolean"
            },
            "suitableForInfants": {
              "type": "boolean"
            },
            "petsAllowed": {
              "type": "boolean"
            },
            "petsCharged": {
              "type": "boolean"
            },
            "smokingAllowed": {
              "type": "boolean"
            },
            "partiesAllowed": {
              "type": "boolean"
            },
            "additional": {
              "type": "string"
            },
            "quietHours": {
              "type": "object",
              "properties": {
                "set": {
                  "type": "boolean"
                },
                "start": {
                  "type": "string"
                },
                "end": {
                  "type": "string"
                }
              }
            }
          },
          "example": {
            "suitableForChildren": true,
            "suitableForInfants": false,
            "petsAllowed": true,
            "petsCharged": true,
            "smokingAllowed": false,
            "partiesAllowed": false,
            "additional": "No alcohol",
            "quietHours": {
              "set": true,
              "start": "22:00",
              "end": "08:00"
            }
          }
        }
      },
      "BulkEditHouseRulesRequestBody": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "unitTypeId": {
              "type": "string",
              "description": "Unique Id",
              "example": "563e0b6a08a2710e00057b82"
            },
            "houseRules": {
              "type": "object",
              "properties": {
                "suitableForChildren": {
                  "type": "boolean"
                },
                "suitableForInfants": {
                  "type": "boolean"
                },
                "petsAllowed": {
                  "type": "boolean"
                },
                "petsCharged": {
                  "type": "boolean"
                },
                "smokingAllowed": {
                  "type": "boolean"
                },
                "partiesAllowed": {
                  "type": "boolean"
                },
                "additional": {
                  "type": "string"
                },
                "quietHours": {
                  "type": "object",
                  "properties": {
                    "set": {
                      "type": "boolean"
                    },
                    "start": {
                      "type": "string"
                    },
                    "end": {
                      "type": "string"
                    }
                  }
                }
              },
              "example": {
                "suitableForChildren": true,
                "suitableForInfants": false,
                "petsAllowed": true,
                "petsCharged": true,
                "smokingAllowed": false,
                "partiesAllowed": false,
                "additional": "No alcohol",
                "quietHours": {
                  "set": true,
                  "start": "22:00",
                  "end": "08:00"
                }
              }
            }
          },
          "example": {
            "unitTypeId": "5accf6954c5ed10025902aed",
            "houseRules": {
              "childrenRules": {
                "suitableForChildren": true,
                "suitableForInfants": true,
                "reason": "everything is round in the apartment"
              },
              "petsAllowed": {
                "enabled": true,
                "chargeType": "Credit"
              },
              "smokingAllowed": {
                "enabled": false
              },
              "suitableForEvents": {
                "enabled": false
              },
              "additionalRules": "No alcohol",
              "quietBetween": {
                "enabled": true,
                "hours": {
                  "start": "22:00",
                  "end": "08:00"
                }
              }
            }
          }
        }
      },
      "openAPIHouseRules_childrenRules": {
        "type": "object",
        "properties": {
          "suitableForChildren": {
            "type": "boolean"
          },
          "suitableForInfants": {
            "type": "boolean"
          }
        }
      },
      "openAPIHouseRules_petsAllowed": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "chargeType": {
            "type": "string"
          }
        }
      },
      "openAPIHouseRules_quietBetween_hours": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          }
        }
      },
      "openAPIHouseRules_quietBetween": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "hours": {
            "type": "object",
            "properties": {
              "start": {
                "type": "string"
              },
              "end": {
                "type": "string"
              }
            }
          }
        }
      },
      "openAPIHouseRules_smokingAllowed": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "openAPIHouseRules": {
        "type": "object",
        "properties": {
          "additionalRules": {
            "type": "string"
          },
          "childrenRules": {
            "type": "object",
            "properties": {
              "suitableForChildren": {
                "type": "boolean"
              },
              "suitableForInfants": {
                "type": "boolean"
              }
            }
          },
          "petsAllowed": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "chargeType": {
                "type": "string"
              }
            }
          },
          "quietBetween": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "hours": {
                "type": "object",
                "properties": {
                  "start": {
                    "type": "string"
                  },
                  "end": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "smokingAllowed": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            }
          },
          "suitableForEvents": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            }
          }
        },
        "example": {
          "childrenRules": {
            "suitableForChildren": true,
            "suitableForInfants": true,
            "reason": "everything is round in the apartment"
          },
          "petsAllowed": {
            "enabled": true,
            "chargeType": "Credit"
          },
          "smokingAllowed": {
            "enabled": false
          },
          "suitableForEvents": {
            "enabled": false
          },
          "additionalRules": "No alcohol",
          "quietBetween": {
            "enabled": true,
            "hours": {
              "start": "22:00",
              "end": "08:00"
            }
          }
        }
      },
      "PaymentProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "syncedAt": {
            "type": "string",
            "format": "date"
          },
          "lastPendingPaymentDate": {
            "type": "string",
            "format": "date"
          },
          "listings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pendingPaymentsCount": {
            "type": "number"
          },
          "paymentMethodsCount": {
            "type": "number"
          },
          "providerAccountId": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "providerType": {
            "type": "string"
          },
          "connectedBy": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "defaultCurrency": {
            "type": "string"
          },
          "statsLastUpdated": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "SavedReplyRequest": {
        "type": "object",
        "properties": {
          "question": {
            "type": "string",
            "example": "TV"
          },
          "answer": {
            "type": "string",
            "example": "Hi {{user}},\n\nWe have a 42\" Samsung LED in the living room."
          },
          "applyWhenHasBooking": {
            "type": "boolean"
          },
          "applyWhenNoBooking": {
            "type": "boolean"
          },
          "isAbstract": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "user",
              "guest",
              "contact",
              "review"
            ]
          },
          "language": {
            "description": "Language of the saved reply.",
            "type": "string",
            "enum": [
              "en",
              "fr",
              "es",
              "it",
              "ru",
              "ja",
              "zh"
            ],
            "example": "en"
          },
          "excludeListingIds": {
            "description": "Exclude saved reply from the specific listings",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Unique Id",
              "example": "563e0b6a08a2710e00057b82"
            }
          },
          "listingsIds": {
            "description": "Apply saved reply for the specific listings",
            "type": "array",
            "items": {
              "type": "string",
              "description": "Unique Id",
              "example": "563e0b6a08a2710e00057b82"
            }
          },
          "folder": {
            "type": "string",
            "example": "City"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "description": "Apply saved reply to listings which match the filters",
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Unique Id",
                "example": "563e0b6a08a2710e00057b82"
              },
              "field": {
                "type": "string",
                "description": "Subject of the filter, e.g. listing.address.city"
              },
              "operator": {
                "type": "string",
                "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
              },
              "value": {
                "type": "array",
                "description": "Values to filter by.",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "SavedReplyResponse": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "question": {
                "type": "string",
                "example": "TV"
              },
              "answer": {
                "type": "string",
                "example": "Hi {{user}},\n\nWe have a 42\" Samsung LED in the living room."
              },
              "applyWhenHasBooking": {
                "type": "boolean"
              },
              "applyWhenNoBooking": {
                "type": "boolean"
              },
              "isAbstract": {
                "type": "boolean"
              },
              "type": {
                "type": "string",
                "enum": [
                  "user",
                  "guest",
                  "contact",
                  "review"
                ]
              },
              "language": {
                "description": "Language of the saved reply.",
                "type": "string",
                "enum": [
                  "en",
                  "fr",
                  "es",
                  "it",
                  "ru",
                  "ja",
                  "zh"
                ],
                "example": "en"
              },
              "excludeListingIds": {
                "description": "Exclude saved reply from the specific listings",
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                }
              },
              "listingsIds": {
                "description": "Apply saved reply for the specific listings",
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Unique Id",
                  "example": "563e0b6a08a2710e00057b82"
                }
              },
              "folder": {
                "type": "string",
                "example": "City"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "filters": {
                "description": "Apply saved reply to listings which match the filters",
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Unique Id",
                    "example": "563e0b6a08a2710e00057b82"
                  },
                  "field": {
                    "type": "string",
                    "description": "Subject of the filter, e.g. listing.address.city"
                  },
                  "operator": {
                    "type": "string",
                    "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                  },
                  "value": {
                    "type": "array",
                    "description": "Values to filter by.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "accountId": {
                "type": "string",
                "description": "Unique Id",
                "example": "563e0b6a08a2710e00057b82"
              },
              "_id": {
                "type": "string",
                "description": "Unique Id",
                "example": "563e0b6a08a2710e00057b82"
              }
            }
          }
        ]
      },
      "UpdateIntegration": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique Id",
            "example": "5958c7e5884e961000817799"
          },
          "airbnb2": {
            "type": "object",
            "properties": {
              "credentials": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": "integer"
                  },
                  "accessToken": {
                    "type": "string"
                  },
                  "refreshToken": {
                    "type": "string"
                  },
                  "lastForceRefresh": {
                    "type": "string",
                    "description": "date"
                  }
                }
              },
              "forwardEmails": {
                "type": "object",
                "properties": {
                  "all": {
                    "type": "boolean",
                    "default": true
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Only if platform is airbnb",
            "example": {
              "ignored": {
                "reservations": [],
                "listings": []
              },
              "emailsFromSupport": []
            }
          },
          "forwardEmails": {
            "type": "object",
            "properties": {
              "all": {
                "type": "boolean",
                "default": true
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "active": {
            "type": "boolean",
            "description": "Status of connection"
          },
          "platform": {
            "type": "string",
            "example": "airbnb2",
            "description": "Platform information"
          },
          "listings": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Listing details"
            }
          },
          "complexes": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Complex details"
            }
          },
          "nickname": {
            "type": "string",
            "example": "naama",
            "description": "Integration nickname"
          },
          "channelId": {
            "type": "string",
            "example": "airbnb2",
            "description": "Channel Id"
          },
          "proxyEmail": {
            "type": "string",
            "example": "test@user.guesty.com"
          },
          "incomingEmail": {
            "type": "string",
            "example": "test@user.guesty.com"
          },
          "externalAccountId": {
            "type": "string",
            "example": "123456789"
          },
          "id": {
            "type": "integer",
            "example": "naama@user.guesty.com",
            "description": "External ID"
          },
          "companyName": {
            "type": "string",
            "description": "Company name",
            "example": "Test company"
          },
          "fetchRequests": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "fetchAllListings": {
                  "type": "boolean"
                },
                "externalListingIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "NOT_STARTED",
                    "IN_PROGRESS",
                    "COMPLETED",
                    "FAILED",
                    "TIMEOUT"
                  ]
                },
                "createTime": {
                  "type": "string",
                  "description": "Date"
                },
                "updateTime": {
                  "type": "string",
                  "description": "Date"
                },
                "finishedTime": {
                  "type": "string",
                  "description": "Date"
                }
              }
            }
          },
          "status": {
            "type": "string",
            "description": "Status of integration",
            "enum": [
              "NOT_CONNECTED",
              "CONNECTING",
              "CONNECTED",
              "FAILED",
              "TIMEOUT",
              "DISCONNECTED",
              "PENDING"
            ]
          },
          "migration": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "IN_PROGRESS",
                  "COMPLETED",
                  "FAILED"
                ]
              },
              "createTime": {
                "type": "string",
                "description": "Date"
              },
              "updateTime": {
                "type": "string",
                "description": "Date"
              },
              "finishedTime": {
                "type": "string",
                "description": "Date"
              },
              "steps": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Step details"
                }
              },
              "discrepancyStepExecuted": {
                "type": "boolean",
                "default": false
              },
              "discrepancyResolution": {
                "type": "string",
                "enum": [
                  "GUESTY",
                  "AIRBNB"
                ]
              },
              "listingQuantityDiscrepancyStepExecuted": {
                "type": "boolean",
                "default": false
              },
              "error": {
                "type": "object",
                "properties": {
                  "at": {
                    "type": "string",
                    "description": "Date"
                  },
                  "code": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "raw": {
                    "type": "object"
                  }
                }
              },
              "notes": {
                "type": "string"
              },
              "isRollingBack": {
                "type": "boolean",
                "default": false
              }
            }
          },
          "userId": {
            "type": "string",
            "example": "563e0b6a08a2710e00057b85"
          },
          "accountId": {
            "type": "string",
            "description": "Owner",
            "example": "563e0b6a08a2710e00057b82"
          },
          "tripAdvisor": {
            "type": "object",
            "description": "TripAdvisor details"
          },
          "homeaway2": {
            "type": "object",
            "description": "Homeaway details"
          },
          "bookingCom": {
            "type": "object",
            "properties": {
              "legalEntityId": {
                "type": "string"
              }
            },
            "description": "BookingCom details"
          },
          "missingStep": {
            "type": "string",
            "example": "add_account_settings",
            "description": "Missing integration step"
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "COMPLETED",
                    "IN_PROGRESS"
                  ]
                }
              }
            }
          },
          "newIntegrationBackup": {
            "type": "object"
          },
          "threadIdsMigrated": {
            "type": "boolean",
            "example": "false"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Flag to delete integration"
          }
        }
      },
      "internalServerError": {
        "type": "string",
        "example": "Internal Server Error"
      },
      "ReservationsEmail": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "description": "Address of recipient"
          }
        },
        "required": [
          "to"
        ],
        "example": {
          "to": "koby@guesty.com"
        }
      },
      "Forbidden": {
        "type": "string",
        "example": "Forbidden"
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "error"
        ],
        "example": {
          "error": {
            "code": "UNAUTHORIZED",
            "message": "Unauthorized"
          }
        }
      },
      "ReservationCancellationRequest": {
        "type": "object",
        "properties": {
          "cancellationData": {
            "type": "object",
            "properties": {
              "reason": {
                "type": "string",
                "enum": [
                  "DECLINE_REASON_HOST_DOUBLE",
                  "DECLINE_REASON_HOST_CHANGE",
                  "DECLINE_REASON_HOST_UNAUTHORIZED_PARTY",
                  "DECLINE_REASON_HOST_BEHAVIOR",
                  "DECLINE_REASON_HOST_OTHER",
                  "DECLINE_REASON_HOST_ASKED",
                  "DECLINE_REASON_COVID19_HOST",
                  "DECLINE_REASON_HOST_BAD_FIT",
                  "DECLINE_REASON_HOST_BAD_REVIEWS_SPARSE_PROFILE"
                ],
                "example": "DECLINE_REASON_HOST_DOUBLE"
              },
              "subReason": {
                "type": "string",
                "example": "DECLINE_REASON_HOST_HOST_UNAVAILABLE",
                "enum": [
                  "DECLINE_REASON_HOST_EMERGENCY",
                  "DECLINE_REASON_HOST_HOST_UNAVAILABLE",
                  "DECLINE_REASON_HOST_DOUBLE_BOOKED",
                  "DECLINE_REASON_HOST_RESERVATION_LENGTH",
                  "DECLINE_REASON_HOST_DIFFERENT_PRICE",
                  "DECLINE_REASON_HOST_UNAUTHORIZED_PARTY",
                  "DECLINE_REASON_HOST_PARTY_REVIEWS",
                  "DECLINE_REASON_HOST_PARTY_INDICATION",
                  "DECLINE_REASON_HOST_BEHAVIOR_REVIEWS",
                  "DECLINE_REASON_HOST_BEHAVIOR_INDICATION",
                  "DECLINE_REASON_HOST_BEHAVIOR_OTHER",
                  "DECLINE_REASON_HOST_GUEST_PROFILE"
                ]
              },
              "messageToAirbnb": {
                "type": "string"
              },
              "messageToGuest": {
                "type": "string"
              }
            }
          }
        }
      },
      "ReservationCancellationResponse": {
        "type": "object",
        "properties": {
          "details": {
            "type": "object",
            "properties": {
              "reason": {
                "type": "string",
                "example": "DECLINE_REASON_HOST_DOUBLE"
              },
              "subReason": {
                "type": "string",
                "example": "DECLINE_REASON_HOST_HOST_UNAVAILABLE"
              },
              "messageToAirbnb": {
                "type": "string"
              },
              "messageToGuest": {
                "type": "string"
              }
            }
          },
          "isSuccessful": {
            "type": "boolean",
            "example": true
          },
          "cancelledAt": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "ReservationCancellationErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Reservation cancellation error message"
              },
              "cause": {
                "type": "string",
                "description": "Reservation cancellation sub error message"
              },
              "meta": {
                "type": "object",
                "description": "Error metadata",
                "properties": {}
              }
            }
          },
          "isSuccessful": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "OwnerDocument": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "originalFileName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "enum": [
              "DOCUMENT",
              "CONTRACT"
            ],
            "type": "string",
            "example": "DOCUMENT"
          },
          "isShared": {
            "type": "boolean",
            "description": "Document is visible to owner in Owners Portal"
          },
          "startDate": {
            "type": "string",
            "description": "Document effective date in YYYY-MM-DD format"
          },
          "endDate": {
            "type": "string",
            "description": "Document expiration date in YYYY-MM-DD format"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "accountId",
          "ownerId",
          "originalFileName",
          "name",
          "type",
          "isShared",
          "createdAt"
        ]
      },
      "OwnerDocuments": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "number",
            "description": "Pagination start index"
          },
          "limit": {
            "type": "number",
            "description": "Pagination limit per page"
          },
          "count": {
            "type": "number",
            "description": "Pagination results count after filtering"
          },
          "totalCount": {
            "type": "number",
            "description": "Pagination results count without filtering"
          },
          "sort": {
            "type": "string",
            "description": "Pagination sort field"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "accountId": {
                  "type": "string"
                },
                "ownerId": {
                  "type": "string"
                },
                "originalFileName": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "type": {
                  "enum": [
                    "DOCUMENT",
                    "CONTRACT"
                  ],
                  "type": "string",
                  "example": "DOCUMENT"
                },
                "isShared": {
                  "type": "boolean",
                  "description": "Document is visible to owner in Owners Portal"
                },
                "startDate": {
                  "type": "string",
                  "description": "Document effective date in YYYY-MM-DD format"
                },
                "endDate": {
                  "type": "string",
                  "description": "Document expiration date in YYYY-MM-DD format"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "deletedAt": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "_id",
                "accountId",
                "ownerId",
                "originalFileName",
                "name",
                "type",
                "isShared",
                "createdAt"
              ]
            }
          }
        },
        "required": [
          "skip",
          "limit",
          "count",
          "totalCount",
          "sort",
          "results"
        ]
      },
      "CreateOwnerDocument": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "Document in pdf format, maximum size 5 MB",
            "format": "binary"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "default": "DOCUMENT",
            "description": "Type of the document, defaults to DOCUMENT",
            "enum": [
              "DOCUMENT",
              "CONTRACT"
            ]
          },
          "isShared": {
            "type": "boolean"
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "Date in YYYY-MM-DD format"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "Date in YYYY-MM-DD format"
          }
        },
        "required": [
          "file",
          "name"
        ]
      },
      "UpdateOwnerDocument": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "DOCUMENT",
              "CONTRACT"
            ]
          },
          "isShared": {
            "type": "boolean"
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "Date in YYYY-MM-DD format"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "Date in YYYY-MM-DD format"
          }
        }
      },
      "LedgerDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "balance": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "balance"
        ]
      },
      "FolioBalanceResponseDto": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "balance": {
            "type": "number"
          },
          "ledgers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "balance": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "balance"
              ]
            }
          }
        },
        "required": [
          "currency",
          "balance",
          "ledgers"
        ]
      },
      "ForbiddenErrorBodyDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Missing account_id error message"
          },
          "status": {
            "type": "number",
            "example": 403
          }
        },
        "required": [
          "message",
          "status"
        ]
      },
      "ForbiddenRequestDto": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Missing account_id error message"
              },
              "status": {
                "type": "number",
                "example": 403
              }
            },
            "required": [
              "message",
              "status"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "NotFoundErrorBodyDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Can't find reservation with ID {reservation_id}"
          },
          "status": {
            "type": "number",
            "example": 404
          }
        },
        "required": [
          "message",
          "status"
        ]
      },
      "NotFoundResponseDto": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Can't find reservation with ID {reservation_id}"
              },
              "status": {
                "type": "number",
                "example": 404
              }
            },
            "required": [
              "message",
              "status"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "InternalServerErrorBodyDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Something went wrong"
          },
          "status": {
            "type": "number",
            "example": 500
          }
        },
        "required": [
          "message",
          "status"
        ]
      },
      "InternalServerErrorDto": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Something went wrong"
              },
              "status": {
                "type": "number",
                "example": 500
              }
            },
            "required": [
              "message",
              "status"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "AmountDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          }
        },
        "required": [
          "value",
          "currency"
        ]
      },
      "UrlMetaDto": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        },
        "required": [
          "href",
          "title",
          "target"
        ]
      },
      "Attachment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "url": {
            "type": "string"
          },
          "urlThumbnail": {
            "type": "string"
          },
          "uploadedBy": {
            "type": "string"
          },
          "uploadedAt": {
            "type": "number"
          },
          "originalFilename": {
            "type": "string"
          },
          "originalExtension": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "url",
          "urlThumbnail",
          "uploadedBy",
          "uploadedAt",
          "originalFilename",
          "originalExtension"
        ]
      },
      "Data": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 149304
          },
          "transactionId": {
            "type": "number",
            "example": 74691
          },
          "date": {
            "type": "string",
            "example": "2022-07-13"
          },
          "description": {
            "type": "string",
            "example": "Payment - CASH"
          },
          "ledger": {
            "type": "string",
            "example": "Advanced deposit"
          },
          "guest": {
            "example": {
              "id": "62ce5bd737f7d900320e4a47",
              "name": "Guest Xxx"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            ]
          },
          "vendor": {
            "example": {
              "id": "62ce5bd737f7d900320e4a47",
              "name": "Vendor Xxx"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            ]
          },
          "owner": {
            "example": {
              "id": "62ce5bd737f7d900320e4a47",
              "name": "Owner Xxx"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            ]
          },
          "amount": {
            "example": {
              "value": -95,
              "currency": "USD"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  }
                },
                "required": [
                  "value",
                  "currency"
                ]
              }
            ]
          },
          "name": {
            "type": "string",
            "example": "Payment - CASH"
          },
          "listing": {
            "example": {
              "href": "/listings/6259630d9e23bc0034c86238",
              "title": "Dmytro's fancy house",
              "target": "_blank"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "target": {
                    "type": "string"
                  }
                },
                "required": [
                  "href",
                  "title",
                  "target"
                ]
              }
            ]
          },
          "chargeType": {
            "type": "string",
            "example": "Payment Recording"
          },
          "reservationConfirmationCode": {
            "example": {
              "href": "/reservations/62ce5bdb37f7d900320e4a69/summary",
              "title": "Y7MB8NGmA",
              "target": "_blank"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "target": {
                    "type": "string"
                  }
                },
                "required": [
                  "href",
                  "title",
                  "target"
                ]
              }
            ]
          },
          "paymentConfirmationCode": {
            "type": "string",
            "example": "SAS432"
          },
          "chargeCode": {
            "type": "string",
            "example": "PR"
          },
          "trigger": {
            "type": "string",
            "example": "Payment"
          },
          "attachments": {
            "example": {
              "id": 392,
              "url": "https://res.cloudinary.com/guesty/image/upload/v1664382837/folder/5213a2d206112710005d96ff/accounting/axcrdnwz7ermpaox1eun.pdf",
              "urlThumbnail": "https://res.cloudinary.com/guesty/image/upload/h_300/v1664382837/folder/5213a2d206112710005d96ff/accounting/axcrdnwz7ermpaox1eun.jpg",
              "uploadedBy": "5d64dbdbfc4aae0021bffc1c",
              "uploadedAt": 1664382837000,
              "originalFilename": "simple",
              "originalExtension": "pdf"
            },
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "urlThumbnail": {
                  "type": "string"
                },
                "uploadedBy": {
                  "type": "string"
                },
                "uploadedAt": {
                  "type": "number"
                },
                "originalFilename": {
                  "type": "string"
                },
                "originalExtension": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "url",
                "urlThumbnail",
                "uploadedBy",
                "uploadedAt",
                "originalFilename",
                "originalExtension"
              ]
            }
          }
        },
        "required": [
          "id",
          "transactionId",
          "date",
          "description",
          "ledger",
          "guest",
          "vendor",
          "owner",
          "amount",
          "name",
          "listing",
          "chargeType",
          "reservationConfirmationCode",
          "paymentConfirmationCode",
          "chargeCode",
          "trigger",
          "attachments"
        ]
      },
      "JournalEntriesListResponseDto": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "number",
            "example": 0
          },
          "limit": {
            "type": "number",
            "example": 25
          },
          "current": {
            "type": "number",
            "example": 25
          },
          "total": {
            "type": "number",
            "example": 478
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 149304
                },
                "transactionId": {
                  "type": "number",
                  "example": 74691
                },
                "date": {
                  "type": "string",
                  "example": "2022-07-13"
                },
                "description": {
                  "type": "string",
                  "example": "Payment - CASH"
                },
                "ledger": {
                  "type": "string",
                  "example": "Advanced deposit"
                },
                "guest": {
                  "example": {
                    "id": "62ce5bd737f7d900320e4a47",
                    "name": "Guest Xxx"
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  ]
                },
                "vendor": {
                  "example": {
                    "id": "62ce5bd737f7d900320e4a47",
                    "name": "Vendor Xxx"
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  ]
                },
                "owner": {
                  "example": {
                    "id": "62ce5bd737f7d900320e4a47",
                    "name": "Owner Xxx"
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  ]
                },
                "amount": {
                  "example": {
                    "value": -95,
                    "currency": "USD"
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "value",
                        "currency"
                      ]
                    }
                  ]
                },
                "name": {
                  "type": "string",
                  "example": "Payment - CASH"
                },
                "listing": {
                  "example": {
                    "href": "/listings/6259630d9e23bc0034c86238",
                    "title": "Dmytro's fancy house",
                    "target": "_blank"
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "target": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href",
                        "title",
                        "target"
                      ]
                    }
                  ]
                },
                "chargeType": {
                  "type": "string",
                  "example": "Payment Recording"
                },
                "reservationConfirmationCode": {
                  "example": {
                    "href": "/reservations/62ce5bdb37f7d900320e4a69/summary",
                    "title": "Y7MB8NGmA",
                    "target": "_blank"
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "target": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "href",
                        "title",
                        "target"
                      ]
                    }
                  ]
                },
                "paymentConfirmationCode": {
                  "type": "string",
                  "example": "SAS432"
                },
                "chargeCode": {
                  "type": "string",
                  "example": "PR"
                },
                "trigger": {
                  "type": "string",
                  "example": "Payment"
                },
                "attachments": {
                  "example": {
                    "id": 392,
                    "url": "https://res.cloudinary.com/guesty/image/upload/v1664382837/folder/5213a2d206112710005d96ff/accounting/axcrdnwz7ermpaox1eun.pdf",
                    "urlThumbnail": "https://res.cloudinary.com/guesty/image/upload/h_300/v1664382837/folder/5213a2d206112710005d96ff/accounting/axcrdnwz7ermpaox1eun.jpg",
                    "uploadedBy": "5d64dbdbfc4aae0021bffc1c",
                    "uploadedAt": 1664382837000,
                    "originalFilename": "simple",
                    "originalExtension": "pdf"
                  },
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "url": {
                        "type": "string"
                      },
                      "urlThumbnail": {
                        "type": "string"
                      },
                      "uploadedBy": {
                        "type": "string"
                      },
                      "uploadedAt": {
                        "type": "number"
                      },
                      "originalFilename": {
                        "type": "string"
                      },
                      "originalExtension": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "url",
                      "urlThumbnail",
                      "uploadedBy",
                      "uploadedAt",
                      "originalFilename",
                      "originalExtension"
                    ]
                  }
                }
              },
              "required": [
                "id",
                "transactionId",
                "date",
                "description",
                "ledger",
                "guest",
                "vendor",
                "owner",
                "amount",
                "name",
                "listing",
                "chargeType",
                "reservationConfirmationCode",
                "paymentConfirmationCode",
                "chargeCode",
                "trigger",
                "attachments"
              ]
            }
          }
        },
        "required": [
          "skip",
          "limit",
          "current",
          "total",
          "data"
        ]
      },
      "PayloadValidationErrorBodyDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Bad Request"
          },
          "code": {
            "type": "string",
            "example": "VALIDATION_FAILED"
          },
          "status": {
            "type": "number",
            "example": 400
          },
          "data": {
            "example": [
              "title must be longer than or equal to 3 characters",
              "entries.0.amount should not be empty",
              "entries.0.destination.type must be a valid enum value"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "message",
          "code",
          "status",
          "data"
        ]
      },
      "PayloadValidationErrorDto": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Bad Request"
              },
              "code": {
                "type": "string",
                "example": "VALIDATION_FAILED"
              },
              "status": {
                "type": "number",
                "example": 400
              },
              "data": {
                "example": [
                  "title must be longer than or equal to 3 characters",
                  "entries.0.amount should not be empty",
                  "entries.0.destination.type must be a valid enum value"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "message",
              "code",
              "status",
              "data"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "OwnerResponseDto": {
        "type": "object",
        "properties": {
          "workingCapital": {
            "type": "number",
            "description": "Current owner's working capital amount",
            "example": 10
          }
        }
      },
      "OwnerDto": {
        "type": "object",
        "properties": {
          "workingCapital": {
            "type": "number",
            "description": "New working capital amount"
          }
        }
      },
      "BadRequestErrorBodyDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Bad Request"
          },
          "code": {
            "type": "string",
            "example": "VALIDATION_FAILED"
          },
          "status": {
            "type": "number",
            "example": 400
          },
          "data": {
            "example": [
              "each value in listingIds must be a string",
              "listingIds must be an array",
              "listingIds should not be empty"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "message",
          "code",
          "status",
          "data"
        ]
      },
      "BadRequestResponseDto": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Bad Request"
              },
              "code": {
                "type": "string",
                "example": "VALIDATION_FAILED"
              },
              "status": {
                "type": "number",
                "example": 400
              },
              "data": {
                "example": [
                  "each value in listingIds must be a string",
                  "listingIds must be an array",
                  "listingIds should not be empty"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "message",
              "code",
              "status",
              "data"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "ObjectId1": {
        "type": "string",
        "example": "5d6e7a7ebf8e3800207735ae"
      },
      "listingObjectId": {
        "type": "string",
        "example": "5d6e7a7ebf8e3800207735ad"
      },
      "reservationObjectId": {
        "type": "string",
        "example": "5d6e7a7ebf8e3800207735ad"
      },
      "reservation": {
        "type": "object",
        "example": "5d6e7a7ebf8e3800207735ad"
      },
      "block": {
        "type": "string",
        "example": "5d6e7a7ebf8e3800207735ad"
      },
      "ok": {
        "type": "string",
        "example": "ok"
      },
      "listingNotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "requestId": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "code",
          "data",
          "requestId"
        ],
        "example": {
          "message": "Listing not found",
          "code": "LISTING_NOT_FOUND",
          "data": {
            "listingId": "62e7c7a38200fa0031fc9e2e"
          },
          "requestId": "Root=1-63b68e3a-573cc83364fce31b0fd45abc"
        }
      },
      "validationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "code",
          "requestId"
        ],
        "example": {
          "message": "child \"endDate\" fails because [\"endDate\" is required]",
          "code": "ValidationError",
          "details": [
            {
              "message": "\"endDate\" is required",
              "path": [
                "endDate"
              ],
              "type": "any.required",
              "context": {
                "key": "endDate",
                "label": "endDate"
              }
            }
          ],
          "requestId": "Root=1-63b69790-624dc23b6c3abdaf7a0ce73d"
        }
      },
      "internalServerError1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "example": {
          "message": "Internal Server Error"
        }
      },
      "calendarObject": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date with format YYYY-MM-DD"
          },
          "listingId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ad"
          },
          "currency": {
            "type": "string",
            "description": "Listing's currency value."
          },
          "price": {
            "type": "number",
            "description": "Price in the listing's currency."
          },
          "isBasePrice": {
            "type": "boolean",
            "description": "Flag which shows whether listing is set to base price."
          },
          "minNights": {
            "type": "number",
            "description": "Min nights value."
          },
          "isBaseMinNights": {
            "type": "boolean",
            "description": "Flag which shows whether listing is set to base min night."
          },
          "status": {
            "type": "string",
            "description": "Status value, enum: available, unavailable, booked, reserved."
          },
          "allotment": {
            "type": "number",
            "description": "Allotment value for parent listing."
          },
          "blocks": {
            "type": "object"
          },
          "blockRefs": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "5d6e7a7ebf8e3800207735ad"
            }
          },
          "reservationId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ad"
          },
          "reservation": {
            "type": "object",
            "example": "5d6e7a7ebf8e3800207735ad"
          },
          "cta": {
            "type": "boolean",
            "description": "Closed To Arrival value"
          },
          "ctd": {
            "type": "boolean",
            "description": "Closed To Departure value"
          }
        },
        "example": {
          "date": "2021-01-01",
          "listingId": "5988346d3c31bf0f00747eb6",
          "currency": "EUR",
          "price": 50,
          "isBasePrice": true,
          "minNights": 2,
          "isBaseMinNights": true,
          "status": "booked",
          "allotment": 0,
          "blocks": {
            "m": false,
            "r": false,
            "b": true,
            "bd": false,
            "sr": false,
            "abl": false,
            "a": false,
            "bw": false,
            "o": false,
            "pt": false
          },
          "blockRefs": [
            {
              "_id": "5fe9c819a141ab0026c901c7",
              "reservation": {
                "listing": {
                  "timezone": "Asia/Jerusalem",
                  "defaultCheckInTime": "15:00"
                },
                "money": {
                  "currency": "EUR",
                  "hostPayout": 367.55,
                  "totalPaid": 0,
                  "balanceDue": 367.55
                },
                "guest": {
                  "_id": "5fe9c81834209c002c8ecd80"
                },
                "integration": {
                  "platform": "manual"
                },
                "_id": "5fe9c81934209c002c8ecd8b",
                "status": "confirmed",
                "checkIn": "2020-12-30T13:00:00.000Z",
                "checkOut": "2021-01-02T08:00:00.000Z",
                "nightsCount": 3,
                "guestsCount": 2,
                "listingId": "5988346d3c31bf0f00747eb6",
                "checkInDateLocalized": "2020-12-30",
                "checkOutDateLocalized": "2021-01-02",
                "accountId": "596f6fe706112710005d96ff",
                "guestId": "5fe9c81834209c002c8ecd80",
                "source": "Manual",
                "confirmationCode": "J86mAAAM2"
              },
              "listingId": "5988346d3c31bf0f00747eb6",
              "startDate": "2020-12-30T00:00:00.000Z",
              "endDate": "2021-01-01T00:00:00.000Z",
              "type": "b",
              "reservationId": "5fe9c81934209c002c8ecd8b"
            }
          ],
          "reservationId": "5fe9c81934209c002c8ecd8b",
          "reservation": {
            "listing": {
              "timezone": "Asia/Jerusalem",
              "defaultCheckInTime": "15:00"
            },
            "money": {
              "currency": "EUR",
              "hostPayout": 367.55,
              "totalPaid": 0,
              "balanceDue": 367.55
            },
            "guest": {
              "_id": "5fe9c81834209c002c8ecd80"
            },
            "integration": {
              "platform": "manual"
            },
            "_id": "5fe9c81934209c002c8ecd8b",
            "status": "confirmed",
            "checkIn": "2020-12-30T13:00:00.000Z",
            "checkOut": "2021-01-02T08:00:00.000Z",
            "nightsCount": 3,
            "guestsCount": 2,
            "listingId": "5988346d3c31bf0f00747eb6",
            "checkInDateLocalized": "2020-12-30",
            "checkOutDateLocalized": "2021-01-02",
            "accountId": "596f6fe706112710005d96ff",
            "guestId": "5fe9c81834209c002c8ecd80",
            "source": "Manual",
            "confirmationCode": "J86mAAAM2"
          },
          "cta": false,
          "ctd": false
        }
      },
      "updateCalendarBody": {
        "type": "object",
        "required": [
          "startDate",
          "endDate"
        ],
        "properties": {
          "startDate": {
            "description": "First day affected by changes (format: YYYY-MM-DD)",
            "type": "string",
            "format": "YYYY-MM-DD",
            "example": "2023-01-01"
          },
          "endDate": {
            "description": "Last date affected by changes (format: YYYY-MM-DD)",
            "type": "string",
            "format": "YYYY-MM-DD",
            "example": "2023-02-01"
          },
          "status": {
            "description": "New status, enum: available, unavailable.",
            "type": "string",
            "enum": [
              "available",
              "unavailable"
            ],
            "example": "available"
          },
          "price": {
            "description": "New price, in the listing's currency.",
            "type": "number",
            "example": "100"
          },
          "isBasePrice": {
            "description": "Whether to reset prices for the range to the listing's base price",
            "type": "boolean",
            "example": "false"
          },
          "minNights": {
            "description": "New min nights value",
            "type": "integer",
            "example": "3"
          },
          "isBaseMinNights": {
            "description": "Whether to reset min nights for the range to the listing's base min nights",
            "type": "boolean",
            "example": "false"
          },
          "note": {
            "description": "Note to add to those dates.",
            "type": "string",
            "example": "this is a note"
          },
          "cta": {
            "description": "Set Closed To Arrival for the date range.",
            "type": "boolean",
            "example": "false"
          },
          "ctd": {
            "description": "Set Closed To Departure for the date range.",
            "type": "boolean",
            "example": "false"
          },
          "useChildValues": {
            "description": "Accept changes to minNights on sub-unit",
            "type": "boolean",
            "example": "false"
          }
        }
      },
      "updateMultiCalendarBody": {
        "type": "object",
        "required": [
          "listingId",
          "startDate",
          "endDate"
        ],
        "properties": {
          "listingId": {
            "description": "The listing id to update",
            "type": "string",
            "example": "5fa02fa358d2db673e17bc2d"
          },
          "startDate": {
            "description": "First day affected by changes (format: YYYY-MM-DD)",
            "type": "string",
            "format": "YYYY-MM-DD",
            "example": "2023-01-01"
          },
          "endDate": {
            "description": "Last date affected by changes (format: YYYY-MM-DD)",
            "type": "string",
            "format": "YYYY-MM-DD",
            "example": "2023-01-01"
          },
          "status": {
            "description": "New status, enum: available, unavailable.",
            "type": "string",
            "enum": [
              "available",
              "unavailable"
            ],
            "example": "available"
          },
          "price": {
            "description": "New price, in the listing's currency.",
            "type": "number",
            "example": "100"
          },
          "isBasePrice": {
            "description": "Whether to reset prices for the range to the listing's base price",
            "type": "boolean",
            "example": "false"
          },
          "minNights": {
            "description": "New min nights value",
            "type": "integer",
            "example": "3"
          },
          "isBaseMinNights": {
            "description": "Whether to reset min nights for the range to the listing's base min nights",
            "type": "boolean",
            "example": "false"
          },
          "note": {
            "description": "Note to add to those dates.",
            "type": "string",
            "example": "this is a note"
          },
          "cta": {
            "description": "Set Closed To Arrival for the date range.",
            "type": "boolean",
            "example": "false"
          },
          "ctd": {
            "description": "Set Closed To Departure for the date range.",
            "type": "boolean",
            "example": "false"
          }
        }
      },
      "AssignmentsDto": {
        "type": "object",
        "properties": {
          "fromDate": {
            "type": "string",
            "description": "Optional, date that the Business Model will reprocess reservations from. Not filling this field will update the Business Model from now on without reprocess",
            "example": "2022-10-20"
          },
          "listingIds": {
            "description": "List of listingIds that should be assigned exactly to 1 owner",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "listingIds"
        ]
      },
      "AssignListingDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "NotFoundErrorBodyDto1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Can't find business-model with ID {business_model_id}"
          },
          "status": {
            "type": "number",
            "example": 404
          }
        },
        "required": [
          "message",
          "status"
        ]
      },
      "NotFoundResponseDto1": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Can't find business-model with ID {business_model_id}"
              },
              "status": {
                "type": "number",
                "example": 404
              }
            },
            "required": [
              "message",
              "status"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "BusinessModelsLightDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "listingsCount": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "modifier": {
            "type": "string"
          },
          "activationDate": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "listingsCount",
          "name",
          "modifier",
          "activationDate",
          "createdAt"
        ]
      },
      "BusinessModelsLightResponseDto": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          },
          "count": {
            "type": "number"
          },
          "list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "listingsCount": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "modifier": {
                  "type": "string"
                },
                "activationDate": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type",
                "listingsCount",
                "name",
                "modifier",
                "activationDate",
                "createdAt"
              ]
            }
          }
        },
        "required": [
          "skip",
          "limit",
          "count",
          "list"
        ]
      },
      "VendorRevenueShareDto": {
        "type": "object",
        "properties": {
          "shareSplit": {
            "type": "number",
            "description": "A share split is a floating point number that represents the percentage. For example, \n      - `0.5` means that the share is 50% between PMC and Vendor\n      - `0.1` means that the share is 10% Vendor and 90% PMC\n      - `0` means that the revenue goes 100% PMC",
            "example": 0.5
          },
          "vendorId": {
            "type": "string",
            "description": "You can get your vendor ID [here](/reference/vendorscontroller_getall)",
            "example": "96ac7041-0615-496f-8c54-e8c1fa668cc0"
          }
        },
        "required": [
          "shareSplit",
          "vendorId"
        ]
      },
      "VatOcConfigDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "VAT name",
            "example": "VAT"
          },
          "description": {
            "type": "string",
            "description": "VAT description",
            "example": "VAT"
          },
          "percent": {
            "type": "number",
            "description": "VAT percentage. Example: 0.01 is 1%",
            "example": 0.01
          }
        },
        "required": [
          "name",
          "description",
          "percent"
        ]
      },
      "ChargeAttachmentDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to CDN where attachment is stored. Max length is 2048 characters",
            "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
          },
          "urlThumbnail": {
            "type": "string",
            "description": "URL to CDN where attachment thumbnail is stored. Max length is 2048 characters",
            "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
          },
          "extension": {
            "type": "string",
            "description": "Attachment file extension. Max length is 10 characters",
            "example": "png"
          },
          "fileName": {
            "type": "string",
            "description": "Attachment file name. Max length is 256 characters",
            "example": "Invoice copy"
          }
        },
        "required": [
          "url",
          "urlThumbnail",
          "extension",
          "fileName"
        ]
      },
      "CreateOwnerChargeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Charge name",
            "example": "Furniture repairment"
          },
          "category": {
            "type": "string",
            "description": "Charge category",
            "enum": [
              "advertising",
              "cleaning",
              "electricity",
              "furniture_appliances",
              "gas",
              "internet",
              "lock_automation",
              "management",
              "mortgage",
              "pest_control",
              "pool_cleaning",
              "property_taxes",
              "repairs_maintenance",
              "supplies_purchases",
              "other_misc",
              "taxes_paid",
              "telephone",
              "television",
              "trash",
              "water_septic",
              "guest_cleaning",
              "owner_cleaning",
              "channel_commission",
              "payment_charge",
              "pet_fee",
              "startup_fee",
              "fotoshoot",
              "vat",
              "insurance",
              "monitoring_surveillance",
              "garden_maintenance",
              "jacuzzi_maintenance",
              "sauna_maintenance",
              "photoshoot",
              "bank_fees",
              "sta_licensing",
              "security",
              "laundry",
              "gardening",
              "guest_compensation",
              "home_improvement",
              "other_expenses",
              "other_income",
              "other_services_ops_assistants",
              "painting",
              "plumbing",
              "refund",
              "refund_security_deposit",
              "rubbish_removal_service",
              "set_up_fee",
              "strata_rates",
              "security_deposit"
            ]
          },
          "description": {
            "type": "string",
            "description": "Charge description. Max length is 256 characters",
            "example": "Furniture repair"
          },
          "amount": {
            "type": "number",
            "description": "Charge amount, account currency will be used",
            "example": 100
          },
          "recognitionDate": {
            "type": "string",
            "description": "Charge recognition date. ISO 8601 Date format (year-month-day)",
            "example": "2023-10-27"
          },
          "ownerId": {
            "type": "string",
            "description": "You can get your owner ID [here](/reference/get_owners)",
            "example": "448f9f83-27ca-4484-81b6-946e2e1c5490"
          },
          "listingId": {
            "type": "string",
            "description": "You can get your listing ID [here](/reference/get_listings)",
            "example": "3b610a47-f0f9-4fd5-a8ba-818ad3e5f8a8"
          },
          "revenueShare": {
            "description": "If revenue share is not defined, the default split will be 100% attributed to the PMC",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "shareSplit": {
                    "type": "number",
                    "description": "A share split is a floating point number that represents the percentage. For example, \n      - `0.5` means that the share is 50% between PMC and Vendor\n      - `0.1` means that the share is 10% Vendor and 90% PMC\n      - `0` means that the revenue goes 100% PMC",
                    "example": 0.5
                  },
                  "vendorId": {
                    "type": "string",
                    "description": "You can get your vendor ID [here](/reference/vendorscontroller_getall)",
                    "example": "96ac7041-0615-496f-8c54-e8c1fa668cc0"
                  }
                },
                "required": [
                  "shareSplit",
                  "vendorId"
                ]
              }
            ]
          },
          "vatOCConfig": {
            "description": "Charge VAT configuration",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "VAT name",
                    "example": "VAT"
                  },
                  "description": {
                    "type": "string",
                    "description": "VAT description",
                    "example": "VAT"
                  },
                  "percent": {
                    "type": "number",
                    "description": "VAT percentage. Example: 0.01 is 1%",
                    "example": 0.01
                  }
                },
                "required": [
                  "name",
                  "description",
                  "percent"
                ]
              }
            ]
          },
          "attachments": {
            "description": "Add attachments to charge",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "URL to CDN where attachment is stored. Max length is 2048 characters",
                  "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                },
                "urlThumbnail": {
                  "type": "string",
                  "description": "URL to CDN where attachment thumbnail is stored. Max length is 2048 characters",
                  "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                },
                "extension": {
                  "type": "string",
                  "description": "Attachment file extension. Max length is 10 characters",
                  "example": "png"
                },
                "fileName": {
                  "type": "string",
                  "description": "Attachment file name. Max length is 256 characters",
                  "example": "Invoice copy"
                }
              },
              "required": [
                "url",
                "urlThumbnail",
                "extension",
                "fileName"
              ]
            }
          }
        },
        "required": [
          "name",
          "category",
          "description",
          "amount",
          "recognitionDate"
        ]
      },
      "OwnerExpenseShareDto": {
        "type": "object",
        "properties": {
          "shareSplit": {
            "type": "number",
            "description": "A share split is a floating point number that represents the percentage. For example, \n      - `0.5` means that the share is 50% between PMC and Owner.\n      - `0.1` means that the share is 10% Owner and 90% PMC.\n      - `0` means that the charge covered 100% by PMC.",
            "example": 0.5
          },
          "ownerId": {
            "type": "string",
            "description": "You can get your owner ID [here](/reference/get_owners)",
            "example": "7af22b68-c05e-4fa0-80be-43ebac0672c0"
          },
          "listingId": {
            "type": "string",
            "description": "You can get your listing ID [here](/reference/get_listings)",
            "example": "4ca95c56-f71c-4940-85cd-2aa56f61f052"
          }
        },
        "required": [
          "shareSplit",
          "ownerId"
        ]
      },
      "ExpenseAttachmentDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to CDN where attachment is stored. Max length is 2048 characters",
            "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
          },
          "urlThumbnail": {
            "type": "string",
            "description": "URL to CDN where attachment thumbnail is stored. Max length is 2048 characters",
            "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
          },
          "extension": {
            "type": "string",
            "description": "Attachment file extension. Max length is 10 characters",
            "example": "png"
          },
          "fileName": {
            "type": "string",
            "description": "Attachment file name. Max length is 256 characters",
            "example": "Invoice copy"
          }
        },
        "required": [
          "url",
          "urlThumbnail",
          "extension",
          "fileName"
        ]
      },
      "CreateExpenseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Expense name",
            "example": "Maintenance expense"
          },
          "category": {
            "type": "string",
            "description": "Expense category",
            "enum": [
              "advertising",
              "cleaning",
              "electricity",
              "furniture_appliances",
              "gas",
              "internet",
              "lock_automation",
              "management",
              "mortgage",
              "pest_control",
              "pool_cleaning",
              "property_taxes",
              "repairs_maintenance",
              "supplies_purchases",
              "other_misc",
              "taxes_paid",
              "telephone",
              "television",
              "trash",
              "water_septic",
              "guest_cleaning",
              "owner_cleaning",
              "channel_commission",
              "payment_charge",
              "pet_fee",
              "startup_fee",
              "fotoshoot",
              "vat",
              "insurance",
              "monitoring_surveillance",
              "garden_maintenance",
              "jacuzzi_maintenance",
              "sauna_maintenance",
              "photoshoot",
              "bank_fees",
              "sta_licensing",
              "security",
              "laundry",
              "gardening",
              "guest_compensation",
              "home_improvement",
              "other_expenses",
              "other_income",
              "other_services_ops_assistants",
              "painting",
              "plumbing",
              "refund",
              "refund_security_deposit",
              "rubbish_removal_service",
              "set_up_fee",
              "strata_rates",
              "security_deposit"
            ]
          },
          "description": {
            "type": "string",
            "description": "Expense description. Max length is 256 characters",
            "example": "Bulb replacement"
          },
          "amount": {
            "type": "number",
            "description": "Expense amount, account currency will be used",
            "example": 5
          },
          "recognitionDate": {
            "type": "string",
            "description": "Expense recognition date. ISO 8601 Date format (year-month-day)",
            "example": "2023-10-27"
          },
          "vendorId": {
            "type": "string",
            "description": "You can get your vendor ID [here](/reference/vendorscontroller_getall)",
            "example": "5f4f6e1c1c6e4e001f7e8b4e"
          },
          "expenseShare": {
            "description": "Share expense between PMC and Owner, by default 100% is going to PMC",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "shareSplit": {
                    "type": "number",
                    "description": "A share split is a floating point number that represents the percentage. For example, \n      - `0.5` means that the share is 50% between PMC and Owner.\n      - `0.1` means that the share is 10% Owner and 90% PMC.\n      - `0` means that the charge covered 100% by PMC.",
                    "example": 0.5
                  },
                  "ownerId": {
                    "type": "string",
                    "description": "You can get your owner ID [here](/reference/get_owners)",
                    "example": "7af22b68-c05e-4fa0-80be-43ebac0672c0"
                  },
                  "listingId": {
                    "type": "string",
                    "description": "You can get your listing ID [here](/reference/get_listings)",
                    "example": "4ca95c56-f71c-4940-85cd-2aa56f61f052"
                  }
                },
                "required": [
                  "shareSplit",
                  "ownerId"
                ]
              }
            ]
          },
          "attachments": {
            "description": "Add attachments to expense",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "URL to CDN where attachment is stored. Max length is 2048 characters",
                  "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                },
                "urlThumbnail": {
                  "type": "string",
                  "description": "URL to CDN where attachment thumbnail is stored. Max length is 2048 characters",
                  "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                },
                "extension": {
                  "type": "string",
                  "description": "Attachment file extension. Max length is 10 characters",
                  "example": "png"
                },
                "fileName": {
                  "type": "string",
                  "description": "Attachment file name. Max length is 256 characters",
                  "example": "Invoice copy"
                }
              },
              "required": [
                "url",
                "urlThumbnail",
                "extension",
                "fileName"
              ]
            }
          }
        },
        "required": [
          "name",
          "category",
          "description",
          "amount",
          "recognitionDate",
          "vendorId"
        ]
      },
      "CreatePost": {
        "type": "object",
        "properties": {
          "module": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "`sms`, `email`, `note`, `log`, `whatsapp`, `airbnb2`",
                "example": "email"
              },
              "to": {
                "type": "array",
                "items": {},
                "example": "[example@gmail.com]"
              },
              "cc": {
                "type": "array",
                "items": {},
                "example": "[example@gmail.com]"
              },
              "bcc": {
                "type": "array",
                "items": {},
                "example": "[example@gmail.com]"
              }
            },
            "required": [
              "type"
            ]
          },
          "body": {
            "type": "string",
            "description": "The message itself",
            "example": "This is a new message"
          }
        },
        "required": [
          "module",
          "body"
        ]
      },
      "SavePostWithoutSending": {
        "type": "object",
        "properties": {
          "module": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "`sms`, `email`, `note`, `log`, `whatsapp`, `airbnb2`",
                "example": "note"
              }
            },
            "required": [
              "type"
            ]
          },
          "body": {
            "type": "string",
            "description": "The message itself",
            "example": "This is a new note"
          },
          "sentBy": {
            "type": "string",
            "description": "`host`, `guest`, default: `host`",
            "example": "host"
          }
        },
        "required": [
          "module",
          "body"
        ]
      },
      "ErrorResponse": {
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        }
      },
      "singleItemForPost": {
        "type": "object",
        "description": "when configuring the platform and sources fields, user discretion should be taken to choose platforms or sources that are integrated to the account/listing",
        "properties": {
          "name": {
            "type": "string",
            "description": "define an internal name for your additional fee"
          },
          "type": {
            "description": "Additional fee type.\n !!! Not all additional fee types can be synced with channels. If you select the additional fee type which cannot be synced with channels, and 'isSyncToSupportedChannelsEnabled' is [true] you will receive a validation error",
            "type": "string",
            "enum": [
              "ADDITIONAL_BED",
              "AIR_CONDITIONING",
              "EARLY_CHECK_IN",
              "LATE_CHECK_IN",
              "BABY_BED",
              "CLEANING",
              "CLUB_CARD",
              "CONCIERGE",
              "EARLY_CHECKOUT",
              "LATE_CHECKOUT",
              "DEPOSIT",
              "ELECTRICITY",
              "FOOD",
              "HEATING",
              "INTERNET",
              "LAUNDRY",
              "LINENS",
              "TOWELS",
              "MANAGEMENT",
              "OIL",
              "PARKING",
              "PET",
              "POOL",
              "POOL_HEATING",
              "RESORT",
              "SERVICE",
              "TOILETRIES",
              "TOUR",
              "TRANSPORTATION",
              "CAR_RENTAL",
              "WATER",
              "WOOD",
              "TRANSFER",
              "HOUSEKEEPING",
              "INSURANCE",
              "COMMUNITY",
              "CREDIT_CARD_PROCESSING_FEE",
              "DAMAGE_WAIVER",
              "VIP_SERVICES",
              "PAYMENT_FEE",
              "ADDITIONAL_CHARGE",
              "MISCELLANEOUS",
              "SHIPPING",
              "VALET",
              "ACTIVITIES",
              "FLIGHTS",
              "GIFT_BASKET",
              "SPA",
              "CHEF",
              "MEET_AND_GREET",
              "DOCK_FEE",
              "UTILITY_FEE",
              "HOT_TUB",
              "BOOKING_FEE",
              "BREAKFAST",
              "BEVERAGE",
              "MEAL",
              "WELLNESS",
              "MINIBAR",
              "BUSINESS_CENTER",
              "WIFI",
              "GUEST_SERVICE",
              "COMMISSION_CHARGE",
              "EQUIPMENT_RENTAL",
              "RESERVATION_FEE",
              "DAMAGE_CHARGE",
              "HOMEOWNERS_ASSOCIATION",
              "GOLF_CART_RENTAL"
            ]
          },
          "value": {
            "description": "1. must be bigger then 0,\n2. when 'isPercentage' is 'true' then must be also smaller or equal to 100",
            "type": "integer"
          },
          "isPercentage": {
            "description": "sets wether 'value' should be used as a fixed amount or percentage",
            "type": "boolean"
          },
          "targetFee": {
            "description": "1. the fee to use for the additional fee amount calculation when 'isPercentage' is 'true',\n2. required when 'isPercentage' is 'true'",
            "type": "string",
            "enum": [
              "PAYOUT",
              "CLEANING_FEE",
              "ACCOMMODATION_FARE"
            ]
          },
          "multiplier": {
            "description": "1. sets the factor by which the 'value' will be multiplied in the additional fee amount calculation when 'isPercentage' is 'false',\n2. required when 'isPercentage' is 'false'",
            "type": "string",
            "enum": [
              "PER_NIGHT",
              "PER_GUEST",
              "PER_GUEST_PER_NIGHT",
              "PER_STAY"
            ]
          },
          "isSyncToSupportedChannelsEnabled": {
            "type": "boolean",
            "description": "1. Sync fee to account or listing settings and all future reservations for supported booking channels. \n !!! Not all additional fee types can be synced with channels. If you select the additional fee type which cannot be synced with channels, and 'isSyncToSupportedChannelsEnabled' is [true] you will receive a validation error"
          },
          "isAutomated": {
            "type": "boolean",
            "description": "1. indicates if there are booking channels in which the additional fee should be added automatically to reservations once the reservation arrives in Guesty,\n2. if set to 'true', you must configure at least one of 'allSources', 'automationSources', 'allPlatforms', 'automationPlatforms', 'allRUSources', 'RUSources'"
          },
          "allPlatforms": {
            "type": "boolean",
            "description": "1. if 'true' then the additional fee will be added to all future reservations in Guesty for all booking channels,\n2. can not be 'true' when 'isAutomated' is 'false',\n3. can not be 'true' when 'automationPlatforms' is not empty"
          },
          "automationPlatforms": {
            "type": "array",
            "description": "1. additional fee will be added to future reservations in Guesty for specified booking channels,\n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allPlatforms' is 'true'",
            "items": {
              "type": "string",
              "enum": [
                "manual",
                "airbnb",
                "airbnb2",
                "rentalsUnited",
                "bookingCom",
                "expedia",
                "homeAway",
                "agoda",
                "tripAdvisor",
                "homeaway2",
                "siteMinder",
                "bookingPal"
              ]
            }
          },
          "allSources": {
            "type": "boolean",
            "description": "1. if 'true' then the additional fee will be added to all future reservations for all manual sources,\n2. can not be 'true' when 'isAutomated' is 'false',\n3. can not be 'true' when 'automationSources' is not empty"
          },
          "automationSources": {
            "type": "array",
            "description": "1. additional fee will be added to future reservations in Guesty for specified manual sources,\n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allSources' is 'true'",
            "items": {
              "type": "string"
            }
          },
          "allRUSources": {
            "type": "boolean",
            "description": "1. if 'true' then the additional fee will be added to all future rentals united reservations in Guesty for all rentals united booking channels,\n2. can not be 'true' when 'isAutomated' is 'false'\n3. can not be 'true' when 'RUSources' is not empty,\n4. when 'true' then 'rentalsUnited' must be included in 'automationPlatforms' or 'allPlatforms' must be 'true'"
          },
          "RUSources": {
            "type": "array",
            "description": "1. additional fee will be added to future rentals united reservations in Guesty for specified rentals united booking channels, \n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allRUSources' is 'true',\n4. when not empty then 'rentalsUnited' must be included in 'automationPlatforms' or 'allPlatforms' must be 'true'",
            "items": {
              "type": "string",
              "enum": [
                "agoda",
                "bookingCom",
                "despegar",
                "expedia",
                "hostelworld",
                "homeAway"
              ]
            }
          },
          "isDeducted": {
            "type": "boolean",
            "description": "isDeducted must be [false] without isBundled being [true] when either isSyncToSupportedChannelsEnabled, isAutomated are [true]."
          }
        },
        "required": [
          "name",
          "type",
          "value",
          "isPercentage"
        ]
      },
      "singleItemForPatch": {
        "type": "object",
        "description": "when configuring the platform and sources fields, user discretion should be taken to choose platforms or sources that are integrated to the account/listing",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ADDITIONAL_BED",
              "AIR_CONDITIONING",
              "EARLY_CHECK_IN",
              "LATE_CHECK_IN",
              "BABY_BED",
              "CLEANING",
              "CLUB_CARD",
              "CONCIERGE",
              "EARLY_CHECKOUT",
              "LATE_CHECKOUT",
              "DEPOSIT",
              "ELECTRICITY",
              "FOOD",
              "HEATING",
              "INTERNET",
              "LAUNDRY",
              "LINENS",
              "TOWELS",
              "MANAGEMENT",
              "OIL",
              "PARKING",
              "PET",
              "POOL",
              "POOL_HEATING",
              "RESORT",
              "SERVICE",
              "TOILETRIES",
              "TOUR",
              "TRANSPORTATION",
              "CAR_RENTAL",
              "WATER",
              "WOOD",
              "TRANSFER",
              "HOUSEKEEPING",
              "INSURANCE",
              "COMMUNITY",
              "CREDIT_CARD_PROCESSING_FEE",
              "DAMAGE_WAIVER",
              "VIP_SERVICES",
              "PAYMENT_FEE",
              "ADDITIONAL_CHARGE",
              "MISCELLANEOUS",
              "SHIPPING",
              "VALET",
              "ACTIVITIES",
              "FLIGHTS",
              "GIFT_BASKET",
              "SPA",
              "CHEF",
              "MEET_AND_GREET",
              "DOCK_FEE",
              "UTILITY_FEE",
              "HOT_TUB",
              "BOOKING_FEE",
              "BREAKFAST",
              "BEVERAGE",
              "MEAL",
              "WELLNESS",
              "MINIBAR",
              "BUSINESS_CENTER",
              "WIFI",
              "GUEST_SERVICE",
              "COMMISSION_CHARGE",
              "EQUIPMENT_RENTAL",
              "RESERVATION_FEE",
              "DAMAGE_CHARGE",
              "HOMEOWNERS_ASSOCIATION",
              "GOLF_CART_RENTAL"
            ],
            "description": "Additional fee type.\n !!! Not all additional fee types can be synced with channels. If you select the additional fee type which cannot be synced with channels, and 'isSyncToSupportedChannelsEnabled' is [true] you will receive a validation error"
          },
          "value": {
            "description": "1. must be bigger then 0,\n2. when 'isPercentage' is 'true' then must be also smaller or equal to 100",
            "type": "integer"
          },
          "isPercentage": {
            "description": "sets wether 'value' should be used as a fixed amount or percentage",
            "type": "boolean"
          },
          "targetFee": {
            "type": "string",
            "enum": [
              "PAYOUT",
              "CLEANING_FEE",
              "ACCOMMODATION_FARE"
            ],
            "description": "1. the fee to use for the additional fee amount calculation when 'isPercentage' is 'true',\n2. required when 'isPercentage' is 'true'"
          },
          "multiplier": {
            "type": "string",
            "enum": [
              "PER_NIGHT",
              "PER_GUEST",
              "PER_GUEST_PER_NIGHT",
              "PER_STAY"
            ],
            "description": "1. sets the factor by which the 'value' will be multiplied in the additional fee amount calculation when 'isPercentage' is 'false',\n2. required when 'isPercentage' is 'false'"
          },
          "isSyncToSupportedChannelsEnabled": {
            "type": "boolean",
            "description": "1. Sync fee to account or listing settings and all future reservations for supported booking channels. \n !!! Not all additional fee types can be synced with channels. If you select the additional fee type which cannot be synced with channels, and 'isSyncToSupportedChannelsEnabled' is [true] you will receive a validation error"
          },
          "isAutomated": {
            "type": "boolean",
            "description": "1. indicates if there are booking channels in which the additional fee should be added automatically to reservations once the reservation arrives in Guesty,\n2. if set to 'true', you must configure at least one of 'allSources', 'automationSources', 'allPlatforms', 'automationPlatforms', 'allRUSources', 'RUSources'"
          },
          "allPlatforms": {
            "type": "boolean",
            "description": "1. if 'true' then the additional fee will be added to all future reservations in Guesty for all booking channels,\n2. can not be 'true' when 'isAutomated' is 'false',\n3. can not be 'true' when 'automationPlatforms' is not empty"
          },
          "automationPlatforms": {
            "type": "array",
            "description": "1. additional fee will be added to future reservations in Guesty for specified booking channels,\n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allPlatforms' is 'true'",
            "items": {
              "type": "string",
              "enum": [
                "manual",
                "airbnb",
                "airbnb2",
                "rentalsUnited",
                "bookingCom",
                "expedia",
                "homeAway",
                "agoda",
                "tripAdvisor",
                "homeaway2",
                "siteMinder",
                "bookingPal"
              ]
            }
          },
          "allSources": {
            "type": "boolean",
            "description": "1. if 'true' then the additional fee will be added to all future reservations for all manual sources,\n2. can not be 'true' when 'isAutomated' is 'false',\n3. can not be 'true' when 'automationSources' is not empty"
          },
          "automationSources": {
            "type": "array",
            "description": "1. additional fee will be added to future reservations in Guesty for specified manual sources,\n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allSources' is 'true'",
            "items": {
              "type": "string"
            }
          },
          "allRUSources": {
            "type": "boolean",
            "description": "1. if 'true' then the additional fee will be added to all future rentals united reservations in Guesty for all rentals united booking channels,\n2. can not be 'true' when 'isAutomated' is 'false'\n3. can not be 'true' when 'RUSources' is not empty,\n4. when 'true' then 'rentalsUnited' must be included in 'automationPlatforms' or 'allPlatforms' must be 'true'"
          },
          "RUSources": {
            "type": "array",
            "description": "1. additional fee will be added to future rentals united reservations in Guesty for specified rentals united booking channels, \n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allRUSources' is 'true',\n4. when not empty then 'rentalsUnited' must be included in 'automationPlatforms' or 'allPlatforms' must be 'true'",
            "items": {
              "type": "string",
              "enum": [
                "agoda",
                "bookingCom",
                "despegar",
                "expedia",
                "hostelworld",
                "homeAway"
              ]
            }
          },
          "isDeducted": {
            "type": "boolean",
            "description": "1. Additional fee will be deducted from Accommodation Fare. isDeducted must be [false] without isBundled being [true] when either isSyncToSupportedChannelsEnabled, isAutomated are [true]."
          },
          "isBundled": {
            "type": "boolean",
            "description": "1. Additional fee value bundles/adds to Accommodation Fare, line item will not be created. when isBundled is [true] isDeducted and isSyncToSupportedChannelsEnabled must be [true], isAutomated must be [false]."
          }
        }
      },
      "AdditionalFeeTypes": {
        "type": "string",
        "enum": [
          "ADDITIONAL_BED",
          "AIR_CONDITIONING",
          "EARLY_CHECK_IN",
          "LATE_CHECK_IN",
          "BABY_BED",
          "CLEANING",
          "CLUB_CARD",
          "CONCIERGE",
          "EARLY_CHECKOUT",
          "LATE_CHECKOUT",
          "DEPOSIT",
          "ELECTRICITY",
          "FOOD",
          "HEATING",
          "INTERNET",
          "LAUNDRY",
          "LINENS",
          "TOWELS",
          "MANAGEMENT",
          "OIL",
          "PARKING",
          "PET",
          "POOL",
          "POOL_HEATING",
          "RESORT",
          "SERVICE",
          "TOILETRIES",
          "TOUR",
          "TRANSPORTATION",
          "CAR_RENTAL",
          "WATER",
          "WOOD",
          "TRANSFER",
          "HOUSEKEEPING",
          "INSURANCE",
          "COMMUNITY",
          "CREDIT_CARD_PROCESSING_FEE",
          "DAMAGE_WAIVER",
          "VIP_SERVICES",
          "PAYMENT_FEE",
          "ADDITIONAL_CHARGE",
          "MISCELLANEOUS",
          "SHIPPING",
          "VALET",
          "ACTIVITIES",
          "FLIGHTS",
          "GIFT_BASKET",
          "SPA",
          "CHEF",
          "MEET_AND_GREET",
          "DOCK_FEE",
          "UTILITY_FEE",
          "HOT_TUB",
          "BOOKING_FEE",
          "BREAKFAST",
          "BEVERAGE",
          "MEAL",
          "WELLNESS",
          "MINIBAR",
          "BUSINESS_CENTER",
          "WIFI",
          "GUEST_SERVICE",
          "COMMISSION_CHARGE",
          "EQUIPMENT_RENTAL",
          "RESERVATION_FEE",
          "DAMAGE_CHARGE",
          "HOMEOWNERS_ASSOCIATION",
          "GOLF_CART_RENTAL"
        ]
      },
      "targetFees": {
        "type": "string",
        "enum": [
          "PAYOUT",
          "CLEANING_FEE",
          "ACCOMMODATION_FARE"
        ]
      },
      "multipliers": {
        "type": "string",
        "enum": [
          "PER_NIGHT",
          "PER_GUEST",
          "PER_GUEST_PER_NIGHT",
          "PER_STAY"
        ]
      },
      "automationPlatformsItems": {
        "type": "string",
        "enum": [
          "manual",
          "airbnb",
          "airbnb2",
          "rentalsUnited",
          "bookingCom",
          "expedia",
          "homeAway",
          "agoda",
          "tripAdvisor",
          "homeaway2",
          "siteMinder",
          "bookingPal"
        ]
      },
      "RUSourcesItems": {
        "type": "string",
        "enum": [
          "agoda",
          "bookingCom",
          "despegar",
          "expedia",
          "hostelworld",
          "homeAway"
        ]
      },
      "singleItemResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ADDITIONAL_BED",
              "AIR_CONDITIONING",
              "EARLY_CHECK_IN",
              "LATE_CHECK_IN",
              "BABY_BED",
              "CLEANING",
              "CLUB_CARD",
              "CONCIERGE",
              "EARLY_CHECKOUT",
              "LATE_CHECKOUT",
              "DEPOSIT",
              "ELECTRICITY",
              "FOOD",
              "HEATING",
              "INTERNET",
              "LAUNDRY",
              "LINENS",
              "TOWELS",
              "MANAGEMENT",
              "OIL",
              "PARKING",
              "PET",
              "POOL",
              "POOL_HEATING",
              "RESORT",
              "SERVICE",
              "TOILETRIES",
              "TOUR",
              "TRANSPORTATION",
              "CAR_RENTAL",
              "WATER",
              "WOOD",
              "TRANSFER",
              "HOUSEKEEPING",
              "INSURANCE",
              "COMMUNITY",
              "CREDIT_CARD_PROCESSING_FEE",
              "DAMAGE_WAIVER",
              "VIP_SERVICES",
              "PAYMENT_FEE",
              "ADDITIONAL_CHARGE",
              "MISCELLANEOUS",
              "SHIPPING",
              "VALET",
              "ACTIVITIES",
              "FLIGHTS",
              "GIFT_BASKET",
              "SPA",
              "CHEF",
              "MEET_AND_GREET",
              "DOCK_FEE",
              "UTILITY_FEE",
              "HOT_TUB",
              "BOOKING_FEE",
              "BREAKFAST",
              "BEVERAGE",
              "MEAL",
              "WELLNESS",
              "MINIBAR",
              "BUSINESS_CENTER",
              "WIFI",
              "GUEST_SERVICE",
              "COMMISSION_CHARGE",
              "EQUIPMENT_RENTAL",
              "RESERVATION_FEE",
              "DAMAGE_CHARGE",
              "HOMEOWNERS_ASSOCIATION",
              "GOLF_CART_RENTAL"
            ]
          },
          "value": {
            "type": "integer"
          },
          "targetFee": {
            "type": "string",
            "enum": [
              "PAYOUT",
              "CLEANING_FEE",
              "ACCOMMODATION_FARE"
            ]
          },
          "automationSources": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "automationPlatforms": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "manual",
                "airbnb",
                "airbnb2",
                "rentalsUnited",
                "bookingCom",
                "expedia",
                "homeAway",
                "agoda",
                "tripAdvisor",
                "homeaway2",
                "siteMinder",
                "bookingPal"
              ]
            }
          },
          "RUSources": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "agoda",
                "bookingCom",
                "despegar",
                "expedia",
                "hostelworld",
                "homeAway"
              ]
            }
          },
          "allSources": {
            "type": "boolean"
          },
          "isDeducted": {
            "type": "boolean"
          },
          "isBundled": {
            "type": "boolean"
          },
          "allPlatforms": {
            "type": "boolean"
          },
          "allRUSources": {
            "type": "boolean"
          },
          "isAutomated": {
            "type": "boolean"
          },
          "isPercentage": {
            "type": "boolean"
          },
          "multiplier": {
            "type": "string",
            "enum": [
              "PER_NIGHT",
              "PER_GUEST",
              "PER_GUEST_PER_NIGHT",
              "PER_STAY"
            ]
          },
          "isSyncToSupportedChannelsEnabled": {
            "type": "boolean"
          }
        }
      },
      "multipleItemsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "accountId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "ADDITIONAL_BED",
                "AIR_CONDITIONING",
                "EARLY_CHECK_IN",
                "LATE_CHECK_IN",
                "BABY_BED",
                "CLEANING",
                "CLUB_CARD",
                "CONCIERGE",
                "EARLY_CHECKOUT",
                "LATE_CHECKOUT",
                "DEPOSIT",
                "ELECTRICITY",
                "FOOD",
                "HEATING",
                "INTERNET",
                "LAUNDRY",
                "LINENS",
                "TOWELS",
                "MANAGEMENT",
                "OIL",
                "PARKING",
                "PET",
                "POOL",
                "POOL_HEATING",
                "RESORT",
                "SERVICE",
                "TOILETRIES",
                "TOUR",
                "TRANSPORTATION",
                "CAR_RENTAL",
                "WATER",
                "WOOD",
                "TRANSFER",
                "HOUSEKEEPING",
                "INSURANCE",
                "COMMUNITY",
                "CREDIT_CARD_PROCESSING_FEE",
                "DAMAGE_WAIVER",
                "VIP_SERVICES",
                "PAYMENT_FEE",
                "ADDITIONAL_CHARGE",
                "MISCELLANEOUS",
                "SHIPPING",
                "VALET",
                "ACTIVITIES",
                "FLIGHTS",
                "GIFT_BASKET",
                "SPA",
                "CHEF",
                "MEET_AND_GREET",
                "DOCK_FEE",
                "UTILITY_FEE",
                "HOT_TUB",
                "BOOKING_FEE",
                "BREAKFAST",
                "BEVERAGE",
                "MEAL",
                "WELLNESS",
                "MINIBAR",
                "BUSINESS_CENTER",
                "WIFI",
                "GUEST_SERVICE",
                "COMMISSION_CHARGE",
                "EQUIPMENT_RENTAL",
                "RESERVATION_FEE",
                "DAMAGE_CHARGE",
                "HOMEOWNERS_ASSOCIATION",
                "GOLF_CART_RENTAL"
              ]
            },
            "value": {
              "type": "integer"
            },
            "targetFee": {
              "type": "string",
              "enum": [
                "PAYOUT",
                "CLEANING_FEE",
                "ACCOMMODATION_FARE"
              ]
            },
            "automationSources": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "automationPlatforms": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "manual",
                  "airbnb",
                  "airbnb2",
                  "rentalsUnited",
                  "bookingCom",
                  "expedia",
                  "homeAway",
                  "agoda",
                  "tripAdvisor",
                  "homeaway2",
                  "siteMinder",
                  "bookingPal"
                ]
              }
            },
            "RUSources": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "agoda",
                  "bookingCom",
                  "despegar",
                  "expedia",
                  "hostelworld",
                  "homeAway"
                ]
              }
            },
            "allSources": {
              "type": "boolean"
            },
            "isDeducted": {
              "type": "boolean"
            },
            "isBundled": {
              "type": "boolean"
            },
            "allPlatforms": {
              "type": "boolean"
            },
            "allRUSources": {
              "type": "boolean"
            },
            "isAutomated": {
              "type": "boolean"
            },
            "isPercentage": {
              "type": "boolean"
            },
            "multiplier": {
              "type": "string",
              "enum": [
                "PER_NIGHT",
                "PER_GUEST",
                "PER_GUEST_PER_NIGHT",
                "PER_STAY"
              ]
            },
            "isSyncToSupportedChannelsEnabled": {
              "type": "boolean"
            }
          }
        }
      },
      "singleItemResponseListing": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ADDITIONAL_BED",
              "AIR_CONDITIONING",
              "EARLY_CHECK_IN",
              "LATE_CHECK_IN",
              "BABY_BED",
              "CLEANING",
              "CLUB_CARD",
              "CONCIERGE",
              "EARLY_CHECKOUT",
              "LATE_CHECKOUT",
              "DEPOSIT",
              "ELECTRICITY",
              "FOOD",
              "HEATING",
              "INTERNET",
              "LAUNDRY",
              "LINENS",
              "TOWELS",
              "MANAGEMENT",
              "OIL",
              "PARKING",
              "PET",
              "POOL",
              "POOL_HEATING",
              "RESORT",
              "SERVICE",
              "TOILETRIES",
              "TOUR",
              "TRANSPORTATION",
              "CAR_RENTAL",
              "WATER",
              "WOOD",
              "TRANSFER",
              "HOUSEKEEPING",
              "INSURANCE",
              "COMMUNITY",
              "CREDIT_CARD_PROCESSING_FEE",
              "DAMAGE_WAIVER",
              "VIP_SERVICES",
              "PAYMENT_FEE",
              "ADDITIONAL_CHARGE",
              "MISCELLANEOUS",
              "SHIPPING",
              "VALET",
              "ACTIVITIES",
              "FLIGHTS",
              "GIFT_BASKET",
              "SPA",
              "CHEF",
              "MEET_AND_GREET",
              "DOCK_FEE",
              "UTILITY_FEE",
              "HOT_TUB",
              "BOOKING_FEE",
              "BREAKFAST",
              "BEVERAGE",
              "MEAL",
              "WELLNESS",
              "MINIBAR",
              "BUSINESS_CENTER",
              "WIFI",
              "GUEST_SERVICE",
              "COMMISSION_CHARGE",
              "EQUIPMENT_RENTAL",
              "RESERVATION_FEE",
              "DAMAGE_CHARGE",
              "HOMEOWNERS_ASSOCIATION",
              "GOLF_CART_RENTAL"
            ]
          },
          "value": {
            "type": "integer"
          },
          "listingId": {
            "type": "string"
          },
          "targetFee": {
            "type": "string",
            "enum": [
              "PAYOUT",
              "CLEANING_FEE",
              "ACCOMMODATION_FARE"
            ]
          },
          "automationSources": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "automationPlatforms": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "manual",
                "airbnb",
                "airbnb2",
                "rentalsUnited",
                "bookingCom",
                "expedia",
                "homeAway",
                "agoda",
                "tripAdvisor",
                "homeaway2",
                "siteMinder",
                "bookingPal"
              ]
            }
          },
          "RUSources": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "agoda",
                "bookingCom",
                "despegar",
                "expedia",
                "hostelworld",
                "homeAway"
              ]
            }
          },
          "allSources": {
            "type": "boolean"
          },
          "allPlatforms": {
            "type": "boolean"
          },
          "allRUSources": {
            "type": "boolean"
          },
          "isAutomated": {
            "type": "boolean"
          },
          "isPercentage": {
            "type": "boolean"
          },
          "multiplier": {
            "type": "string",
            "enum": [
              "PER_NIGHT",
              "PER_GUEST",
              "PER_GUEST_PER_NIGHT",
              "PER_STAY"
            ]
          },
          "isSyncToSupportedChannelsEnabled": {
            "type": "boolean"
          }
        }
      },
      "multipleItemsResponseListing": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "accountId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "ADDITIONAL_BED",
                "AIR_CONDITIONING",
                "EARLY_CHECK_IN",
                "LATE_CHECK_IN",
                "BABY_BED",
                "CLEANING",
                "CLUB_CARD",
                "CONCIERGE",
                "EARLY_CHECKOUT",
                "LATE_CHECKOUT",
                "DEPOSIT",
                "ELECTRICITY",
                "FOOD",
                "HEATING",
                "INTERNET",
                "LAUNDRY",
                "LINENS",
                "TOWELS",
                "MANAGEMENT",
                "OIL",
                "PARKING",
                "PET",
                "POOL",
                "POOL_HEATING",
                "RESORT",
                "SERVICE",
                "TOILETRIES",
                "TOUR",
                "TRANSPORTATION",
                "CAR_RENTAL",
                "WATER",
                "WOOD",
                "TRANSFER",
                "HOUSEKEEPING",
                "INSURANCE",
                "COMMUNITY",
                "CREDIT_CARD_PROCESSING_FEE",
                "DAMAGE_WAIVER",
                "VIP_SERVICES",
                "PAYMENT_FEE",
                "ADDITIONAL_CHARGE",
                "MISCELLANEOUS",
                "SHIPPING",
                "VALET",
                "ACTIVITIES",
                "FLIGHTS",
                "GIFT_BASKET",
                "SPA",
                "CHEF",
                "MEET_AND_GREET",
                "DOCK_FEE",
                "UTILITY_FEE",
                "HOT_TUB",
                "BOOKING_FEE",
                "BREAKFAST",
                "BEVERAGE",
                "MEAL",
                "WELLNESS",
                "MINIBAR",
                "BUSINESS_CENTER",
                "WIFI",
                "GUEST_SERVICE",
                "COMMISSION_CHARGE",
                "EQUIPMENT_RENTAL",
                "RESERVATION_FEE",
                "DAMAGE_CHARGE",
                "HOMEOWNERS_ASSOCIATION",
                "GOLF_CART_RENTAL"
              ]
            },
            "value": {
              "type": "integer"
            },
            "listingId": {
              "type": "string"
            },
            "targetFee": {
              "type": "string",
              "enum": [
                "PAYOUT",
                "CLEANING_FEE",
                "ACCOMMODATION_FARE"
              ]
            },
            "automationSources": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "automationPlatforms": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "manual",
                  "airbnb",
                  "airbnb2",
                  "rentalsUnited",
                  "bookingCom",
                  "expedia",
                  "homeAway",
                  "agoda",
                  "tripAdvisor",
                  "homeaway2",
                  "siteMinder",
                  "bookingPal"
                ]
              }
            },
            "RUSources": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "agoda",
                  "bookingCom",
                  "despegar",
                  "expedia",
                  "hostelworld",
                  "homeAway"
                ]
              }
            },
            "allSources": {
              "type": "boolean"
            },
            "allPlatforms": {
              "type": "boolean"
            },
            "allRUSources": {
              "type": "boolean"
            },
            "isAutomated": {
              "type": "boolean"
            },
            "isPercentage": {
              "type": "boolean"
            },
            "multiplier": {
              "type": "string",
              "enum": [
                "PER_NIGHT",
                "PER_GUEST",
                "PER_GUEST_PER_NIGHT",
                "PER_STAY"
              ]
            },
            "isSyncToSupportedChannelsEnabled": {
              "type": "boolean"
            }
          }
        }
      },
      "DateRangeDto": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "example": "12-31"
          },
          "to": {
            "type": "string",
            "example": "02-01"
          }
        },
        "required": [
          "from",
          "to"
        ]
      },
      "NightRangeDto": {
        "type": "object",
        "properties": {
          "from": {
            "type": "number",
            "minimum": 1
          },
          "to": {
            "type": "number",
            "minimum": 1
          },
          "amount": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "from",
          "amount"
        ]
      },
      "ConditionalRuleDto": {
        "type": "object",
        "properties": {
          "dateRange": {
            "description": "1. When viewType is 'NIGHTS' then rules objects can not contain dateRanges.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "example": "12-31"
                  },
                  "to": {
                    "type": "string",
                    "example": "02-01"
                  }
                },
                "required": [
                  "from",
                  "to"
                ]
              }
            ]
          },
          "nightRanges": {
            "description": "1. When viewType is 'DATES' then all rules objects must contain only 1 nightRange with no 'to' field and 'from' field equals 1.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "number",
                  "minimum": 1
                },
                "to": {
                  "type": "number",
                  "minimum": 1
                },
                "amount": {
                  "type": "number",
                  "minimum": 0
                }
              },
              "required": [
                "from",
                "amount"
              ]
            }
          }
        },
        "required": [
          "nightRanges"
        ]
      },
      "ConditionalOverridesDto": {
        "type": "object",
        "properties": {
          "viewType": {
            "type": "string",
            "description": "1. The kind of conditions to set on the tax\n 2. When 'units' is 'FIXED' and 'quantifier' is 'guest'/'stay' then 'NiGHTS' and 'NIGHTS_IN_DATES' viewTypes are forbidden,\n 3. When 'units' is 'PERCENTAGE' then all viewTypes are allowed",
            "enum": [
              "NIGHTS",
              "DATES",
              "NIGHTS_IN_DATES",
              "LOS"
            ]
          },
          "rules": {
            "description": "1. The dates and nights ranges that the tax condition will apply for.\n 2. When viewType is 'LOS' then rules is forbidden, else rules is required and can not be empty.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dateRange": {
                  "description": "1. When viewType is 'NIGHTS' then rules objects can not contain dateRanges.",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string",
                          "example": "12-31"
                        },
                        "to": {
                          "type": "string",
                          "example": "02-01"
                        }
                      },
                      "required": [
                        "from",
                        "to"
                      ]
                    }
                  ]
                },
                "nightRanges": {
                  "description": "1. When viewType is 'DATES' then all rules objects must contain only 1 nightRange with no 'to' field and 'from' field equals 1.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "type": "number",
                        "minimum": 1
                      },
                      "to": {
                        "type": "number",
                        "minimum": 1
                      },
                      "amount": {
                        "type": "number",
                        "minimum": 0
                      }
                    },
                    "required": [
                      "from",
                      "amount"
                    ]
                  }
                }
              },
              "required": [
                "nightRanges"
              ]
            }
          },
          "maxNightCountToApplyOn": {
            "type": "number",
            "minimum": 1,
            "description": "1. The tax will be applied for all reservation that has night count smaller then 'maxNightCountToApplyOn'\n 2. Only when 'viewType' is 'LOS' then this field is allowed and required"
          }
        },
        "required": [
          "viewType"
        ]
      },
      "CreateTaxDto": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "description": "1. The unit (listing) id on which the new tax will apply.\n2. To apply the tax on account level, leave this field empty.",
            "example": "623892d57f4f56afcb25587c"
          },
          "type": {
            "type": "string",
            "description": "1. The tax type.\n2. Each tax type can only be defined once on account/listing level.",
            "enum": [
              "LOCAL_TAX",
              "CITY_TAX",
              "VAT",
              "GOODS_AND_SERVICES_TAX",
              "TOURISM_TAX",
              "OTHER",
              "STATE_TAX",
              "COUNTY_TAX",
              "OCCUPANCY_TAX",
              "TRANSIENT_OCCUPANCY_TAX",
              "HOME_SHARING_TAX",
              "HARMONIZED_SALES_TAX",
              "MINIMUM_ALTERNATE_TAX"
            ]
          },
          "units": {
            "type": "string",
            "description": "Determines whether the tax amount should be treated as a fixed or percentage value",
            "enum": [
              "PERCENTAGE",
              "FIXED"
            ]
          },
          "amount": {
            "type": "number",
            "minimum": 0,
            "description": "1. the amount of the tax, could be a fixed value or percentage whether units is 'FIXED' or 'PERCENTAGE' respectively.\n 2. when 'FIXED' then 'amount' has to be greater then 0\n 3. when 'PERCENTAGE' then 'amount' has to be greater then 0 and smaller or equal to 100"
          },
          "quantifier": {
            "type": "string",
            "description": "Determines by what factor the tax amount will be multiplied",
            "enum": [
              "PER_NIGHT",
              "PER_GUEST",
              "PER_GUEST_PER_NIGHT",
              "PER_STAY"
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 40,
            "description": "The name for the tax, which will be used accross guesty. there can be no two taxes with the same name."
          },
          "appliedToAllFees": {
            "type": "boolean",
            "description": "1. Relevant only when the units equals 'PERCENTAGE'\n2. When equals 'true', then the tax will be calculated on all fees and 'appliedOnFees' must contain all values"
          },
          "appliedOnFees": {
            "description": "1. Relevant only when the unit equals 'PERCENTAGE'\n\n  2. This defines the fees on which the tax will be calculated",
            "example": [
              "AF"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isAppliedByDefault": {
            "type": "boolean",
            "description": "1. When set to 'true' and 'appliedByDefaultOnChannels' is not empty, then Guesty will prededuct the tax from the accommodation fare.\n 2. can not be 'true' when 'appliedByDefaultOnChannels' is empty"
          },
          "appliedByDefaultOnChannels": {
            "type": "array",
            "description": "1. When contains values and 'isAppliedByDefault' is set to 'true', then Guesty will prededuct the tax from the accommodation fare.\n 2. can not contain elements when 'isAppliedByDefault' is 'false'\n 3. currently, only supported for reservations received from source Airbnb",
            "items": {
              "type": "string",
              "enum": [
                "manual",
                "airbnb",
                "airbnb2",
                "rentalsUnited",
                "bookingCom",
                "expedia",
                "homeAway",
                "agoda",
                "tripAdvisor",
                "homeaway2",
                "siteMinder",
                "bookingPal"
              ]
            }
          },
          "conditionalOverrides": {
            "description": "Set additional conditions for this tax",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "viewType": {
                    "type": "string",
                    "description": "1. The kind of conditions to set on the tax\n 2. When 'units' is 'FIXED' and 'quantifier' is 'guest'/'stay' then 'NiGHTS' and 'NIGHTS_IN_DATES' viewTypes are forbidden,\n 3. When 'units' is 'PERCENTAGE' then all viewTypes are allowed",
                    "enum": [
                      "NIGHTS",
                      "DATES",
                      "NIGHTS_IN_DATES",
                      "LOS"
                    ]
                  },
                  "rules": {
                    "description": "1. The dates and nights ranges that the tax condition will apply for.\n 2. When viewType is 'LOS' then rules is forbidden, else rules is required and can not be empty.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dateRange": {
                          "description": "1. When viewType is 'NIGHTS' then rules objects can not contain dateRanges.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "from": {
                                  "type": "string",
                                  "example": "12-31"
                                },
                                "to": {
                                  "type": "string",
                                  "example": "02-01"
                                }
                              },
                              "required": [
                                "from",
                                "to"
                              ]
                            }
                          ]
                        },
                        "nightRanges": {
                          "description": "1. When viewType is 'DATES' then all rules objects must contain only 1 nightRange with no 'to' field and 'from' field equals 1.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "from": {
                                "type": "number",
                                "minimum": 1
                              },
                              "to": {
                                "type": "number",
                                "minimum": 1
                              },
                              "amount": {
                                "type": "number",
                                "minimum": 0
                              }
                            },
                            "required": [
                              "from",
                              "amount"
                            ]
                          }
                        }
                      },
                      "required": [
                        "nightRanges"
                      ]
                    }
                  },
                  "maxNightCountToApplyOn": {
                    "type": "number",
                    "minimum": 1,
                    "description": "1. The tax will be applied for all reservation that has night count smaller then 'maxNightCountToApplyOn'\n 2. Only when 'viewType' is 'LOS' then this field is allowed and required"
                  }
                },
                "required": [
                  "viewType"
                ]
              }
            ]
          }
        },
        "required": [
          "type",
          "units",
          "amount",
          "quantifier"
        ]
      },
      "DateRange": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "example": "12-31"
          },
          "to": {
            "type": "string",
            "example": "02-01"
          }
        },
        "required": [
          "from",
          "to"
        ]
      },
      "NightRange": {
        "type": "object",
        "properties": {
          "from": {
            "type": "number",
            "minimum": 1
          },
          "to": {
            "type": "number",
            "minimum": 1
          },
          "amount": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "from",
          "amount"
        ]
      },
      "ConditionalOverridesRule": {
        "type": "object",
        "properties": {
          "dateRange": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "example": "12-31"
              },
              "to": {
                "type": "string",
                "example": "02-01"
              }
            },
            "required": [
              "from",
              "to"
            ]
          },
          "nightRanges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "number",
                  "minimum": 1
                },
                "to": {
                  "type": "number",
                  "minimum": 1
                },
                "amount": {
                  "type": "number",
                  "minimum": 0
                }
              },
              "required": [
                "from",
                "amount"
              ]
            }
          }
        },
        "required": [
          "nightRanges"
        ]
      },
      "ConditionalOverrides": {
        "type": "object",
        "properties": {
          "viewType": {
            "type": "string",
            "enum": [
              "NIGHTS",
              "DATES",
              "NIGHTS_IN_DATES",
              "LOS"
            ]
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "dateRange": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "example": "12-31"
                    },
                    "to": {
                      "type": "string",
                      "example": "02-01"
                    }
                  },
                  "required": [
                    "from",
                    "to"
                  ]
                },
                "nightRanges": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "type": "number",
                        "minimum": 1
                      },
                      "to": {
                        "type": "number",
                        "minimum": 1
                      },
                      "amount": {
                        "type": "number",
                        "minimum": 0
                      }
                    },
                    "required": [
                      "from",
                      "amount"
                    ]
                  }
                }
              },
              "required": [
                "nightRanges"
              ]
            }
          },
          "maxNightCountToApplyOn": {
            "type": "number"
          }
        },
        "required": [
          "viewType"
        ]
      },
      "ChannelUserConfig": {
        "type": "object",
        "properties": {
          "syncSelection": {
            "type": "string"
          }
        },
        "required": [
          "syncSelection"
        ]
      },
      "ChannelConfig": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "userConfig": {
            "type": "object",
            "properties": {
              "syncSelection": {
                "type": "string"
              }
            },
            "required": [
              "syncSelection"
            ]
          }
        },
        "required": [
          "channel",
          "userConfig"
        ]
      },
      "Tax": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "unitTypeId": {
            "type": "string",
            "example": "623892d57f4f56afcb25587c"
          },
          "accountId": {
            "type": "string",
            "example": "623892d57f4f56afcb25587c"
          },
          "type": {
            "type": "string",
            "enum": [
              "LOCAL_TAX",
              "CITY_TAX",
              "VAT",
              "GOODS_AND_SERVICES_TAX",
              "TOURISM_TAX",
              "OTHER",
              "STATE_TAX",
              "COUNTY_TAX",
              "OCCUPANCY_TAX",
              "TRANSIENT_OCCUPANCY_TAX",
              "HOME_SHARING_TAX",
              "HARMONIZED_SALES_TAX",
              "MINIMUM_ALTERNATE_TAX"
            ]
          },
          "units": {
            "type": "string",
            "enum": [
              "PERCENTAGE",
              "FIXED"
            ]
          },
          "quantifier": {
            "type": "string",
            "enum": [
              "PER_NIGHT",
              "PER_GUEST",
              "PER_GUEST_PER_NIGHT",
              "PER_STAY"
            ]
          },
          "appliedOnFees": {
            "example": [
              "AF"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "appliedByDefaultOnChannels": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "manual",
                "airbnb",
                "airbnb2",
                "rentalsUnited",
                "bookingCom",
                "expedia",
                "homeAway",
                "agoda",
                "tripAdvisor",
                "homeaway2",
                "siteMinder",
                "bookingPal"
              ]
            }
          },
          "isDeleted": {
            "type": "boolean"
          },
          "amount": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "appliedToAllFees": {
            "type": "boolean"
          },
          "isAppliedByDefault": {
            "type": "boolean"
          },
          "conditionalOverrides": {
            "type": "object",
            "properties": {
              "viewType": {
                "type": "string",
                "enum": [
                  "NIGHTS",
                  "DATES",
                  "NIGHTS_IN_DATES",
                  "LOS"
                ]
              },
              "rules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "dateRange": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string",
                          "example": "12-31"
                        },
                        "to": {
                          "type": "string",
                          "example": "02-01"
                        }
                      },
                      "required": [
                        "from",
                        "to"
                      ]
                    },
                    "nightRanges": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "number",
                            "minimum": 1
                          },
                          "to": {
                            "type": "number",
                            "minimum": 1
                          },
                          "amount": {
                            "type": "number",
                            "minimum": 0
                          }
                        },
                        "required": [
                          "from",
                          "amount"
                        ]
                      }
                    }
                  },
                  "required": [
                    "nightRanges"
                  ]
                }
              },
              "maxNightCountToApplyOn": {
                "type": "number"
              }
            },
            "required": [
              "viewType"
            ]
          },
          "channelConfig": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "channel": {
                  "type": "string"
                },
                "userConfig": {
                  "type": "object",
                  "properties": {
                    "syncSelection": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "syncSelection"
                  ]
                }
              },
              "required": [
                "channel",
                "userConfig"
              ]
            }
          }
        },
        "required": [
          "accountId",
          "type",
          "units",
          "quantifier",
          "appliedOnFees",
          "appliedByDefaultOnChannels",
          "amount",
          "appliedToAllFees",
          "isAppliedByDefault"
        ]
      },
      "UpdateTaxDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "1. The tax type.\n2. Each tax type can only be defined once on account/listing level.",
            "enum": [
              "LOCAL_TAX",
              "CITY_TAX",
              "VAT",
              "GOODS_AND_SERVICES_TAX",
              "TOURISM_TAX",
              "OTHER",
              "STATE_TAX",
              "COUNTY_TAX",
              "OCCUPANCY_TAX",
              "TRANSIENT_OCCUPANCY_TAX",
              "HOME_SHARING_TAX",
              "HARMONIZED_SALES_TAX",
              "MINIMUM_ALTERNATE_TAX"
            ]
          },
          "units": {
            "type": "string",
            "description": "Determines whether the tax amount should be treated as a fixed or percentage value",
            "enum": [
              "PERCENTAGE",
              "FIXED"
            ]
          },
          "amount": {
            "type": "number",
            "minimum": 0,
            "description": "1. the amount of the tax, could be a fixed value or percentage whether units is 'FIXED' or 'PERCENTAGE' respectively.\n 2. when 'FIXED' then 'amount' has to be greater then 0\n 3. when 'PERCENTAGE' then 'amount' has to be greater then 0 and smaller or equal to 100"
          },
          "quantifier": {
            "type": "string",
            "description": "Determines by what factor the tax amount will be multiplied",
            "enum": [
              "PER_NIGHT",
              "PER_GUEST",
              "PER_GUEST_PER_NIGHT",
              "PER_STAY"
            ]
          },
          "appliedToAllFees": {
            "type": "boolean",
            "description": "1. Relevant only when the units equals 'PERCENTAGE'\n2. When equals 'true', then the tax will be calculated on all fees and 'appliedOnFees' must contain all values"
          },
          "appliedOnFees": {
            "description": "1. Relevant only when the unit equals 'PERCENTAGE'\n\n  2. This defines the fees on which the tax will be calculated",
            "example": [
              "AF"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isAppliedByDefault": {
            "type": "boolean",
            "description": "1. When set to 'true' and 'appliedByDefaultOnChannels' is not empty, then Guesty will prededuct the tax from the accommodation fare.\n 2. can not be 'true' when 'appliedByDefaultOnChannels' is empty"
          },
          "appliedByDefaultOnChannels": {
            "type": "array",
            "description": "1. When contains values and 'isAppliedByDefault' is set to 'true', then Guesty will prededuct the tax from the accommodation fare.\n 2. can not contain elements when 'isAppliedByDefault' is 'false'\n 3. currently, only supported for reservations received from source Airbnb",
            "items": {
              "type": "string",
              "enum": [
                "manual",
                "airbnb",
                "airbnb2",
                "rentalsUnited",
                "bookingCom",
                "expedia",
                "homeAway",
                "agoda",
                "tripAdvisor",
                "homeaway2",
                "siteMinder",
                "bookingPal"
              ]
            }
          },
          "conditionalOverrides": {
            "description": "Set additional conditions for this tax",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "viewType": {
                    "type": "string",
                    "description": "1. The kind of conditions to set on the tax\n 2. When 'units' is 'FIXED' and 'quantifier' is 'guest'/'stay' then 'NiGHTS' and 'NIGHTS_IN_DATES' viewTypes are forbidden,\n 3. When 'units' is 'PERCENTAGE' then all viewTypes are allowed",
                    "enum": [
                      "NIGHTS",
                      "DATES",
                      "NIGHTS_IN_DATES",
                      "LOS"
                    ]
                  },
                  "rules": {
                    "description": "1. The dates and nights ranges that the tax condition will apply for.\n 2. When viewType is 'LOS' then rules is forbidden, else rules is required and can not be empty.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dateRange": {
                          "description": "1. When viewType is 'NIGHTS' then rules objects can not contain dateRanges.",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "from": {
                                  "type": "string",
                                  "example": "12-31"
                                },
                                "to": {
                                  "type": "string",
                                  "example": "02-01"
                                }
                              },
                              "required": [
                                "from",
                                "to"
                              ]
                            }
                          ]
                        },
                        "nightRanges": {
                          "description": "1. When viewType is 'DATES' then all rules objects must contain only 1 nightRange with no 'to' field and 'from' field equals 1.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "from": {
                                "type": "number",
                                "minimum": 1
                              },
                              "to": {
                                "type": "number",
                                "minimum": 1
                              },
                              "amount": {
                                "type": "number",
                                "minimum": 0
                              }
                            },
                            "required": [
                              "from",
                              "amount"
                            ]
                          }
                        }
                      },
                      "required": [
                        "nightRanges"
                      ]
                    }
                  },
                  "maxNightCountToApplyOn": {
                    "type": "number",
                    "minimum": 1,
                    "description": "1. The tax will be applied for all reservation that has night count smaller then 'maxNightCountToApplyOn'\n 2. Only when 'viewType' is 'LOS' then this field is allowed and required"
                  }
                },
                "required": [
                  "viewType"
                ]
              }
            ]
          },
          "name": {
            "type": "string",
            "maxLength": 40,
            "description": "The name for the tax, which will be used accross guesty. there can be no two taxes with the same name. to remove a name of existing tax pass empty string"
          }
        }
      },
      "UpsertTaxesLevelConfigurationDto": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "description": "1. The unit (listing) id",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "levelEntityType": {
            "type": "string",
            "description": "Sets from what entity will the taxes for reservations made on the unitType will be taken from",
            "enum": [
              "ACCOUNT",
              "UNIT_TYPE"
            ]
          }
        },
        "required": [
          "unitTypeId",
          "levelEntityType"
        ]
      },
      "TaxesLevelConfiguration": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "accountId": {
            "type": "string",
            "example": "623892d57f4f56afcb25587c"
          },
          "levelEntityType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "UNIT_TYPE"
            ]
          }
        },
        "required": [
          "unitTypeId",
          "accountId",
          "levelEntityType"
        ]
      },
      "RealizationDate": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          }
        },
        "required": [
          "date"
        ]
      },
      "PriceAdjustmentDto": {
        "type": "object",
        "properties": {
          "normalType": {
            "type": "string",
            "enum": [
              "AF",
              "AFO",
              "ARC",
              "LOSD",
              "GCD",
              "CO",
              "PRO",
              "CF",
              "PCM",
              "CM",
              "LT",
              "CT",
              "TT",
              "GST",
              "VAT",
              "TTH",
              "LGT",
              "HT",
              "TAF",
              "TRT",
              "AFE",
              "PF",
              "CFE",
              "RT",
              "ST",
              "COT",
              "OCT",
              "TOT",
              "HSHAT",
              "HST",
              "MAT",
              "SDC",
              "TAX",
              "OTHER"
            ],
            "description": "Read more about valid enums <a href=\"https://open-api-docs.guesty.com/docs/valid-enumerations\">here</a>"
          },
          "secondIdentifier": {
            "type": "string",
            "enum": [
              "ADDITIONAL_BED",
              "AIR_CONDITIONING",
              "EARLY_CHECK_IN",
              "LATE_CHECK_IN",
              "BABY_BED",
              "CLEANING",
              "CLUB_CARD",
              "CONCIERGE",
              "EARLY_CHECKOUT",
              "LATE_CHECKOUT",
              "DEPOSIT",
              "ELECTRICITY",
              "FOOD",
              "HEATING",
              "INTERNET",
              "LAUNDRY",
              "LINENS",
              "TOWELS",
              "MANAGEMENT",
              "OIL",
              "PARKING",
              "PET",
              "POOL",
              "POOL_HEATING",
              "RESORT",
              "SERVICE",
              "TOILETRIES",
              "TOUR",
              "TRANSPORTATION",
              "CAR_RENTAL",
              "WATER",
              "WOOD",
              "TRANSFER",
              "HOUSEKEEPING",
              "INSURANCE",
              "COMMUNITY",
              "CREDIT_CARD_PROCESSING_FEE",
              "DAMAGE_WAIVER",
              "VIP_SERVICES",
              "PAYMENT_FEE",
              "ADDITIONAL_CHARGE",
              "MISCELLANEOUS",
              "SHIPPING",
              "VALET",
              "ACTIVITIES",
              "FLIGHTS",
              "GIFT_BASKET",
              "SPA",
              "CHEF",
              "MEET_AND_GREET",
              "DOCK_FEE",
              "UTILITY_FEE",
              "HOT_TUB",
              "BOOKING_FEE",
              "BREAKFAST",
              "BEVERAGE",
              "MEAL",
              "WELLNESS",
              "MINIBAR",
              "BUSINESS_CENTER",
              "WIFI",
              "GUEST_SERVICE"
            ],
            "description": "When normalType AFE (Additional Fee) is selected, secondIdentifier is required, else it's forbidden. Second identifier is the type of the additional fee"
          },
          "amount": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "realizationDates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                }
              },
              "required": [
                "date"
              ]
            }
          }
        },
        "required": [
          "normalType",
          "amount"
        ]
      },
      "CreatePriceAdjustmentsDto": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string",
            "example": "623892d57f4f56afcb25587c"
          },
          "priceAdjustments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "normalType": {
                  "type": "string",
                  "enum": [
                    "AF",
                    "AFO",
                    "ARC",
                    "LOSD",
                    "GCD",
                    "CO",
                    "PRO",
                    "CF",
                    "PCM",
                    "CM",
                    "LT",
                    "CT",
                    "TT",
                    "GST",
                    "VAT",
                    "TTH",
                    "LGT",
                    "HT",
                    "TAF",
                    "TRT",
                    "AFE",
                    "PF",
                    "CFE",
                    "RT",
                    "ST",
                    "COT",
                    "OCT",
                    "TOT",
                    "HSHAT",
                    "HST",
                    "MAT",
                    "SDC",
                    "TAX",
                    "OTHER"
                  ],
                  "description": "Read more about valid enums <a href=\"https://open-api-docs.guesty.com/docs/valid-enumerations\">here</a>"
                },
                "secondIdentifier": {
                  "type": "string",
                  "enum": [
                    "ADDITIONAL_BED",
                    "AIR_CONDITIONING",
                    "EARLY_CHECK_IN",
                    "LATE_CHECK_IN",
                    "BABY_BED",
                    "CLEANING",
                    "CLUB_CARD",
                    "CONCIERGE",
                    "EARLY_CHECKOUT",
                    "LATE_CHECKOUT",
                    "DEPOSIT",
                    "ELECTRICITY",
                    "FOOD",
                    "HEATING",
                    "INTERNET",
                    "LAUNDRY",
                    "LINENS",
                    "TOWELS",
                    "MANAGEMENT",
                    "OIL",
                    "PARKING",
                    "PET",
                    "POOL",
                    "POOL_HEATING",
                    "RESORT",
                    "SERVICE",
                    "TOILETRIES",
                    "TOUR",
                    "TRANSPORTATION",
                    "CAR_RENTAL",
                    "WATER",
                    "WOOD",
                    "TRANSFER",
                    "HOUSEKEEPING",
                    "INSURANCE",
                    "COMMUNITY",
                    "CREDIT_CARD_PROCESSING_FEE",
                    "DAMAGE_WAIVER",
                    "VIP_SERVICES",
                    "PAYMENT_FEE",
                    "ADDITIONAL_CHARGE",
                    "MISCELLANEOUS",
                    "SHIPPING",
                    "VALET",
                    "ACTIVITIES",
                    "FLIGHTS",
                    "GIFT_BASKET",
                    "SPA",
                    "CHEF",
                    "MEET_AND_GREET",
                    "DOCK_FEE",
                    "UTILITY_FEE",
                    "HOT_TUB",
                    "BOOKING_FEE",
                    "BREAKFAST",
                    "BEVERAGE",
                    "MEAL",
                    "WELLNESS",
                    "MINIBAR",
                    "BUSINESS_CENTER",
                    "WIFI",
                    "GUEST_SERVICE"
                  ],
                  "description": "When normalType AFE (Additional Fee) is selected, secondIdentifier is required, else it's forbidden. Second identifier is the type of the additional fee"
                },
                "amount": {
                  "type": "number"
                },
                "description": {
                  "type": "string"
                },
                "realizationDates": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "date"
                    ]
                  }
                }
              },
              "required": [
                "normalType",
                "amount"
              ]
            }
          }
        },
        "required": [
          "reservationId",
          "priceAdjustments"
        ]
      },
      "PriceAdjustment": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "reservationId": {
            "type": "object"
          },
          "accountId": {
            "type": "object"
          },
          "amount": {
            "type": "number"
          },
          "normalType": {
            "type": "string"
          },
          "secondIdentifier": {
            "type": "string"
          },
          "creationMethod": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "attributedAt": {
            "format": "date-time",
            "type": "string"
          },
          "adjustmentFlow": {
            "type": "string"
          },
          "sourceName": {
            "type": "string"
          }
        },
        "required": [
          "_id",
          "reservationId",
          "accountId",
          "amount",
          "normalType",
          "creationMethod",
          "type",
          "userName",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateChannelCommissionConfigurationDto": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "isChannelCollect": {
            "type": "boolean"
          },
          "isAllowPMCTax": {
            "type": "boolean"
          }
        },
        "required": [
          "channel",
          "source",
          "isChannelCollect"
        ]
      },
      "ChannelCommissionConfiguration": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "example": "rentalsUnited"
          },
          "source": {
            "type": "string",
            "example": "bookingCom"
          },
          "isChannelCollect": {
            "type": "boolean"
          },
          "isAllowPMCTax": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "channel",
          "source",
          "isChannelCollect",
          "isAllowPMCTax",
          "isActive",
          "createdAt",
          "updatedAt"
        ]
      },
      "GetAllChannelCommissionConfigurationDto": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "isChannelCollect": {
            "type": "boolean"
          },
          "isAllowPMCTax": {
            "type": "boolean"
          },
          "_id": {
            "type": "string"
          }
        },
        "required": [
          "channel",
          "source",
          "isChannelCollect",
          "isAllowPMCTax",
          "_id"
        ]
      },
      "CommissionDefinition": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "The percentage of channel commission to be taken",
            "example": 5
          },
          "of": {
            "description": "The fields which the channel commission will be applied on.\nSupported values: PAYOUT, ACCOMMODATION_FARE, CLEANING_FEE, CANCELLATION_FEE, ADDITIONAL_BED, AIR_CONDITIONING, EARLY_CHECK_IN, LATE_CHECK_IN, BABY_BED, CLEANING, CLUB_CARD, CONCIERGE, EARLY_CHECKOUT, LATE_CHECKOUT, DEPOSIT, ELECTRICITY, FOOD, HEATING, INTERNET, LAUNDRY, LINENS, TOWELS, MANAGEMENT, OIL, PARKING, PET, POOL, POOL_HEATING, RESORT, SERVICE, TOILETRIES, TOUR, TRANSPORTATION, CAR_RENTAL, WATER, WOOD, TRANSFER, HOUSEKEEPING, INSURANCE, COMMUNITY, CREDIT_CARD_PROCESSING_FEE, DAMAGE_WAIVER, VIP_SERVICES, PAYMENT_FEE, ADDITIONAL_CHARGE, MISCELLANEOUS, SHIPPING, VALET, ACTIVITIES, FLIGHTS, GIFT_BASKET, SPA, CHEF, MEET_AND_GREET, DOCK_FEE, UTILITY_FEE, HOT_TUB, BOOKING_FEE, BREAKFAST, BEVERAGE, MEAL, WELLNESS, MINIBAR, BUSINESS_CENTER, WIFI, GUEST_SERVICE, LOCAL_TAX, CITY_TAX, VAT, GOODS_AND_SERVICES_TAX, TOURISM_TAX, OTHER, STATE_TAX, COUNTY_TAX, OCCUPANCY_TAX, TRANSIENT_OCCUPANCY_TAX, HOME_SHARING_TAX, HARMONIZED_SALES_TAX, MINIMUM_ALTERNATE_TAX",
            "example": [
              "ACCOMMODATION_FARE",
              "CLEANING_FEE",
              "LOCAL_TAX",
              "DAMAGE_WAIVER"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "value",
          "of"
        ]
      },
      "ChannelCommissionFormulaDto": {
        "type": "object",
        "properties": {
          "commission": {
            "description": "Set commission definition",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "The percentage of channel commission to be taken",
                    "example": 5
                  },
                  "of": {
                    "description": "The fields which the channel commission will be applied on.\nSupported values: PAYOUT, ACCOMMODATION_FARE, CLEANING_FEE, CANCELLATION_FEE, ADDITIONAL_BED, AIR_CONDITIONING, EARLY_CHECK_IN, LATE_CHECK_IN, BABY_BED, CLEANING, CLUB_CARD, CONCIERGE, EARLY_CHECKOUT, LATE_CHECKOUT, DEPOSIT, ELECTRICITY, FOOD, HEATING, INTERNET, LAUNDRY, LINENS, TOWELS, MANAGEMENT, OIL, PARKING, PET, POOL, POOL_HEATING, RESORT, SERVICE, TOILETRIES, TOUR, TRANSPORTATION, CAR_RENTAL, WATER, WOOD, TRANSFER, HOUSEKEEPING, INSURANCE, COMMUNITY, CREDIT_CARD_PROCESSING_FEE, DAMAGE_WAIVER, VIP_SERVICES, PAYMENT_FEE, ADDITIONAL_CHARGE, MISCELLANEOUS, SHIPPING, VALET, ACTIVITIES, FLIGHTS, GIFT_BASKET, SPA, CHEF, MEET_AND_GREET, DOCK_FEE, UTILITY_FEE, HOT_TUB, BOOKING_FEE, BREAKFAST, BEVERAGE, MEAL, WELLNESS, MINIBAR, BUSINESS_CENTER, WIFI, GUEST_SERVICE, LOCAL_TAX, CITY_TAX, VAT, GOODS_AND_SERVICES_TAX, TOURISM_TAX, OTHER, STATE_TAX, COUNTY_TAX, OCCUPANCY_TAX, TRANSIENT_OCCUPANCY_TAX, HOME_SHARING_TAX, HARMONIZED_SALES_TAX, MINIMUM_ALTERNATE_TAX",
                    "example": [
                      "ACCOMMODATION_FARE",
                      "CLEANING_FEE",
                      "LOCAL_TAX",
                      "DAMAGE_WAIVER"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "value",
                  "of"
                ]
              }
            ]
          },
          "tax": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "The tax applied on channel commission",
            "example": 3
          }
        }
      },
      "LegacyCommissionDefinition": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "The percentage of channel commission to be taken",
            "example": 5
          },
          "of": {
            "description": "The fields which the channel commission will be applied on.\nSupported values: fareAccommodation, fareCleaning, payout",
            "example": [
              "fareAccommodation",
              "fareCleaning"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "value",
          "of"
        ]
      },
      "LegacyChannelCommissionFormulaDto": {
        "type": "object",
        "properties": {
          "commission": {
            "description": "Set commission definition",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "The percentage of channel commission to be taken",
                    "example": 5
                  },
                  "of": {
                    "description": "The fields which the channel commission will be applied on.\nSupported values: fareAccommodation, fareCleaning, payout",
                    "example": [
                      "fareAccommodation",
                      "fareCleaning"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "value",
                  "of"
                ]
              }
            ]
          },
          "tax": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "The tax applied on channel commission",
            "example": 3
          }
        }
      },
      "ManualChannelCommissionFormulaDto": {
        "type": "object",
        "properties": {
          "commission": {
            "description": "Set commission definition",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "The percentage of channel commission to be taken",
                    "example": 5
                  },
                  "of": {
                    "description": "The fields which the channel commission will be applied on.\nSupported values: PAYOUT, ACCOMMODATION_FARE, CLEANING_FEE, CANCELLATION_FEE, ADDITIONAL_BED, AIR_CONDITIONING, EARLY_CHECK_IN, LATE_CHECK_IN, BABY_BED, CLEANING, CLUB_CARD, CONCIERGE, EARLY_CHECKOUT, LATE_CHECKOUT, DEPOSIT, ELECTRICITY, FOOD, HEATING, INTERNET, LAUNDRY, LINENS, TOWELS, MANAGEMENT, OIL, PARKING, PET, POOL, POOL_HEATING, RESORT, SERVICE, TOILETRIES, TOUR, TRANSPORTATION, CAR_RENTAL, WATER, WOOD, TRANSFER, HOUSEKEEPING, INSURANCE, COMMUNITY, CREDIT_CARD_PROCESSING_FEE, DAMAGE_WAIVER, VIP_SERVICES, PAYMENT_FEE, ADDITIONAL_CHARGE, MISCELLANEOUS, SHIPPING, VALET, ACTIVITIES, FLIGHTS, GIFT_BASKET, SPA, CHEF, MEET_AND_GREET, DOCK_FEE, UTILITY_FEE, HOT_TUB, BOOKING_FEE, BREAKFAST, BEVERAGE, MEAL, WELLNESS, MINIBAR, BUSINESS_CENTER, WIFI, GUEST_SERVICE, LOCAL_TAX, CITY_TAX, VAT, GOODS_AND_SERVICES_TAX, TOURISM_TAX, OTHER, STATE_TAX, COUNTY_TAX, OCCUPANCY_TAX, TRANSIENT_OCCUPANCY_TAX, HOME_SHARING_TAX, HARMONIZED_SALES_TAX, MINIMUM_ALTERNATE_TAX",
                    "example": [
                      "ACCOMMODATION_FARE",
                      "CLEANING_FEE",
                      "LOCAL_TAX",
                      "DAMAGE_WAIVER"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "value",
                  "of"
                ]
              }
            ]
          },
          "tax": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "The tax applied on channel commission",
            "example": 3
          },
          "source": {
            "type": "string",
            "description": "The name of source",
            "example": "my source"
          },
          "isPreDeduct": {
            "type": "boolean",
            "description": "Pre deduct the channel commission if you want Guesty to automatically add a negative Host channel fee invoice item for every reservation created by this source.",
            "example": false
          }
        },
        "required": [
          "source",
          "isPreDeduct"
        ]
      },
      "Map": {
        "type": "object",
        "properties": {}
      },
      "UpdateChannelCommissionDto": {
        "type": "object",
        "properties": {
          "manual": {
            "description": "Objects that will be provided in manual array will be upserted to the existing array by source. Limited to 200 items in one request.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "commission": {
                  "description": "Set commission definition",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100,
                          "description": "The percentage of channel commission to be taken",
                          "example": 5
                        },
                        "of": {
                          "description": "The fields which the channel commission will be applied on.\nSupported values: PAYOUT, ACCOMMODATION_FARE, CLEANING_FEE, CANCELLATION_FEE, ADDITIONAL_BED, AIR_CONDITIONING, EARLY_CHECK_IN, LATE_CHECK_IN, BABY_BED, CLEANING, CLUB_CARD, CONCIERGE, EARLY_CHECKOUT, LATE_CHECKOUT, DEPOSIT, ELECTRICITY, FOOD, HEATING, INTERNET, LAUNDRY, LINENS, TOWELS, MANAGEMENT, OIL, PARKING, PET, POOL, POOL_HEATING, RESORT, SERVICE, TOILETRIES, TOUR, TRANSPORTATION, CAR_RENTAL, WATER, WOOD, TRANSFER, HOUSEKEEPING, INSURANCE, COMMUNITY, CREDIT_CARD_PROCESSING_FEE, DAMAGE_WAIVER, VIP_SERVICES, PAYMENT_FEE, ADDITIONAL_CHARGE, MISCELLANEOUS, SHIPPING, VALET, ACTIVITIES, FLIGHTS, GIFT_BASKET, SPA, CHEF, MEET_AND_GREET, DOCK_FEE, UTILITY_FEE, HOT_TUB, BOOKING_FEE, BREAKFAST, BEVERAGE, MEAL, WELLNESS, MINIBAR, BUSINESS_CENTER, WIFI, GUEST_SERVICE, LOCAL_TAX, CITY_TAX, VAT, GOODS_AND_SERVICES_TAX, TOURISM_TAX, OTHER, STATE_TAX, COUNTY_TAX, OCCUPANCY_TAX, TRANSIENT_OCCUPANCY_TAX, HOME_SHARING_TAX, HARMONIZED_SALES_TAX, MINIMUM_ALTERNATE_TAX",
                          "example": [
                            "ACCOMMODATION_FARE",
                            "CLEANING_FEE",
                            "LOCAL_TAX",
                            "DAMAGE_WAIVER"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "value",
                        "of"
                      ]
                    }
                  ]
                },
                "tax": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "description": "The tax applied on channel commission",
                  "example": 3
                },
                "source": {
                  "type": "string",
                  "description": "The name of source",
                  "example": "my source"
                },
                "isPreDeduct": {
                  "type": "boolean",
                  "description": "Pre deduct the channel commission if you want Guesty to automatically add a negative Host channel fee invoice item for every reservation created by this source.",
                  "example": false
                }
              },
              "required": [
                "source",
                "isPreDeduct"
              ]
            }
          },
          "rentalsUnited": {
            "description": "Channel commission formula",
            "allOf": [
              {
                "type": "object",
                "properties": {}
              }
            ]
          }
        }
      },
      "UpdateListingChannelCommissionDto": {
        "type": "object",
        "properties": {
          "manual": {
            "description": "Objects that will be provided in manual array will be upserted to the existing array by source. Limited to 200 items in one request.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "commission": {
                  "description": "Set commission definition",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100,
                          "description": "The percentage of channel commission to be taken",
                          "example": 5
                        },
                        "of": {
                          "description": "The fields which the channel commission will be applied on.\nSupported values: PAYOUT, ACCOMMODATION_FARE, CLEANING_FEE, CANCELLATION_FEE, ADDITIONAL_BED, AIR_CONDITIONING, EARLY_CHECK_IN, LATE_CHECK_IN, BABY_BED, CLEANING, CLUB_CARD, CONCIERGE, EARLY_CHECKOUT, LATE_CHECKOUT, DEPOSIT, ELECTRICITY, FOOD, HEATING, INTERNET, LAUNDRY, LINENS, TOWELS, MANAGEMENT, OIL, PARKING, PET, POOL, POOL_HEATING, RESORT, SERVICE, TOILETRIES, TOUR, TRANSPORTATION, CAR_RENTAL, WATER, WOOD, TRANSFER, HOUSEKEEPING, INSURANCE, COMMUNITY, CREDIT_CARD_PROCESSING_FEE, DAMAGE_WAIVER, VIP_SERVICES, PAYMENT_FEE, ADDITIONAL_CHARGE, MISCELLANEOUS, SHIPPING, VALET, ACTIVITIES, FLIGHTS, GIFT_BASKET, SPA, CHEF, MEET_AND_GREET, DOCK_FEE, UTILITY_FEE, HOT_TUB, BOOKING_FEE, BREAKFAST, BEVERAGE, MEAL, WELLNESS, MINIBAR, BUSINESS_CENTER, WIFI, GUEST_SERVICE, LOCAL_TAX, CITY_TAX, VAT, GOODS_AND_SERVICES_TAX, TOURISM_TAX, OTHER, STATE_TAX, COUNTY_TAX, OCCUPANCY_TAX, TRANSIENT_OCCUPANCY_TAX, HOME_SHARING_TAX, HARMONIZED_SALES_TAX, MINIMUM_ALTERNATE_TAX",
                          "example": [
                            "ACCOMMODATION_FARE",
                            "CLEANING_FEE",
                            "LOCAL_TAX",
                            "DAMAGE_WAIVER"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "value",
                        "of"
                      ]
                    }
                  ]
                },
                "tax": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "description": "The tax applied on channel commission",
                  "example": 3
                },
                "source": {
                  "type": "string",
                  "description": "The name of source",
                  "example": "my source"
                },
                "isPreDeduct": {
                  "type": "boolean",
                  "description": "Pre deduct the channel commission if you want Guesty to automatically add a negative Host channel fee invoice item for every reservation created by this source.",
                  "example": false
                }
              },
              "required": [
                "source",
                "isPreDeduct"
              ]
            }
          },
          "rentalsUnited": {
            "description": "Channel commission formula",
            "allOf": [
              {
                "type": "object",
                "properties": {}
              }
            ]
          },
          "listingId": {
            "type": "string"
          },
          "useAccountSettings": {
            "type": "boolean"
          }
        },
        "required": [
          "listingId",
          "useAccountSettings"
        ]
      },
      "UpdateListingsChannelCommissionDto": {
        "type": "object",
        "properties": {
          "channelCommissions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "manual": {
                  "description": "Objects that will be provided in manual array will be upserted to the existing array by source. Limited to 200 items in one request.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "commission": {
                        "description": "Set commission definition",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 100,
                                "description": "The percentage of channel commission to be taken",
                                "example": 5
                              },
                              "of": {
                                "description": "The fields which the channel commission will be applied on.\nSupported values: PAYOUT, ACCOMMODATION_FARE, CLEANING_FEE, CANCELLATION_FEE, ADDITIONAL_BED, AIR_CONDITIONING, EARLY_CHECK_IN, LATE_CHECK_IN, BABY_BED, CLEANING, CLUB_CARD, CONCIERGE, EARLY_CHECKOUT, LATE_CHECKOUT, DEPOSIT, ELECTRICITY, FOOD, HEATING, INTERNET, LAUNDRY, LINENS, TOWELS, MANAGEMENT, OIL, PARKING, PET, POOL, POOL_HEATING, RESORT, SERVICE, TOILETRIES, TOUR, TRANSPORTATION, CAR_RENTAL, WATER, WOOD, TRANSFER, HOUSEKEEPING, INSURANCE, COMMUNITY, CREDIT_CARD_PROCESSING_FEE, DAMAGE_WAIVER, VIP_SERVICES, PAYMENT_FEE, ADDITIONAL_CHARGE, MISCELLANEOUS, SHIPPING, VALET, ACTIVITIES, FLIGHTS, GIFT_BASKET, SPA, CHEF, MEET_AND_GREET, DOCK_FEE, UTILITY_FEE, HOT_TUB, BOOKING_FEE, BREAKFAST, BEVERAGE, MEAL, WELLNESS, MINIBAR, BUSINESS_CENTER, WIFI, GUEST_SERVICE, LOCAL_TAX, CITY_TAX, VAT, GOODS_AND_SERVICES_TAX, TOURISM_TAX, OTHER, STATE_TAX, COUNTY_TAX, OCCUPANCY_TAX, TRANSIENT_OCCUPANCY_TAX, HOME_SHARING_TAX, HARMONIZED_SALES_TAX, MINIMUM_ALTERNATE_TAX",
                                "example": [
                                  "ACCOMMODATION_FARE",
                                  "CLEANING_FEE",
                                  "LOCAL_TAX",
                                  "DAMAGE_WAIVER"
                                ],
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "value",
                              "of"
                            ]
                          }
                        ]
                      },
                      "tax": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100,
                        "description": "The tax applied on channel commission",
                        "example": 3
                      },
                      "source": {
                        "type": "string",
                        "description": "The name of source",
                        "example": "my source"
                      },
                      "isPreDeduct": {
                        "type": "boolean",
                        "description": "Pre deduct the channel commission if you want Guesty to automatically add a negative Host channel fee invoice item for every reservation created by this source.",
                        "example": false
                      }
                    },
                    "required": [
                      "source",
                      "isPreDeduct"
                    ]
                  }
                },
                "rentalsUnited": {
                  "description": "Channel commission formula",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {}
                    }
                  ]
                },
                "listingId": {
                  "type": "string"
                },
                "useAccountSettings": {
                  "type": "boolean"
                }
              },
              "required": [
                "listingId",
                "useAccountSettings"
              ]
            }
          }
        },
        "required": [
          "channelCommissions"
        ]
      },
      "ChannelCommissionDto": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "description": "1. The unit (listing) id",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "commission": {
            "description": "Set commission definition",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "The percentage of channel commission to be taken",
                    "example": 5
                  },
                  "of": {
                    "description": "The fields which the channel commission will be applied on.\nSupported values: PAYOUT, ACCOMMODATION_FARE, CLEANING_FEE, CANCELLATION_FEE, ADDITIONAL_BED, AIR_CONDITIONING, EARLY_CHECK_IN, LATE_CHECK_IN, BABY_BED, CLEANING, CLUB_CARD, CONCIERGE, EARLY_CHECKOUT, LATE_CHECKOUT, DEPOSIT, ELECTRICITY, FOOD, HEATING, INTERNET, LAUNDRY, LINENS, TOWELS, MANAGEMENT, OIL, PARKING, PET, POOL, POOL_HEATING, RESORT, SERVICE, TOILETRIES, TOUR, TRANSPORTATION, CAR_RENTAL, WATER, WOOD, TRANSFER, HOUSEKEEPING, INSURANCE, COMMUNITY, CREDIT_CARD_PROCESSING_FEE, DAMAGE_WAIVER, VIP_SERVICES, PAYMENT_FEE, ADDITIONAL_CHARGE, MISCELLANEOUS, SHIPPING, VALET, ACTIVITIES, FLIGHTS, GIFT_BASKET, SPA, CHEF, MEET_AND_GREET, DOCK_FEE, UTILITY_FEE, HOT_TUB, BOOKING_FEE, BREAKFAST, BEVERAGE, MEAL, WELLNESS, MINIBAR, BUSINESS_CENTER, WIFI, GUEST_SERVICE, LOCAL_TAX, CITY_TAX, VAT, GOODS_AND_SERVICES_TAX, TOURISM_TAX, OTHER, STATE_TAX, COUNTY_TAX, OCCUPANCY_TAX, TRANSIENT_OCCUPANCY_TAX, HOME_SHARING_TAX, HARMONIZED_SALES_TAX, MINIMUM_ALTERNATE_TAX",
                    "example": [
                      "ACCOMMODATION_FARE",
                      "CLEANING_FEE",
                      "LOCAL_TAX",
                      "DAMAGE_WAIVER"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "value",
                  "of"
                ]
              }
            ]
          },
          "tax": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "The tax applied on channel commission",
            "example": 3
          },
          "channel": {
            "type": "string",
            "description": "The name of source",
            "example": "my source"
          },
          "source": {
            "type": "string",
            "description": "The name of source",
            "example": "my source"
          },
          "isPreDeduct": {
            "type": "boolean",
            "default": false,
            "description": "Pre deduct the channel commission if you want Guesty to automatically add a negative Host channel fee invoice item for every reservation created by this source.",
            "example": false
          }
        },
        "required": [
          "tax",
          "channel",
          "source"
        ]
      },
      "CommissionDTO": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "example": 10
          },
          "of": {
            "example": [
              "PAYOUT"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "value",
          "of"
        ]
      },
      "ChannelCommissionItemDTO": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5f3f7b2f5d7b9b001f6f6c9d"
          },
          "commission": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "example": 10
              },
              "of": {
                "example": [
                  "PAYOUT"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "value",
              "of"
            ]
          },
          "tax": {
            "type": "number",
            "example": 10
          },
          "source": {
            "type": "string",
            "example": "homeaway2"
          },
          "channel": {
            "type": "string",
            "example": "homeaway2"
          },
          "isPreDeduct": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "_id",
          "commission",
          "tax",
          "source",
          "channel",
          "isPreDeduct"
        ]
      },
      "LevelConfigurationOutputDto": {
        "type": "object",
        "properties": {
          "levelEntityType": {
            "type": "string",
            "description": "Sets from what entity will the channel commission for reservations made on the unitType will be taken from",
            "enum": [
              "ACCOUNT",
              "UNIT_TYPE"
            ],
            "example": "UNIT_TYPE"
          },
          "unitTypeId": {
            "type": "string",
            "example": "65d755470a2416814addd241"
          },
          "accountId": {
            "type": "string",
            "example": "65d7553d0a2416814addd242"
          }
        },
        "required": [
          "levelEntityType",
          "unitTypeId",
          "accountId"
        ]
      },
      "LevelConfigurationDto": {
        "type": "object",
        "properties": {
          "levelEntityType": {
            "type": "string",
            "description": "Sets from what entity will the channel commission for reservations made on the unitType will be taken from",
            "enum": [
              "ACCOUNT",
              "UNIT_TYPE"
            ],
            "example": "UNIT_TYPE"
          }
        },
        "required": [
          "levelEntityType"
        ]
      },
      "CreateInvoiceItemDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the invoice item"
          },
          "amount": {
            "type": "number",
            "description": "Price to be charged for the invoice item"
          },
          "description": {
            "type": "string",
            "description": "Description of the invoice item"
          },
          "secondIdentifier": {
            "type": "string",
            "description": "When normalType AFE (Additional Fee) is selected, secondIdentifier is required, else it's forbidden. Second identifier is the type of the additional fee",
            "enum": [
              "ADDITIONAL_BED",
              "AIR_CONDITIONING",
              "EARLY_CHECK_IN",
              "LATE_CHECK_IN",
              "BABY_BED",
              "CLEANING",
              "CLUB_CARD",
              "CONCIERGE",
              "EARLY_CHECKOUT",
              "LATE_CHECKOUT",
              "DEPOSIT",
              "ELECTRICITY",
              "FOOD",
              "HEATING",
              "INTERNET",
              "LAUNDRY",
              "LINENS",
              "TOWELS",
              "MANAGEMENT",
              "OIL",
              "PARKING",
              "PET",
              "POOL",
              "POOL_HEATING",
              "RESORT",
              "SERVICE",
              "TOILETRIES",
              "TOUR",
              "TRANSPORTATION",
              "CAR_RENTAL",
              "WATER",
              "WOOD",
              "TRANSFER",
              "HOUSEKEEPING",
              "INSURANCE",
              "COMMUNITY",
              "CREDIT_CARD_PROCESSING_FEE",
              "DAMAGE_WAIVER",
              "VIP_SERVICES",
              "PAYMENT_FEE",
              "ADDITIONAL_CHARGE",
              "MISCELLANEOUS",
              "SHIPPING",
              "VALET",
              "ACTIVITIES",
              "FLIGHTS",
              "GIFT_BASKET",
              "SPA",
              "CHEF",
              "MEET_AND_GREET",
              "DOCK_FEE",
              "UTILITY_FEE",
              "HOT_TUB",
              "BOOKING_FEE",
              "BREAKFAST",
              "BEVERAGE",
              "MEAL",
              "WELLNESS",
              "MINIBAR",
              "BUSINESS_CENTER",
              "WIFI",
              "GUEST_SERVICE"
            ]
          },
          "normalType": {
            "type": "string",
            "description": "Invoice item type identifier. Read more about valid enums <a href=\"https://open-api-docs.guesty.com/docs/valid-enumerations\">here</a>",
            "enum": [
              "CF",
              "CFE",
              "PCM",
              "LT",
              "CT",
              "VAT",
              "GST",
              "TT",
              "TAX",
              "ST",
              "COT",
              "OCT",
              "TOT",
              "HSHAT",
              "HST",
              "MAT",
              "AFE"
            ]
          },
          "realizationDates": {
            "description": "The date in which the invoice item fee is to be realized",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                }
              },
              "required": [
                "date"
              ]
            }
          }
        },
        "required": [
          "title",
          "amount",
          "normalType"
        ]
      },
      "BaseResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "default": [],
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ExecuteQueryDto": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          }
        },
        "required": [
          "query"
        ]
      },
      "CheckInFormSummary": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Url to fetch check-in form summary PDF. Valid 1 hour"
          },
          "fileName": {
            "type": "string",
            "example": "checkinform_My Guest App_James_Doe.pdf",
            "description": "Name of check-in form summary PDF"
          }
        },
        "required": [
          "url",
          "fileName"
        ]
      },
      "ExternalProfile": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "airbnb"
            ],
            "type": "string"
          },
          "url": {
            "type": "string",
            "enum": [
              "https://www.airbnb.com"
            ],
            "description": "The url must include “https://” prefix"
          }
        }
      },
      "CreateGuestOpenApiDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "hometown": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "picture": {
            "type": "object",
            "description": "A link to guest’s picture in different sizes"
          },
          "email": {
            "type": "string",
            "description": "The main contact email of the guest"
          },
          "emails": {
            "description": "List of additional emails of the guest",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phone": {
            "type": "string",
            "description": "The main contact phone number"
          },
          "phones": {
            "description": "List of additional phone numbers of the guest",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notes": {
            "type": "string",
            "description": "Attention notes about the guest, describing important pieces of information about the guest, to review for all reservations (e.g. “Requires accessibility equipment”). Displayed as “Attention notes” in the user interface."
          },
          "contactType": {
            "enum": [
              "guest",
              "owner"
            ],
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "vip",
                "friendsAndFamily",
                "staff",
                "management",
                "blocklisted",
                "loyaltyProgram"
              ]
            },
            "description": "Tags for describing the guest at a glance + show the enum for the field to show the allowed options"
          },
          "goodToKnowNotes": {
            "type": "string",
            "description": "“Good to know” notes about the guest. Notes to help capture facts about the guest that will help the team to personalize the guest’s stays (e.g. “Big football fan”)"
          },
          "preferredLanguage": {
            "enum": [
              "en",
              "es",
              "fr",
              "ma",
              "aa",
              "ab",
              "ae",
              "af",
              "ak",
              "am",
              "an",
              "ar",
              "as",
              "av",
              "ay",
              "az",
              "ba",
              "be",
              "bg",
              "bh",
              "bi",
              "bm",
              "bn",
              "bo",
              "br",
              "bs",
              "ca",
              "ce",
              "ch",
              "co",
              "cr",
              "cs",
              "cu",
              "cv",
              "cy",
              "da",
              "de",
              "dv",
              "dz",
              "ee",
              "el",
              "eo",
              "et",
              "eu",
              "fa",
              "ff",
              "fi",
              "fj",
              "fo",
              "fy",
              "ga",
              "gd",
              "gl",
              "gn",
              "gu",
              "gv",
              "ha",
              "he",
              "hi",
              "ho",
              "hr",
              "ht",
              "hu",
              "hy",
              "hz",
              "ia",
              "id",
              "ie",
              "ig",
              "ii",
              "ik",
              "io",
              "is",
              "it",
              "iu",
              "ja",
              "jv",
              "ka",
              "kg",
              "ki",
              "kj",
              "kk",
              "kl",
              "km",
              "kn",
              "ko",
              "kr",
              "ks",
              "ku",
              "kv",
              "kw",
              "ky",
              "la",
              "lb",
              "lg",
              "li",
              "ln",
              "lo",
              "lt",
              "lu",
              "lv",
              "mg",
              "mh",
              "mi",
              "mk",
              "ml",
              "mn",
              "mr",
              "ms",
              "mt",
              "my",
              "na",
              "nb",
              "nd",
              "ne",
              "ng",
              "nl",
              "nn",
              "no",
              "nr",
              "nv",
              "ny",
              "oc",
              "oj",
              "om",
              "or",
              "os",
              "pa",
              "pi",
              "pl",
              "ps",
              "pt",
              "qu",
              "rm",
              "rn",
              "ro",
              "ru",
              "rw",
              "sa",
              "sc",
              "sd",
              "se",
              "sg",
              "si",
              "sk",
              "sl",
              "sm",
              "sn",
              "so",
              "sq",
              "sr",
              "ss",
              "st",
              "su",
              "sv",
              "sw",
              "ta",
              "te",
              "tg",
              "th",
              "ti",
              "tk",
              "tl",
              "tn",
              "to",
              "tr",
              "ts",
              "tt",
              "tw",
              "ty",
              "ug",
              "uk",
              "ur",
              "uz",
              "ve",
              "vi",
              "vo",
              "wa",
              "wo",
              "xh",
              "yi",
              "yo",
              "za",
              "zh",
              "zu"
            ],
            "type": "string"
          },
          "birthday": {
            "format": "date-time",
            "type": "string"
          },
          "gender": {
            "enum": [
              "male",
              "female",
              "other"
            ],
            "type": "string"
          },
          "maritalStatus": {
            "enum": [
              "single",
              "married",
              "widowed",
              "separated",
              "divorced"
            ],
            "type": "string"
          },
          "dietaryPreferences": {
            "description": "You can pick one of the predefined options, or create a new one for your account",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allergies": {
            "description": "You can pick one of the predefined options, or create a new one for your account",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "interests": {
            "description": "You can pick one of the predefined options, or create a new one for your account",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pronouns": {
            "enum": [
              "he/him/his",
              "she/her/hers",
              "they/them/their",
              "xe/xem/xyr"
            ],
            "type": "string"
          },
          "kids": {
            "type": "number",
            "minimum": 0
          },
          "passportNumber": {
            "type": "string",
            "maxLength": 50
          },
          "identityNumber": {
            "type": "string",
            "maxLength": 50,
            "description": "Identity Card Number"
          },
          "nationality": {
            "enum": [
              "af",
              "ax",
              "al",
              "dz",
              "as",
              "ad",
              "ao",
              "ai",
              "aq",
              "ag",
              "ar",
              "am",
              "aw",
              "au",
              "at",
              "az",
              "bs",
              "bh",
              "bd",
              "bb",
              "by",
              "be",
              "bz",
              "bj",
              "bm",
              "bt",
              "bo",
              "bq",
              "ba",
              "bw",
              "bv",
              "br",
              "io",
              "bn",
              "bg",
              "bf",
              "bi",
              "kh",
              "cm",
              "ca",
              "cv",
              "ky",
              "cf",
              "td",
              "cl",
              "cn",
              "cx",
              "cc",
              "co",
              "km",
              "cg",
              "cd",
              "ck",
              "cr",
              "ci",
              "hr",
              "cu",
              "cw",
              "cy",
              "cz",
              "dk",
              "dj",
              "dm",
              "do",
              "ec",
              "eg",
              "sv",
              "gq",
              "er",
              "ee",
              "et",
              "fk",
              "fo",
              "fj",
              "fi",
              "fr",
              "gf",
              "pf",
              "tf",
              "ga",
              "gm",
              "ge",
              "de",
              "gh",
              "gi",
              "gr",
              "gl",
              "gd",
              "gp",
              "gu",
              "gt",
              "gg",
              "gn",
              "gw",
              "gy",
              "ht",
              "hm",
              "va",
              "hn",
              "hk",
              "hu",
              "is",
              "in",
              "id",
              "ir",
              "iq",
              "ie",
              "im",
              "il",
              "it",
              "jm",
              "jp",
              "je",
              "jo",
              "kz",
              "ke",
              "ki",
              "kp",
              "kr",
              "xk",
              "kw",
              "kg",
              "la",
              "lv",
              "lb",
              "ls",
              "lr",
              "ly",
              "li",
              "lt",
              "lu",
              "mo",
              "mk",
              "mg",
              "mw",
              "my",
              "mv",
              "ml",
              "mt",
              "mh",
              "mq",
              "mr",
              "mu",
              "yt",
              "mx",
              "fm",
              "md",
              "mc",
              "mn",
              "me",
              "ms",
              "ma",
              "mz",
              "mm",
              "na",
              "nr",
              "np",
              "nl",
              "an",
              "nc",
              "nz",
              "ni",
              "ne",
              "ng",
              "nu",
              "nf",
              "mp",
              "no",
              "om",
              "pk",
              "pw",
              "ps",
              "pa",
              "pg",
              "py",
              "pe",
              "ph",
              "pn",
              "pl",
              "pt",
              "pr",
              "qa",
              "re",
              "ro",
              "ru",
              "rw",
              "bl",
              "sh",
              "kn",
              "lc",
              "mf",
              "pm",
              "vc",
              "ws",
              "sm",
              "st",
              "sa",
              "sn",
              "rs",
              "cs",
              "sc",
              "sl",
              "sg",
              "sx",
              "sk",
              "si",
              "sb",
              "so",
              "za",
              "gs",
              "ss",
              "es",
              "lk",
              "sd",
              "sr",
              "sj",
              "sz",
              "se",
              "ch",
              "sy",
              "tw",
              "tj",
              "tz",
              "th",
              "tl",
              "tg",
              "tk",
              "to",
              "tt",
              "tn",
              "tr",
              "tm",
              "tc",
              "tv",
              "ug",
              "ua",
              "ae",
              "gb",
              "us",
              "um",
              "uy",
              "uz",
              "vu",
              "ve",
              "vn",
              "vg",
              "vi",
              "wf",
              "eh",
              "ye",
              "zm",
              "zw"
            ],
            "type": "string"
          },
          "otaLinks": {
            "description": "A link to the guest’s profile on an OTA",
            "example": [
              {
                "type": "airbnb",
                "url": "https://www.airbnb.com"
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "enum": [
                    "airbnb"
                  ],
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "enum": [
                    "https://www.airbnb.com"
                  ],
                  "description": "The url must include “https://” prefix"
                }
              }
            }
          }
        },
        "required": [
          "firstName",
          "lastName"
        ]
      },
      "GuestsResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5e17287629e111001f7d3f4d"
          },
          "firstName": {
            "type": "string",
            "example": "Rick"
          },
          "lastName": {
            "type": "string",
            "example": "Sanchez"
          },
          "fullName": {
            "type": "string",
            "example": "Rick Sanchez"
          },
          "hometown": {
            "type": "string",
            "example": "New York"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2022-08-12T16:00:00.000+03:00"
          },
          "address": {
            "type": "object",
            "example": {
              "street": "Eliezer Kaplan 2",
              "city": "Tel Aviv",
              "country": "Israel",
              "countryCode": "il",
              "zipCode": "583287342"
            }
          },
          "picture": {
            "type": "object",
            "description": "A link to guest’s picture in different sizes",
            "example": {
              "thumbnail": "//guestybookings.s3.amazonaws.com/guests/thumbnail_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
              "large": "//guestybookings.s3.amazonaws.com/guests/large_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
              "regular": "//guestybookings.s3.amazonaws.com/guests/regular_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
            }
          },
          "email": {
            "type": "string",
            "description": "The main contact email of the guest",
            "example": "email@email.com"
          },
          "emails": {
            "description": "List of additional emails of the guest",
            "example": [
              "email@email.com",
              "email2@email.com"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phone": {
            "type": "string",
            "description": "The main contact phone number",
            "example": "972234567454"
          },
          "phones": {
            "description": "List of additional phone numbers of the guest",
            "example": [
              "972234567454",
              "972234567890"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notes": {
            "type": "string",
            "description": "Attention notes about the guest, describing important pieces of information about the guest, to review for all reservations (e.g. “Requires accessibility equipment”)",
            "example": "This guest is rich"
          },
          "tags": {
            "description": "Tags for describing the guest at a glance + show the enum for the field to show the allowed options",
            "example": [
              "blocklisted",
              "VIP"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "goodToKnowNotes": {
            "type": "string",
            "description": "“Good to know” notes about the guest. Notes to help capture facts about the guest that will help the team to personalize the guest’s stays (e.g. “Big football fan”)",
            "example": "This guest is alleric to peanuts"
          },
          "preferredLanguage": {
            "type": "string",
            "example": [
              "en",
              "es",
              "fr"
            ]
          },
          "birthday": {
            "format": "date-time",
            "type": "string",
            "example": "2017-08-12T16:00:00.000+03:00"
          },
          "gender": {
            "type": "string",
            "example": "2017-08-12T16:00:00.000+03:00"
          },
          "maritalStatus": {
            "type": "string",
            "example": "single"
          },
          "dietaryPreferences": {
            "description": "You can pick one of the predefined options, or create a new one for your account",
            "example": [
              "vegan",
              "veggies"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allergies": {
            "description": "You can pick one of the predefined options, or create a new one for your account",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "interests": {
            "example": [
              "sports"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pronouns": {
            "type": "string",
            "example": "he/him/his"
          },
          "otaLinks": {
            "description": "A link to the guest’s profile on an OTA",
            "example": [
              {
                "type": "airbnb",
                "url": "https://www.airbnb.com"
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "enum": [
                    "airbnb"
                  ],
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "enum": [
                    "https://www.airbnb.com"
                  ],
                  "description": "The url must include “https://” prefix"
                }
              }
            }
          },
          "kids": {
            "type": "number",
            "minimum": 0,
            "example": 3
          },
          "passportNumber": {
            "type": "string",
            "maxLength": 50,
            "example": "23424353"
          },
          "identityNumber": {
            "type": "string",
            "maxLength": 50,
            "example": "324325121"
          },
          "nationality": {
            "type": "string",
            "example": "il"
          },
          "contactType": {
            "type": "string",
            "example": "guest"
          },
          "airbnb2": {
            "type": "object",
            "example": {
              "index": "index",
              "id": 4246064595217,
              "url": "https://www.airbnb.com",
              "firstName": "Rick"
            }
          },
          "rentalsUnited": {
            "type": "object",
            "example": {
              "firstName": "Rick",
              "lastName": "Sanchez",
              "fullName": "Rick Sanchez",
              "failedPaymentMethod": "failed payment method"
            }
          },
          "bookingCom": {
            "type": "object",
            "example": {
              "firstName": "Rick",
              "lastName": "Sanchez",
              "fullName": "Rick Sanchez",
              "url": "https://www.booking.com"
            }
          },
          "homeAway": {
            "type": "object",
            "example": {
              "title": "title",
              "firstName": "Rick",
              "lastName": "Sanchez",
              "fullName": "Rick Sanchez",
              "url": "https://www.homeaway.com"
            }
          },
          "tripAdvisor": {
            "type": "object",
            "example": {
              "title": "title",
              "firstName": "Rick",
              "lastName": "Sanchez",
              "fullName": "Rick Sanchez",
              "proxyEmail": "proxyemail@email.com",
              "url": "https://www.tripadvisor.com"
            }
          },
          "policy": {
            "type": "object",
            "example": {
              "marketing": {
                "isAccepted": false,
                "dateOfAcceptance": null
              },
              "privacyObject": {
                "isAccepted": false,
                "dateOfAcceptance": null,
                "versionNumber": "ffewfewgw"
              }
            }
          },
          "returningGuest": {
            "type": "boolean"
          }
        },
        "required": [
          "_id",
          "firstName",
          "lastName",
          "returningGuest"
        ]
      },
      "UpdateGuestOpenApiDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "hometown": {
            "type": "string"
          },
          "address": {
            "type": "object"
          },
          "picture": {
            "type": "object",
            "description": "A link to guest’s picture in different sizes"
          },
          "email": {
            "type": "string",
            "description": "The main contact email of the guest"
          },
          "emails": {
            "description": "List of additional emails of the guest",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phone": {
            "type": "string",
            "description": "The main contact phone number"
          },
          "phones": {
            "description": "List of additional phone numbers of the guest",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notes": {
            "type": "string",
            "description": "Attention notes about the guest, describing important pieces of information about the guest, to review for all reservations (e.g. “Requires accessibility equipment”). Displayed as “Attention notes” in the user interface."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "vip",
                "friendsAndFamily",
                "staff",
                "management",
                "blocklisted",
                "loyaltyProgram"
              ]
            },
            "description": "Tags for describing the guest at a glance + show the enum for the field to show the allowed options"
          },
          "goodToKnowNotes": {
            "type": "string",
            "description": "“Good to know” notes about the guest. Notes to help capture facts about the guest that will help the team to personalize the guest’s stays (e.g. “Big football fan”)"
          },
          "preferredLanguage": {
            "enum": [
              "en",
              "es",
              "fr",
              "ma",
              "aa",
              "ab",
              "ae",
              "af",
              "ak",
              "am",
              "an",
              "ar",
              "as",
              "av",
              "ay",
              "az",
              "ba",
              "be",
              "bg",
              "bh",
              "bi",
              "bm",
              "bn",
              "bo",
              "br",
              "bs",
              "ca",
              "ce",
              "ch",
              "co",
              "cr",
              "cs",
              "cu",
              "cv",
              "cy",
              "da",
              "de",
              "dv",
              "dz",
              "ee",
              "el",
              "eo",
              "et",
              "eu",
              "fa",
              "ff",
              "fi",
              "fj",
              "fo",
              "fy",
              "ga",
              "gd",
              "gl",
              "gn",
              "gu",
              "gv",
              "ha",
              "he",
              "hi",
              "ho",
              "hr",
              "ht",
              "hu",
              "hy",
              "hz",
              "ia",
              "id",
              "ie",
              "ig",
              "ii",
              "ik",
              "io",
              "is",
              "it",
              "iu",
              "ja",
              "jv",
              "ka",
              "kg",
              "ki",
              "kj",
              "kk",
              "kl",
              "km",
              "kn",
              "ko",
              "kr",
              "ks",
              "ku",
              "kv",
              "kw",
              "ky",
              "la",
              "lb",
              "lg",
              "li",
              "ln",
              "lo",
              "lt",
              "lu",
              "lv",
              "mg",
              "mh",
              "mi",
              "mk",
              "ml",
              "mn",
              "mr",
              "ms",
              "mt",
              "my",
              "na",
              "nb",
              "nd",
              "ne",
              "ng",
              "nl",
              "nn",
              "no",
              "nr",
              "nv",
              "ny",
              "oc",
              "oj",
              "om",
              "or",
              "os",
              "pa",
              "pi",
              "pl",
              "ps",
              "pt",
              "qu",
              "rm",
              "rn",
              "ro",
              "ru",
              "rw",
              "sa",
              "sc",
              "sd",
              "se",
              "sg",
              "si",
              "sk",
              "sl",
              "sm",
              "sn",
              "so",
              "sq",
              "sr",
              "ss",
              "st",
              "su",
              "sv",
              "sw",
              "ta",
              "te",
              "tg",
              "th",
              "ti",
              "tk",
              "tl",
              "tn",
              "to",
              "tr",
              "ts",
              "tt",
              "tw",
              "ty",
              "ug",
              "uk",
              "ur",
              "uz",
              "ve",
              "vi",
              "vo",
              "wa",
              "wo",
              "xh",
              "yi",
              "yo",
              "za",
              "zh",
              "zu"
            ],
            "type": "string"
          },
          "birthday": {
            "format": "date-time",
            "type": "string"
          },
          "gender": {
            "enum": [
              "male",
              "female",
              "other"
            ],
            "type": "string"
          },
          "maritalStatus": {
            "enum": [
              "single",
              "married",
              "widowed",
              "separated",
              "divorced"
            ],
            "type": "string"
          },
          "dietaryPreferences": {
            "description": "You can pick one of the predefined options, or create a new one for your account",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allergies": {
            "description": "You can pick one of the predefined options, or create a new one for your account",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "interests": {
            "description": "You can pick one of the predefined options, or create a new one for your account",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pronouns": {
            "enum": [
              "he/him/his",
              "she/her/hers",
              "they/them/their",
              "xe/xem/xyr"
            ],
            "type": "string"
          },
          "kids": {
            "type": "number",
            "minimum": 0
          },
          "passportNumber": {
            "type": "string",
            "maxLength": 50
          },
          "identityNumber": {
            "type": "string",
            "maxLength": 50,
            "description": "Identity Card Number"
          },
          "nationality": {
            "enum": [
              "af",
              "ax",
              "al",
              "dz",
              "as",
              "ad",
              "ao",
              "ai",
              "aq",
              "ag",
              "ar",
              "am",
              "aw",
              "au",
              "at",
              "az",
              "bs",
              "bh",
              "bd",
              "bb",
              "by",
              "be",
              "bz",
              "bj",
              "bm",
              "bt",
              "bo",
              "bq",
              "ba",
              "bw",
              "bv",
              "br",
              "io",
              "bn",
              "bg",
              "bf",
              "bi",
              "kh",
              "cm",
              "ca",
              "cv",
              "ky",
              "cf",
              "td",
              "cl",
              "cn",
              "cx",
              "cc",
              "co",
              "km",
              "cg",
              "cd",
              "ck",
              "cr",
              "ci",
              "hr",
              "cu",
              "cw",
              "cy",
              "cz",
              "dk",
              "dj",
              "dm",
              "do",
              "ec",
              "eg",
              "sv",
              "gq",
              "er",
              "ee",
              "et",
              "fk",
              "fo",
              "fj",
              "fi",
              "fr",
              "gf",
              "pf",
              "tf",
              "ga",
              "gm",
              "ge",
              "de",
              "gh",
              "gi",
              "gr",
              "gl",
              "gd",
              "gp",
              "gu",
              "gt",
              "gg",
              "gn",
              "gw",
              "gy",
              "ht",
              "hm",
              "va",
              "hn",
              "hk",
              "hu",
              "is",
              "in",
              "id",
              "ir",
              "iq",
              "ie",
              "im",
              "il",
              "it",
              "jm",
              "jp",
              "je",
              "jo",
              "kz",
              "ke",
              "ki",
              "kp",
              "kr",
              "xk",
              "kw",
              "kg",
              "la",
              "lv",
              "lb",
              "ls",
              "lr",
              "ly",
              "li",
              "lt",
              "lu",
              "mo",
              "mk",
              "mg",
              "mw",
              "my",
              "mv",
              "ml",
              "mt",
              "mh",
              "mq",
              "mr",
              "mu",
              "yt",
              "mx",
              "fm",
              "md",
              "mc",
              "mn",
              "me",
              "ms",
              "ma",
              "mz",
              "mm",
              "na",
              "nr",
              "np",
              "nl",
              "an",
              "nc",
              "nz",
              "ni",
              "ne",
              "ng",
              "nu",
              "nf",
              "mp",
              "no",
              "om",
              "pk",
              "pw",
              "ps",
              "pa",
              "pg",
              "py",
              "pe",
              "ph",
              "pn",
              "pl",
              "pt",
              "pr",
              "qa",
              "re",
              "ro",
              "ru",
              "rw",
              "bl",
              "sh",
              "kn",
              "lc",
              "mf",
              "pm",
              "vc",
              "ws",
              "sm",
              "st",
              "sa",
              "sn",
              "rs",
              "cs",
              "sc",
              "sl",
              "sg",
              "sx",
              "sk",
              "si",
              "sb",
              "so",
              "za",
              "gs",
              "ss",
              "es",
              "lk",
              "sd",
              "sr",
              "sj",
              "sz",
              "se",
              "ch",
              "sy",
              "tw",
              "tj",
              "tz",
              "th",
              "tl",
              "tg",
              "tk",
              "to",
              "tt",
              "tn",
              "tr",
              "tm",
              "tc",
              "tv",
              "ug",
              "ua",
              "ae",
              "gb",
              "us",
              "um",
              "uy",
              "uz",
              "vu",
              "ve",
              "vn",
              "vg",
              "vi",
              "wf",
              "eh",
              "ye",
              "zm",
              "zw"
            ],
            "type": "string"
          },
          "otaLinks": {
            "description": "A link to the guest’s profile on an OTA",
            "example": [
              {
                "type": "airbnb",
                "url": "https://www.airbnb.com"
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "enum": [
                    "airbnb"
                  ],
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "enum": [
                    "https://www.airbnb.com"
                  ],
                  "description": "The url must include “https://” prefix"
                }
              }
            }
          }
        },
        "required": [
          "tags"
        ]
      },
      "GuestsListResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "object"
          },
          "total": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "results",
          "total"
        ]
      },
      "GetImportedCalendarResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of an imported calendar"
          },
          "listingId": {
            "type": "string",
            "description": "Related listing id"
          },
          "accountId": {
            "type": "string",
            "description": "Related account id"
          },
          "createdAt": {
            "type": "string",
            "description": "Time of creation of an imported calendar"
          },
          "updatedAt": {
            "type": "string",
            "description": "Time of last update of an imported calendar properties"
          },
          "status": {
            "enum": [
              "active",
              "paused",
              "warning",
              "suspended"
            ],
            "type": "string",
            "description": "Status of an imported calendar"
          },
          "url": {
            "type": "string",
            "description": "URL of an imported calendar"
          },
          "name": {
            "type": "string",
            "description": "Name of an imported calendar"
          },
          "lastSyncedAt": {
            "type": "string",
            "description": "Timestamp of last successful sync of an imported calendar"
          },
          "adjustmentValueStart": {
            "type": "number",
            "description": "Defines offset for start date of imported calendar events"
          },
          "adjustmentValueEnd": {
            "type": "number",
            "description": "Defines offset for end date of imported calendar events"
          }
        },
        "required": [
          "id",
          "listingId",
          "accountId",
          "createdAt",
          "updatedAt",
          "status",
          "url",
          "name",
          "adjustmentValueStart",
          "adjustmentValueEnd"
        ]
      },
      "ImportedCalendarNotFound": {
        "type": "object",
        "properties": {}
      },
      "ListingNotFound": {
        "type": "object",
        "properties": {}
      },
      "CreateImportedCalendarRequestBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "url": {
            "type": "string"
          },
          "listingId": {
            "type": "string"
          },
          "adjustmentValueStart": {
            "type": "number",
            "enum": [
              -2,
              -1,
              0,
              1,
              2
            ]
          },
          "adjustmentValueEnd": {
            "type": "number",
            "enum": [
              -2,
              -1,
              0,
              1,
              2
            ]
          }
        },
        "required": [
          "name",
          "url",
          "listingId",
          "adjustmentValueStart",
          "adjustmentValueEnd"
        ]
      },
      "UpdateImportedCalendarDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "adjustmentValueStart": {
            "type": "number",
            "enum": [
              -2,
              -1,
              0,
              1,
              2
            ]
          },
          "adjustmentValueEnd": {
            "type": "number",
            "enum": [
              -2,
              -1,
              0,
              1,
              2
            ]
          }
        },
        "required": [
          "name",
          "adjustmentValueStart",
          "adjustmentValueEnd"
        ]
      },
      "CreateExportedCalendarRequestBody": {
        "type": "object",
        "properties": {
          "listingId": {
            "type": "string",
            "description": "Listing id"
          },
          "adjustmentValueStart": {
            "type": "number",
            "enum": [
              -2,
              -1,
              0,
              1,
              2
            ],
            "description": "Start date offset"
          },
          "adjustmentValueEnd": {
            "type": "number",
            "enum": [
              -2,
              -1,
              0,
              1,
              2
            ],
            "description": "End date offset"
          }
        },
        "required": [
          "listingId",
          "adjustmentValueStart",
          "adjustmentValueEnd"
        ]
      },
      "GetExportedCalendarResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of an exported calendar"
          },
          "listingId": {
            "type": "string",
            "description": "Related listing id"
          },
          "accountId": {
            "type": "string",
            "description": "Related account id"
          },
          "createdAt": {
            "type": "string",
            "description": "Time of creation of an exported calendar"
          },
          "updatedAt": {
            "type": "string",
            "description": "Time of last update of an exported calendar"
          },
          "url": {
            "type": "string",
            "description": "URL of an exported calendar"
          },
          "lastSyncedAt": {
            "type": "string",
            "description": "Timestamp of last successful sync of an exported calendar"
          },
          "adjustmentValueStart": {
            "type": "number",
            "description": "Defines offset for start date of exported calendar events"
          },
          "adjustmentValueEnd": {
            "type": "number",
            "description": "Defines offset for end date of exported calendar events"
          }
        },
        "required": [
          "id",
          "listingId",
          "accountId",
          "createdAt",
          "updatedAt",
          "url",
          "lastSyncedAt",
          "adjustmentValueStart",
          "adjustmentValueEnd"
        ]
      },
      "ExportedCalendarNotFound": {
        "type": "object",
        "properties": {}
      },
      "UpdateExportedCalendarBody": {
        "type": "object",
        "properties": {
          "adjustmentValueStart": {
            "type": "number",
            "enum": [
              -2,
              -1,
              0,
              1,
              2
            ]
          },
          "adjustmentValueEnd": {
            "type": "number",
            "enum": [
              -2,
              -1,
              0,
              1,
              2
            ]
          }
        },
        "required": [
          "adjustmentValueStart",
          "adjustmentValueEnd"
        ]
      },
      "StatsDTO": {
        "required": [
          "data",
          "limit",
          "skip",
          "total"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "required": [
                "_id"
              ],
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "accountName": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean"
                },
                "listingsCount": {
                  "type": "number"
                },
                "paymentMethodsCount": {
                  "type": "number"
                }
              }
            }
          },
          "limit": {
            "type": "number"
          },
          "skip": {
            "type": "number"
          },
          "total": {
            "type": "number"
          }
        }
      },
      "PaymentProvider1": {
        "required": [
          "_id"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "listingsCount": {
            "type": "number"
          },
          "paymentMethodsCount": {
            "type": "number"
          }
        }
      },
      "ParentListingForRequest": {
        "required": [
          "listingId"
        ],
        "type": "object",
        "properties": {
          "listingId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "skip": {
            "type": "integer",
            "example": 0,
            "default": 0
          },
          "limit": {
            "type": "number",
            "example": 25,
            "default": 25
          }
        }
      },
      "ListingsShortList": {
        "type": "object",
        "properties": {
          "listings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "title": {
                  "type": "string",
                  "example": "Very cheap room in the slums"
                },
                "nickname": {
                  "type": "string",
                  "example": "SoCheap"
                },
                "type": {
                  "type": "string",
                  "example": "SINGLE",
                  "enum": [
                    "SINGLE",
                    "MTL",
                    "MTL_CHILD"
                  ]
                },
                "units": {
                  "type": "integer",
                  "example": 1
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "full": {
                      "type": "string",
                      "example": "Arlozorov St 83, Tel Aviv-Yafo, Israel"
                    }
                  }
                },
                "calendarRules": {
                  "type": "object",
                  "properties": {
                    "advanceNotice": {
                      "type": "object"
                    },
                    "nightsLimit": {
                      "type": "object"
                    }
                  }
                },
                "integrations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "5d6e7a7ebf8e3800207735ae"
                      },
                      "platform": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "count": {
            "type": "integer",
            "example": 1
          },
          "skip": {
            "type": "integer",
            "example": 0,
            "default": 0
          },
          "limit": {
            "type": "number",
            "example": 25,
            "default": 25
          }
        }
      },
      "SubunitsShortList": {
        "type": "object",
        "properties": {
          "listings": {
            "type": "array",
            "items": {
              "required": [
                "_id"
              ],
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "title": {
                  "type": "string",
                  "example": "Very cheap room in the slums"
                },
                "nickname": {
                  "type": "string",
                  "example": "SoCheap"
                },
                "parentListingId": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                }
              }
            }
          }
        }
      },
      "Listings": {
        "type": "object",
        "properties": {
          "listings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "title": {
                  "type": "string",
                  "example": "Very cheap room in the slums"
                },
                "nickname": {
                  "type": "string",
                  "example": "SoCheap"
                },
                "type": {
                  "type": "string",
                  "example": "SINGLE",
                  "enum": [
                    "SINGLE",
                    "MTL",
                    "MTL_CHILD"
                  ]
                },
                "email": {
                  "type": "string",
                  "example": "yalla@walla.com"
                },
                "timezone": {
                  "type": "string",
                  "example": "Asia/Jerusalem"
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "full": {
                      "type": "string",
                      "example": "Arlozorov St 83, Tel Aviv-Yafo, Israel"
                    }
                  }
                },
                "calendarRules": {
                  "type": "object",
                  "properties": {
                    "advanceNotice": {
                      "type": "object"
                    },
                    "nightsLimit": {
                      "type": "object"
                    }
                  }
                },
                "bedrooms": {
                  "type": "integer",
                  "example": 2
                },
                "bathrooms": {
                  "type": "integer",
                  "example": 1
                },
                "beds": {
                  "type": "integer",
                  "example": 4
                },
                "propertyType": {
                  "type": "string",
                  "example": "Apartment"
                },
                "roomType": {
                  "type": "string",
                  "example": "Entire home/apt"
                },
                "bedType": {
                  "type": "string",
                  "example": "Real Bed"
                },
                "accommodates": {
                  "type": "integer",
                  "example": 4
                },
                "isListed": {
                  "type": "boolean",
                  "example": true
                },
                "tags": {
                  "type": "array",
                  "example": [
                    "airbnb",
                    "dima-test"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "owners": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "5d6e7a7ebf8e3800207735ae"
                  }
                },
                "amenities": {
                  "type": "array",
                  "example": [
                    "Wireless Internet",
                    "Kitchen",
                    "Toilet"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "prices": {
                  "type": "object",
                  "example": {
                    "prices": {
                      "currency": "USD",
                      "extraPersonFee": 15,
                      "guestsIncludedInRegularFee": 0,
                      "securityDepositFee": 0,
                      "basePrice": 100,
                      "weekendBasePrice": 122,
                      "weeklyPriceFactor": 1,
                      "monthlyPriceFactor": 1,
                      "cleaningFee": 70,
                      "petFee": 13
                    },
                    "financials": {
                      "cleaningFee": {
                        "value": {
                          "formula": 70,
                          "multiplier": "PER_STAY",
                          "valueType": "PERCENTAGE"
                        }
                      },
                      "petFee": {
                        "value": {
                          "formula": 13,
                          "multiplier": "PER_PET_PER_STAY",
                          "valueType": "FIXED"
                        }
                      }
                    },
                    "markups": {
                      "default": {
                        "amount": 1,
                        "units": "PERCENTAGE"
                      },
                      "manual": {
                        "amount": 3,
                        "units": "PERCENTAGE"
                      },
                      "bookingCom": {
                        "amount": 47,
                        "units": "PERCENTAGE"
                      },
                      "homeaway2": {
                        "amount": 5,
                        "units": "PERCENTAGE"
                      }
                    },
                    "useAccountMarkups": false
                  }
                },
                "integrations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "5d6e7a7ebf8e3800207735ae"
                      },
                      "platform": {
                        "type": "string"
                      }
                    }
                  }
                },
                "picture": {
                  "type": "object",
                  "properties": {
                    "thumbnail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Listing1": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "title": {
            "type": "string",
            "example": "Very cheap room in the slums"
          },
          "nickname": {
            "type": "string",
            "example": "SoCheap"
          },
          "type": {
            "type": "string",
            "example": "SINGLE",
            "enum": [
              "SINGLE",
              "MTL",
              "MTL_CHILD"
            ]
          },
          "email": {
            "type": "string",
            "example": "yalla@walla.com"
          },
          "timezone": {
            "type": "string",
            "example": "Asia/Jerusalem"
          },
          "address": {
            "type": "object",
            "properties": {
              "full": {
                "type": "string",
                "example": "Arlozorov St 83, Tel Aviv-Yafo, Israel"
              }
            }
          },
          "calendarRules": {
            "type": "object",
            "properties": {
              "advanceNotice": {
                "type": "object"
              },
              "nightsLimit": {
                "type": "object"
              }
            }
          },
          "bedrooms": {
            "type": "integer",
            "example": 2
          },
          "bathrooms": {
            "type": "integer",
            "example": 1
          },
          "beds": {
            "type": "integer",
            "example": 4
          },
          "propertyType": {
            "type": "string",
            "example": "Apartment"
          },
          "roomType": {
            "type": "string",
            "example": "Entire home/apt"
          },
          "bedType": {
            "type": "string",
            "example": "Real Bed"
          },
          "accommodates": {
            "type": "integer",
            "example": 4
          },
          "isListed": {
            "type": "boolean",
            "example": true
          },
          "tags": {
            "type": "array",
            "example": [
              "airbnb",
              "dima-test"
            ],
            "items": {
              "type": "string"
            }
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "5d6e7a7ebf8e3800207735ae"
            }
          },
          "amenities": {
            "type": "array",
            "example": [
              "Wireless Internet",
              "Kitchen",
              "Toilet"
            ],
            "items": {
              "type": "string"
            }
          },
          "prices": {
            "type": "object",
            "example": {
              "prices": {
                "currency": "USD",
                "extraPersonFee": 15,
                "guestsIncludedInRegularFee": 0,
                "securityDepositFee": 0,
                "basePrice": 100,
                "weekendBasePrice": 122,
                "weeklyPriceFactor": 1,
                "monthlyPriceFactor": 1,
                "cleaningFee": 70,
                "petFee": 13
              },
              "financials": {
                "cleaningFee": {
                  "value": {
                    "formula": 70,
                    "multiplier": "PER_STAY",
                    "valueType": "PERCENTAGE"
                  }
                },
                "petFee": {
                  "value": {
                    "formula": 13,
                    "multiplier": "PER_PET_PER_STAY",
                    "valueType": "FIXED"
                  }
                }
              },
              "markups": {
                "default": {
                  "amount": 1,
                  "units": "PERCENTAGE"
                },
                "manual": {
                  "amount": 3,
                  "units": "PERCENTAGE"
                },
                "bookingCom": {
                  "amount": 47,
                  "units": "PERCENTAGE"
                },
                "homeaway2": {
                  "amount": 5,
                  "units": "PERCENTAGE"
                }
              },
              "useAccountMarkups": false
            }
          },
          "integrations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "platform": {
                  "type": "string"
                }
              }
            }
          },
          "picture": {
            "type": "object",
            "properties": {
              "thumbnail": {
                "type": "string"
              }
            }
          }
        }
      },
      "ListingPictures": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "pictures": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "caption": {
                  "type": "string"
                },
                "sort": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "original": {
                  "type": "string"
                },
                "regular": {
                  "type": "string"
                },
                "large": {
                  "type": "string"
                },
                "thumbnail": {
                  "type": "string"
                }
              },
              "example": {
                "thumbnail": "//guestybookings.s3.amazonaws.com/listings/thumbnail_237316435.jpg",
                "regular": "//guestybookings.s3.amazonaws.com/listings/regular_237316435.jpg",
                "large": "//guestybookings.s3.amazonaws.com/listings/large_237316435.jpg",
                "original": "//guestybookings.s3.amazonaws.com/listings/original_237316435.jpg",
                "id": 237316435,
                "sort": 1,
                "caption": "",
                "_id": "5cb17af5c05965002d867b0e"
              }
            }
          }
        }
      },
      "ShortListing": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "title": {
            "type": "string",
            "example": "Very cheap room in the slums"
          },
          "nickname": {
            "type": "string",
            "example": "SoCheap"
          },
          "type": {
            "type": "string",
            "example": "SINGLE",
            "enum": [
              "SINGLE",
              "MTL",
              "MTL_CHILD"
            ]
          },
          "units": {
            "type": "integer",
            "example": 1
          },
          "address": {
            "type": "object",
            "properties": {
              "full": {
                "type": "string",
                "example": "Arlozorov St 83, Tel Aviv-Yafo, Israel"
              }
            }
          },
          "calendarRules": {
            "type": "object",
            "properties": {
              "advanceNotice": {
                "type": "object"
              },
              "nightsLimit": {
                "type": "object"
              }
            }
          },
          "integrations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "platform": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ShortSubunit": {
        "required": [
          "_id"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "title": {
            "type": "string",
            "example": "Very cheap room in the slums"
          },
          "nickname": {
            "type": "string",
            "example": "SoCheap"
          },
          "parentListingId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          }
        }
      },
      "CalendarRules1": {
        "type": "object",
        "properties": {
          "advanceNotice": {
            "type": "object"
          },
          "nightsLimit": {
            "type": "object"
          }
        }
      },
      "Integrations": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "example": "5d6e7a7ebf8e3800207735ae"
            },
            "platform": {
              "type": "string"
            }
          }
        }
      },
      "Integration1": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "platform": {
            "type": "string"
          }
        }
      },
      "Pictures": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "caption": {
            "type": "string"
          },
          "sort": {
            "type": "integer"
          },
          "id": {
            "type": "integer"
          },
          "original": {
            "type": "string"
          },
          "regular": {
            "type": "string"
          },
          "large": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          }
        },
        "example": {
          "thumbnail": "//guestybookings.s3.amazonaws.com/listings/thumbnail_237316435.jpg",
          "regular": "//guestybookings.s3.amazonaws.com/listings/regular_237316435.jpg",
          "large": "//guestybookings.s3.amazonaws.com/listings/large_237316435.jpg",
          "original": "//guestybookings.s3.amazonaws.com/listings/original_237316435.jpg",
          "id": 237316435,
          "sort": 1,
          "caption": "",
          "_id": "5cb17af5c05965002d867b0e"
        }
      },
      "Thumbnail": {
        "type": "object",
        "properties": {
          "thumbnail": {
            "type": "string"
          }
        }
      },
      "Address1": {
        "type": "object",
        "properties": {
          "full": {
            "type": "string",
            "example": "Arlozorov St 83, Tel Aviv-Yafo, Israel"
          }
        }
      },
      "PartialAddress": {
        "type": "object",
        "properties": {
          "full": {
            "type": "string",
            "example": "Arlozorov St 83, Tel Aviv-Yafo, Israel"
          },
          "neighborhood": {
            "type": "string",
            "example": "HaTikva"
          },
          "county": {
            "type": "string",
            "example": "Gush Dan"
          },
          "unit": {
            "type": "string",
            "example": "3"
          },
          "floor": {
            "type": "string",
            "example": "Entrance"
          },
          "apartment": {
            "type": "string",
            "example": "202"
          }
        }
      },
      "Limit": {
        "type": "number",
        "example": 25,
        "default": 25
      },
      "Title": {
        "type": "string",
        "example": "Very cheap room in the slums"
      },
      "Nickname": {
        "type": "string",
        "example": "SoCheap"
      },
      "Count": {
        "type": "integer",
        "example": 1
      },
      "Skip": {
        "type": "integer",
        "example": 0,
        "default": 0
      },
      "Type": {
        "type": "string",
        "example": "SINGLE",
        "enum": [
          "SINGLE",
          "MTL",
          "MTL_CHILD"
        ]
      },
      "ObjectId2": {
        "type": "string",
        "example": "5d6e7a7ebf8e3800207735ae"
      },
      "Email": {
        "type": "string",
        "example": "yalla@walla.com"
      },
      "Timezone": {
        "type": "string",
        "example": "Asia/Jerusalem"
      },
      "Bedrooms": {
        "type": "integer",
        "example": 2
      },
      "Bathrooms": {
        "type": "integer",
        "example": 1
      },
      "Beds": {
        "type": "integer",
        "example": 4
      },
      "PropertyType": {
        "type": "string",
        "example": "Apartment"
      },
      "RoomType": {
        "type": "string",
        "example": "Entire home/apt"
      },
      "BedType": {
        "type": "string",
        "example": "Real Bed"
      },
      "Accommodates": {
        "type": "integer",
        "example": 4
      },
      "IsListed": {
        "type": "boolean",
        "example": true
      },
      "Owners": {
        "type": "array",
        "items": {
          "type": "string",
          "example": "5d6e7a7ebf8e3800207735ae"
        }
      },
      "Amenities": {
        "type": "array",
        "example": [
          "Wireless Internet",
          "Kitchen",
          "Toilet"
        ],
        "items": {
          "type": "string"
        }
      },
      "Tags": {
        "type": "array",
        "example": [
          "airbnb",
          "dima-test"
        ],
        "items": {
          "type": "string"
        }
      },
      "Prices1": {
        "type": "object",
        "example": {
          "prices": {
            "currency": "USD",
            "extraPersonFee": 15,
            "guestsIncludedInRegularFee": 0,
            "securityDepositFee": 0,
            "basePrice": 100,
            "weekendBasePrice": 122,
            "weeklyPriceFactor": 1,
            "monthlyPriceFactor": 1,
            "cleaningFee": 70,
            "petFee": 13
          },
          "financials": {
            "cleaningFee": {
              "value": {
                "formula": 70,
                "multiplier": "PER_STAY",
                "valueType": "PERCENTAGE"
              }
            },
            "petFee": {
              "value": {
                "formula": 13,
                "multiplier": "PER_PET_PER_STAY",
                "valueType": "FIXED"
              }
            }
          },
          "markups": {
            "default": {
              "amount": 1,
              "units": "PERCENTAGE"
            },
            "manual": {
              "amount": 3,
              "units": "PERCENTAGE"
            },
            "bookingCom": {
              "amount": 47,
              "units": "PERCENTAGE"
            },
            "homeaway2": {
              "amount": 5,
              "units": "PERCENTAGE"
            }
          },
          "useAccountMarkups": false
        }
      },
      "BasicPagination": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 1
          },
          "skip": {
            "type": "integer",
            "example": 0,
            "default": 0
          },
          "limit": {
            "type": "number",
            "example": 25,
            "default": 25
          }
        }
      },
      "SaaSListingsAccountIds": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "example": 1
              },
              "skip": {
                "type": "integer",
                "example": 0,
                "default": 0
              },
              "limit": {
                "type": "number",
                "example": 25,
                "default": 25
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "UpdateListingsStatus": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "5d6e7a7ebf8e3800207735ae"
            }
          },
          "skipped": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "5d6e7a7ebf8e3800207735ae"
            }
          },
          "failed": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "5d6e7a7ebf8e3800207735ae"
            }
          }
        }
      },
      "listingsByAccountId": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "example": 1
              },
              "skip": {
                "type": "integer",
                "example": 0,
                "default": 0
              },
              "limit": {
                "type": "number",
                "example": 25,
                "default": 25
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "SaaS": {
                      "type": "object",
                      "properties": {
                        "expiresAt": {
                          "type": "string",
                          "format": "date"
                        },
                        "autoRenew": {
                          "type": "boolean"
                        }
                      }
                    },
                    "receptionistsService": {
                      "type": "object"
                    },
                    "plan": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "planType": {
                            "type": "string"
                          },
                          "isLocked": {
                            "type": "boolean"
                          },
                          "value": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "PropertyBasicFields": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "title": {
            "type": "string",
            "example": "Very cheap room in the slums"
          },
          "nickname": {
            "type": "string",
            "example": "SoCheap"
          },
          "address": {
            "type": "object",
            "properties": {
              "full": {
                "type": "string",
                "example": "Arlozorov St 83, Tel Aviv-Yafo, Israel"
              }
            }
          },
          "amenities": {
            "type": "array",
            "example": [
              "Wireless Internet",
              "Kitchen",
              "Toilet"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PropertiesBasicFields": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "title": {
            "type": "string",
            "example": "Very cheap room in the slums"
          },
          "nickname": {
            "type": "string",
            "example": "SoCheap"
          },
          "accountId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          }
        }
      },
      "UnitTypeBasicFields": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "propertyId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "title": {
            "type": "string",
            "example": "Very cheap room in the slums"
          },
          "nickname": {
            "type": "string",
            "example": "SoCheap"
          },
          "address": {
            "type": "object",
            "properties": {
              "full": {
                "type": "string",
                "example": "Arlozorov St 83, Tel Aviv-Yafo, Israel"
              }
            }
          },
          "amenities": {
            "type": "array",
            "example": [
              "Wireless Internet",
              "Kitchen",
              "Toilet"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UnitBasicFields": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "unitTypeId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "propertyId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "title": {
            "type": "string",
            "example": "Very cheap room in the slums"
          },
          "nickname": {
            "type": "string",
            "example": "SoCheap"
          },
          "address": {
            "type": "object",
            "properties": {
              "full": {
                "type": "string",
                "example": "Arlozorov St 83, Tel Aviv-Yafo, Israel"
              }
            }
          },
          "amenities": {
            "type": "array",
            "example": [
              "Wireless Internet",
              "Kitchen",
              "Toilet"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UnitTypeBasicIds": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "propertyId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "accountId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          }
        }
      },
      "UnitTypeBasicPrices": {
        "type": "object",
        "example": {
          "prices": {
            "currency": "USD",
            "extraPersonFee": 15,
            "guestsIncludedInRegularFee": 0,
            "securityDepositFee": 0,
            "basePrice": 100,
            "weekendBasePrice": 122,
            "weeklyPriceFactor": 1,
            "monthlyPriceFactor": 1,
            "cleaningFee": 70,
            "petFee": 13
          },
          "financials": {
            "cleaningFee": {
              "value": {
                "formula": 70,
                "multiplier": "PER_STAY",
                "valueType": "PERCENTAGE"
              }
            },
            "petFee": {
              "value": {
                "formula": 13,
                "multiplier": "PER_PET_PER_STAY",
                "valueType": "FIXED"
              }
            }
          },
          "markups": {
            "default": {
              "amount": 1,
              "units": "PERCENTAGE"
            },
            "manual": {
              "amount": 3,
              "units": "PERCENTAGE"
            },
            "bookingCom": {
              "amount": 47,
              "units": "PERCENTAGE"
            },
            "homeaway2": {
              "amount": 5,
              "units": "PERCENTAGE"
            }
          },
          "useAccountMarkups": false
        }
      },
      "UnitBasicPrices": {
        "type": "object",
        "example": {
          "prices": {
            "currency": "USD",
            "extraPersonFee": 15,
            "guestsIncludedInRegularFee": 0,
            "securityDepositFee": 0,
            "basePrice": 100,
            "weekendBasePrice": 122,
            "weeklyPriceFactor": 1,
            "monthlyPriceFactor": 1,
            "cleaningFee": 70,
            "petFee": 13
          },
          "financials": {
            "cleaningFee": {
              "value": {
                "formula": 70,
                "multiplier": "PER_STAY",
                "valueType": "PERCENTAGE"
              }
            },
            "petFee": {
              "value": {
                "formula": 13,
                "multiplier": "PER_PET_PER_STAY",
                "valueType": "FIXED"
              }
            }
          },
          "markups": {
            "default": {
              "amount": 1,
              "units": "PERCENTAGE"
            },
            "manual": {
              "amount": 3,
              "units": "PERCENTAGE"
            },
            "bookingCom": {
              "amount": 47,
              "units": "PERCENTAGE"
            },
            "homeaway2": {
              "amount": 5,
              "units": "PERCENTAGE"
            }
          },
          "useAccountMarkups": false
        }
      },
      "UnitTypeResPolFields": {
        "type": "object",
        "properties": {
          "minimumAge": {
            "type": "number",
            "example": 18
          },
          "defaultCheckInEndTime": {
            "type": "string",
            "example": "15:00"
          },
          "defaultCheckInTime": {
            "type": "string",
            "example": "11:00"
          },
          "defaultCheckOutTime": {
            "type": "string",
            "example": "10:00"
          }
        }
      },
      "UnitResPolFields": {
        "type": "object",
        "properties": {
          "minimumAge": {
            "type": "number",
            "example": 18
          },
          "defaultCheckInEndTime": {
            "type": "string",
            "example": "15:00"
          },
          "defaultCheckInTime": {
            "type": "string",
            "example": "11:00"
          },
          "defaultCheckOutTime": {
            "type": "string",
            "example": "10:00"
          }
        }
      },
      "UnitTypeResPolRequestFields": {
        "type": "object",
        "properties": {
          "defaultCheckInTime": {
            "type": "string",
            "example": "11:00"
          },
          "defaultCheckInEndTime": {
            "type": "string",
            "example": "15:00"
          },
          "defaultCheckOutTime": {
            "type": "string",
            "example": "10:00"
          }
        }
      },
      "UnitTypeResPolResponseFields": {
        "type": "object",
        "properties": {
          "defaultCheckInTime": {
            "type": "string",
            "example": "11:00"
          },
          "defaultCheckInEndTime": {
            "type": "string",
            "example": "15:00"
          },
          "defaultCheckOutTime": {
            "type": "string",
            "example": "10:00"
          }
        }
      },
      "UnitResPolResponseFields": {
        "type": "object",
        "properties": {
          "defaultCheckInTime": {
            "type": "string",
            "example": "11:00"
          },
          "defaultCheckInEndTime": {
            "type": "string",
            "example": "15:00"
          },
          "defaultCheckOutTime": {
            "type": "string",
            "example": "10:00"
          }
        }
      },
      "UnitBasicIds": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "unitTypeId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "propertyId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "accountId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          }
        }
      },
      "GuestControls": {
        "type": "object",
        "properties": {
          "allowsChildren": {
            "type": "boolean",
            "example": true
          },
          "allowsInfants": {
            "type": "boolean",
            "example": false
          },
          "allowsPets": {
            "type": "boolean",
            "example": true
          },
          "allowsSmoking": {
            "type": "boolean",
            "example": false
          },
          "allowsEvents": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "HouseRules1": {
        "type": "object",
        "properties": {
          "suitableForChildren": {
            "type": "boolean"
          },
          "suitableForInfants": {
            "type": "boolean"
          },
          "petsAllowed": {
            "type": "boolean"
          },
          "petsCharged": {
            "type": "boolean"
          },
          "smokingAllowed": {
            "type": "boolean"
          },
          "partiesAllowed": {
            "type": "boolean"
          },
          "additionalRules": {
            "type": "string"
          },
          "quietHours": {
            "type": "object",
            "properties": {
              "set": {
                "type": "boolean"
              },
              "start": {
                "type": "string"
              },
              "end": {
                "type": "string"
              }
            }
          },
          "minimumAge": {
            "type": "integer"
          }
        },
        "example": {
          "suitableForChildren": true,
          "suitableForInfants": false,
          "petsAllowed": true,
          "petsCharged": true,
          "smokingAllowed": false,
          "partiesAllowed": false,
          "additionalRules": "No alcohol",
          "quietHours": {
            "set": true,
            "start": "22:00",
            "end": "08:00"
          },
          "minimumAge": 21
        }
      },
      "openAPIHouseRules1": {
        "type": "object",
        "properties": {
          "additionalRules": {
            "type": "string"
          },
          "childrenRules": {
            "type": "object",
            "properties": {
              "suitableForChildren": {
                "type": "boolean"
              },
              "suitableForInfants": {
                "type": "boolean"
              },
              "reason": {
                "type": "string"
              }
            }
          },
          "petsAllowed": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "chargeType": {
                "type": "string"
              }
            }
          },
          "quietBetween": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "hours": {
                "type": "object",
                "properties": {
                  "start": {
                    "type": "string"
                  },
                  "end": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "smokingAllowed": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            }
          },
          "suitableForEvents": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            }
          },
          "minimumAge": {
            "type": "integer"
          }
        },
        "example": {
          "childrenRules": {
            "suitableForChildren": true,
            "suitableForInfants": true,
            "reason": "Children rules reason"
          },
          "petsAllowed": {
            "enabled": true,
            "chargeType": "Credit"
          },
          "smokingAllowed": {
            "enabled": false
          },
          "suitableForEvents": {
            "enabled": false
          },
          "additionalRules": "No alcohol",
          "quietBetween": {
            "enabled": true,
            "hours": {
              "start": "22:00",
              "end": "08:00"
            }
          },
          "minimumAge": 21
        }
      },
      "ChannelUrlUpdated": {
        "type": "object",
        "properties": {
          "platform": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "example": {
          "platform": "airbnb2",
          "url": "https://www.airbnb.com/rooms/20826981"
        }
      },
      "GetBaseRatePlan": {
        "type": "object",
        "example": {
          "prices": {
            "extraPersonFee": 1500,
            "guestsIncludedInRegularFee": 1
          },
          "terms": {
            "maxNights": 1125,
            "minNights": 2
          },
          "timezone": "Asia/Tokyo",
          "yieldManagement": {
            "rateStrategy": {
              "_id": "5df25f16cabd930020277edf",
              "name": "Hello world"
            }
          }
        }
      },
      "UnitTypeBedArrangementFields": {
        "type": "object",
        "properties": {
          "bedroomsAllowed": {
            "type": "boolean"
          },
          "bedrooms": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Bedroom one"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "BEDROOM",
                    "SHARED_SPACE"
                  ]
                },
                "roomNumber": {
                  "type": "number"
                },
                "roomIds": {
                  "type": "object",
                  "properties": {
                    "airbnb2": {
                      "type": "string",
                      "example": "12345"
                    }
                  }
                },
                "beds": {
                  "type": "object",
                  "properties": {
                    "KING_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "QUEEN_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "DOUBLE_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "SINGLE_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "SOFA_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "AIR_MATTRESS": {
                      "type": "number",
                      "example": 1
                    },
                    "BUNK_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "FLOOR_MATTRESS": {
                      "type": "number",
                      "example": 1
                    },
                    "WATER_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "TODDLER_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "CRIB": {
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UnitTypeBedArrangementRequestFields": {
        "type": "object",
        "properties": {
          "bedroomsAllowed": {
            "type": "boolean"
          },
          "bedrooms": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Bedroom one"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "BEDROOM",
                    "SHARED_SPACE"
                  ]
                },
                "roomNumber": {
                  "type": "number"
                },
                "roomIds": {
                  "type": "object",
                  "properties": {
                    "airbnb2": {
                      "type": "string",
                      "example": "12345"
                    }
                  }
                },
                "beds": {
                  "type": "object",
                  "properties": {
                    "KING_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "QUEEN_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "DOUBLE_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "SINGLE_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "SOFA_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "AIR_MATTRESS": {
                      "type": "number",
                      "example": 1
                    },
                    "BUNK_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "FLOOR_MATTRESS": {
                      "type": "number",
                      "example": 1
                    },
                    "WATER_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "TODDLER_BED": {
                      "type": "number",
                      "example": 1
                    },
                    "CRIB": {
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BedArrangementRoom": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Bedroom one"
          },
          "type": {
            "type": "string",
            "enum": [
              "BEDROOM",
              "SHARED_SPACE"
            ]
          },
          "roomNumber": {
            "type": "number"
          },
          "roomIds": {
            "type": "object",
            "properties": {
              "airbnb2": {
                "type": "string",
                "example": "12345"
              }
            }
          },
          "beds": {
            "type": "object",
            "properties": {
              "KING_BED": {
                "type": "number",
                "example": 1
              },
              "QUEEN_BED": {
                "type": "number",
                "example": 1
              },
              "DOUBLE_BED": {
                "type": "number",
                "example": 1
              },
              "SINGLE_BED": {
                "type": "number",
                "example": 1
              },
              "SOFA_BED": {
                "type": "number",
                "example": 1
              },
              "AIR_MATTRESS": {
                "type": "number",
                "example": 1
              },
              "BUNK_BED": {
                "type": "number",
                "example": 1
              },
              "FLOOR_MATTRESS": {
                "type": "number",
                "example": 1
              },
              "WATER_BED": {
                "type": "number",
                "example": 1
              },
              "TODDLER_BED": {
                "type": "number",
                "example": 1
              },
              "CRIB": {
                "type": "number",
                "example": 1
              }
            }
          }
        }
      },
      "ListingsCitiesListItem": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "ListingsCitiesList": {
        "type": "object",
        "properties": {
          "cities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "city": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                }
              }
            }
          },
          "count": {
            "type": "integer",
            "example": 1
          },
          "skip": {
            "type": "integer",
            "example": 0,
            "default": 0
          },
          "limit": {
            "type": "number",
            "example": 25,
            "default": 25
          }
        }
      },
      "Space1": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "accountId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "name": {
            "type": "string",
            "example": "Space room"
          },
          "roomIds": {
            "type": "object",
            "properties": {
              "airbnb": {
                "type": "string"
              }
            }
          },
          "beds": {
            "type": "object",
            "properties": {
              "KING_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "QUEEN_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "DOUBLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SINGLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SOFA_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "AIR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "BUNK_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          },
          "other": {
            "type": "object",
            "properties": {
              "FLOOR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "WATER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "TODDLER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "CRIB": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          }
        }
      },
      "AddSpaceRequestBody1": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "BEDROOM",
              "SHARED_SPACE",
              "FULL_BATHROOM",
              "HALF_BATHROOM"
            ]
          },
          "airbnb_room_id": {
            "type": "string"
          },
          "beds": {
            "type": "object",
            "properties": {
              "KING_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "QUEEN_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "DOUBLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SINGLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SOFA_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "AIR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "BUNK_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          },
          "other": {
            "type": "object",
            "properties": {
              "FLOOR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "WATER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "TODDLER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "CRIB": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          }
        }
      },
      "EditSpaceDetailsRequestBody1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "BEDROOM",
              "SHARED_SPACE",
              "FULL_BATHROOM",
              "HALF_BATHROOM"
            ]
          },
          "airbnb_room_id": {
            "type": "string",
            "example": "123456"
          }
        }
      },
      "GetSpacesForUnitTypeIdResponse1": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "spaces": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "unitTypeId": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "accountId": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "name": {
                  "type": "string",
                  "example": "Space room"
                },
                "roomIds": {
                  "type": "object",
                  "properties": {
                    "airbnb": {
                      "type": "string"
                    }
                  }
                },
                "beds": {
                  "type": "object",
                  "properties": {
                    "KING_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "QUEEN_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "DOUBLE_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "SINGLE_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "SOFA_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "AIR_MATTRESS": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "BUNK_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    }
                  }
                },
                "other": {
                  "type": "object",
                  "properties": {
                    "FLOOR_MATTRESS": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "WATER_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "TODDLER_BED": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    },
                    "CRIB": {
                      "minimum": 0,
                      "type": "number",
                      "example": 1,
                      "default": 0
                    }
                  }
                }
              }
            }
          },
          "bedroomsAllowed": {
            "type": "boolean",
            "example": true
          },
          "bathrooms": {
            "type": "object",
            "properties": {
              "SHARED": {
                "type": "number",
                "example": 1
              },
              "PRIVATE": {
                "type": "number",
                "example": 1
              }
            }
          }
        }
      },
      "GetSpacesForComplexIdResponse1": {
        "type": "object",
        "properties": {
          "complexId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "unitTypeSpaces": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "unitTypeId": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "spaces": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "unitTypeId": {
                        "type": "string",
                        "example": "5d6e7a7ebf8e3800207735ae"
                      },
                      "accountId": {
                        "type": "string",
                        "example": "5d6e7a7ebf8e3800207735ae"
                      },
                      "name": {
                        "type": "string",
                        "example": "Space room"
                      },
                      "roomIds": {
                        "type": "object",
                        "properties": {
                          "airbnb": {
                            "type": "string"
                          }
                        }
                      },
                      "beds": {
                        "type": "object",
                        "properties": {
                          "KING_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "QUEEN_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "DOUBLE_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "SINGLE_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "SOFA_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "AIR_MATTRESS": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "BUNK_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          }
                        }
                      },
                      "other": {
                        "type": "object",
                        "properties": {
                          "FLOOR_MATTRESS": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "WATER_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "TODDLER_BED": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          },
                          "CRIB": {
                            "minimum": 0,
                            "type": "number",
                            "example": 1,
                            "default": 0
                          }
                        }
                      }
                    }
                  }
                },
                "bedroomsAllowed": {
                  "type": "boolean",
                  "example": true
                },
                "bathrooms": {
                  "type": "object",
                  "properties": {
                    "SHARED": {
                      "type": "number",
                      "example": 1
                    },
                    "PRIVATE": {
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SingleSpaceResponse1": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "accountId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "name": {
            "type": "string",
            "example": "Space room"
          },
          "roomIds": {
            "type": "object",
            "properties": {
              "airbnb": {
                "type": "string"
              }
            }
          },
          "beds": {
            "type": "object",
            "properties": {
              "KING_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "QUEEN_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "DOUBLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SINGLE_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "SOFA_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "AIR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "BUNK_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          },
          "other": {
            "type": "object",
            "properties": {
              "FLOOR_MATTRESS": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "WATER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "TODDLER_BED": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              },
              "CRIB": {
                "minimum": 0,
                "type": "number",
                "example": 1,
                "default": 0
              }
            }
          }
        }
      },
      "ListHouseRulesResponse1": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "suitableForChildren": {
              "type": "boolean"
            },
            "suitableForInfants": {
              "type": "boolean"
            },
            "petsAllowed": {
              "type": "boolean"
            },
            "petsCharged": {
              "type": "boolean"
            },
            "smokingAllowed": {
              "type": "boolean"
            },
            "partiesAllowed": {
              "type": "boolean"
            },
            "additionalRules": {
              "type": "string"
            },
            "quietHours": {
              "type": "object",
              "properties": {
                "set": {
                  "type": "boolean"
                },
                "start": {
                  "type": "string"
                },
                "end": {
                  "type": "string"
                }
              }
            },
            "minimumAge": {
              "type": "integer"
            }
          },
          "example": {
            "suitableForChildren": true,
            "suitableForInfants": false,
            "petsAllowed": true,
            "petsCharged": true,
            "smokingAllowed": false,
            "partiesAllowed": false,
            "additionalRules": "No alcohol",
            "quietHours": {
              "set": true,
              "start": "22:00",
              "end": "08:00"
            },
            "minimumAge": 21
          }
        }
      },
      "BulkEditHouseRulesRequestBody1": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "unitTypeId": {
              "type": "string",
              "example": "5d6e7a7ebf8e3800207735ae"
            },
            "houseRules": {
              "type": "object",
              "properties": {
                "suitableForChildren": {
                  "type": "boolean"
                },
                "suitableForInfants": {
                  "type": "boolean"
                },
                "petsAllowed": {
                  "type": "boolean"
                },
                "petsCharged": {
                  "type": "boolean"
                },
                "smokingAllowed": {
                  "type": "boolean"
                },
                "partiesAllowed": {
                  "type": "boolean"
                },
                "additionalRules": {
                  "type": "string"
                },
                "quietHours": {
                  "type": "object",
                  "properties": {
                    "set": {
                      "type": "boolean"
                    },
                    "start": {
                      "type": "string"
                    },
                    "end": {
                      "type": "string"
                    }
                  }
                },
                "minimumAge": {
                  "type": "integer"
                }
              },
              "example": {
                "suitableForChildren": true,
                "suitableForInfants": false,
                "petsAllowed": true,
                "petsCharged": true,
                "smokingAllowed": false,
                "partiesAllowed": false,
                "additionalRules": "No alcohol",
                "quietHours": {
                  "set": true,
                  "start": "22:00",
                  "end": "08:00"
                },
                "minimumAge": 21
              }
            }
          },
          "example": {
            "unitTypeId": "5accf6954c5ed10025902aed",
            "houseRules": {
              "childrenRules": {
                "suitableForChildren": true,
                "suitableForInfants": true,
                "reason": "Children rules reason"
              },
              "petsAllowed": {
                "enabled": true,
                "chargeType": "Credit"
              },
              "smokingAllowed": {
                "enabled": false
              },
              "suitableForEvents": {
                "enabled": false
              },
              "additionalRules": "No alcohol",
              "quietBetween": {
                "enabled": true,
                "hours": {
                  "start": "22:00",
                  "end": "08:00"
                }
              },
              "minimumAge": 21
            }
          }
        }
      },
      "listings_subunitslist_body": {
        "type": "object",
        "properties": {
          "parentListings": {
            "type": "array",
            "items": {
              "required": [
                "listingId"
              ],
              "type": "object",
              "properties": {
                "listingId": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "skip": {
                  "type": "integer",
                  "example": 0,
                  "default": 0
                },
                "limit": {
                  "type": "number",
                  "example": 25,
                  "default": 25
                }
              }
            }
          }
        }
      },
      "listings_addresses_body": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "full": {
                          "type": "string",
                          "example": "Arlozorov St 83, Tel Aviv-Yafo, Israel"
                        },
                        "neighborhood": {
                          "type": "string",
                          "example": "HaTikva"
                        },
                        "county": {
                          "type": "string",
                          "example": "Gush Dan"
                        },
                        "unit": {
                          "type": "string",
                          "example": "3"
                        },
                        "floor": {
                          "type": "string",
                          "example": "Entrance"
                        },
                        "apartment": {
                          "type": "string",
                          "example": "202"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "listingId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "listings_migrateListingsPictures_body": {
        "type": "object",
        "properties": {
          "listingIds": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "5d6e7a7ebf8e3800207735ae"
            }
          },
          "accountId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          }
        }
      },
      "billing_listingId_body": {
        "type": "object",
        "properties": {
          "saasExpiresAt": {
            "type": "string",
            "format": "Date",
            "example": "2020-06-12T09:27:15.020Z"
          }
        }
      },
      "inline_response_200": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "propertyId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "accountId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              }
            }
          },
          {
            "type": "object",
            "example": {
              "prices": {
                "currency": "USD",
                "extraPersonFee": 15,
                "guestsIncludedInRegularFee": 0,
                "securityDepositFee": 0,
                "basePrice": 100,
                "weekendBasePrice": 122,
                "weeklyPriceFactor": 1,
                "monthlyPriceFactor": 1,
                "cleaningFee": 70,
                "petFee": 13
              },
              "financials": {
                "cleaningFee": {
                  "value": {
                    "formula": 70,
                    "multiplier": "PER_STAY",
                    "valueType": "PERCENTAGE"
                  }
                },
                "petFee": {
                  "value": {
                    "formula": 13,
                    "multiplier": "PER_PET_PER_STAY",
                    "valueType": "FIXED"
                  }
                }
              },
              "markups": {
                "default": {
                  "amount": 1,
                  "units": "PERCENTAGE"
                },
                "manual": {
                  "amount": 3,
                  "units": "PERCENTAGE"
                },
                "bookingCom": {
                  "amount": 47,
                  "units": "PERCENTAGE"
                },
                "homeaway2": {
                  "amount": 5,
                  "units": "PERCENTAGE"
                }
              },
              "useAccountMarkups": false
            }
          }
        ]
      },
      "inline_response_200_1": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "propertyId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "accountId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "minimumAge": {
                "type": "number",
                "example": 18
              },
              "defaultCheckInEndTime": {
                "type": "string",
                "example": "15:00"
              },
              "defaultCheckInTime": {
                "type": "string",
                "example": "11:00"
              },
              "defaultCheckOutTime": {
                "type": "string",
                "example": "10:00"
              }
            }
          }
        ]
      },
      "inline_response_200_2": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "propertyId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "accountId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "defaultCheckInTime": {
                "type": "string",
                "example": "11:00"
              },
              "defaultCheckInEndTime": {
                "type": "string",
                "example": "15:00"
              },
              "defaultCheckOutTime": {
                "type": "string",
                "example": "10:00"
              }
            }
          }
        ]
      },
      "inline_response_200_3": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "unitTypeId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "propertyId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "accountId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "unitTypeId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "propertyId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "title": {
                "type": "string",
                "example": "Very cheap room in the slums"
              },
              "nickname": {
                "type": "string",
                "example": "SoCheap"
              },
              "address": {
                "type": "object",
                "properties": {
                  "full": {
                    "type": "string",
                    "example": "Arlozorov St 83, Tel Aviv-Yafo, Israel"
                  }
                }
              },
              "amenities": {
                "type": "array",
                "example": [
                  "Wireless Internet",
                  "Kitchen",
                  "Toilet"
                ],
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "inline_response_200_4": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "unitTypeId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "propertyId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "accountId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "minimumAge": {
                "type": "number",
                "example": 18
              },
              "defaultCheckInEndTime": {
                "type": "string",
                "example": "15:00"
              },
              "defaultCheckInTime": {
                "type": "string",
                "example": "11:00"
              },
              "defaultCheckOutTime": {
                "type": "string",
                "example": "10:00"
              }
            }
          }
        ]
      },
      "inline_response_200_5": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "unitTypeId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "propertyId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "accountId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "defaultCheckInTime": {
                "type": "string",
                "example": "11:00"
              },
              "defaultCheckInEndTime": {
                "type": "string",
                "example": "15:00"
              },
              "defaultCheckOutTime": {
                "type": "string",
                "example": "10:00"
              }
            }
          }
        ]
      },
      "inline_response_200_6": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "propertyId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "accountId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "bedroomsAllowed": {
                "type": "boolean"
              },
              "bedrooms": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Bedroom one"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "BEDROOM",
                        "SHARED_SPACE"
                      ]
                    },
                    "roomNumber": {
                      "type": "number"
                    },
                    "roomIds": {
                      "type": "object",
                      "properties": {
                        "airbnb2": {
                          "type": "string",
                          "example": "12345"
                        }
                      }
                    },
                    "beds": {
                      "type": "object",
                      "properties": {
                        "KING_BED": {
                          "type": "number",
                          "example": 1
                        },
                        "QUEEN_BED": {
                          "type": "number",
                          "example": 1
                        },
                        "DOUBLE_BED": {
                          "type": "number",
                          "example": 1
                        },
                        "SINGLE_BED": {
                          "type": "number",
                          "example": 1
                        },
                        "SOFA_BED": {
                          "type": "number",
                          "example": 1
                        },
                        "AIR_MATTRESS": {
                          "type": "number",
                          "example": 1
                        },
                        "BUNK_BED": {
                          "type": "number",
                          "example": 1
                        },
                        "FLOOR_MATTRESS": {
                          "type": "number",
                          "example": 1
                        },
                        "WATER_BED": {
                          "type": "number",
                          "example": 1
                        },
                        "TODDLER_BED": {
                          "type": "number",
                          "example": 1
                        },
                        "CRIB": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "inline_response_200_7": {
        "type": "object",
        "properties": {
          "bedAmount": {
            "type": "number"
          }
        }
      },
      "inline_response_200_8": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "unitTypeId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "propertyId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "accountId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              }
            }
          },
          {
            "type": "object",
            "example": {
              "prices": {
                "currency": "USD",
                "extraPersonFee": 15,
                "guestsIncludedInRegularFee": 0,
                "securityDepositFee": 0,
                "basePrice": 100,
                "weekendBasePrice": 122,
                "weeklyPriceFactor": 1,
                "monthlyPriceFactor": 1,
                "cleaningFee": 70,
                "petFee": 13
              },
              "financials": {
                "cleaningFee": {
                  "value": {
                    "formula": 70,
                    "multiplier": "PER_STAY",
                    "valueType": "PERCENTAGE"
                  }
                },
                "petFee": {
                  "value": {
                    "formula": 13,
                    "multiplier": "PER_PET_PER_STAY",
                    "valueType": "FIXED"
                  }
                }
              },
              "markups": {
                "default": {
                  "amount": 1,
                  "units": "PERCENTAGE"
                },
                "manual": {
                  "amount": 3,
                  "units": "PERCENTAGE"
                },
                "bookingCom": {
                  "amount": 47,
                  "units": "PERCENTAGE"
                },
                "homeaway2": {
                  "amount": 5,
                  "units": "PERCENTAGE"
                }
              },
              "useAccountMarkups": false
            }
          }
        ]
      },
      "listingsByAccountId_SaaS": {
        "type": "object",
        "properties": {
          "expiresAt": {
            "type": "string",
            "format": "date"
          },
          "autoRenew": {
            "type": "boolean"
          }
        }
      },
      "listingsByAccountId_plan": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "planType": {
            "type": "string"
          },
          "isLocked": {
            "type": "boolean"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "listingsByAccountId_data": {
        "type": "object",
        "properties": {
          "SaaS": {
            "type": "object",
            "properties": {
              "expiresAt": {
                "type": "string",
                "format": "date"
              },
              "autoRenew": {
                "type": "boolean"
              }
            }
          },
          "receptionistsService": {
            "type": "object"
          },
          "plan": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "planType": {
                  "type": "string"
                },
                "isLocked": {
                  "type": "boolean"
                },
                "value": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "HouseRules_quietHours": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          }
        }
      },
      "openAPIHouseRules_childrenRules1": {
        "type": "object",
        "properties": {
          "suitableForChildren": {
            "type": "boolean"
          },
          "suitableForInfants": {
            "type": "boolean"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "BedArrangementRoom_roomIds": {
        "type": "object",
        "properties": {
          "airbnb2": {
            "type": "string",
            "example": "12345"
          }
        }
      },
      "BedArrangementRoom_beds": {
        "type": "object",
        "properties": {
          "KING_BED": {
            "type": "number",
            "example": 1
          },
          "QUEEN_BED": {
            "type": "number",
            "example": 1
          },
          "DOUBLE_BED": {
            "type": "number",
            "example": 1
          },
          "SINGLE_BED": {
            "type": "number",
            "example": 1
          },
          "SOFA_BED": {
            "type": "number",
            "example": 1
          },
          "AIR_MATTRESS": {
            "type": "number",
            "example": 1
          },
          "BUNK_BED": {
            "type": "number",
            "example": 1
          },
          "FLOOR_MATTRESS": {
            "type": "number",
            "example": 1
          },
          "WATER_BED": {
            "type": "number",
            "example": 1
          },
          "TODDLER_BED": {
            "type": "number",
            "example": 1
          },
          "CRIB": {
            "type": "number",
            "example": 1
          }
        }
      },
      "BulkEditHouseRulesRequestBody_inner": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "houseRules": {
            "type": "object",
            "properties": {
              "suitableForChildren": {
                "type": "boolean"
              },
              "suitableForInfants": {
                "type": "boolean"
              },
              "petsAllowed": {
                "type": "boolean"
              },
              "petsCharged": {
                "type": "boolean"
              },
              "smokingAllowed": {
                "type": "boolean"
              },
              "partiesAllowed": {
                "type": "boolean"
              },
              "additionalRules": {
                "type": "string"
              },
              "quietHours": {
                "type": "object",
                "properties": {
                  "set": {
                    "type": "boolean"
                  },
                  "start": {
                    "type": "string"
                  },
                  "end": {
                    "type": "string"
                  }
                }
              },
              "minimumAge": {
                "type": "integer"
              }
            },
            "example": {
              "suitableForChildren": true,
              "suitableForInfants": false,
              "petsAllowed": true,
              "petsCharged": true,
              "smokingAllowed": false,
              "partiesAllowed": false,
              "additionalRules": "No alcohol",
              "quietHours": {
                "set": true,
                "start": "22:00",
                "end": "08:00"
              },
              "minimumAge": 21
            }
          }
        },
        "example": {
          "unitTypeId": "5accf6954c5ed10025902aed",
          "houseRules": {
            "childrenRules": {
              "suitableForChildren": true,
              "suitableForInfants": true,
              "reason": "Children rules reason"
            },
            "petsAllowed": {
              "enabled": true,
              "chargeType": "Credit"
            },
            "smokingAllowed": {
              "enabled": false
            },
            "suitableForEvents": {
              "enabled": false
            },
            "additionalRules": "No alcohol",
            "quietBetween": {
              "enabled": true,
              "hours": {
                "start": "22:00",
                "end": "08:00"
              }
            },
            "minimumAge": 21
          }
        }
      },
      "ComplexRequestDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the Complex",
            "example": "My Title"
          },
          "nickname": {
            "type": "string",
            "description": "The nickname of the Complex. Useful in searches",
            "example": "My Nickname"
          },
          "propertyIds": {
            "description": "An array that contains Ids for propertyIds that belong to this Complex. Could be an empty array [] (default)",
            "example": [
              "63baba9c5c25ccae5595832b",
              "63babaab5c25ccae5595832c"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "description": "An array containing Tags for this Complex",
            "example": [
              "Tag 1",
              "Tag 2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "title",
          "nickname"
        ]
      },
      "ComplexDetailsRequestDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the Complex",
            "example": "My Title"
          },
          "nickname": {
            "type": "string",
            "description": "The nickname of the Complex. Useful in searches",
            "example": "My Nickname"
          },
          "tags": {
            "description": "An array containing Tags for this Complex",
            "example": [
              "Tag 1",
              "Tag 2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SetForPropertyIdRequestDto": {
        "type": "object",
        "properties": {
          "amenities": {
            "description": "An array containing supported amenities to set to the property",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "amenities"
        ]
      },
      "AssignRoomPhotoRequestDto": {
        "type": "object",
        "properties": {
          "spaceId": {
            "type": "string",
            "description": "Space Id to assign room photo to"
          },
          "propertyId": {
            "type": "string",
            "description": "The space ID to which the room photo should be assigned."
          }
        },
        "required": [
          "spaceId",
          "propertyId"
        ]
      },
      "UnassignRoomPhotoRequestDto": {
        "type": "object",
        "properties": {
          "propertyId": {
            "type": "string",
            "description": "The Guesty ID of the property associated with this space."
          }
        },
        "required": [
          "propertyId"
        ]
      },
      "CheckInInstructions": {
        "type": "object",
        "properties": {
          "primaryCheckIn": {
            "type": "string"
          },
          "alternativeCheckIn": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "welcomeMessage": {
            "type": "string"
          }
        },
        "required": [
          "primaryCheckIn",
          "alternativeCheckIn",
          "notes",
          "welcomeMessage"
        ]
      },
      "Language": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Is translation active",
            "example": true
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "space": {
            "type": "string"
          },
          "access": {
            "type": "string"
          },
          "neighborhood": {
            "type": "string"
          },
          "transit": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "description": "Listing notes",
            "example": "Some notes about listing"
          },
          "interactionWithGuests": {
            "type": "string"
          },
          "checkInInstructions": {
            "type": "object",
            "properties": {
              "primaryCheckIn": {
                "type": "string"
              },
              "alternativeCheckIn": {
                "type": "string"
              },
              "notes": {
                "type": "string"
              },
              "welcomeMessage": {
                "type": "string"
              }
            },
            "required": [
              "primaryCheckIn",
              "alternativeCheckIn",
              "notes",
              "welcomeMessage"
            ]
          }
        },
        "required": [
          "active",
          "title",
          "summary",
          "space",
          "access",
          "neighborhood",
          "transit",
          "interactionWithGuests",
          "checkInInstructions"
        ]
      },
      "MarketingResponseDTO": {
        "type": "object",
        "properties": {
          "listingId": {
            "type": "string",
            "description": "Listing ID",
            "example": "5b2149c9f579400024388c47"
          },
          "en_us": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "en_gb": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "en_au": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "en_nz": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "en_ca": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "da_dk": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "es_ar": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "es_es": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "es_mx": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "hu_hu": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "nl_nl": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "pt_pt": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "pt_br": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "de_de": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "fr_fr": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "fr_ca": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "it_it": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "pl_pl": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "ru_ru": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "hr_hr": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "ga_gp": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          },
          "zh_chs": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "description": "Is translation active",
                "example": true
              },
              "title": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "space": {
                "type": "string"
              },
              "access": {
                "type": "string"
              },
              "neighborhood": {
                "type": "string"
              },
              "transit": {
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Listing notes",
                "example": "Some notes about listing"
              },
              "interactionWithGuests": {
                "type": "string"
              },
              "checkInInstructions": {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            },
            "required": [
              "active",
              "title",
              "summary",
              "space",
              "access",
              "neighborhood",
              "transit",
              "interactionWithGuests",
              "checkInInstructions"
            ]
          }
        },
        "required": [
          "listingId",
          "en_us",
          "en_gb",
          "en_au",
          "en_nz",
          "en_ca",
          "da_dk",
          "es_ar",
          "es_es",
          "es_mx",
          "hu_hu",
          "nl_nl",
          "pt_pt",
          "pt_br",
          "de_de",
          "fr_fr",
          "fr_ca",
          "it_it",
          "pl_pl",
          "ru_ru",
          "hr_hr",
          "ga_gp",
          "zh_chs"
        ]
      },
      "MarketingBodyDTO": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Show if translation is active",
            "example": true
          },
          "title": {
            "type": "string",
            "description": "Listing title",
            "example": "Private 2BR near Downtown Detroit Queen Beds"
          },
          "summary": {
            "type": "string",
            "description": "Listing description",
            "example": "You can end your search NOW. You've just found an ideal place for your trip to Detroit"
          },
          "space": {
            "type": "string",
            "description": "Listing space description",
            "example": "We take absolute pleasure in welcoming you to the inviting 2B2B. With a stunning top floor view of Detroit"
          },
          "access": {
            "type": "string",
            "description": "Listing access description",
            "example": "Laundry and Dryer is available in your unit. Paid Car parking is available for attached car garage"
          },
          "neighborhood": {
            "type": "string",
            "description": "Listing neighborhood description",
            "example": "This apartment is situated right in the heart of Detroit"
          },
          "transit": {
            "type": "string",
            "description": "Listing transit description",
            "example": "The apartment is easy reachable by train as St James stations"
          },
          "notes": {
            "type": "string",
            "description": "Listing notes",
            "example": "The keys will be available to collect from a local Keynest Shop"
          },
          "interactionWithGuests": {
            "type": "string",
            "description": "Interaction with guests description",
            "example": "We will welcome you in person and explain about the area and answer any question you may have."
          },
          "checkInInstructions": {
            "description": "Details about check-in process",
            "example": {
              "primaryCheckIn": "RECEPTION",
              "alternativeCheckIn": "LOCK_BOX",
              "notes": "Happy to see you in our apartments",
              "welcomeMessage": "Happy to see you in our apartments"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            ]
          }
        },
        "required": [
          "active",
          "title"
        ]
      },
      "LanguageResponseDTO": {
        "type": "object",
        "properties": {
          "languageSlug": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "space": {
            "type": "string"
          },
          "access": {
            "type": "string"
          },
          "neighborhood": {
            "type": "string"
          },
          "transit": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "interactionWithGuests": {
            "type": "string"
          },
          "checkInInstructions": {
            "description": "Details about check-in process",
            "example": {
              "primaryCheckIn": "RECEPTION",
              "alternativeCheckIn": "LOCK_BOX",
              "notes": "Happy to see you in our apartments",
              "welcomeMessage": "Happy to see you in our apartments"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "primaryCheckIn": {
                    "type": "string"
                  },
                  "alternativeCheckIn": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "welcomeMessage": {
                    "type": "string"
                  }
                },
                "required": [
                  "primaryCheckIn",
                  "alternativeCheckIn",
                  "notes",
                  "welcomeMessage"
                ]
              }
            ]
          }
        },
        "required": [
          "languageSlug",
          "active",
          "title",
          "summary",
          "space",
          "access",
          "neighborhood",
          "transit",
          "notes",
          "interactionWithGuests",
          "checkInInstructions"
        ]
      },
      "GeocodeBodyDTO": {
        "type": "object",
        "properties": {
          "address": {
            "type": "object",
            "properties": {
              "full": {
                "type": "string"
              }
            },
            "example": {
              "full": "30-19 32nd St, Long Island City, NY 11102, USA"
            }
          },
          "publishedAddress": {
            "type": "object",
            "properties": {
              "full": {
                "type": "string"
              }
            },
            "example": {
              "full": "30-19 32nd St, Long Island City, NY 11102, USA"
            }
          }
        },
        "required": [
          "address",
          "publishedAddress"
        ]
      },
      "Location": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "example": 40.7659021
          },
          "lng": {
            "type": "number",
            "example": -73.9208235
          }
        }
      },
      "Address2": {
        "type": "object",
        "properties": {
          "full": {
            "type": "string",
            "example": "30-19 32nd St, Long Island City, NY 11102, USA"
          },
          "apartment": {
            "type": "string",
            "example": "4d"
          },
          "city": {
            "type": "string",
            "example": "New York City"
          },
          "country": {
            "type": "string",
            "example": "United States"
          },
          "county": {
            "type": "string",
            "example": "Nassau County"
          },
          "floor": {
            "type": "string",
            "example": "1D"
          },
          "unitNumber": {
            "type": "string",
            "example": "30a"
          },
          "location": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "example": 40.7659021
              },
              "lng": {
                "type": "number",
                "example": -73.9208235
              }
            }
          },
          "neighborhood": {
            "type": "string",
            "example": "Astoria"
          },
          "searchable": {
            "type": "string",
            "example": "30-19 32nd St, Long Island City, NY 11102, USA"
          },
          "state": {
            "type": "string",
            "example": "New York"
          },
          "street": {
            "type": "string",
            "example": "32nd Street"
          },
          "zipcode": {
            "type": "string",
            "example": "11102"
          },
          "buildingName": {
            "type": "string",
            "example": "Metropolis campus"
          }
        },
        "required": [
          "location"
        ]
      },
      "AddressBodyDTO": {
        "type": "object",
        "properties": {
          "address": {
            "type": "object",
            "properties": {
              "full": {
                "type": "string",
                "example": "30-19 32nd St, Long Island City, NY 11102, USA"
              },
              "apartment": {
                "type": "string",
                "example": "4d"
              },
              "city": {
                "type": "string",
                "example": "New York City"
              },
              "country": {
                "type": "string",
                "example": "United States"
              },
              "county": {
                "type": "string",
                "example": "Nassau County"
              },
              "floor": {
                "type": "string",
                "example": "1D"
              },
              "unitNumber": {
                "type": "string",
                "example": "30a"
              },
              "location": {
                "type": "object",
                "properties": {
                  "lat": {
                    "type": "number",
                    "example": 40.7659021
                  },
                  "lng": {
                    "type": "number",
                    "example": -73.9208235
                  }
                }
              },
              "neighborhood": {
                "type": "string",
                "example": "Astoria"
              },
              "searchable": {
                "type": "string",
                "example": "30-19 32nd St, Long Island City, NY 11102, USA"
              },
              "state": {
                "type": "string",
                "example": "New York"
              },
              "street": {
                "type": "string",
                "example": "32nd Street"
              },
              "zipcode": {
                "type": "string",
                "example": "11102"
              },
              "buildingName": {
                "type": "string",
                "example": "Metropolis campus"
              }
            },
            "required": [
              "location"
            ]
          },
          "publishedAddress": {
            "type": "object",
            "properties": {
              "full": {
                "type": "string",
                "example": "30-19 32nd St, Long Island City, NY 11102, USA"
              },
              "apartment": {
                "type": "string",
                "example": "4d"
              },
              "city": {
                "type": "string",
                "example": "New York City"
              },
              "country": {
                "type": "string",
                "example": "United States"
              },
              "county": {
                "type": "string",
                "example": "Nassau County"
              },
              "floor": {
                "type": "string",
                "example": "1D"
              },
              "unitNumber": {
                "type": "string",
                "example": "30a"
              },
              "location": {
                "type": "object",
                "properties": {
                  "lat": {
                    "type": "number",
                    "example": 40.7659021
                  },
                  "lng": {
                    "type": "number",
                    "example": -73.9208235
                  }
                }
              },
              "neighborhood": {
                "type": "string",
                "example": "Astoria"
              },
              "searchable": {
                "type": "string",
                "example": "30-19 32nd St, Long Island City, NY 11102, USA"
              },
              "state": {
                "type": "string",
                "example": "New York"
              },
              "street": {
                "type": "string",
                "example": "32nd Street"
              },
              "zipcode": {
                "type": "string",
                "example": "11102"
              },
              "buildingName": {
                "type": "string",
                "example": "Metropolis campus"
              }
            },
            "required": [
              "location"
            ]
          },
          "isPublishedAddressEnabled": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "address",
          "publishedAddress",
          "isPublishedAddressEnabled"
        ]
      },
      "ObjectId3": {
        "type": "string",
        "example": "5d6e7a7ebf8e3800207735ae"
      },
      "errorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "data": {
                "type": "object"
              }
            }
          }
        }
      },
      "reservation1": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "guestId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "stay": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "newUnitType": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "newUnit": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "reassignDate": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "checkIn": {
            "type": "string",
            "format": "date-time"
          },
          "checkOut": {
            "type": "string",
            "format": "date-time"
          },
          "listingId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "channel": {
            "type": "string"
          },
          "guestsCount": {
            "type": "number"
          },
          "nightsCount": {
            "type": "number"
          },
          "guest": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "passport": {
                "type": "string"
              },
              "fullName": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          },
          "integration": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "platform": {
                "type": "string"
              }
            }
          },
          "money": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "example": "USD"
              },
              "payments": {
                "type": "array",
                "example": []
              },
              "fareCleaning": {
                "type": "number",
                "example": 10
              },
              "fareAccommodation": {
                "type": "number",
                "example": 100
              },
              "invoiceItems": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "title": {
                      "type": "string",
                      "example": "Accommodation fare title"
                    },
                    "type": {
                      "type": "string",
                      "example": "ACCOMMODATION_FARE",
                      "enum": [
                        "ACCOMMODATION_FARE",
                        "CLEANING_FEE",
                        "TAX"
                      ]
                    },
                    "normalType": {
                      "type": "string",
                      "example": "AF",
                      "enum": [
                        "AF",
                        "CF",
                        "TAX",
                        "OTHER"
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "example": 100
                    },
                    "currency": {
                      "type": "string",
                      "example": "USD"
                    },
                    "isLocked": {
                      "type": "boolean",
                      "example": true
                    },
                    "isTax": {
                      "type": "boolean",
                      "example": false
                    },
                    "isAutoAdditionalFee": {
                      "type": "boolean",
                      "example": false
                    },
                    "secondIdentifier": {
                      "type": "string"
                    }
                  }
                }
              },
              "autoPaymentsPolicy": {
                "type": "array"
              },
              "altered": {
                "type": "boolean"
              },
              "paymentProviderIds": {
                "type": "array"
              },
              "fareAccommodationAdjustment": {
                "type": "number"
              },
              "fareAccommodationDiscount": {
                "type": "number"
              },
              "fareAccommodationAdjusted": {
                "type": "number"
              },
              "hostServiceFee": {
                "type": "number"
              },
              "hostServiceFeeTax": {
                "type": "number"
              },
              "hostServiceFeeIncTax": {
                "type": "number"
              },
              "subTotalPrice": {
                "type": "number"
              },
              "hostPayout": {
                "type": "number"
              },
              "hostPayoutUsd": {
                "type": "number"
              },
              "totalTaxes": {
                "type": "number"
              },
              "totalRefunded": {
                "type": "number"
              },
              "totalPaid": {
                "type": "number"
              },
              "paymentsDue": {
                "type": "number"
              },
              "balanceDue": {
                "type": "number"
              },
              "isFullyPaid": {
                "type": "boolean"
              },
              "useAccountRevenueShare": {
                "type": "boolean"
              },
              "netIncomeFormula": {
                "type": "string"
              },
              "netIncome": {
                "type": "number"
              },
              "commissionFormula": {
                "type": "string"
              },
              "commission": {
                "type": "number"
              },
              "commissionTaxPercentage": {
                "type": "number"
              },
              "commissionTax": {
                "type": "number"
              },
              "commissionIncTax": {
                "type": "number"
              },
              "ownerRevenueFormula": {
                "type": "string"
              },
              "ownerRevenue": {
                "type": "number"
              },
              "currencyConversionRateToAccount": {
                "type": "number"
              },
              "isTouchedPayments": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "listResult": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "listingId": {
              "type": "string",
              "example": "5d6e7a7ebf8e3800207735ae"
            },
            "count": {
              "type": "number"
            },
            "unassignedReservationsDays": {
              "type": "number",
              "example": 0,
              "default": 0
            },
            "unassignedReservationsCountForPeriod": {
              "type": "integer",
              "example": 0,
              "default": 0
            },
            "reservations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5d6e7a7ebf8e3800207735ae"
                  },
                  "guestId": {
                    "type": "string",
                    "example": "5d6e7a7ebf8e3800207735ae"
                  },
                  "stay": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "newUnitType": {
                          "type": "string",
                          "example": "5d6e7a7ebf8e3800207735ae"
                        },
                        "newUnit": {
                          "type": "string",
                          "example": "5d6e7a7ebf8e3800207735ae"
                        },
                        "reassignDate": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  "checkIn": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "checkOut": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "listingId": {
                    "type": "string",
                    "example": "5d6e7a7ebf8e3800207735ae"
                  },
                  "channel": {
                    "type": "string"
                  },
                  "guestsCount": {
                    "type": "number"
                  },
                  "nightsCount": {
                    "type": "number"
                  },
                  "guest": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "passport": {
                        "type": "string"
                      },
                      "fullName": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      }
                    }
                  },
                  "integration": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "5d6e7a7ebf8e3800207735ae"
                      },
                      "platform": {
                        "type": "string"
                      }
                    }
                  },
                  "money": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "example": "USD"
                      },
                      "payments": {
                        "type": "array",
                        "example": []
                      },
                      "fareCleaning": {
                        "type": "number",
                        "example": 10
                      },
                      "fareAccommodation": {
                        "type": "number",
                        "example": 100
                      },
                      "invoiceItems": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "5d6e7a7ebf8e3800207735ae"
                            },
                            "title": {
                              "type": "string",
                              "example": "Accommodation fare title"
                            },
                            "type": {
                              "type": "string",
                              "example": "ACCOMMODATION_FARE",
                              "enum": [
                                "ACCOMMODATION_FARE",
                                "CLEANING_FEE",
                                "TAX"
                              ]
                            },
                            "normalType": {
                              "type": "string",
                              "example": "AF",
                              "enum": [
                                "AF",
                                "CF",
                                "TAX",
                                "OTHER"
                              ]
                            },
                            "amount": {
                              "type": "number",
                              "example": 100
                            },
                            "currency": {
                              "type": "string",
                              "example": "USD"
                            },
                            "isLocked": {
                              "type": "boolean",
                              "example": true
                            },
                            "isTax": {
                              "type": "boolean",
                              "example": false
                            },
                            "isAutoAdditionalFee": {
                              "type": "boolean",
                              "example": false
                            },
                            "secondIdentifier": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "autoPaymentsPolicy": {
                        "type": "array"
                      },
                      "altered": {
                        "type": "boolean"
                      },
                      "paymentProviderIds": {
                        "type": "array"
                      },
                      "fareAccommodationAdjustment": {
                        "type": "number"
                      },
                      "fareAccommodationDiscount": {
                        "type": "number"
                      },
                      "fareAccommodationAdjusted": {
                        "type": "number"
                      },
                      "hostServiceFee": {
                        "type": "number"
                      },
                      "hostServiceFeeTax": {
                        "type": "number"
                      },
                      "hostServiceFeeIncTax": {
                        "type": "number"
                      },
                      "subTotalPrice": {
                        "type": "number"
                      },
                      "hostPayout": {
                        "type": "number"
                      },
                      "hostPayoutUsd": {
                        "type": "number"
                      },
                      "totalTaxes": {
                        "type": "number"
                      },
                      "totalRefunded": {
                        "type": "number"
                      },
                      "totalPaid": {
                        "type": "number"
                      },
                      "paymentsDue": {
                        "type": "number"
                      },
                      "balanceDue": {
                        "type": "number"
                      },
                      "isFullyPaid": {
                        "type": "boolean"
                      },
                      "useAccountRevenueShare": {
                        "type": "boolean"
                      },
                      "netIncomeFormula": {
                        "type": "string"
                      },
                      "netIncome": {
                        "type": "number"
                      },
                      "commissionFormula": {
                        "type": "string"
                      },
                      "commission": {
                        "type": "number"
                      },
                      "commissionTaxPercentage": {
                        "type": "number"
                      },
                      "commissionTax": {
                        "type": "number"
                      },
                      "commissionIncTax": {
                        "type": "number"
                      },
                      "ownerRevenueFormula": {
                        "type": "string"
                      },
                      "ownerRevenue": {
                        "type": "number"
                      },
                      "currencyConversionRateToAccount": {
                        "type": "number"
                      },
                      "isTouchedPayments": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "reservationIdObjResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          }
        }
      },
      "unassignedReservationsResponse": {
        "type": "object",
        "properties": {
          "listingId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "limit": {
            "type": "number",
            "example": 25,
            "default": 25
          },
          "skip": {
            "type": "number",
            "example": 25,
            "default": 0
          },
          "count": {
            "type": "integer",
            "example": 25,
            "default": 0
          },
          "unassignedReservationsDays": {
            "type": "number",
            "example": 0,
            "default": 0
          },
          "unassignedReservationsCountForPeriod": {
            "type": "integer",
            "example": 0,
            "default": 0
          },
          "reservations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "guestId": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "stay": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "newUnitType": {
                        "type": "string",
                        "example": "5d6e7a7ebf8e3800207735ae"
                      },
                      "newUnit": {
                        "type": "string",
                        "example": "5d6e7a7ebf8e3800207735ae"
                      },
                      "reassignDate": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "checkIn": {
                  "type": "string",
                  "format": "date-time"
                },
                "checkOut": {
                  "type": "string",
                  "format": "date-time"
                },
                "listingId": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "channel": {
                  "type": "string"
                },
                "guestsCount": {
                  "type": "number"
                },
                "nightsCount": {
                  "type": "number"
                },
                "guest": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "passport": {
                      "type": "string"
                    },
                    "fullName": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    }
                  }
                },
                "integration": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "platform": {
                      "type": "string"
                    }
                  }
                },
                "money": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string",
                      "example": "USD"
                    },
                    "payments": {
                      "type": "array",
                      "example": []
                    },
                    "fareCleaning": {
                      "type": "number",
                      "example": 10
                    },
                    "fareAccommodation": {
                      "type": "number",
                      "example": 100
                    },
                    "invoiceItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "5d6e7a7ebf8e3800207735ae"
                          },
                          "title": {
                            "type": "string",
                            "example": "Accommodation fare title"
                          },
                          "type": {
                            "type": "string",
                            "example": "ACCOMMODATION_FARE",
                            "enum": [
                              "ACCOMMODATION_FARE",
                              "CLEANING_FEE",
                              "TAX"
                            ]
                          },
                          "normalType": {
                            "type": "string",
                            "example": "AF",
                            "enum": [
                              "AF",
                              "CF",
                              "TAX",
                              "OTHER"
                            ]
                          },
                          "amount": {
                            "type": "number",
                            "example": 100
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD"
                          },
                          "isLocked": {
                            "type": "boolean",
                            "example": true
                          },
                          "isTax": {
                            "type": "boolean",
                            "example": false
                          },
                          "isAutoAdditionalFee": {
                            "type": "boolean",
                            "example": false
                          },
                          "secondIdentifier": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "autoPaymentsPolicy": {
                      "type": "array"
                    },
                    "altered": {
                      "type": "boolean"
                    },
                    "paymentProviderIds": {
                      "type": "array"
                    },
                    "fareAccommodationAdjustment": {
                      "type": "number"
                    },
                    "fareAccommodationDiscount": {
                      "type": "number"
                    },
                    "fareAccommodationAdjusted": {
                      "type": "number"
                    },
                    "hostServiceFee": {
                      "type": "number"
                    },
                    "hostServiceFeeTax": {
                      "type": "number"
                    },
                    "hostServiceFeeIncTax": {
                      "type": "number"
                    },
                    "subTotalPrice": {
                      "type": "number"
                    },
                    "hostPayout": {
                      "type": "number"
                    },
                    "hostPayoutUsd": {
                      "type": "number"
                    },
                    "totalTaxes": {
                      "type": "number"
                    },
                    "totalRefunded": {
                      "type": "number"
                    },
                    "totalPaid": {
                      "type": "number"
                    },
                    "paymentsDue": {
                      "type": "number"
                    },
                    "balanceDue": {
                      "type": "number"
                    },
                    "isFullyPaid": {
                      "type": "boolean"
                    },
                    "useAccountRevenueShare": {
                      "type": "boolean"
                    },
                    "netIncomeFormula": {
                      "type": "string"
                    },
                    "netIncome": {
                      "type": "number"
                    },
                    "commissionFormula": {
                      "type": "string"
                    },
                    "commission": {
                      "type": "number"
                    },
                    "commissionTaxPercentage": {
                      "type": "number"
                    },
                    "commissionTax": {
                      "type": "number"
                    },
                    "commissionIncTax": {
                      "type": "number"
                    },
                    "ownerRevenueFormula": {
                      "type": "string"
                    },
                    "ownerRevenue": {
                      "type": "number"
                    },
                    "currencyConversionRateToAccount": {
                      "type": "number"
                    },
                    "isTouchedPayments": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "listUnassignedReservationsResponse": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "example": 25,
            "default": 25
          },
          "skip": {
            "type": "number",
            "example": 25,
            "default": 0
          },
          "count": {
            "type": "number",
            "example": 25,
            "default": 0
          },
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "listingId": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "count": {
                  "type": "number"
                },
                "unassignedReservationsDays": {
                  "type": "number",
                  "example": 0,
                  "default": 0
                },
                "unassignedReservationsCountForPeriod": {
                  "type": "integer",
                  "example": 0,
                  "default": 0
                },
                "reservations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "5d6e7a7ebf8e3800207735ae"
                      },
                      "guestId": {
                        "type": "string",
                        "example": "5d6e7a7ebf8e3800207735ae"
                      },
                      "stay": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "newUnitType": {
                              "type": "string",
                              "example": "5d6e7a7ebf8e3800207735ae"
                            },
                            "newUnit": {
                              "type": "string",
                              "example": "5d6e7a7ebf8e3800207735ae"
                            },
                            "reassignDate": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      },
                      "checkIn": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "checkOut": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "listingId": {
                        "type": "string",
                        "example": "5d6e7a7ebf8e3800207735ae"
                      },
                      "channel": {
                        "type": "string"
                      },
                      "guestsCount": {
                        "type": "number"
                      },
                      "nightsCount": {
                        "type": "number"
                      },
                      "guest": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "passport": {
                            "type": "string"
                          },
                          "fullName": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          }
                        }
                      },
                      "integration": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "5d6e7a7ebf8e3800207735ae"
                          },
                          "platform": {
                            "type": "string"
                          }
                        }
                      },
                      "money": {
                        "type": "object",
                        "properties": {
                          "currency": {
                            "type": "string",
                            "example": "USD"
                          },
                          "payments": {
                            "type": "array",
                            "example": []
                          },
                          "fareCleaning": {
                            "type": "number",
                            "example": 10
                          },
                          "fareAccommodation": {
                            "type": "number",
                            "example": 100
                          },
                          "invoiceItems": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "type": "string",
                                  "example": "5d6e7a7ebf8e3800207735ae"
                                },
                                "title": {
                                  "type": "string",
                                  "example": "Accommodation fare title"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "ACCOMMODATION_FARE",
                                  "enum": [
                                    "ACCOMMODATION_FARE",
                                    "CLEANING_FEE",
                                    "TAX"
                                  ]
                                },
                                "normalType": {
                                  "type": "string",
                                  "example": "AF",
                                  "enum": [
                                    "AF",
                                    "CF",
                                    "TAX",
                                    "OTHER"
                                  ]
                                },
                                "amount": {
                                  "type": "number",
                                  "example": 100
                                },
                                "currency": {
                                  "type": "string",
                                  "example": "USD"
                                },
                                "isLocked": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "isTax": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "isAutoAdditionalFee": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "secondIdentifier": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "autoPaymentsPolicy": {
                            "type": "array"
                          },
                          "altered": {
                            "type": "boolean"
                          },
                          "paymentProviderIds": {
                            "type": "array"
                          },
                          "fareAccommodationAdjustment": {
                            "type": "number"
                          },
                          "fareAccommodationDiscount": {
                            "type": "number"
                          },
                          "fareAccommodationAdjusted": {
                            "type": "number"
                          },
                          "hostServiceFee": {
                            "type": "number"
                          },
                          "hostServiceFeeTax": {
                            "type": "number"
                          },
                          "hostServiceFeeIncTax": {
                            "type": "number"
                          },
                          "subTotalPrice": {
                            "type": "number"
                          },
                          "hostPayout": {
                            "type": "number"
                          },
                          "hostPayoutUsd": {
                            "type": "number"
                          },
                          "totalTaxes": {
                            "type": "number"
                          },
                          "totalRefunded": {
                            "type": "number"
                          },
                          "totalPaid": {
                            "type": "number"
                          },
                          "paymentsDue": {
                            "type": "number"
                          },
                          "balanceDue": {
                            "type": "number"
                          },
                          "isFullyPaid": {
                            "type": "boolean"
                          },
                          "useAccountRevenueShare": {
                            "type": "boolean"
                          },
                          "netIncomeFormula": {
                            "type": "string"
                          },
                          "netIncome": {
                            "type": "number"
                          },
                          "commissionFormula": {
                            "type": "string"
                          },
                          "commission": {
                            "type": "number"
                          },
                          "commissionTaxPercentage": {
                            "type": "number"
                          },
                          "commissionTax": {
                            "type": "number"
                          },
                          "commissionIncTax": {
                            "type": "number"
                          },
                          "ownerRevenueFormula": {
                            "type": "string"
                          },
                          "ownerRevenue": {
                            "type": "number"
                          },
                          "currencyConversionRateToAccount": {
                            "type": "number"
                          },
                          "isTouchedPayments": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "assignBody": {
        "properties": {
          "listingId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ad"
          },
          "reservationId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          }
        }
      },
      "assignResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "reservation": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "guestId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "stay": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "newUnitType": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "newUnit": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "reassignDate": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              },
              "checkIn": {
                "type": "string",
                "format": "date-time"
              },
              "checkOut": {
                "type": "string",
                "format": "date-time"
              },
              "listingId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "channel": {
                "type": "string"
              },
              "guestsCount": {
                "type": "number"
              },
              "nightsCount": {
                "type": "number"
              },
              "guest": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "passport": {
                    "type": "string"
                  },
                  "fullName": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              },
              "integration": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "5d6e7a7ebf8e3800207735ae"
                  },
                  "platform": {
                    "type": "string"
                  }
                }
              },
              "money": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "example": "USD"
                  },
                  "payments": {
                    "type": "array",
                    "example": []
                  },
                  "fareCleaning": {
                    "type": "number",
                    "example": 10
                  },
                  "fareAccommodation": {
                    "type": "number",
                    "example": 100
                  },
                  "invoiceItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "5d6e7a7ebf8e3800207735ae"
                        },
                        "title": {
                          "type": "string",
                          "example": "Accommodation fare title"
                        },
                        "type": {
                          "type": "string",
                          "example": "ACCOMMODATION_FARE",
                          "enum": [
                            "ACCOMMODATION_FARE",
                            "CLEANING_FEE",
                            "TAX"
                          ]
                        },
                        "normalType": {
                          "type": "string",
                          "example": "AF",
                          "enum": [
                            "AF",
                            "CF",
                            "TAX",
                            "OTHER"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "example": 100
                        },
                        "currency": {
                          "type": "string",
                          "example": "USD"
                        },
                        "isLocked": {
                          "type": "boolean",
                          "example": true
                        },
                        "isTax": {
                          "type": "boolean",
                          "example": false
                        },
                        "isAutoAdditionalFee": {
                          "type": "boolean",
                          "example": false
                        },
                        "secondIdentifier": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "autoPaymentsPolicy": {
                    "type": "array"
                  },
                  "altered": {
                    "type": "boolean"
                  },
                  "paymentProviderIds": {
                    "type": "array"
                  },
                  "fareAccommodationAdjustment": {
                    "type": "number"
                  },
                  "fareAccommodationDiscount": {
                    "type": "number"
                  },
                  "fareAccommodationAdjusted": {
                    "type": "number"
                  },
                  "hostServiceFee": {
                    "type": "number"
                  },
                  "hostServiceFeeTax": {
                    "type": "number"
                  },
                  "hostServiceFeeIncTax": {
                    "type": "number"
                  },
                  "subTotalPrice": {
                    "type": "number"
                  },
                  "hostPayout": {
                    "type": "number"
                  },
                  "hostPayoutUsd": {
                    "type": "number"
                  },
                  "totalTaxes": {
                    "type": "number"
                  },
                  "totalRefunded": {
                    "type": "number"
                  },
                  "totalPaid": {
                    "type": "number"
                  },
                  "paymentsDue": {
                    "type": "number"
                  },
                  "balanceDue": {
                    "type": "number"
                  },
                  "isFullyPaid": {
                    "type": "boolean"
                  },
                  "useAccountRevenueShare": {
                    "type": "boolean"
                  },
                  "netIncomeFormula": {
                    "type": "string"
                  },
                  "netIncome": {
                    "type": "number"
                  },
                  "commissionFormula": {
                    "type": "string"
                  },
                  "commission": {
                    "type": "number"
                  },
                  "commissionTaxPercentage": {
                    "type": "number"
                  },
                  "commissionTax": {
                    "type": "number"
                  },
                  "commissionIncTax": {
                    "type": "number"
                  },
                  "ownerRevenueFormula": {
                    "type": "string"
                  },
                  "ownerRevenue": {
                    "type": "number"
                  },
                  "currencyConversionRateToAccount": {
                    "type": "number"
                  },
                  "isTouchedPayments": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "preApproveResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "accountId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "listingId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "status": {
            "type": "string",
            "example": "CONNECTED"
          },
          "checkInDateLocalized": {
            "type": "string",
            "format": "date-time"
          },
          "checkOutDateLocalized": {
            "type": "string",
            "format": "date-time"
          },
          "preApproveState": {
            "type": "boolean",
            "example": true
          },
          "pendingTasks": {
            "type": "array"
          },
          "integration": {
            "type": "object",
            "properties": {
              "platform": {
                "type": "string",
                "example": "manual"
              },
              "_id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              }
            }
          }
        },
        "required": [
          "_id",
          "accountId",
          "listingId",
          "status",
          "checkInDateLocalized",
          "checkOutDateLocalized",
          "preApproveState",
          "pendingTasks",
          "integration"
        ]
      },
      "getByIdResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "reservation": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "guestId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "stay": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "newUnitType": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "newUnit": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "reassignDate": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              },
              "checkIn": {
                "type": "string",
                "format": "date-time"
              },
              "checkOut": {
                "type": "string",
                "format": "date-time"
              },
              "listingId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "channel": {
                "type": "string"
              },
              "guestsCount": {
                "type": "number"
              },
              "nightsCount": {
                "type": "number"
              },
              "guest": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "passport": {
                    "type": "string"
                  },
                  "fullName": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              },
              "integration": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "5d6e7a7ebf8e3800207735ae"
                  },
                  "platform": {
                    "type": "string"
                  }
                }
              },
              "money": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "example": "USD"
                  },
                  "payments": {
                    "type": "array",
                    "example": []
                  },
                  "fareCleaning": {
                    "type": "number",
                    "example": 10
                  },
                  "fareAccommodation": {
                    "type": "number",
                    "example": 100
                  },
                  "invoiceItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "5d6e7a7ebf8e3800207735ae"
                        },
                        "title": {
                          "type": "string",
                          "example": "Accommodation fare title"
                        },
                        "type": {
                          "type": "string",
                          "example": "ACCOMMODATION_FARE",
                          "enum": [
                            "ACCOMMODATION_FARE",
                            "CLEANING_FEE",
                            "TAX"
                          ]
                        },
                        "normalType": {
                          "type": "string",
                          "example": "AF",
                          "enum": [
                            "AF",
                            "CF",
                            "TAX",
                            "OTHER"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "example": 100
                        },
                        "currency": {
                          "type": "string",
                          "example": "USD"
                        },
                        "isLocked": {
                          "type": "boolean",
                          "example": true
                        },
                        "isTax": {
                          "type": "boolean",
                          "example": false
                        },
                        "isAutoAdditionalFee": {
                          "type": "boolean",
                          "example": false
                        },
                        "secondIdentifier": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "autoPaymentsPolicy": {
                    "type": "array"
                  },
                  "altered": {
                    "type": "boolean"
                  },
                  "paymentProviderIds": {
                    "type": "array"
                  },
                  "fareAccommodationAdjustment": {
                    "type": "number"
                  },
                  "fareAccommodationDiscount": {
                    "type": "number"
                  },
                  "fareAccommodationAdjusted": {
                    "type": "number"
                  },
                  "hostServiceFee": {
                    "type": "number"
                  },
                  "hostServiceFeeTax": {
                    "type": "number"
                  },
                  "hostServiceFeeIncTax": {
                    "type": "number"
                  },
                  "subTotalPrice": {
                    "type": "number"
                  },
                  "hostPayout": {
                    "type": "number"
                  },
                  "hostPayoutUsd": {
                    "type": "number"
                  },
                  "totalTaxes": {
                    "type": "number"
                  },
                  "totalRefunded": {
                    "type": "number"
                  },
                  "totalPaid": {
                    "type": "number"
                  },
                  "paymentsDue": {
                    "type": "number"
                  },
                  "balanceDue": {
                    "type": "number"
                  },
                  "isFullyPaid": {
                    "type": "boolean"
                  },
                  "useAccountRevenueShare": {
                    "type": "boolean"
                  },
                  "netIncomeFormula": {
                    "type": "string"
                  },
                  "netIncome": {
                    "type": "number"
                  },
                  "commissionFormula": {
                    "type": "string"
                  },
                  "commission": {
                    "type": "number"
                  },
                  "commissionTaxPercentage": {
                    "type": "number"
                  },
                  "commissionTax": {
                    "type": "number"
                  },
                  "commissionIncTax": {
                    "type": "number"
                  },
                  "ownerRevenueFormula": {
                    "type": "string"
                  },
                  "ownerRevenue": {
                    "type": "number"
                  },
                  "currencyConversionRateToAccount": {
                    "type": "number"
                  },
                  "isTouchedPayments": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "reservationCreateOrUpdateReq": {
        "type": "object",
        "properties": {
          "channelId": {
            "type": "string",
            "example": "expedia"
          },
          "flags": {
            "type": "object",
            "properties": {
              "ignoreTerms": {
                "type": "boolean"
              },
              "ignoreCalendar": {
                "type": "boolean"
              }
            },
            "example": {
              "ignoreTerms": true,
              "ignoreCalendar": true
            }
          },
          "payment": {
            "type": "object",
            "properties": {
              "token": {
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "threeDS": {
                    "type": "string"
                  },
                  "policyId": {
                    "type": "string"
                  },
                  "isVCC": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "example": {
              "token": {
                "id": "pm_some-test-stripe-token"
              }
            }
          },
          "reservation": {
            "type": "object",
            "properties": {
              "confirmationCode": {
                "type": "string",
                "example": "EXP-a1b2c3d4"
              },
              "status": {
                "type": "string",
                "example": "confirmed"
              },
              "source": {
                "type": "string",
                "example": "Expedia"
              },
              "listingId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "confirmedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2021-04-15T11:00:00Z"
              },
              "checkIn": {
                "type": "string",
                "format": "date-time",
                "example": "2021-05-05T00:00:00Z"
              },
              "checkOut": {
                "type": "string",
                "format": "date-time",
                "example": "2021-05-09T00:00:00Z"
              },
              "guest": {
                "type": "object",
                "properties": {
                  "fullName": {
                    "type": "string",
                    "example": "Test User"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "Test"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "User"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "test-user@example.com"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+380971234567"
                  },
                  "communicationMethods": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "expedia"
                      ]
                    },
                    "description": "additional communication methods",
                    "example": [
                      "expedia"
                    ]
                  }
                }
              },
              "guestsCount": {
                "type": "integer",
                "minimum": 1,
                "example": 4
              },
              "numberOfGuests": {
                "type": "object",
                "properties": {
                  "numberOfAdults": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 2
                  },
                  "numberOfChildren": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 2
                  },
                  "numberOfPets": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 0
                  }
                }
              },
              "specialRequests": {
                "type": "string",
                "example": "1 king bed | Non-Smoking"
              },
              "notes": {
                "type": "object",
                "properties": {
                  "guest": {
                    "type": "string"
                  },
                  "other": {
                    "type": "string"
                  }
                }
              },
              "money": {
                "type": "object",
                "properties": {
                  "currency": {
                    "type": "string",
                    "example": "USD"
                  },
                  "payments": {
                    "type": "array",
                    "example": []
                  },
                  "fareCleaning": {
                    "type": "number",
                    "example": 10
                  },
                  "fareAccommodation": {
                    "type": "number",
                    "example": 100
                  },
                  "invoiceItems": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "5d6e7a7ebf8e3800207735ae"
                        },
                        "title": {
                          "type": "string",
                          "example": "Accommodation fare title"
                        },
                        "type": {
                          "type": "string",
                          "example": "ACCOMMODATION_FARE",
                          "enum": [
                            "ACCOMMODATION_FARE",
                            "CLEANING_FEE",
                            "TAX"
                          ]
                        },
                        "normalType": {
                          "type": "string",
                          "example": "AF",
                          "enum": [
                            "AF",
                            "CF",
                            "TAX",
                            "OTHER"
                          ]
                        },
                        "amount": {
                          "type": "number",
                          "example": 100
                        },
                        "currency": {
                          "type": "string",
                          "example": "USD"
                        },
                        "isLocked": {
                          "type": "boolean",
                          "example": true
                        },
                        "isTax": {
                          "type": "boolean",
                          "example": false
                        },
                        "isAutoAdditionalFee": {
                          "type": "boolean",
                          "example": false
                        },
                        "secondIdentifier": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "autoPaymentsPolicy": {
                    "type": "array"
                  },
                  "altered": {
                    "type": "boolean"
                  },
                  "paymentProviderIds": {
                    "type": "array"
                  },
                  "fareAccommodationAdjustment": {
                    "type": "number"
                  },
                  "fareAccommodationDiscount": {
                    "type": "number"
                  },
                  "fareAccommodationAdjusted": {
                    "type": "number"
                  },
                  "hostServiceFee": {
                    "type": "number"
                  },
                  "hostServiceFeeTax": {
                    "type": "number"
                  },
                  "hostServiceFeeIncTax": {
                    "type": "number"
                  },
                  "subTotalPrice": {
                    "type": "number"
                  },
                  "hostPayout": {
                    "type": "number"
                  },
                  "hostPayoutUsd": {
                    "type": "number"
                  },
                  "totalTaxes": {
                    "type": "number"
                  },
                  "totalRefunded": {
                    "type": "number"
                  },
                  "totalPaid": {
                    "type": "number"
                  },
                  "paymentsDue": {
                    "type": "number"
                  },
                  "balanceDue": {
                    "type": "number"
                  },
                  "isFullyPaid": {
                    "type": "boolean"
                  },
                  "useAccountRevenueShare": {
                    "type": "boolean"
                  },
                  "netIncomeFormula": {
                    "type": "string"
                  },
                  "netIncome": {
                    "type": "number"
                  },
                  "commissionFormula": {
                    "type": "string"
                  },
                  "commission": {
                    "type": "number"
                  },
                  "commissionTaxPercentage": {
                    "type": "number"
                  },
                  "commissionTax": {
                    "type": "number"
                  },
                  "commissionIncTax": {
                    "type": "number"
                  },
                  "ownerRevenueFormula": {
                    "type": "string"
                  },
                  "ownerRevenue": {
                    "type": "number"
                  },
                  "currencyConversionRateToAccount": {
                    "type": "number"
                  },
                  "isTouchedPayments": {
                    "type": "boolean"
                  }
                }
              },
              "ratePlan": {
                "type": "object",
                "properties": {
                  "ratePlanId": {
                    "type": "string",
                    "example": "5d6e7a7ebf8e3800207735ae"
                  },
                  "name": {
                    "type": "string",
                    "example": "Standard"
                  },
                  "mealPlan": {
                    "type": "string",
                    "example": "There is no meal option with this room."
                  },
                  "isExternalModificationFound": {
                    "type": "boolean",
                    "example": true
                  },
                  "cancellationPolicy": {
                    "type": "string",
                    "example": "STRICT"
                  },
                  "cancellationFee": {
                    "type": "number",
                    "example": 1
                  },
                  "prePayment": {
                    "type": "string",
                    "example": "Any prePayment"
                  },
                  "promotionData": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "5d6e7a7ebf8e3800207735ae"
                      },
                      "name": {
                        "type": "string",
                        "example": "Any name"
                      },
                      "externalPromotionId": {
                        "type": "string",
                        "example": "Any externalPromotionId"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "channelId",
          "reservation"
        ]
      },
      "reservationReqFlags": {
        "type": "object",
        "properties": {
          "ignoreTerms": {
            "type": "boolean"
          },
          "ignoreCalendar": {
            "type": "boolean"
          }
        },
        "example": {
          "ignoreTerms": true,
          "ignoreCalendar": true
        }
      },
      "reservationReqPayment": {
        "type": "object",
        "properties": {
          "token": {
            "properties": {
              "id": {
                "type": "string"
              },
              "threeDS": {
                "type": "string"
              },
              "policyId": {
                "type": "string"
              },
              "isVCC": {
                "type": "boolean"
              }
            },
            "required": [
              "id"
            ]
          }
        },
        "example": {
          "token": {
            "id": "pm_some-test-stripe-token"
          }
        }
      },
      "reservationReqReservation": {
        "type": "object",
        "properties": {
          "confirmationCode": {
            "type": "string",
            "example": "EXP-a1b2c3d4"
          },
          "status": {
            "type": "string",
            "example": "confirmed"
          },
          "source": {
            "type": "string",
            "example": "Expedia"
          },
          "listingId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "confirmedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2021-04-15T11:00:00Z"
          },
          "checkIn": {
            "type": "string",
            "format": "date-time",
            "example": "2021-05-05T00:00:00Z"
          },
          "checkOut": {
            "type": "string",
            "format": "date-time",
            "example": "2021-05-09T00:00:00Z"
          },
          "guest": {
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string",
                "example": "Test User"
              },
              "firstName": {
                "type": "string",
                "example": "Test"
              },
              "lastName": {
                "type": "string",
                "example": "User"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "test-user@example.com"
              },
              "phone": {
                "type": "string",
                "example": "+380971234567"
              },
              "communicationMethods": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "expedia"
                  ]
                },
                "description": "additional communication methods",
                "example": [
                  "expedia"
                ]
              }
            }
          },
          "guestsCount": {
            "type": "integer",
            "minimum": 1,
            "example": 4
          },
          "numberOfGuests": {
            "type": "object",
            "properties": {
              "numberOfAdults": {
                "type": "integer",
                "minimum": 1,
                "example": 2
              },
              "numberOfChildren": {
                "type": "integer",
                "minimum": 0,
                "example": 2
              },
              "numberOfPets": {
                "type": "integer",
                "minimum": 0,
                "example": 0
              }
            }
          },
          "specialRequests": {
            "type": "string",
            "example": "1 king bed | Non-Smoking"
          },
          "notes": {
            "type": "object",
            "properties": {
              "guest": {
                "type": "string"
              },
              "other": {
                "type": "string"
              }
            }
          },
          "money": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "example": "USD"
              },
              "payments": {
                "type": "array",
                "example": []
              },
              "fareCleaning": {
                "type": "number",
                "example": 10
              },
              "fareAccommodation": {
                "type": "number",
                "example": 100
              },
              "invoiceItems": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "title": {
                      "type": "string",
                      "example": "Accommodation fare title"
                    },
                    "type": {
                      "type": "string",
                      "example": "ACCOMMODATION_FARE",
                      "enum": [
                        "ACCOMMODATION_FARE",
                        "CLEANING_FEE",
                        "TAX"
                      ]
                    },
                    "normalType": {
                      "type": "string",
                      "example": "AF",
                      "enum": [
                        "AF",
                        "CF",
                        "TAX",
                        "OTHER"
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "example": 100
                    },
                    "currency": {
                      "type": "string",
                      "example": "USD"
                    },
                    "isLocked": {
                      "type": "boolean",
                      "example": true
                    },
                    "isTax": {
                      "type": "boolean",
                      "example": false
                    },
                    "isAutoAdditionalFee": {
                      "type": "boolean",
                      "example": false
                    },
                    "secondIdentifier": {
                      "type": "string"
                    }
                  }
                }
              },
              "autoPaymentsPolicy": {
                "type": "array"
              },
              "altered": {
                "type": "boolean"
              },
              "paymentProviderIds": {
                "type": "array"
              },
              "fareAccommodationAdjustment": {
                "type": "number"
              },
              "fareAccommodationDiscount": {
                "type": "number"
              },
              "fareAccommodationAdjusted": {
                "type": "number"
              },
              "hostServiceFee": {
                "type": "number"
              },
              "hostServiceFeeTax": {
                "type": "number"
              },
              "hostServiceFeeIncTax": {
                "type": "number"
              },
              "subTotalPrice": {
                "type": "number"
              },
              "hostPayout": {
                "type": "number"
              },
              "hostPayoutUsd": {
                "type": "number"
              },
              "totalTaxes": {
                "type": "number"
              },
              "totalRefunded": {
                "type": "number"
              },
              "totalPaid": {
                "type": "number"
              },
              "paymentsDue": {
                "type": "number"
              },
              "balanceDue": {
                "type": "number"
              },
              "isFullyPaid": {
                "type": "boolean"
              },
              "useAccountRevenueShare": {
                "type": "boolean"
              },
              "netIncomeFormula": {
                "type": "string"
              },
              "netIncome": {
                "type": "number"
              },
              "commissionFormula": {
                "type": "string"
              },
              "commission": {
                "type": "number"
              },
              "commissionTaxPercentage": {
                "type": "number"
              },
              "commissionTax": {
                "type": "number"
              },
              "commissionIncTax": {
                "type": "number"
              },
              "ownerRevenueFormula": {
                "type": "string"
              },
              "ownerRevenue": {
                "type": "number"
              },
              "currencyConversionRateToAccount": {
                "type": "number"
              },
              "isTouchedPayments": {
                "type": "boolean"
              }
            }
          },
          "ratePlan": {
            "type": "object",
            "properties": {
              "ratePlanId": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "name": {
                "type": "string",
                "example": "Standard"
              },
              "mealPlan": {
                "type": "string",
                "example": "There is no meal option with this room."
              },
              "isExternalModificationFound": {
                "type": "boolean",
                "example": true
              },
              "cancellationPolicy": {
                "type": "string",
                "example": "STRICT"
              },
              "cancellationFee": {
                "type": "number",
                "example": 1
              },
              "prePayment": {
                "type": "string",
                "example": "Any prePayment"
              },
              "promotionData": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5d6e7a7ebf8e3800207735ae"
                  },
                  "name": {
                    "type": "string",
                    "example": "Any name"
                  },
                  "externalPromotionId": {
                    "type": "string",
                    "example": "Any externalPromotionId"
                  }
                }
              }
            }
          }
        }
      },
      "stay": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "newUnitType": {
              "type": "string",
              "example": "5d6e7a7ebf8e3800207735ae"
            },
            "newUnit": {
              "type": "string",
              "example": "5d6e7a7ebf8e3800207735ae"
            },
            "reassignDate": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "money": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "example": "USD"
          },
          "payments": {
            "type": "array",
            "example": []
          },
          "fareCleaning": {
            "type": "number",
            "example": 10
          },
          "fareAccommodation": {
            "type": "number",
            "example": 100
          },
          "invoiceItems": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "5d6e7a7ebf8e3800207735ae"
                },
                "title": {
                  "type": "string",
                  "example": "Accommodation fare title"
                },
                "type": {
                  "type": "string",
                  "example": "ACCOMMODATION_FARE",
                  "enum": [
                    "ACCOMMODATION_FARE",
                    "CLEANING_FEE",
                    "TAX"
                  ]
                },
                "normalType": {
                  "type": "string",
                  "example": "AF",
                  "enum": [
                    "AF",
                    "CF",
                    "TAX",
                    "OTHER"
                  ]
                },
                "amount": {
                  "type": "number",
                  "example": 100
                },
                "currency": {
                  "type": "string",
                  "example": "USD"
                },
                "isLocked": {
                  "type": "boolean",
                  "example": true
                },
                "isTax": {
                  "type": "boolean",
                  "example": false
                },
                "isAutoAdditionalFee": {
                  "type": "boolean",
                  "example": false
                },
                "secondIdentifier": {
                  "type": "string"
                }
              }
            }
          },
          "autoPaymentsPolicy": {
            "type": "array"
          },
          "altered": {
            "type": "boolean"
          },
          "paymentProviderIds": {
            "type": "array"
          },
          "fareAccommodationAdjustment": {
            "type": "number"
          },
          "fareAccommodationDiscount": {
            "type": "number"
          },
          "fareAccommodationAdjusted": {
            "type": "number"
          },
          "hostServiceFee": {
            "type": "number"
          },
          "hostServiceFeeTax": {
            "type": "number"
          },
          "hostServiceFeeIncTax": {
            "type": "number"
          },
          "subTotalPrice": {
            "type": "number"
          },
          "hostPayout": {
            "type": "number"
          },
          "hostPayoutUsd": {
            "type": "number"
          },
          "totalTaxes": {
            "type": "number"
          },
          "totalRefunded": {
            "type": "number"
          },
          "totalPaid": {
            "type": "number"
          },
          "paymentsDue": {
            "type": "number"
          },
          "balanceDue": {
            "type": "number"
          },
          "isFullyPaid": {
            "type": "boolean"
          },
          "useAccountRevenueShare": {
            "type": "boolean"
          },
          "netIncomeFormula": {
            "type": "string"
          },
          "netIncome": {
            "type": "number"
          },
          "commissionFormula": {
            "type": "string"
          },
          "commission": {
            "type": "number"
          },
          "commissionTaxPercentage": {
            "type": "number"
          },
          "commissionTax": {
            "type": "number"
          },
          "commissionIncTax": {
            "type": "number"
          },
          "ownerRevenueFormula": {
            "type": "string"
          },
          "ownerRevenue": {
            "type": "number"
          },
          "currencyConversionRateToAccount": {
            "type": "number"
          },
          "isTouchedPayments": {
            "type": "boolean"
          }
        }
      },
      "ratePlan": {
        "type": "object",
        "properties": {
          "ratePlanId": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "name": {
            "type": "string",
            "example": "Standard"
          },
          "mealPlan": {
            "type": "string",
            "example": "There is no meal option with this room."
          },
          "isExternalModificationFound": {
            "type": "boolean",
            "example": true
          },
          "cancellationPolicy": {
            "type": "string",
            "example": "STRICT"
          },
          "cancellationFee": {
            "type": "number",
            "example": 1
          },
          "prePayment": {
            "type": "string",
            "example": "Any prePayment"
          },
          "promotionData": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "5d6e7a7ebf8e3800207735ae"
              },
              "name": {
                "type": "string",
                "example": "Any name"
              },
              "externalPromotionId": {
                "type": "string",
                "example": "Any externalPromotionId"
              }
            }
          }
        }
      },
      "promotionData": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5d6e7a7ebf8e3800207735ae"
          },
          "name": {
            "type": "string",
            "example": "Any name"
          },
          "externalPromotionId": {
            "type": "string",
            "example": "Any externalPromotionId"
          }
        }
      },
      "validationError1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "\\\"reservationId\\\" with value \\\"63c40b0e5821e4d9e87536sd\\\" fails to match the valid mongo id pattern"
          },
          "type": {
            "type": "string",
            "example": "error"
          },
          "code": {
            "type": "string",
            "example": "VALIDATION_ERROR"
          }
        },
        "example": "{\n    \"message\": \"\\\"reservationId\\\" with value \\\"63c40b0e5821e4d9e87536sd\\\" fails to match the valid mongo id pattern\",\n    \"type\": \"error\",\n    \"code\": \"VALIDATION_ERROR\"\n}",
        "required": [
          "message",
          "type",
          "code"
        ]
      },
      "CreateGuestDTO": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Guest's first name",
            "example": "Joe"
          },
          "lastName": {
            "type": "string",
            "description": "Guest's last name",
            "example": "Black"
          },
          "phones": {
            "description": "The guest’s phone numbers written in E.164 format:  [+] [country code] [subscriber number including area code]",
            "example": [
              "+972-525180054",
              "+972-225146062"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "type": "string",
            "description": "Guest's primary email address",
            "example": "guest@email.com"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "phones",
          "email"
        ]
      },
      "CreateQuoteReservationOpenApiDto": {
        "type": "object",
        "properties": {
          "quoteId": {
            "type": "string",
            "description": "The quote to convert into a reservation",
            "example": "6213b03e7f0ba50032296f4a"
          },
          "status": {
            "enum": [
              "confirmed",
              "reserved",
              "awaiting_payment",
              "inquiry",
              "canceled",
              "closed",
              "declined",
              "expired"
            ],
            "type": "string",
            "description": "Choose from: \"inquiry\", \"reserved\", or \"confirmed\"",
            "example": "confirmed"
          },
          "ratePlanId": {
            "type": "string",
            "description": "The ID of an active rate plan when you wish to apply it to the reservation",
            "example": "5f92cbf10cf217478ba93561"
          },
          "reservedUntil": {
            "enum": [
              "twelveHours",
              "day",
              "thirtySixHours",
              "twoDays",
              "threeDays",
              -1,
              0.5,
              0.25,
              0.17
            ],
            "type": "string",
            "description": "It can be -1 (no limit), 0.17 (10 minutes), 0.25 (15 minutes), 0.5 (30 minutes), or 24/48/72 hours when the reservation is a booking request that reserves dates (i.e., status = “reserved”)",
            "example": "-1",
            "default": -1
          },
          "guestId": {
            "type": "string",
            "description": "The primary ID for returning/existing guests and new guests that were created beforehand",
            "example": "5f92cbf10cf217478ba93532"
          },
          "guest": {
            "description": "For a new guest. We recommend you create the guest first in a separate request and attach their ID to the reservation instead",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "Guest's first name",
                    "example": "Joe"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Guest's last name",
                    "example": "Black"
                  },
                  "phones": {
                    "description": "The guest’s phone numbers written in E.164 format:  [+] [country code] [subscriber number including area code]",
                    "example": [
                      "+972-525180054",
                      "+972-225146062"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "email": {
                    "type": "string",
                    "description": "Guest's primary email address",
                    "example": "guest@email.com"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "phones",
                  "email"
                ]
              }
            ]
          },
          "ignoreCalendar": {
            "type": "boolean",
            "description": "The system will check calendar availability and decline (401) if unavailable unless this flag is set to true"
          },
          "ignoreTerms": {
            "type": "boolean",
            "description": "The system will ensure the reservation accords with the terms (min, max nights, any other terms) of the property and will decline(401) if it is. To override, set this flag to true"
          },
          "ignoreBlocks": {
            "type": "boolean",
            "description": "Set this flag to true to ignore existing flexible blocks (advance notice, preparation time, etc)"
          },
          "confirmedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Define the confirmation date. If null and status is confirmed, use the current date (YYYY-MM-DDTHh.mm.ssZ). If null and status is not confirmed, leave it as null"
          }
        },
        "required": [
          "quoteId",
          "status"
        ]
      },
      "NumberOfGuests": {
        "type": "object",
        "properties": {
          "numberOfChildren": {
            "type": "number",
            "description": "Number of children",
            "example": 1
          },
          "numberOfInfants": {
            "type": "number",
            "description": "Number of infants",
            "example": 1
          },
          "numberOfPets": {
            "type": "number",
            "description": "Number of pets",
            "example": 1
          },
          "numberOfAdults": {
            "type": "number",
            "description": "Number of adults",
            "example": 1
          }
        },
        "required": [
          "numberOfAdults"
        ]
      },
      "CreationInfoDto": {
        "type": "object",
        "properties": {}
      },
      "ReservationOpenApiResponse": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string"
          },
          "quoteId": {
            "type": "string"
          },
          "confirmationCode": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "guestId": {
            "type": "string"
          },
          "numberOfGuests": {
            "type": "object",
            "properties": {
              "numberOfChildren": {
                "type": "number",
                "description": "Number of children",
                "example": 1
              },
              "numberOfInfants": {
                "type": "number",
                "description": "Number of infants",
                "example": 1
              },
              "numberOfPets": {
                "type": "number",
                "description": "Number of pets",
                "example": 1
              },
              "numberOfAdults": {
                "type": "number",
                "description": "Number of adults",
                "example": 1
              }
            },
            "required": [
              "numberOfAdults"
            ]
          },
          "creationTime": {
            "format": "date-time",
            "type": "string"
          },
          "reservedExpiresAt": {
            "format": "date-time",
            "type": "string"
          },
          "checkInDate": {
            "format": "date-time",
            "type": "string"
          },
          "checkOutDate": {
            "format": "date-time",
            "type": "string"
          },
          "unitTypeId": {
            "type": "string"
          },
          "unitId": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "guestsCount": {
            "type": "number"
          },
          "creationInfo": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "reservationId",
          "quoteId",
          "confirmationCode",
          "status",
          "guestId",
          "numberOfGuests",
          "creationTime",
          "reservedExpiresAt",
          "checkInDate",
          "checkOutDate",
          "unitTypeId",
          "unitId",
          "source",
          "channel",
          "guestsCount",
          "creationInfo"
        ]
      },
      "NumberOfGuestsDto": {
        "type": "object",
        "properties": {
          "numberOfChildren": {
            "type": "number",
            "description": "Number of children in the reservation. It can be zero"
          },
          "numberOfInfants": {
            "type": "number",
            "description": "Number of infants in the reservation. It can be zero"
          },
          "numberOfAdults": {
            "type": "number",
            "description": "Count of adults, must be > 0"
          }
        }
      },
      "NotesDTO": {
        "type": "object",
        "properties": {
          "other": {
            "type": "string",
            "description": "Other notes",
            "example": "Other notes"
          },
          "cleaning": {
            "type": "string",
            "description": "Notes for cleaning",
            "example": "Cleaning notes"
          },
          "guest": {
            "type": "string",
            "description": "For notes about the guest",
            "example": "Guest notes"
          },
          "specialRequests": {
            "type": "string",
            "description": "For recording the guest's special requests",
            "example": "Special request"
          },
          "keyCode": {
            "type": "string",
            "description": "Store the relevant key code for using with workflow automation",
            "example": "123456"
          },
          "doneBy": {
            "type": "string",
            "description": "The name of the Guesty user"
          }
        }
      },
      "OwnerDto1": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The owner ID",
            "example": "6213b03e7f0ba50032296f4a"
          },
          "fullName": {
            "type": "string",
            "description": "The owner's full name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "The owner's email",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "description": "The owner's phone number",
            "example": "+1 123 456 7890"
          },
          "locale": {
            "type": "string",
            "description": "The owner's locale",
            "example": "en-US"
          }
        },
        "required": [
          "_id"
        ]
      },
      "RequestCreationInfoDto": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "The owner ID",
                "example": "6213b03e7f0ba50032296f4a"
              },
              "fullName": {
                "type": "string",
                "description": "The owner's full name",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "description": "The owner's email",
                "example": "john.doe@example.com"
              },
              "phone": {
                "type": "string",
                "description": "The owner's phone number",
                "example": "+1 123 456 7890"
              },
              "locale": {
                "type": "string",
                "description": "The owner's locale",
                "example": "en-US"
              }
            },
            "required": [
              "_id"
            ]
          }
        },
        "required": [
          "owner"
        ]
      },
      "CreateOwnerConfirmedReservationDto": {
        "type": "object",
        "properties": {
          "checkInDateLocalized": {
            "type": "string",
            "description": "The date when the Owner will check in - with the format of YYYY-MM-DD",
            "example": "2021-01-01"
          },
          "checkOutDateLocalized": {
            "type": "string",
            "description": "The date when the Owner will check out - with the format of YYYY-MM-DD",
            "example": "2021-01-02"
          },
          "listingId": {
            "type": "string",
            "description": "Listing Id of the unit that the Owner will be staying in",
            "example": "5f92cbf10cf217478ba93561"
          },
          "guestId": {
            "type": "string",
            "description": "Guest id of the guest that will be staying in",
            "example": "5f92cbf10cf217478ba93532"
          },
          "guest": {
            "description": "The Owner or Owner's guest for specific reservation",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "Guest's first name",
                    "example": "Joe"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Guest's last name",
                    "example": "Black"
                  },
                  "phones": {
                    "description": "The guest’s phone numbers written in E.164 format:  [+] [country code] [subscriber number including area code]",
                    "example": [
                      "+972-525180054",
                      "+972-225146062"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "email": {
                    "type": "string",
                    "description": "Guest's primary email address",
                    "example": "guest@email.com"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "phones",
                  "email"
                ]
              }
            ]
          },
          "numberOfGuests": {
            "description": "Total number of guests with breakdown",
            "example": {
              "numberOfAdults": 2,
              "numberOfChildren": 0,
              "numberOfInfants": 0
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "numberOfChildren": {
                    "type": "number",
                    "description": "Number of children in the reservation. It can be zero"
                  },
                  "numberOfInfants": {
                    "type": "number",
                    "description": "Number of infants in the reservation. It can be zero"
                  },
                  "numberOfAdults": {
                    "type": "number",
                    "description": "Count of adults, must be > 0"
                  }
                }
              }
            ]
          },
          "source": {
            "enum": [
              "owner",
              "owner-guest"
            ],
            "type": "string",
            "description": "Source of reservation. \"owner\" for owner reservations, \"owner-guest\" for owner friends & family reservations",
            "example": "owner"
          },
          "guestsCount": {
            "type": "number",
            "description": "Count of guests",
            "minimum": 1,
            "example": 2
          },
          "notes": {
            "description": "The reservation notes",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "other": {
                    "type": "string",
                    "description": "Other notes",
                    "example": "Other notes"
                  },
                  "cleaning": {
                    "type": "string",
                    "description": "Notes for cleaning",
                    "example": "Cleaning notes"
                  },
                  "guest": {
                    "type": "string",
                    "description": "For notes about the guest",
                    "example": "Guest notes"
                  },
                  "specialRequests": {
                    "type": "string",
                    "description": "For recording the guest's special requests",
                    "example": "Special request"
                  },
                  "keyCode": {
                    "type": "string",
                    "description": "Store the relevant key code for using with workflow automation",
                    "example": "123456"
                  },
                  "doneBy": {
                    "type": "string",
                    "description": "The name of the Guesty user"
                  }
                }
              }
            ]
          },
          "creationInfo": {
            "description": "Keeps info about who created the reservation.",
            "example": {
              "owner": {
                "_id": "5f92cbf10cf217478ba93532"
              }
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "owner": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "The owner ID",
                        "example": "6213b03e7f0ba50032296f4a"
                      },
                      "fullName": {
                        "type": "string",
                        "description": "The owner's full name",
                        "example": "John Doe"
                      },
                      "email": {
                        "type": "string",
                        "description": "The owner's email",
                        "example": "john.doe@example.com"
                      },
                      "phone": {
                        "type": "string",
                        "description": "The owner's phone number",
                        "example": "+1 123 456 7890"
                      },
                      "locale": {
                        "type": "string",
                        "description": "The owner's locale",
                        "example": "en-US"
                      }
                    },
                    "required": [
                      "_id"
                    ]
                  }
                },
                "required": [
                  "owner"
                ]
              }
            ]
          }
        },
        "required": [
          "checkInDateLocalized",
          "checkOutDateLocalized",
          "listingId",
          "source",
          "creationInfo"
        ]
      },
      "CreateReservationWithoutQuoteDTO": {
        "type": "object",
        "properties": {
          "checkInDateLocalized": {
            "type": "string",
            "description": "The reservation check-in date, localized to the property’s timezone (YYYY-MM-DD)",
            "example": "2024-01-01"
          },
          "checkOutDateLocalized": {
            "type": "string",
            "description": "The reservation check-out date, localized to the property’s timezone (YYYY-MM-DD)",
            "example": "2024-01-02"
          },
          "listingId": {
            "type": "string",
            "description": "The property’s ID as defined in Guesty",
            "example": "5f92cbf10cf217478ba93561"
          },
          "source": {
            "type": "string",
            "description": "Define the source for getting an updated price quote",
            "example": "manual"
          },
          "status": {
            "enum": [
              "confirmed",
              "reserved",
              "awaiting_payment",
              "inquiry",
              "canceled",
              "closed",
              "declined",
              "expired"
            ],
            "type": "string",
            "description": "Define the reservation status",
            "example": "confirmed"
          },
          "guestId": {
            "type": "string",
            "description": "The primary ID for returning guests and new guests that were created beforehand",
            "example": "5f92cbf10cf217478ba93532"
          },
          "guest": {
            "description": "For a new guest, note that we recommend that you create the guest first in a separate request and add their guestId to the reservation instead",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "Guest's first name",
                    "example": "Joe"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Guest's last name",
                    "example": "Black"
                  },
                  "phones": {
                    "description": "The guest’s phone numbers written in E.164 format:  [+] [country code] [subscriber number including area code]",
                    "example": [
                      "+972-525180054",
                      "+972-225146062"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "email": {
                    "type": "string",
                    "description": "Guest's primary email address",
                    "example": "guest@email.com"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "phones",
                  "email"
                ]
              }
            ]
          },
          "guestsCount": {
            "type": "number",
            "description": "Number of guests to be included in the quote",
            "example": 2
          },
          "numberOfGuests": {
            "description": "Total number of guests with breakdown",
            "example": {
              "numberOfAdults": 2,
              "numberOfChildren": 0,
              "numberOfInfants": 0
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "numberOfChildren": {
                    "type": "number",
                    "description": "Number of children in the reservation. It can be zero"
                  },
                  "numberOfInfants": {
                    "type": "number",
                    "description": "Number of infants in the reservation. It can be zero"
                  },
                  "numberOfAdults": {
                    "type": "number",
                    "description": "Count of adults, must be > 0"
                  }
                }
              }
            ]
          },
          "couponCode": {
            "type": "string",
            "description": "A single coupon code defined under the accounted Revenue Management settings",
            "example": "OOM20-DISCOUNT"
          },
          "ratePlanId": {
            "type": "string",
            "description": "The ID of an active rate plan when you wish to apply it to the reservation",
            "example": "5f92cbf10cf217478ba93561"
          },
          "applyPromotions": {
            "type": "boolean",
            "default": true,
            "description": "Apply account promotions setup (if toggled off (false), do not take promotions when creating a reservation)",
            "example": false
          },
          "ignoreCalendar": {
            "type": "boolean",
            "default": false,
            "description": "The system will check calendar availability and decline (401) if unavailable unless this flag is set to true",
            "example": true
          },
          "ignoreTerms": {
            "type": "boolean",
            "default": false,
            "description": "The system will ensure the reservation accords with the terms (min, max nights, any other terms) of the property and will decline(401) if it is. To override, set this flag to true",
            "example": true
          },
          "ignoreBlocks": {
            "type": "boolean",
            "default": false,
            "description": "Set this flag to true to ignore existing flexible blocks (advance notice, preparation time, etc)",
            "example": true
          },
          "confirmedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Define the confirmation date. If null and status is confirmed, use the current date. If null and status is not confirmed, leave it as null",
            "example": "2024-07-06T09:12:06.574Z"
          },
          "reservedUntil": {
            "enum": [
              -1,
              0.5,
              0.25,
              0.17,
              12,
              24,
              36,
              48,
              72
            ],
            "type": "number",
            "description": "It can be -1 (no limit), 0.17 (10 minutes), 0.25 (15 minutes), 0.5 (30 minutes), or 24/48/72 hours when the reservation is a booking request that reserves dates (i.e., status = “reserved”)",
            "example": 36
          },
          "money": {
            "type": "object"
          }
        },
        "required": [
          "checkInDateLocalized",
          "checkOutDateLocalized",
          "listingId",
          "source",
          "status",
          "guestsCount"
        ]
      },
      "ReservationGuestStayDTOOpenAPI": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string",
            "description": "Guesty reservation ID",
            "example": "5acca18ffe1641001f17a999"
          },
          "status": {
            "enum": [
              "not_set",
              "checked_in",
              "checked_out",
              "no_show"
            ],
            "type": "string",
            "description": "Set the guest stay status. Choose from: “not_set”, “checked_in”, “checked_out”, or “no_show”",
            "example": "checked_in"
          }
        },
        "required": [
          "reservationId",
          "status"
        ]
      },
      "UpdateSourceDto": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "description": "Set the source of the reservation",
            "example": "summer-campaign"
          },
          "pointOfSale": {
            "type": "string",
            "description": "Define the point of sale",
            "example": "sales agent"
          },
          "applyRecalculation": {
            "type": "boolean",
            "default": true,
            "description": "Should the update trigger a financial recalculation",
            "example": false
          }
        },
        "required": [
          "source"
        ]
      },
      "InvoiceItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object"
          },
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "isLocked": {
            "type": "boolean"
          },
          "normalType": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "isTax": {
            "type": "boolean"
          },
          "isDeducted": {
            "type": "boolean"
          },
          "metadata": {
            "type": "boolean"
          },
          "evaluatedPercent": {
            "type": "number"
          },
          "baseAmount": {
            "type": "number"
          },
          "isAutoAdditionalFee": {
            "type": "boolean"
          },
          "secondIdentifier": {
            "type": "string"
          }
        },
        "required": [
          "_id",
          "amount",
          "currency",
          "isLocked",
          "normalType",
          "title",
          "type"
        ]
      },
      "ObjectId4": {
        "type": "object",
        "properties": {}
      },
      "MoneyResponse": {
        "type": "object",
        "properties": {
          "invoiceItems": {
            "example": [
              {
                "title": "Cleaning fee",
                "amount": 20,
                "currency": "USD",
                "type": "CLEANING_FEE",
                "isLocked": true,
                "normalType": "CF"
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "object"
                },
                "amount": {
                  "type": "number"
                },
                "currency": {
                  "type": "string"
                },
                "isLocked": {
                  "type": "boolean"
                },
                "normalType": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "isTax": {
                  "type": "boolean"
                },
                "isDeducted": {
                  "type": "boolean"
                },
                "metadata": {
                  "type": "boolean"
                },
                "evaluatedPercent": {
                  "type": "number"
                },
                "baseAmount": {
                  "type": "number"
                },
                "isAutoAdditionalFee": {
                  "type": "boolean"
                },
                "secondIdentifier": {
                  "type": "string"
                }
              },
              "required": [
                "_id",
                "amount",
                "currency",
                "isLocked",
                "normalType",
                "title",
                "type"
              ]
            }
          },
          "_id": {
            "type": "object",
            "properties": {}
          },
          "reservationId": {
            "type": "string"
          },
          "fareAccommodationAdjustment": {
            "type": "number"
          },
          "fareAccommodationDiscount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "fareAccommodation": {
            "type": "number"
          },
          "fareAccommodationAdjusted": {
            "type": "number"
          },
          "fareCleaning": {
            "type": "number"
          },
          "hostServiceFee": {
            "type": "number"
          },
          "hostServiceFeeTax": {
            "type": "number"
          },
          "hostServiceFeeIncTax": {
            "type": "number"
          },
          "subTotalPrice": {
            "type": "number"
          },
          "hostPayout": {
            "type": "number"
          },
          "hostPayoutUsd": {
            "type": "number"
          },
          "totalTaxes": {
            "type": "number"
          },
          "payments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalRefunded": {
            "type": "number"
          },
          "totalPaid": {
            "type": "number"
          },
          "paymentsDue": {
            "type": "number"
          },
          "balanceDue": {
            "type": "number"
          },
          "isFullyPaid": {
            "type": "boolean"
          },
          "settingsSnapshot": {
            "type": "object"
          }
        },
        "required": [
          "invoiceItems",
          "_id",
          "reservationId",
          "fareAccommodationAdjustment",
          "fareAccommodationDiscount",
          "currency",
          "fareAccommodation",
          "fareAccommodationAdjusted",
          "fareCleaning",
          "hostServiceFee",
          "hostServiceFeeTax",
          "hostServiceFeeIncTax",
          "subTotalPrice",
          "hostPayout",
          "hostPayoutUsd",
          "totalTaxes",
          "payments",
          "totalRefunded",
          "totalPaid",
          "paymentsDue",
          "balanceDue",
          "isFullyPaid",
          "settingsSnapshot"
        ]
      },
      "UpdateReservationSourceResponse": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string"
          },
          "money": {
            "type": "object",
            "properties": {
              "invoiceItems": {
                "example": [
                  {
                    "title": "Cleaning fee",
                    "amount": 20,
                    "currency": "USD",
                    "type": "CLEANING_FEE",
                    "isLocked": true,
                    "normalType": "CF"
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "normalType": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "isTax": {
                      "type": "boolean"
                    },
                    "isDeducted": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "boolean"
                    },
                    "evaluatedPercent": {
                      "type": "number"
                    },
                    "baseAmount": {
                      "type": "number"
                    },
                    "isAutoAdditionalFee": {
                      "type": "boolean"
                    },
                    "secondIdentifier": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "amount",
                    "currency",
                    "isLocked",
                    "normalType",
                    "title",
                    "type"
                  ]
                }
              },
              "_id": {
                "type": "object",
                "properties": {}
              },
              "reservationId": {
                "type": "string"
              },
              "fareAccommodationAdjustment": {
                "type": "number"
              },
              "fareAccommodationDiscount": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              },
              "fareAccommodation": {
                "type": "number"
              },
              "fareAccommodationAdjusted": {
                "type": "number"
              },
              "fareCleaning": {
                "type": "number"
              },
              "hostServiceFee": {
                "type": "number"
              },
              "hostServiceFeeTax": {
                "type": "number"
              },
              "hostServiceFeeIncTax": {
                "type": "number"
              },
              "subTotalPrice": {
                "type": "number"
              },
              "hostPayout": {
                "type": "number"
              },
              "hostPayoutUsd": {
                "type": "number"
              },
              "totalTaxes": {
                "type": "number"
              },
              "payments": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "totalRefunded": {
                "type": "number"
              },
              "totalPaid": {
                "type": "number"
              },
              "paymentsDue": {
                "type": "number"
              },
              "balanceDue": {
                "type": "number"
              },
              "isFullyPaid": {
                "type": "boolean"
              },
              "settingsSnapshot": {
                "type": "object"
              }
            },
            "required": [
              "invoiceItems",
              "_id",
              "reservationId",
              "fareAccommodationAdjustment",
              "fareAccommodationDiscount",
              "currency",
              "fareAccommodation",
              "fareAccommodationAdjusted",
              "fareCleaning",
              "hostServiceFee",
              "hostServiceFeeTax",
              "hostServiceFeeIncTax",
              "subTotalPrice",
              "hostPayout",
              "hostPayoutUsd",
              "totalTaxes",
              "payments",
              "totalRefunded",
              "totalPaid",
              "paymentsDue",
              "balanceDue",
              "isFullyPaid",
              "settingsSnapshot"
            ]
          },
          "source": {
            "type": "string"
          },
          "pointOfSale": {
            "type": "string"
          }
        },
        "required": [
          "reservationId",
          "money",
          "source",
          "pointOfSale"
        ]
      },
      "UpdateNotesDto": {
        "type": "object",
        "properties": {
          "notes": {
            "description": "Object which contains the various types of notes",
            "example": {
              "other": "Other notes",
              "cleaning": "Cleaning notes",
              "guest": "Guest notes",
              "specialRequests": "Special request",
              "keyCode": "123456"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "other": {
                    "type": "string",
                    "description": "Other notes",
                    "example": "Other notes"
                  },
                  "cleaning": {
                    "type": "string",
                    "description": "Notes for cleaning",
                    "example": "Cleaning notes"
                  },
                  "guest": {
                    "type": "string",
                    "description": "For notes about the guest",
                    "example": "Guest notes"
                  },
                  "specialRequests": {
                    "type": "string",
                    "description": "For recording the guest's special requests",
                    "example": "Special request"
                  },
                  "keyCode": {
                    "type": "string",
                    "description": "Store the relevant key code for using with workflow automation",
                    "example": "123456"
                  },
                  "doneBy": {
                    "type": "string",
                    "description": "The name of the Guesty user"
                  }
                }
              }
            ]
          }
        },
        "required": [
          "notes"
        ]
      },
      "UpdateReservationNotesResponse": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string"
          },
          "money": {
            "type": "object",
            "properties": {
              "invoiceItems": {
                "example": [
                  {
                    "title": "Cleaning fee",
                    "amount": 20,
                    "currency": "USD",
                    "type": "CLEANING_FEE",
                    "isLocked": true,
                    "normalType": "CF"
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "normalType": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "isTax": {
                      "type": "boolean"
                    },
                    "isDeducted": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "boolean"
                    },
                    "evaluatedPercent": {
                      "type": "number"
                    },
                    "baseAmount": {
                      "type": "number"
                    },
                    "isAutoAdditionalFee": {
                      "type": "boolean"
                    },
                    "secondIdentifier": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "amount",
                    "currency",
                    "isLocked",
                    "normalType",
                    "title",
                    "type"
                  ]
                }
              },
              "_id": {
                "type": "object",
                "properties": {}
              },
              "reservationId": {
                "type": "string"
              },
              "fareAccommodationAdjustment": {
                "type": "number"
              },
              "fareAccommodationDiscount": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              },
              "fareAccommodation": {
                "type": "number"
              },
              "fareAccommodationAdjusted": {
                "type": "number"
              },
              "fareCleaning": {
                "type": "number"
              },
              "hostServiceFee": {
                "type": "number"
              },
              "hostServiceFeeTax": {
                "type": "number"
              },
              "hostServiceFeeIncTax": {
                "type": "number"
              },
              "subTotalPrice": {
                "type": "number"
              },
              "hostPayout": {
                "type": "number"
              },
              "hostPayoutUsd": {
                "type": "number"
              },
              "totalTaxes": {
                "type": "number"
              },
              "payments": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "totalRefunded": {
                "type": "number"
              },
              "totalPaid": {
                "type": "number"
              },
              "paymentsDue": {
                "type": "number"
              },
              "balanceDue": {
                "type": "number"
              },
              "isFullyPaid": {
                "type": "boolean"
              },
              "settingsSnapshot": {
                "type": "object"
              }
            },
            "required": [
              "invoiceItems",
              "_id",
              "reservationId",
              "fareAccommodationAdjustment",
              "fareAccommodationDiscount",
              "currency",
              "fareAccommodation",
              "fareAccommodationAdjusted",
              "fareCleaning",
              "hostServiceFee",
              "hostServiceFeeTax",
              "hostServiceFeeIncTax",
              "subTotalPrice",
              "hostPayout",
              "hostPayoutUsd",
              "totalTaxes",
              "payments",
              "totalRefunded",
              "totalPaid",
              "paymentsDue",
              "balanceDue",
              "isFullyPaid",
              "settingsSnapshot"
            ]
          },
          "notes": {
            "type": "object"
          }
        },
        "required": [
          "reservationId",
          "money",
          "notes"
        ]
      },
      "CustomEtaEtdDto": {
        "type": "object",
        "properties": {
          "blockDay": {
            "type": "boolean",
            "description": "Whether day will be blocked"
          },
          "addAdditionalFee": {
            "type": "boolean",
            "description": "Whether additional fee will be added"
          }
        }
      },
      "UpdateReservationDatesDto": {
        "type": "object",
        "properties": {
          "checkInDateLocalized": {
            "type": "string",
            "description": "The reservation check-in date, localized to the property’s timezone (YYYY-MM-DD)",
            "example": "2024-01-01"
          },
          "checkOutDateLocalized": {
            "type": "string",
            "description": "The reservation check-out date, localized to the property’s timezone (YYYY-MM-DD)",
            "example": "2024-01-02"
          },
          "plannedArrival": {
            "type": "string",
            "description": "Use this to specify a different check-in time (Hh:mm) from the property’s default time",
            "example": "11:00"
          },
          "plannedDeparture": {
            "type": "string",
            "description": "Use this to specify a different check-out time (Hh:mm) from the property’s default time",
            "example": "15:00"
          },
          "earlyCheckIn": {
            "description": "Define if it should be marked as ‘early check-in’. E.g., true if defined, false if not",
            "example": true,
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "blockDay": {
                    "type": "boolean",
                    "description": "Whether day will be blocked"
                  },
                  "addAdditionalFee": {
                    "type": "boolean",
                    "description": "Whether additional fee will be added"
                  }
                }
              }
            ]
          },
          "lateCheckOut": {
            "description": "Define if it should be marked as ‘late check-out‘. E.g., true if defined, false if not",
            "example": false,
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "blockDay": {
                    "type": "boolean",
                    "description": "Whether day will be blocked"
                  },
                  "addAdditionalFee": {
                    "type": "boolean",
                    "description": "Whether additional fee will be added"
                  }
                }
              }
            ]
          },
          "applyRecalculation": {
            "type": "boolean",
            "default": true,
            "description": "Should the update trigger a financial recalculation? E.g., true or false.\nNote that altering the date will automatically apply recalculation, regardless of your choice",
            "example": false
          }
        }
      },
      "UpdateReservationDatesResponse": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string"
          },
          "money": {
            "type": "object",
            "properties": {
              "invoiceItems": {
                "example": [
                  {
                    "title": "Cleaning fee",
                    "amount": 20,
                    "currency": "USD",
                    "type": "CLEANING_FEE",
                    "isLocked": true,
                    "normalType": "CF"
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "normalType": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "isTax": {
                      "type": "boolean"
                    },
                    "isDeducted": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "boolean"
                    },
                    "evaluatedPercent": {
                      "type": "number"
                    },
                    "baseAmount": {
                      "type": "number"
                    },
                    "isAutoAdditionalFee": {
                      "type": "boolean"
                    },
                    "secondIdentifier": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "amount",
                    "currency",
                    "isLocked",
                    "normalType",
                    "title",
                    "type"
                  ]
                }
              },
              "_id": {
                "type": "object",
                "properties": {}
              },
              "reservationId": {
                "type": "string"
              },
              "fareAccommodationAdjustment": {
                "type": "number"
              },
              "fareAccommodationDiscount": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              },
              "fareAccommodation": {
                "type": "number"
              },
              "fareAccommodationAdjusted": {
                "type": "number"
              },
              "fareCleaning": {
                "type": "number"
              },
              "hostServiceFee": {
                "type": "number"
              },
              "hostServiceFeeTax": {
                "type": "number"
              },
              "hostServiceFeeIncTax": {
                "type": "number"
              },
              "subTotalPrice": {
                "type": "number"
              },
              "hostPayout": {
                "type": "number"
              },
              "hostPayoutUsd": {
                "type": "number"
              },
              "totalTaxes": {
                "type": "number"
              },
              "payments": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "totalRefunded": {
                "type": "number"
              },
              "totalPaid": {
                "type": "number"
              },
              "paymentsDue": {
                "type": "number"
              },
              "balanceDue": {
                "type": "number"
              },
              "isFullyPaid": {
                "type": "boolean"
              },
              "settingsSnapshot": {
                "type": "object"
              }
            },
            "required": [
              "invoiceItems",
              "_id",
              "reservationId",
              "fareAccommodationAdjustment",
              "fareAccommodationDiscount",
              "currency",
              "fareAccommodation",
              "fareAccommodationAdjusted",
              "fareCleaning",
              "hostServiceFee",
              "hostServiceFeeTax",
              "hostServiceFeeIncTax",
              "subTotalPrice",
              "hostPayout",
              "hostPayoutUsd",
              "totalTaxes",
              "payments",
              "totalRefunded",
              "totalPaid",
              "paymentsDue",
              "balanceDue",
              "isFullyPaid",
              "settingsSnapshot"
            ]
          },
          "creationTime": {
            "format": "date-time",
            "type": "string"
          },
          "checkInDate": {
            "format": "date-time",
            "type": "string"
          },
          "checkOutDate": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "reservationId",
          "money",
          "creationTime",
          "checkInDate",
          "checkOutDate"
        ]
      },
      "UpdateReservationListingDTO": {
        "type": "object",
        "properties": {
          "listingId": {
            "type": "string",
            "description": "Listing ID for the reservation",
            "example": "5f92cbf10cf217478ba93561"
          }
        },
        "required": [
          "listingId"
        ]
      },
      "UpdateReservationListingResponse": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string"
          },
          "money": {
            "type": "object",
            "properties": {
              "invoiceItems": {
                "example": [
                  {
                    "title": "Cleaning fee",
                    "amount": 20,
                    "currency": "USD",
                    "type": "CLEANING_FEE",
                    "isLocked": true,
                    "normalType": "CF"
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "normalType": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "isTax": {
                      "type": "boolean"
                    },
                    "isDeducted": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "boolean"
                    },
                    "evaluatedPercent": {
                      "type": "number"
                    },
                    "baseAmount": {
                      "type": "number"
                    },
                    "isAutoAdditionalFee": {
                      "type": "boolean"
                    },
                    "secondIdentifier": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "amount",
                    "currency",
                    "isLocked",
                    "normalType",
                    "title",
                    "type"
                  ]
                }
              },
              "_id": {
                "type": "object",
                "properties": {}
              },
              "reservationId": {
                "type": "string"
              },
              "fareAccommodationAdjustment": {
                "type": "number"
              },
              "fareAccommodationDiscount": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              },
              "fareAccommodation": {
                "type": "number"
              },
              "fareAccommodationAdjusted": {
                "type": "number"
              },
              "fareCleaning": {
                "type": "number"
              },
              "hostServiceFee": {
                "type": "number"
              },
              "hostServiceFeeTax": {
                "type": "number"
              },
              "hostServiceFeeIncTax": {
                "type": "number"
              },
              "subTotalPrice": {
                "type": "number"
              },
              "hostPayout": {
                "type": "number"
              },
              "hostPayoutUsd": {
                "type": "number"
              },
              "totalTaxes": {
                "type": "number"
              },
              "payments": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "totalRefunded": {
                "type": "number"
              },
              "totalPaid": {
                "type": "number"
              },
              "paymentsDue": {
                "type": "number"
              },
              "balanceDue": {
                "type": "number"
              },
              "isFullyPaid": {
                "type": "boolean"
              },
              "settingsSnapshot": {
                "type": "object"
              }
            },
            "required": [
              "invoiceItems",
              "_id",
              "reservationId",
              "fareAccommodationAdjustment",
              "fareAccommodationDiscount",
              "currency",
              "fareAccommodation",
              "fareAccommodationAdjusted",
              "fareCleaning",
              "hostServiceFee",
              "hostServiceFeeTax",
              "hostServiceFeeIncTax",
              "subTotalPrice",
              "hostPayout",
              "hostPayoutUsd",
              "totalTaxes",
              "payments",
              "totalRefunded",
              "totalPaid",
              "paymentsDue",
              "balanceDue",
              "isFullyPaid",
              "settingsSnapshot"
            ]
          },
          "listingId": {
            "type": "string"
          },
          "unitId": {
            "type": "string"
          },
          "unitTypeId": {
            "type": "string"
          }
        },
        "required": [
          "reservationId",
          "money",
          "listingId",
          "unitId",
          "unitTypeId"
        ]
      },
      "UpdateStatusDTO": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "confirmed",
              "reserved",
              "awaiting_payment",
              "inquiry",
              "canceled",
              "closed",
              "declined",
              "expired"
            ],
            "type": "string",
            "description": "Status of the reservation",
            "example": "confirmed"
          },
          "canceledBy": {
            "enum": [
              "OWNER",
              "GUEST",
              "TEAM_MEMBER"
            ],
            "type": "string",
            "description": "The person who cancelled reservation, if not defined will be TEAM MEMBER by default",
            "example": "GUEST"
          },
          "cancellationReason": {
            "type": "string",
            "description": "The reason for cancelling a reservation",
            "example": "Personal changes"
          }
        },
        "required": [
          "status"
        ]
      },
      "UpdateReservationStatusResponse": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string"
          },
          "money": {
            "type": "object",
            "properties": {
              "invoiceItems": {
                "example": [
                  {
                    "title": "Cleaning fee",
                    "amount": 20,
                    "currency": "USD",
                    "type": "CLEANING_FEE",
                    "isLocked": true,
                    "normalType": "CF"
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "normalType": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "isTax": {
                      "type": "boolean"
                    },
                    "isDeducted": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "boolean"
                    },
                    "evaluatedPercent": {
                      "type": "number"
                    },
                    "baseAmount": {
                      "type": "number"
                    },
                    "isAutoAdditionalFee": {
                      "type": "boolean"
                    },
                    "secondIdentifier": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "amount",
                    "currency",
                    "isLocked",
                    "normalType",
                    "title",
                    "type"
                  ]
                }
              },
              "_id": {
                "type": "object",
                "properties": {}
              },
              "reservationId": {
                "type": "string"
              },
              "fareAccommodationAdjustment": {
                "type": "number"
              },
              "fareAccommodationDiscount": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              },
              "fareAccommodation": {
                "type": "number"
              },
              "fareAccommodationAdjusted": {
                "type": "number"
              },
              "fareCleaning": {
                "type": "number"
              },
              "hostServiceFee": {
                "type": "number"
              },
              "hostServiceFeeTax": {
                "type": "number"
              },
              "hostServiceFeeIncTax": {
                "type": "number"
              },
              "subTotalPrice": {
                "type": "number"
              },
              "hostPayout": {
                "type": "number"
              },
              "hostPayoutUsd": {
                "type": "number"
              },
              "totalTaxes": {
                "type": "number"
              },
              "payments": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "totalRefunded": {
                "type": "number"
              },
              "totalPaid": {
                "type": "number"
              },
              "paymentsDue": {
                "type": "number"
              },
              "balanceDue": {
                "type": "number"
              },
              "isFullyPaid": {
                "type": "boolean"
              },
              "settingsSnapshot": {
                "type": "object"
              }
            },
            "required": [
              "invoiceItems",
              "_id",
              "reservationId",
              "fareAccommodationAdjustment",
              "fareAccommodationDiscount",
              "currency",
              "fareAccommodation",
              "fareAccommodationAdjusted",
              "fareCleaning",
              "hostServiceFee",
              "hostServiceFeeTax",
              "hostServiceFeeIncTax",
              "subTotalPrice",
              "hostPayout",
              "hostPayoutUsd",
              "totalTaxes",
              "payments",
              "totalRefunded",
              "totalPaid",
              "paymentsDue",
              "balanceDue",
              "isFullyPaid",
              "settingsSnapshot"
            ]
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "reservationId",
          "money",
          "status"
        ]
      },
      "UpdateGuestsDTO": {
        "type": "object",
        "properties": {
          "guestsCount": {
            "type": "number",
            "description": "The number of guests is to be included in the reservation",
            "example": 3
          },
          "numberOfGuests": {
            "description": "Object. Contains the breakdown of the guests",
            "example": {
              "numberOfChildren": 1,
              "numberOfInfants": 0,
              "numberOfPets": 1,
              "numberOfAdults": 2
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "numberOfChildren": {
                    "type": "number",
                    "description": "Number of children",
                    "example": 1
                  },
                  "numberOfInfants": {
                    "type": "number",
                    "description": "Number of infants",
                    "example": 1
                  },
                  "numberOfPets": {
                    "type": "number",
                    "description": "Number of pets",
                    "example": 1
                  },
                  "numberOfAdults": {
                    "type": "number",
                    "description": "Number of adults",
                    "example": 1
                  }
                },
                "required": [
                  "numberOfAdults"
                ]
              }
            ]
          }
        },
        "required": [
          "guestsCount"
        ]
      },
      "UpdateReservationGuestsResponse": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string"
          },
          "money": {
            "type": "object",
            "properties": {
              "invoiceItems": {
                "example": [
                  {
                    "title": "Cleaning fee",
                    "amount": 20,
                    "currency": "USD",
                    "type": "CLEANING_FEE",
                    "isLocked": true,
                    "normalType": "CF"
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "isLocked": {
                      "type": "boolean"
                    },
                    "normalType": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "isTax": {
                      "type": "boolean"
                    },
                    "isDeducted": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "type": "boolean"
                    },
                    "evaluatedPercent": {
                      "type": "number"
                    },
                    "baseAmount": {
                      "type": "number"
                    },
                    "isAutoAdditionalFee": {
                      "type": "boolean"
                    },
                    "secondIdentifier": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "amount",
                    "currency",
                    "isLocked",
                    "normalType",
                    "title",
                    "type"
                  ]
                }
              },
              "_id": {
                "type": "object",
                "properties": {}
              },
              "reservationId": {
                "type": "string"
              },
              "fareAccommodationAdjustment": {
                "type": "number"
              },
              "fareAccommodationDiscount": {
                "type": "number"
              },
              "currency": {
                "type": "string"
              },
              "fareAccommodation": {
                "type": "number"
              },
              "fareAccommodationAdjusted": {
                "type": "number"
              },
              "fareCleaning": {
                "type": "number"
              },
              "hostServiceFee": {
                "type": "number"
              },
              "hostServiceFeeTax": {
                "type": "number"
              },
              "hostServiceFeeIncTax": {
                "type": "number"
              },
              "subTotalPrice": {
                "type": "number"
              },
              "hostPayout": {
                "type": "number"
              },
              "hostPayoutUsd": {
                "type": "number"
              },
              "totalTaxes": {
                "type": "number"
              },
              "payments": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "totalRefunded": {
                "type": "number"
              },
              "totalPaid": {
                "type": "number"
              },
              "paymentsDue": {
                "type": "number"
              },
              "balanceDue": {
                "type": "number"
              },
              "isFullyPaid": {
                "type": "boolean"
              },
              "settingsSnapshot": {
                "type": "object"
              }
            },
            "required": [
              "invoiceItems",
              "_id",
              "reservationId",
              "fareAccommodationAdjustment",
              "fareAccommodationDiscount",
              "currency",
              "fareAccommodation",
              "fareAccommodationAdjusted",
              "fareCleaning",
              "hostServiceFee",
              "hostServiceFeeTax",
              "hostServiceFeeIncTax",
              "subTotalPrice",
              "hostPayout",
              "hostPayoutUsd",
              "totalTaxes",
              "payments",
              "totalRefunded",
              "totalPaid",
              "paymentsDue",
              "balanceDue",
              "isFullyPaid",
              "settingsSnapshot"
            ]
          },
          "guestsCount": {
            "type": "number"
          },
          "numberOfGuests": {
            "type": "object",
            "properties": {
              "numberOfChildren": {
                "type": "number",
                "description": "Number of children",
                "example": 1
              },
              "numberOfInfants": {
                "type": "number",
                "description": "Number of infants",
                "example": 1
              },
              "numberOfPets": {
                "type": "number",
                "description": "Number of pets",
                "example": 1
              },
              "numberOfAdults": {
                "type": "number",
                "description": "Number of adults",
                "example": 1
              }
            },
            "required": [
              "numberOfAdults"
            ]
          }
        },
        "required": [
          "reservationId",
          "money",
          "guestsCount",
          "numberOfGuests"
        ]
      },
      "ICustomEtaEtd": {
        "type": "object",
        "properties": {}
      },
      "Stay": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "properties": {}
          },
          "checkInDateLocalized": {
            "type": "string"
          },
          "checkOutDateLocalized": {
            "type": "string"
          },
          "guestsCount": {
            "type": "number"
          },
          "unitTypeId": {
            "type": "object",
            "properties": {}
          },
          "unitId": {
            "type": "object",
            "properties": {}
          },
          "ratePlanId": {
            "type": "string"
          },
          "eta": {
            "format": "date-time",
            "type": "string"
          },
          "etd": {
            "format": "date-time",
            "type": "string"
          },
          "numberOfGuests": {
            "type": "object",
            "properties": {
              "numberOfChildren": {
                "type": "number",
                "description": "Number of children",
                "example": 1
              },
              "numberOfInfants": {
                "type": "number",
                "description": "Number of infants",
                "example": 1
              },
              "numberOfPets": {
                "type": "number",
                "description": "Number of pets",
                "example": 1
              },
              "numberOfAdults": {
                "type": "number",
                "description": "Number of adults",
                "example": 1
              }
            },
            "required": [
              "numberOfAdults"
            ]
          },
          "earlyCheckIn": {
            "type": "object",
            "properties": {}
          },
          "lateCheckOut": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "checkInDateLocalized",
          "checkOutDateLocalized",
          "guestsCount",
          "unitTypeId",
          "eta",
          "etd"
        ]
      },
      "ReservationGuestStayDoneBy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "ReservationGuestStay": {
        "type": "object",
        "properties": {
          "doneBy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "required": [
              "type"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "not_set",
              "checked_in",
              "checked_out",
              "no_show"
            ],
            "type": "string"
          }
        },
        "required": [
          "createdAt",
          "updatedAt",
          "status"
        ]
      },
      "Owner1": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "properties": {}
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          }
        },
        "required": [
          "_id"
        ]
      },
      "CreationInfo": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "object",
                "properties": {}
              },
              "fullName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "locale": {
                "type": "string"
              }
            },
            "required": [
              "_id"
            ]
          }
        }
      },
      "LegacyCustomField": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        },
        "required": [
          "_id",
          "fieldId",
          "value"
        ]
      },
      "Notes": {
        "type": "object",
        "properties": {
          "other": {
            "type": "string"
          },
          "cleaning": {
            "type": "string"
          },
          "guest": {
            "type": "string"
          },
          "specialRequests": {
            "type": "string"
          },
          "keyCode": {
            "type": "string"
          }
        }
      },
      "Reservation1": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "groupId": {
            "type": "object",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "sendQuoteId": {
            "example": "df7hf01cnduhdb2125854dj8",
            "allOf": [
              {
                "type": "object",
                "properties": {}
              }
            ]
          },
          "integrationId": {
            "type": "object",
            "example": "df7hf01cnduhdb2125854dj9"
          },
          "stay": {
            "example": [
              {
                "checkInDateLocalized": "2021-12-20",
                "checkOutDateLocalized": "2021-12-22",
                "guestsCount": 3,
                "numberOfGuests": {
                  "numberOfAdults": 3,
                  "numberOfChildren": 0,
                  "numberOfInfants": 0
                },
                "unitTypeId": "5e384c9fc2700d002670b61b",
                "unitId": "5e384c9fc2700d002670b61b",
                "ratePlanId": "5e384c9fc2700d002670b61b"
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "object",
                  "properties": {}
                },
                "checkInDateLocalized": {
                  "type": "string"
                },
                "checkOutDateLocalized": {
                  "type": "string"
                },
                "guestsCount": {
                  "type": "number"
                },
                "unitTypeId": {
                  "type": "object",
                  "properties": {}
                },
                "unitId": {
                  "type": "object",
                  "properties": {}
                },
                "ratePlanId": {
                  "type": "string"
                },
                "eta": {
                  "format": "date-time",
                  "type": "string"
                },
                "etd": {
                  "format": "date-time",
                  "type": "string"
                },
                "numberOfGuests": {
                  "type": "object",
                  "properties": {
                    "numberOfChildren": {
                      "type": "number",
                      "description": "Number of children",
                      "example": 1
                    },
                    "numberOfInfants": {
                      "type": "number",
                      "description": "Number of infants",
                      "example": 1
                    },
                    "numberOfPets": {
                      "type": "number",
                      "description": "Number of pets",
                      "example": 1
                    },
                    "numberOfAdults": {
                      "type": "number",
                      "description": "Number of adults",
                      "example": 1
                    }
                  },
                  "required": [
                    "numberOfAdults"
                  ]
                },
                "earlyCheckIn": {
                  "type": "object",
                  "properties": {}
                },
                "lateCheckOut": {
                  "type": "object",
                  "properties": {}
                }
              },
              "required": [
                "checkInDateLocalized",
                "checkOutDateLocalized",
                "guestsCount",
                "unitTypeId",
                "eta",
                "etd"
              ]
            }
          },
          "bookerId": {
            "type": "string",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "platform": {
            "type": "string",
            "example": "direct"
          },
          "quoteId": {
            "type": "object",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "accountId": {
            "type": "object",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "source": {
            "type": "string",
            "example": "fb-campaign-01"
          },
          "confirmedAt": {
            "format": "date-time",
            "type": "string"
          },
          "reservedAt": {
            "format": "date-time",
            "type": "string"
          },
          "reservedUntil": {
            "enum": [
              "twelveHours",
              "day",
              "thirtySixHours",
              "twoDays",
              "threeDays",
              -1,
              0.5,
              0.25,
              0.17
            ],
            "type": "string"
          },
          "canceledAt": {
            "format": "date-time",
            "type": "string"
          },
          "isAssigned": {
            "type": "boolean"
          },
          "moneyId": {
            "type": "string",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "specialRequests": {
            "type": "string",
            "example": "notes, requests",
            "deprecated": true
          },
          "keyCode": {
            "type": "string",
            "example": "code for the key",
            "deprecated": true
          },
          "alteredAt": {
            "format": "date-time",
            "type": "string"
          },
          "conversationId": {
            "type": "string",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "transportation": {
            "type": "object"
          },
          "agentBooking": {
            "type": "boolean"
          },
          "reasonForVisit": {
            "enum": [
              "business",
              "leisure",
              "family",
              "event",
              "other"
            ],
            "type": "string"
          },
          "canceledBy": {
            "enum": [
              "OWNER",
              "GUEST",
              "TEAM_MEMBER"
            ],
            "type": "string"
          },
          "cancellationReason": {
            "type": "string"
          },
          "guestStay": {
            "type": "object",
            "properties": {
              "doneBy": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              },
              "createdAt": {
                "format": "date-time",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "enum": [
                  "not_set",
                  "checked_in",
                  "checked_out",
                  "no_show"
                ],
                "type": "string"
              }
            },
            "required": [
              "createdAt",
              "updatedAt",
              "status"
            ]
          },
          "pointOfSale": {
            "type": "string"
          },
          "creationInfo": {
            "description": "Reservation creation info. It is used to track the user who created the reservation, currently used for owner reservations.",
            "example": {
              "owner": {
                "_id": "5e384c9fc2700d002670b61b",
                "fullName": "John Doe",
                "email": "john.doe@gmail.com",
                "phone": "+1 123 456 7890",
                "locale": "en-US"
              }
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "owner": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "object",
                        "properties": {}
                      },
                      "fullName": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "locale": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "_id"
                    ]
                  }
                }
              }
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "customFields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "fieldId": {
                  "type": "string"
                },
                "value": {
                  "type": "object"
                }
              },
              "required": [
                "_id",
                "fieldId",
                "value"
              ]
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "confirmed",
              "reserved",
              "awaiting_payment",
              "inquiry",
              "canceled",
              "closed",
              "declined",
              "expired"
            ]
          },
          "notes": {
            "type": "object",
            "properties": {
              "other": {
                "type": "string"
              },
              "cleaning": {
                "type": "string"
              },
              "guest": {
                "type": "string"
              },
              "specialRequests": {
                "type": "string"
              },
              "keyCode": {
                "type": "string"
              }
            }
          },
          "confirmationCode": {
            "type": "string"
          }
        },
        "required": [
          "_id",
          "stay",
          "bookerId",
          "platform",
          "quoteId",
          "accountId",
          "source",
          "createdAt",
          "status",
          "notes",
          "confirmationCode"
        ]
      },
      "AssignCustomFieldValueDto": {
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "string",
            "description": "The ID of the custom field",
            "example": "65fab102a5284d73c6206db0"
          },
          "value": {
            "type": "object",
            "description": "The custom field value that should assigned",
            "example": "some custom field value"
          }
        },
        "required": [
          "fieldId",
          "value"
        ]
      },
      "UpdateReservationCustomFieldsDTO": {
        "type": "object",
        "properties": {
          "customFields": {
            "description": "Custom fields of the reservation",
            "example": [
              {
                "fieldId": "5fa02fa358d2db673e17bc2d",
                "value": "Including Jacuzzi"
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "fieldId": {
                  "type": "string",
                  "description": "The ID of the custom field",
                  "example": "65fab102a5284d73c6206db0"
                },
                "value": {
                  "type": "object",
                  "description": "The custom field value that should assigned",
                  "example": "some custom field value"
                }
              },
              "required": [
                "fieldId",
                "value"
              ]
            }
          }
        },
        "required": [
          "customFields"
        ]
      },
      "UpdateReservationCustomFieldsResponse": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "string"
          },
          "customFields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "fieldId": {
                  "type": "string"
                },
                "value": {
                  "type": "object"
                }
              },
              "required": [
                "_id",
                "fieldId",
                "value"
              ]
            }
          }
        },
        "required": [
          "reservationId",
          "customFields"
        ]
      },
      "GetGroupAndSubReservationResponse": {
        "type": "object",
        "properties": {
          "groupReservation": {
            "type": "object"
          },
          "subReservations": {
            "type": "object"
          }
        },
        "required": [
          "groupReservation",
          "subReservations"
        ]
      },
      "BookerDTO": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The booker ID",
            "example": "6213b03e7f0ba50032296f4a"
          },
          "fullName": {
            "type": "string",
            "description": "The booker's full name",
            "example": "Full Name"
          }
        },
        "required": [
          "_id",
          "fullName"
        ]
      },
      "GroupQuoteDto": {
        "type": "object",
        "properties": {
          "quoteId": {
            "type": "string",
            "description": "The quote ID",
            "example": "6213b03e7f0ba50032296f4a"
          },
          "ratePlanId": {
            "type": "string",
            "description": "The rate plan ID",
            "example": "6213b03e7f0ba50032296f4a"
          },
          "status": {
            "enum": [
              "confirmed",
              "reserved",
              "awaiting_payment",
              "inquiry",
              "canceled",
              "closed",
              "declined",
              "expired"
            ],
            "type": "string",
            "example": "reserved",
            "description": "Status for an individual reservation, if not defined we will use the status of the group"
          },
          "booker": {
            "description": "The booker for specific reservation",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "The booker ID",
                    "example": "6213b03e7f0ba50032296f4a"
                  },
                  "fullName": {
                    "type": "string",
                    "description": "The booker's full name",
                    "example": "Full Name"
                  }
                },
                "required": [
                  "_id",
                  "fullName"
                ]
              }
            ]
          }
        },
        "required": [
          "quoteId",
          "ratePlanId"
        ]
      },
      "CreateGroupReservationOpenApiDTO": {
        "type": "object",
        "properties": {
          "quoteAndRatePlanIds": {
            "description": "An array of objects containing quote IDs and rate plan IDs",
            "example": [
              {
                "quoteId": "6213b03e7f0ba50032296f4a",
                "ratePlanId": "default-rateplan-id"
              },
              {
                "quoteId": "6213b03e7f0ba50032296f4b",
                "ratePlanId": "36ft523e7f0ba500323hf736"
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "quoteId": {
                  "type": "string",
                  "description": "The quote ID",
                  "example": "6213b03e7f0ba50032296f4a"
                },
                "ratePlanId": {
                  "type": "string",
                  "description": "The rate plan ID",
                  "example": "6213b03e7f0ba50032296f4a"
                },
                "status": {
                  "enum": [
                    "confirmed",
                    "reserved",
                    "awaiting_payment",
                    "inquiry",
                    "canceled",
                    "closed",
                    "declined",
                    "expired"
                  ],
                  "type": "string",
                  "example": "reserved",
                  "description": "Status for an individual reservation, if not defined we will use the status of the group"
                },
                "booker": {
                  "description": "The booker for specific reservation",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "The booker ID",
                          "example": "6213b03e7f0ba50032296f4a"
                        },
                        "fullName": {
                          "type": "string",
                          "description": "The booker's full name",
                          "example": "Full Name"
                        }
                      },
                      "required": [
                        "_id",
                        "fullName"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "quoteId",
                "ratePlanId"
              ]
            }
          },
          "name": {
            "type": "string",
            "example": "guesty-company-trip"
          },
          "source": {
            "type": "string",
            "description": "Source of reservation",
            "example": "Manual"
          },
          "status": {
            "enum": [
              "confirmed",
              "reserved",
              "awaiting_payment",
              "inquiry",
              "canceled",
              "closed",
              "declined",
              "expired"
            ],
            "type": "string",
            "example": "reserved"
          },
          "reservedUntil": {
            "enum": [
              -1,
              0.5,
              0.25,
              0.17,
              12,
              24,
              36,
              48,
              72
            ],
            "type": "number",
            "description": "Indicates for how long a reservation is valid after creation (in hours)",
            "example": 36
          },
          "note": {
            "type": "string",
            "description": "The reservation notes"
          },
          "groupBooker": {
            "description": "The default booker for group reservation",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "The booker ID",
                    "example": "6213b03e7f0ba50032296f4a"
                  },
                  "fullName": {
                    "type": "string",
                    "description": "The booker's full name",
                    "example": "Full Name"
                  }
                },
                "required": [
                  "_id",
                  "fullName"
                ]
              }
            ]
          },
          "coupons": {
            "description": "List of coupons",
            "example": [
              "VeryCoolCoupon",
              "VeryCoolCoupon2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "chargeMethod": {
            "enum": [
              "PER_GROUP",
              "PER_RESERVATION"
            ],
            "type": "string",
            "default": "PER_GROUP",
            "example": "PER_RESERVATION"
          }
        },
        "required": [
          "quoteAndRatePlanIds",
          "name"
        ]
      },
      "GroupReservation": {
        "type": "object",
        "properties": {
          "_id": {
            "example": "df7hf01cnduhdb2125854dj8",
            "allOf": [
              {
                "type": "object",
                "properties": {}
              }
            ]
          },
          "accountId": {
            "example": "df7hf01cnduhdb2125854dj8",
            "allOf": [
              {
                "type": "object",
                "properties": {}
              }
            ]
          },
          "platform": {
            "type": "string",
            "example": "direct"
          },
          "name": {
            "type": "string",
            "example": "guesty-company-trip"
          },
          "source": {
            "type": "string",
            "example": "manual"
          },
          "bookerId": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "confirmationCode": {
            "type": "string"
          }
        },
        "required": [
          "_id",
          "accountId",
          "platform",
          "name",
          "source",
          "createdAt",
          "note",
          "confirmationCode"
        ]
      },
      "CreateAlterationDateEntity": {
        "type": "object",
        "properties": {
          "checkInDateLocalized": {
            "type": "string"
          },
          "checkOutDateLocalized": {
            "type": "string"
          }
        },
        "required": [
          "checkInDateLocalized",
          "checkOutDateLocalized"
        ]
      },
      "CreateAlterationUnitEntity": {
        "type": "object",
        "properties": {
          "unitId": {
            "type": "string"
          },
          "unitTypeId": {
            "type": "string"
          }
        },
        "required": [
          "unitTypeId"
        ]
      },
      "NumberOfGuestsEntity": {
        "type": "object",
        "properties": {
          "numberOfChildren": {
            "type": "number"
          },
          "numberOfInfants": {
            "type": "number"
          },
          "numberOfAdults": {
            "type": "number"
          }
        },
        "required": [
          "numberOfAdults"
        ]
      },
      "CreateAlterationEntity": {
        "type": "object",
        "properties": {
          "dates": {
            "type": "object",
            "properties": {
              "checkInDateLocalized": {
                "type": "string"
              },
              "checkOutDateLocalized": {
                "type": "string"
              }
            },
            "required": [
              "checkInDateLocalized",
              "checkOutDateLocalized"
            ]
          },
          "unit": {
            "type": "object",
            "properties": {
              "unitId": {
                "type": "string"
              },
              "unitTypeId": {
                "type": "string"
              }
            },
            "required": [
              "unitTypeId"
            ]
          },
          "guestsCount": {
            "type": "number"
          },
          "ratePlanId": {
            "type": "string"
          },
          "reservationId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "confirmed",
              "reserved",
              "awaiting_payment",
              "inquiry",
              "canceled",
              "closed",
              "declined",
              "expired"
            ]
          },
          "numberOfGuests": {
            "type": "object",
            "properties": {
              "numberOfChildren": {
                "type": "number"
              },
              "numberOfInfants": {
                "type": "number"
              },
              "numberOfAdults": {
                "type": "number"
              }
            },
            "required": [
              "numberOfAdults"
            ]
          }
        },
        "required": [
          "reservationId"
        ]
      },
      "Inquiry": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "accountId": {
            "type": "string"
          },
          "reservationId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "valid"
            ]
          },
          "guestsCount": {
            "type": "number",
            "example": 1
          },
          "channel": {
            "enum": [
              "manual_reservations",
              "owner_reservations",
              "booking_engine"
            ],
            "type": "string"
          },
          "source": {
            "type": "string",
            "example": "source-fb-for-bi"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string"
          },
          "unitTypeId": {
            "type": "string"
          },
          "unitId": {
            "type": "string"
          },
          "unassign": {
            "type": "boolean"
          },
          "checkInDateLocalized": {
            "type": "string"
          },
          "checkOutDateLocalized": {
            "type": "string"
          },
          "rates": {
            "type": "object"
          },
          "bookerId": {
            "type": "string"
          },
          "coupons": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "promotions": {
            "type": "object"
          },
          "alterationPayload": {
            "type": "object",
            "properties": {
              "dates": {
                "type": "object",
                "properties": {
                  "checkInDateLocalized": {
                    "type": "string"
                  },
                  "checkOutDateLocalized": {
                    "type": "string"
                  }
                },
                "required": [
                  "checkInDateLocalized",
                  "checkOutDateLocalized"
                ]
              },
              "unit": {
                "type": "object",
                "properties": {
                  "unitId": {
                    "type": "string"
                  },
                  "unitTypeId": {
                    "type": "string"
                  }
                },
                "required": [
                  "unitTypeId"
                ]
              },
              "guestsCount": {
                "type": "number"
              },
              "ratePlanId": {
                "type": "string"
              },
              "reservationId": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "confirmed",
                  "reserved",
                  "awaiting_payment",
                  "inquiry",
                  "canceled",
                  "closed",
                  "declined",
                  "expired"
                ]
              },
              "numberOfGuests": {
                "type": "object",
                "properties": {
                  "numberOfChildren": {
                    "type": "number"
                  },
                  "numberOfInfants": {
                    "type": "number"
                  },
                  "numberOfAdults": {
                    "type": "number"
                  }
                },
                "required": [
                  "numberOfAdults"
                ]
              }
            },
            "required": [
              "reservationId"
            ]
          },
          "numberOfGuests": {
            "type": "object",
            "properties": {
              "numberOfChildren": {
                "type": "number",
                "description": "Number of children",
                "example": 1
              },
              "numberOfInfants": {
                "type": "number",
                "description": "Number of infants",
                "example": 1
              },
              "numberOfPets": {
                "type": "number",
                "description": "Number of pets",
                "example": 1
              },
              "numberOfAdults": {
                "type": "number",
                "description": "Number of adults",
                "example": 1
              }
            },
            "required": [
              "numberOfAdults"
            ]
          },
          "pointOfSale": {
            "type": "string"
          }
        },
        "required": [
          "_id",
          "accountId",
          "status",
          "guestsCount",
          "channel",
          "source",
          "createdAt",
          "expiresAt",
          "unitTypeId",
          "checkInDateLocalized",
          "checkOutDateLocalized",
          "rates",
          "coupons",
          "promotions"
        ]
      },
      "CreateQuoteOpenApiDto": {
        "type": "object",
        "properties": {
          "checkInDateLocalized": {
            "type": "string",
            "description": "Localized to listing timezone reservation check-in date (YYYY-MM-DD)",
            "example": "2024-01-04"
          },
          "checkOutDateLocalized": {
            "type": "string",
            "description": "Localized to listing timezone reservation checkout date (YYYY-MM-DD)",
            "example": "2024-01-05"
          },
          "listingId": {
            "type": "string",
            "description": "Guesty listing ID",
            "example": "6213b03e7f0ba50032296f4a"
          },
          "source": {
            "type": "string",
            "description": "Define the source for getting an updated price quote",
            "example": "manual"
          },
          "guestsCount": {
            "type": "number",
            "description": "Number of guests to be included in the quote",
            "minimum": 1,
            "example": 2
          },
          "numberOfGuests": {
            "description": "Keeps information on the number of guests",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "numberOfChildren": {
                    "type": "number",
                    "description": "Number of children in the reservation. It can be zero"
                  },
                  "numberOfInfants": {
                    "type": "number",
                    "description": "Number of infants in the reservation. It can be zero"
                  },
                  "numberOfAdults": {
                    "type": "number",
                    "description": "Count of adults, must be > 0"
                  }
                }
              }
            ]
          },
          "ignoreCalendar": {
            "type": "boolean",
            "description": "The system will check calendar availability and decline (401) if unavailable unless this flag is set to true"
          },
          "ignoreTerms": {
            "type": "boolean",
            "description": "The system will ensure the reservation accords with the terms (min, max nights, any other terms) of the property and will decline(401) if it is. To override, set this flag to true"
          },
          "ignoreBlocks": {
            "type": "boolean",
            "description": "Set this flag to true to ignore existing flexible blocks (advance notice, preparation time, etc)"
          },
          "couponCode": {
            "type": "string",
            "description": "Coupon code to be applied to the quote",
            "example": "OOM20-DISCOUNT"
          }
        },
        "required": [
          "checkInDateLocalized",
          "checkOutDateLocalized",
          "listingId",
          "source",
          "guestsCount"
        ]
      },
      "SingleInquiryPartOfGroupDTO": {
        "type": "object",
        "properties": {
          "checkInDateLocalized": {
            "type": "string",
            "description": "Booker's check-in date",
            "example": "2021-01-04"
          },
          "checkOutDateLocalized": {
            "type": "string",
            "description": "Booker's check-out date",
            "example": "2021-01-05"
          },
          "unitId": {
            "type": "string",
            "description": "The unit ID (MTL Child or Single listing)",
            "example": "6213b03e7f0ba50032296f4a"
          },
          "unitTypeId": {
            "type": "string",
            "description": "The unit type ID (MTL Parent or Single listing)",
            "example": "6213b03e7f0ba50032296f4a"
          },
          "guestsCount": {
            "type": "number",
            "description": "Count of guests",
            "minimum": 1,
            "example": 2
          },
          "bookerId": {
            "type": "string",
            "description": "The booker ID",
            "example": "1e384c9fc2700d002670b61c"
          },
          "source": {
            "type": "string",
            "description": "Source of the inquiry",
            "example": "fb-campaign"
          },
          "channel": {
            "type": "string",
            "description": "The channel that sent the inquiry",
            "enum": [
              "manual_reservations",
              "owner_reservations",
              "booking_engine"
            ]
          },
          "numberOfGuests": {
            "description": "Keeps information on the number of guests",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "numberOfChildren": {
                    "type": "number",
                    "description": "Number of children in the reservation. It can be zero"
                  },
                  "numberOfInfants": {
                    "type": "number",
                    "description": "Number of infants in the reservation. It can be zero"
                  },
                  "numberOfAdults": {
                    "type": "number",
                    "description": "Count of adults, must be > 0"
                  }
                }
              }
            ]
          },
          "applyPromotions": {
            "type": "boolean",
            "description": "Whether to apply promotions",
            "example": false,
            "default": true
          },
          "count": {
            "type": "number",
            "description": "The number of inquiries to create",
            "example": 2
          }
        },
        "required": [
          "checkInDateLocalized",
          "checkOutDateLocalized",
          "unitTypeId",
          "source",
          "applyPromotions",
          "count"
        ]
      },
      "CreateMultipleQuotesDto": {
        "type": "object",
        "properties": {
          "quotes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "checkInDateLocalized": {
                  "type": "string",
                  "description": "Booker's check-in date",
                  "example": "2021-01-04"
                },
                "checkOutDateLocalized": {
                  "type": "string",
                  "description": "Booker's check-out date",
                  "example": "2021-01-05"
                },
                "unitId": {
                  "type": "string",
                  "description": "The unit ID (MTL Child or Single listing)",
                  "example": "6213b03e7f0ba50032296f4a"
                },
                "unitTypeId": {
                  "type": "string",
                  "description": "The unit type ID (MTL Parent or Single listing)",
                  "example": "6213b03e7f0ba50032296f4a"
                },
                "guestsCount": {
                  "type": "number",
                  "description": "Count of guests",
                  "minimum": 1,
                  "example": 2
                },
                "bookerId": {
                  "type": "string",
                  "description": "The booker ID",
                  "example": "1e384c9fc2700d002670b61c"
                },
                "source": {
                  "type": "string",
                  "description": "Source of the inquiry",
                  "example": "fb-campaign"
                },
                "channel": {
                  "type": "string",
                  "description": "The channel that sent the inquiry",
                  "enum": [
                    "manual_reservations",
                    "owner_reservations",
                    "booking_engine"
                  ]
                },
                "numberOfGuests": {
                  "description": "Keeps information on the number of guests",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "numberOfChildren": {
                          "type": "number",
                          "description": "Number of children in the reservation. It can be zero"
                        },
                        "numberOfInfants": {
                          "type": "number",
                          "description": "Number of infants in the reservation. It can be zero"
                        },
                        "numberOfAdults": {
                          "type": "number",
                          "description": "Count of adults, must be > 0"
                        }
                      }
                    }
                  ]
                },
                "applyPromotions": {
                  "type": "boolean",
                  "description": "Whether to apply promotions",
                  "example": false,
                  "default": true
                },
                "count": {
                  "type": "number",
                  "description": "The number of inquiries to create",
                  "example": 2
                }
              },
              "required": [
                "checkInDateLocalized",
                "checkOutDateLocalized",
                "unitTypeId",
                "source",
                "applyPromotions",
                "count"
              ]
            }
          }
        },
        "required": [
          "quotes"
        ]
      },
      "ICreateInquiryErrorResponse": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string"
          },
          "unitId": {
            "type": "string"
          },
          "inquiryId": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          }
        },
        "required": [
          "unitTypeId",
          "unitId",
          "inquiryId",
          "errorMessage"
        ]
      },
      "CreateMultipleInquiriesResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "unitTypeId": {
                  "type": "string"
                },
                "unitId": {
                  "type": "string"
                },
                "inquiryId": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              },
              "required": [
                "unitTypeId",
                "unitId",
                "inquiryId",
                "errorMessage"
              ]
            }
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "df7hf01cnduhdb2125854dj8"
                },
                "accountId": {
                  "type": "string"
                },
                "reservationId": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "valid"
                  ]
                },
                "guestsCount": {
                  "type": "number",
                  "example": 1
                },
                "channel": {
                  "enum": [
                    "manual_reservations",
                    "owner_reservations",
                    "booking_engine"
                  ],
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "example": "source-fb-for-bi"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "expiresAt": {
                  "format": "date-time",
                  "type": "string"
                },
                "unitTypeId": {
                  "type": "string"
                },
                "unitId": {
                  "type": "string"
                },
                "unassign": {
                  "type": "boolean"
                },
                "checkInDateLocalized": {
                  "type": "string"
                },
                "checkOutDateLocalized": {
                  "type": "string"
                },
                "rates": {
                  "type": "object"
                },
                "bookerId": {
                  "type": "string"
                },
                "coupons": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "promotions": {
                  "type": "object"
                },
                "alterationPayload": {
                  "type": "object",
                  "properties": {
                    "dates": {
                      "type": "object",
                      "properties": {
                        "checkInDateLocalized": {
                          "type": "string"
                        },
                        "checkOutDateLocalized": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "checkInDateLocalized",
                        "checkOutDateLocalized"
                      ]
                    },
                    "unit": {
                      "type": "object",
                      "properties": {
                        "unitId": {
                          "type": "string"
                        },
                        "unitTypeId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "unitTypeId"
                      ]
                    },
                    "guestsCount": {
                      "type": "number"
                    },
                    "ratePlanId": {
                      "type": "string"
                    },
                    "reservationId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "confirmed",
                        "reserved",
                        "awaiting_payment",
                        "inquiry",
                        "canceled",
                        "closed",
                        "declined",
                        "expired"
                      ]
                    },
                    "numberOfGuests": {
                      "type": "object",
                      "properties": {
                        "numberOfChildren": {
                          "type": "number"
                        },
                        "numberOfInfants": {
                          "type": "number"
                        },
                        "numberOfAdults": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "numberOfAdults"
                      ]
                    }
                  },
                  "required": [
                    "reservationId"
                  ]
                },
                "numberOfGuests": {
                  "type": "object",
                  "properties": {
                    "numberOfChildren": {
                      "type": "number",
                      "description": "Number of children",
                      "example": 1
                    },
                    "numberOfInfants": {
                      "type": "number",
                      "description": "Number of infants",
                      "example": 1
                    },
                    "numberOfPets": {
                      "type": "number",
                      "description": "Number of pets",
                      "example": 1
                    },
                    "numberOfAdults": {
                      "type": "number",
                      "description": "Number of adults",
                      "example": 1
                    }
                  },
                  "required": [
                    "numberOfAdults"
                  ]
                },
                "pointOfSale": {
                  "type": "string"
                }
              },
              "required": [
                "_id",
                "accountId",
                "status",
                "guestsCount",
                "channel",
                "source",
                "createdAt",
                "expiresAt",
                "unitTypeId",
                "checkInDateLocalized",
                "checkOutDateLocalized",
                "rates",
                "coupons",
                "promotions"
              ]
            }
          }
        },
        "required": [
          "errors",
          "results"
        ]
      },
      "OwnerDto2": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The owner ID",
            "example": "6213b03e7f0ba50032296f4a"
          },
          "fullName": {
            "type": "string",
            "description": "The owner's full name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "The owner's email",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "description": "The owner's phone number",
            "example": "+1 123 456 7890"
          },
          "locale": {
            "type": "string",
            "description": "The owner's locale",
            "example": "en-US"
          }
        },
        "required": [
          "_id"
        ]
      },
      "ObjectId5": {
        "type": "object",
        "properties": {}
      },
      "Owner2": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "properties": {}
          },
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          }
        },
        "required": [
          "_id"
        ]
      },
      "Reservation2": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "groupId": {
            "type": "object",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "sendQuoteId": {
            "example": "df7hf01cnduhdb2125854dj8",
            "allOf": [
              {
                "type": "object",
                "properties": {}
              }
            ]
          },
          "integrationId": {
            "type": "object",
            "example": "df7hf01cnduhdb2125854dj9"
          },
          "stay": {
            "example": [
              {
                "checkInDateLocalized": "2021-12-20",
                "checkOutDateLocalized": "2021-12-22",
                "guestsCount": 3,
                "numberOfGuests": {
                  "numberOfAdults": 3,
                  "numberOfChildren": 0,
                  "numberOfInfants": 0
                },
                "unitTypeId": "5e384c9fc2700d002670b61b",
                "unitId": "5e384c9fc2700d002670b61b",
                "ratePlanId": "5e384c9fc2700d002670b61b"
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "object",
                  "properties": {}
                },
                "checkInDateLocalized": {
                  "type": "string"
                },
                "checkOutDateLocalized": {
                  "type": "string"
                },
                "guestsCount": {
                  "type": "number"
                },
                "unitTypeId": {
                  "type": "object",
                  "properties": {}
                },
                "unitId": {
                  "type": "object",
                  "properties": {}
                },
                "ratePlanId": {
                  "type": "string"
                },
                "eta": {
                  "format": "date-time",
                  "type": "string"
                },
                "etd": {
                  "format": "date-time",
                  "type": "string"
                },
                "numberOfGuests": {
                  "type": "object",
                  "properties": {
                    "numberOfChildren": {
                      "type": "number",
                      "description": "Number of children",
                      "example": 1
                    },
                    "numberOfInfants": {
                      "type": "number",
                      "description": "Number of infants",
                      "example": 1
                    },
                    "numberOfPets": {
                      "type": "number",
                      "description": "Number of pets",
                      "example": 1
                    },
                    "numberOfAdults": {
                      "type": "number",
                      "description": "Number of adults",
                      "example": 1
                    }
                  },
                  "required": [
                    "numberOfAdults"
                  ]
                },
                "earlyCheckIn": {
                  "type": "object",
                  "properties": {}
                },
                "lateCheckOut": {
                  "type": "object",
                  "properties": {}
                }
              },
              "required": [
                "checkInDateLocalized",
                "checkOutDateLocalized",
                "guestsCount",
                "unitTypeId",
                "eta",
                "etd"
              ]
            }
          },
          "bookerId": {
            "type": "string",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "platform": {
            "type": "string",
            "example": "direct"
          },
          "quoteId": {
            "type": "object",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "accountId": {
            "type": "object",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "source": {
            "type": "string",
            "example": "fb-campaign-01"
          },
          "confirmedAt": {
            "format": "date-time",
            "type": "string"
          },
          "reservedAt": {
            "format": "date-time",
            "type": "string"
          },
          "reservedUntil": {
            "enum": [
              "twelveHours",
              "day",
              "thirtySixHours",
              "twoDays",
              "threeDays",
              -1,
              0.5,
              0.25,
              0.17
            ],
            "type": "string"
          },
          "canceledAt": {
            "format": "date-time",
            "type": "string"
          },
          "isAssigned": {
            "type": "boolean"
          },
          "moneyId": {
            "type": "string",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "specialRequests": {
            "type": "string",
            "example": "notes, requests",
            "deprecated": true
          },
          "keyCode": {
            "type": "string",
            "example": "code for the key",
            "deprecated": true
          },
          "alteredAt": {
            "format": "date-time",
            "type": "string"
          },
          "conversationId": {
            "type": "string",
            "example": "df7hf01cnduhdb2125854dj8"
          },
          "transportation": {
            "type": "object"
          },
          "agentBooking": {
            "type": "boolean"
          },
          "reasonForVisit": {
            "enum": [
              "business",
              "leisure",
              "family",
              "event",
              "other"
            ],
            "type": "string"
          },
          "canceledBy": {
            "enum": [
              "OWNER",
              "GUEST",
              "TEAM_MEMBER"
            ],
            "type": "string"
          },
          "cancellationReason": {
            "type": "string"
          },
          "guestStay": {
            "type": "object",
            "properties": {
              "doneBy": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              },
              "createdAt": {
                "format": "date-time",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "enum": [
                  "not_set",
                  "checked_in",
                  "checked_out",
                  "no_show"
                ],
                "type": "string"
              }
            },
            "required": [
              "createdAt",
              "updatedAt",
              "status"
            ]
          },
          "pointOfSale": {
            "type": "string"
          },
          "creationInfo": {
            "description": "Reservation creation info. It is used to track the user who created the reservation, currently used for owner reservations.",
            "example": {
              "owner": {
                "_id": "5e384c9fc2700d002670b61b",
                "fullName": "John Doe",
                "email": "john.doe@gmail.com",
                "phone": "+1 123 456 7890",
                "locale": "en-US"
              }
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "owner": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "object",
                        "properties": {}
                      },
                      "fullName": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "locale": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "_id"
                    ]
                  }
                }
              }
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "customFields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "fieldId": {
                  "type": "string"
                },
                "value": {
                  "type": "object"
                }
              },
              "required": [
                "_id",
                "fieldId",
                "value"
              ]
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "confirmed",
              "reserved",
              "awaiting_payment",
              "inquiry",
              "canceled",
              "closed",
              "declined",
              "expired"
            ]
          },
          "notes": {
            "type": "object",
            "properties": {
              "other": {
                "type": "string"
              },
              "cleaning": {
                "type": "string"
              },
              "guest": {
                "type": "string"
              },
              "specialRequests": {
                "type": "string"
              },
              "keyCode": {
                "type": "string"
              }
            }
          },
          "confirmationCode": {
            "type": "string"
          }
        },
        "required": [
          "_id",
          "stay",
          "bookerId",
          "platform",
          "quoteId",
          "accountId",
          "source",
          "createdAt",
          "status",
          "notes",
          "confirmationCode"
        ]
      },
      "ReviewsResponseError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "code",
          "message",
          "data"
        ]
      },
      "ReviewsResponseDto": {
        "type": "object",
        "properties": {
          "isRawResponse": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          },
          "skip": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "data": {
                "type": "object"
              }
            },
            "required": [
              "code",
              "message",
              "data"
            ]
          }
        }
      },
      "GetListingsReviewAverageResponseDto": {
        "type": "object",
        "properties": {
          "listingId": {
            "type": "string"
          },
          "avg": {
            "type": "number"
          },
          "total": {
            "type": "number"
          }
        },
        "required": [
          "listingId",
          "avg",
          "total"
        ]
      },
      "ShortReviewReply": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "PENDING",
              "FAILED",
              "COMPLETED",
              "NOT_FOUND"
            ],
            "type": "string"
          },
          "reviewReply": {
            "type": "string"
          },
          "replyAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "status",
          "reviewReply",
          "replyAt"
        ]
      },
      "ReviewResponseDto": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "format": "string"
          },
          "accountId": {
            "type": "object",
            "format": "string"
          },
          "externalReviewId": {
            "type": "string",
            "format": "string"
          },
          "channelId": {
            "enum": [
              "bookingCom",
              "airbnb2",
              "homeaway2"
            ],
            "type": "string",
            "format": "string",
            "example": "bookingCom"
          },
          "subListingId": {
            "type": "object",
            "format": "string"
          },
          "listingId": {
            "type": "object",
            "format": "string"
          },
          "complexId": {
            "type": "object",
            "format": "string"
          },
          "externalListingId": {
            "type": "string",
            "format": "string"
          },
          "externalComplexId": {
            "type": "string",
            "format": "string"
          },
          "reservationId": {
            "type": "object",
            "format": "string"
          },
          "externalReservationId": {
            "type": "string",
            "format": "string"
          },
          "guestId": {
            "type": "object",
            "format": "string"
          },
          "createdAt": {
            "format": "YYYY-MM-DD",
            "type": "string"
          },
          "updatedAt": {
            "format": "YYYY-MM-DD",
            "type": "string"
          },
          "createdAtGuesty": {
            "format": "YYYY-MM-DD",
            "type": "string"
          },
          "updatedAtGuesty": {
            "format": "YYYY-MM-DD",
            "type": "string"
          },
          "rawReview": {
            "type": "object"
          },
          "reviewReplies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "enum": [
                    "PENDING",
                    "FAILED",
                    "COMPLETED",
                    "NOT_FOUND"
                  ],
                  "type": "string"
                },
                "reviewReply": {
                  "type": "string"
                },
                "replyAt": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "status",
                "reviewReply",
                "replyAt"
              ]
            }
          }
        },
        "required": [
          "_id",
          "accountId",
          "externalReviewId",
          "channelId",
          "listingId",
          "externalListingId",
          "externalReservationId",
          "rawReview"
        ]
      },
      "UpsertReviewBodyDto": {
        "type": "object",
        "properties": {
          "channelId": {
            "enum": [
              "bookingCom",
              "airbnb2",
              "homeaway2"
            ],
            "type": "string",
            "format": "string",
            "example": "bookingCom"
          },
          "rawReview": {
            "type": "object"
          },
          "metaData": {
            "type": "object"
          }
        },
        "required": [
          "channelId",
          "rawReview"
        ]
      },
      "UpsertReviewReplyBodyDto": {
        "type": "object",
        "properties": {
          "reviewReply": {
            "type": "string",
            "format": "string"
          }
        },
        "required": [
          "reviewReply"
        ]
      },
      "ReviewMetadataDto": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "format": "string"
          },
          "accountId": {
            "type": "object",
            "format": "string"
          },
          "bookingCom": {
            "type": "object"
          },
          "airbnb2": {
            "type": "object"
          },
          "homeaway2": {
            "type": "object"
          },
          "priority": {
            "enum": [
              "high",
              "normal"
            ],
            "type": "string",
            "format": "string",
            "example": "normal"
          }
        },
        "required": [
          "accountId",
          "bookingCom",
          "airbnb2",
          "homeaway2",
          "priority"
        ]
      },
      "CreateReplyByExternalReviewIdBodyDto": {
        "type": "object",
        "properties": {
          "platform": {
            "enum": [
              "BOOKINGCOM",
              "AIRBNB2",
              "HOMEAWAY2"
            ],
            "type": "string",
            "example": "BOOKINGCOM"
          },
          "reply": {
            "type": "string",
            "format": "string"
          },
          "externalPropertyId": {
            "type": "string",
            "format": "string"
          }
        },
        "required": [
          "platform",
          "reply",
          "externalPropertyId"
        ]
      },
      "LegacyReplyStatusDto": {
        "type": "object",
        "properties": {
          "externalReviewId": {
            "type": "string",
            "format": "string"
          },
          "status": {
            "enum": [
              "PENDING",
              "FAILED",
              "COMPLETED",
              "NOT_FOUND"
            ],
            "type": "string",
            "example": "COMPLETED"
          },
          "error": {
            "type": "string",
            "format": "string"
          }
        },
        "required": [
          "externalReviewId",
          "status",
          "error"
        ]
      },
      "ProcessSubmitResultByExternalReviewIdBodyDto": {
        "type": "object",
        "properties": {
          "platform": {
            "enum": [
              "bookingCom",
              "BOOKINGCOM"
            ],
            "type": "string",
            "example": "bookingCom"
          },
          "result": {
            "type": "object"
          },
          "error": {
            "type": "string",
            "format": "string"
          }
        },
        "required": [
          "platform",
          "result"
        ]
      },
      "CalendarDto": {
        "type": "object",
        "properties": {
          "date": {
            "format": "date-time",
            "type": "string",
            "description": "date of calendar",
            "example": "2022-09-29T19:59:18+08:00"
          },
          "adultOccupancy": {
            "type": "number",
            "description": "adult occupancy",
            "example": 2
          },
          "losPrice": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "length of stay price",
            "example": {
              "1": 100,
              "2": 90
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "date when metadata was created",
            "example": "2022-09-29T19:59:18+08:00"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "date when metadata was updated",
            "example": "2022-09-29T19:59:18+08:00"
          }
        },
        "required": [
          "date",
          "adultOccupancy",
          "losPrice",
          "createdAt",
          "updatedAt"
        ]
      },
      "CalendarResponseDto": {
        "type": "object",
        "properties": {
          "calendar": {
            "description": "los calendar",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "date": {
                    "format": "date-time",
                    "type": "string",
                    "description": "date of calendar",
                    "example": "2022-09-29T19:59:18+08:00"
                  },
                  "adultOccupancy": {
                    "type": "number",
                    "description": "adult occupancy",
                    "example": 2
                  },
                  "losPrice": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        }
                      ]
                    },
                    "description": "length of stay price",
                    "example": {
                      "1": 100,
                      "2": 90
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string",
                    "description": "date when metadata was created",
                    "example": "2022-09-29T19:59:18+08:00"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string",
                    "description": "date when metadata was updated",
                    "example": "2022-09-29T19:59:18+08:00"
                  }
                },
                "required": [
                  "date",
                  "adultOccupancy",
                  "losPrice",
                  "createdAt",
                  "updatedAt"
                ]
              }
            ]
          },
          "requestId": {
            "type": "string",
            "description": "request id",
            "example": "63358a07d027853ee92eede0"
          },
          "unitTypeId": {
            "type": "string",
            "description": "unitType id",
            "example": "63358a07d027853ee92eede0"
          },
          "skip": {
            "type": "number",
            "description": "how much page to skip",
            "example": 3
          },
          "limit": {
            "type": "number",
            "description": "max amount of items",
            "example": 100
          }
        },
        "required": [
          "calendar",
          "requestId",
          "unitTypeId",
          "skip",
          "limit"
        ]
      },
      "UpsertCalendarDto": {
        "type": "object",
        "properties": {
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "start date of upserted calendar interval",
            "example": "2022-09-29"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "end date of upserted calendar interval",
            "example": "2022-10-11"
          },
          "lengthOfStay": {
            "type": "number",
            "description": "length of reservation",
            "example": 10
          },
          "price": {
            "type": "number",
            "description": "price for this length of reservation",
            "example": 100
          },
          "adultOccupancy": {
            "type": "number",
            "description": "adult occupancy for this length of reservation",
            "example": 2
          }
        },
        "required": [
          "startDate",
          "endDate",
          "lengthOfStay",
          "price",
          "adultOccupancy"
        ]
      },
      "CalendarUpsertResponseDto": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "description": "unitType id",
            "example": "63358a07d027853ee92eede0"
          },
          "requestId": {
            "type": "string",
            "description": "request id",
            "example": "63358a07d027853ee92eede0"
          }
        },
        "required": [
          "unitTypeId",
          "requestId"
        ]
      },
      "DayQuoteDto": {
        "type": "object",
        "properties": {
          "checkInDate": {
            "format": "date-time",
            "type": "string",
            "description": "check in date",
            "example": "2022-09-29T19:59:18+08:00"
          },
          "price": {
            "type": "number",
            "description": "price of unitType for length of stay",
            "example": 100
          },
          "dailyPrice": {
            "type": "number",
            "description": "daily price of unitType consider length of stay",
            "example": 50
          },
          "lengthOfStay": {
            "type": "number",
            "description": "count days of reservation from the date",
            "example": 5
          },
          "status": {
            "enum": [
              "available",
              "unavailable"
            ],
            "type": "string",
            "description": "calendar quote status for requested period",
            "example": "available"
          }
        },
        "required": [
          "checkInDate",
          "price",
          "dailyPrice",
          "lengthOfStay",
          "status"
        ]
      },
      "CalendarQuoteResponseDto": {
        "type": "object",
        "properties": {
          "daysQuote": {
            "description": "los calendar days quote",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "checkInDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "check in date",
                    "example": "2022-09-29T19:59:18+08:00"
                  },
                  "price": {
                    "type": "number",
                    "description": "price of unitType for length of stay",
                    "example": 100
                  },
                  "dailyPrice": {
                    "type": "number",
                    "description": "daily price of unitType consider length of stay",
                    "example": 50
                  },
                  "lengthOfStay": {
                    "type": "number",
                    "description": "count days of reservation from the date",
                    "example": 5
                  },
                  "status": {
                    "enum": [
                      "available",
                      "unavailable"
                    ],
                    "type": "string",
                    "description": "calendar quote status for requested period",
                    "example": "available"
                  }
                },
                "required": [
                  "checkInDate",
                  "price",
                  "dailyPrice",
                  "lengthOfStay",
                  "status"
                ]
              }
            ]
          },
          "requestId": {
            "type": "string",
            "description": "request id",
            "example": "63358a07d027853ee92eede0"
          },
          "unitTypeId": {
            "type": "string",
            "description": "unitType id",
            "example": "63358a07d027853ee92eede0"
          }
        },
        "required": [
          "daysQuote",
          "requestId",
          "unitTypeId"
        ]
      },
      "CalendarMetadataDto": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "description": "calendar unitTypeId",
            "example": "63358a07d027853ee92eede0"
          },
          "status": {
            "enum": [
              "ACTIVE",
              "IN_ACTIVE"
            ],
            "type": "string",
            "description": "calendar status",
            "example": "ACTIVE"
          }
        },
        "required": [
          "unitTypeId",
          "status"
        ]
      },
      "CalendarMetadataResponseDto": {
        "type": "object",
        "properties": {
          "calendarMetadata": {
            "description": "calendar metadata",
            "example": {
              "status": "ACTIVE",
              "unitTypeId": "63358a07d027853ee92eede0"
            },
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "unitTypeId": {
                    "type": "string",
                    "description": "calendar unitTypeId",
                    "example": "63358a07d027853ee92eede0"
                  },
                  "status": {
                    "enum": [
                      "ACTIVE",
                      "IN_ACTIVE"
                    ],
                    "type": "string",
                    "description": "calendar status",
                    "example": "ACTIVE"
                  }
                },
                "required": [
                  "unitTypeId",
                  "status"
                ]
              }
            ]
          },
          "requestId": {
            "type": "string",
            "description": "request id",
            "example": "63358a07d027853ee92eede0"
          }
        },
        "required": [
          "calendarMetadata",
          "requestId"
        ]
      },
      "UpsertCalendarMetadataDto": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "ACTIVE",
              "IN_ACTIVE"
            ],
            "type": "string",
            "description": "calendar status",
            "example": "ACTIVE"
          }
        },
        "required": [
          "status"
        ]
      },
      "CalendarMetadataUpsertResponseDto": {
        "type": "object",
        "properties": {
          "unitTypeId": {
            "type": "string",
            "description": "unitType id",
            "example": "63358a07d027853ee92eede0"
          },
          "requestId": {
            "type": "string",
            "description": "request id",
            "example": "63358a07d027853ee92eede0"
          }
        },
        "required": [
          "unitTypeId",
          "requestId"
        ]
      },
      "ObjectId6": {
        "type": "object",
        "properties": {}
      },
      "PromotionAssignListingsOpenApiDto": {
        "type": "object",
        "properties": {
          "listings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "required": [
          "listings"
        ]
      },
      "RepeatedDaysRule": {
        "type": "object",
        "properties": {
          "available": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "available"
        ]
      },
      "RepeatedDaysRules": {
        "type": "object",
        "properties": {
          "0": {
            "type": "object",
            "properties": {
              "available": {
                "type": "boolean",
                "default": true
              }
            },
            "required": [
              "available"
            ]
          },
          "1": {
            "type": "object",
            "properties": {
              "available": {
                "type": "boolean",
                "default": true
              }
            },
            "required": [
              "available"
            ]
          },
          "2": {
            "type": "object",
            "properties": {
              "available": {
                "type": "boolean",
                "default": true
              }
            },
            "required": [
              "available"
            ]
          },
          "3": {
            "type": "object",
            "properties": {
              "available": {
                "type": "boolean",
                "default": true
              }
            },
            "required": [
              "available"
            ]
          },
          "4": {
            "type": "object",
            "properties": {
              "available": {
                "type": "boolean",
                "default": true
              }
            },
            "required": [
              "available"
            ]
          },
          "5": {
            "type": "object",
            "properties": {
              "available": {
                "type": "boolean",
                "default": true
              }
            },
            "required": [
              "available"
            ]
          },
          "6": {
            "type": "object",
            "properties": {
              "available": {
                "type": "boolean",
                "default": true
              }
            },
            "required": [
              "available"
            ]
          }
        },
        "required": [
          "0",
          "1",
          "2",
          "3",
          "4",
          "5",
          "6"
        ]
      },
      "DateRangeRule": {
        "type": "object",
        "properties": {
          "to": {
            "format": "date-time",
            "type": "string",
            "description": "to date"
          },
          "from": {
            "format": "date-time",
            "type": "string",
            "description": "from date"
          },
          "repeatedDays": {
            "description": "repeated days",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "0": {
                    "type": "object",
                    "properties": {
                      "available": {
                        "type": "boolean",
                        "default": true
                      }
                    },
                    "required": [
                      "available"
                    ]
                  },
                  "1": {
                    "type": "object",
                    "properties": {
                      "available": {
                        "type": "boolean",
                        "default": true
                      }
                    },
                    "required": [
                      "available"
                    ]
                  },
                  "2": {
                    "type": "object",
                    "properties": {
                      "available": {
                        "type": "boolean",
                        "default": true
                      }
                    },
                    "required": [
                      "available"
                    ]
                  },
                  "3": {
                    "type": "object",
                    "properties": {
                      "available": {
                        "type": "boolean",
                        "default": true
                      }
                    },
                    "required": [
                      "available"
                    ]
                  },
                  "4": {
                    "type": "object",
                    "properties": {
                      "available": {
                        "type": "boolean",
                        "default": true
                      }
                    },
                    "required": [
                      "available"
                    ]
                  },
                  "5": {
                    "type": "object",
                    "properties": {
                      "available": {
                        "type": "boolean",
                        "default": true
                      }
                    },
                    "required": [
                      "available"
                    ]
                  },
                  "6": {
                    "type": "object",
                    "properties": {
                      "available": {
                        "type": "boolean",
                        "default": true
                      }
                    },
                    "required": [
                      "available"
                    ]
                  }
                },
                "required": [
                  "0",
                  "1",
                  "2",
                  "3",
                  "4",
                  "5",
                  "6"
                ]
              }
            ]
          }
        },
        "required": [
          "to",
          "from",
          "repeatedDays"
        ]
      },
      "RatePlanAvailabilityRules": {
        "type": "object",
        "properties": {
          "advanceNotice": {
            "type": "number",
            "description": "advance notice",
            "example": 1
          },
          "bookingWindow": {
            "type": "number",
            "description": "booking window",
            "example": 3
          },
          "dateRange": {
            "description": "date range",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "to": {
                    "format": "date-time",
                    "type": "string",
                    "description": "to date"
                  },
                  "from": {
                    "format": "date-time",
                    "type": "string",
                    "description": "from date"
                  },
                  "repeatedDays": {
                    "description": "repeated days",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "0": {
                            "type": "object",
                            "properties": {
                              "available": {
                                "type": "boolean",
                                "default": true
                              }
                            },
                            "required": [
                              "available"
                            ]
                          },
                          "1": {
                            "type": "object",
                            "properties": {
                              "available": {
                                "type": "boolean",
                                "default": true
                              }
                            },
                            "required": [
                              "available"
                            ]
                          },
                          "2": {
                            "type": "object",
                            "properties": {
                              "available": {
                                "type": "boolean",
                                "default": true
                              }
                            },
                            "required": [
                              "available"
                            ]
                          },
                          "3": {
                            "type": "object",
                            "properties": {
                              "available": {
                                "type": "boolean",
                                "default": true
                              }
                            },
                            "required": [
                              "available"
                            ]
                          },
                          "4": {
                            "type": "object",
                            "properties": {
                              "available": {
                                "type": "boolean",
                                "default": true
                              }
                            },
                            "required": [
                              "available"
                            ]
                          },
                          "5": {
                            "type": "object",
                            "properties": {
                              "available": {
                                "type": "boolean",
                                "default": true
                              }
                            },
                            "required": [
                              "available"
                            ]
                          },
                          "6": {
                            "type": "object",
                            "properties": {
                              "available": {
                                "type": "boolean",
                                "default": true
                              }
                            },
                            "required": [
                              "available"
                            ]
                          }
                        },
                        "required": [
                          "0",
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "to",
                  "from",
                  "repeatedDays"
                ]
              }
            ]
          },
          "restrictedDates": {
            "description": "restricted dates",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RatePlanDtoOpenApi": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "5fae51c4fdff570029b147e8",
            "description": "id"
          },
          "accountId": {
            "type": "string",
            "example": "5213a2d206112710005d96ff",
            "description": "account id"
          },
          "type": {
            "type": "string",
            "enum": [
              "independent"
            ],
            "example": "independent",
            "description": "type"
          },
          "name": {
            "type": "string",
            "example": "My rate plan",
            "description": "name"
          },
          "description": {
            "type": "string",
            "example": "My rate plan description",
            "description": "description"
          },
          "cancellationPolicy": {
            "nullable": true,
            "enum": [
              "strict",
              "strict_60",
              "strict_90",
              "super_strict",
              "moderate",
              "semi_moderate",
              "semi_flexible",
              "firm",
              "flex",
              "free"
            ],
            "type": "string",
            "example": "firm",
            "description": "cancellationPolicy"
          },
          "cancellationFee": {
            "nullable": true,
            "enum": [
              "FIRST_NIGHT",
              "50%_TOTAL_PRICE",
              "TOTAL_PRICE",
              100,
              50,
              0
            ],
            "type": "string",
            "example": 50,
            "description": "cancellationFee"
          },
          "mealPlans": {
            "type": "array",
            "items": {
              "type": "number",
              "enum": [
                [
                  "breakfast",
                  "lunch",
                  "dinner",
                  "all_inclusive"
                ]
              ]
            },
            "example": [
              "all_inclusive"
            ],
            "description": "mealPlans"
          },
          "availabilityRules": {
            "example": {
              "advanceNotice": 10,
              "bookingWindow": 20
            },
            "description": "availabilityRules",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "advanceNotice": {
                    "type": "number",
                    "description": "advance notice",
                    "example": 1
                  },
                  "bookingWindow": {
                    "type": "number",
                    "description": "booking window",
                    "example": 3
                  },
                  "dateRange": {
                    "description": "date range",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "to": {
                            "format": "date-time",
                            "type": "string",
                            "description": "to date"
                          },
                          "from": {
                            "format": "date-time",
                            "type": "string",
                            "description": "from date"
                          },
                          "repeatedDays": {
                            "description": "repeated days",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "0": {
                                    "type": "object",
                                    "properties": {
                                      "available": {
                                        "type": "boolean",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "available"
                                    ]
                                  },
                                  "1": {
                                    "type": "object",
                                    "properties": {
                                      "available": {
                                        "type": "boolean",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "available"
                                    ]
                                  },
                                  "2": {
                                    "type": "object",
                                    "properties": {
                                      "available": {
                                        "type": "boolean",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "available"
                                    ]
                                  },
                                  "3": {
                                    "type": "object",
                                    "properties": {
                                      "available": {
                                        "type": "boolean",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "available"
                                    ]
                                  },
                                  "4": {
                                    "type": "object",
                                    "properties": {
                                      "available": {
                                        "type": "boolean",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "available"
                                    ]
                                  },
                                  "5": {
                                    "type": "object",
                                    "properties": {
                                      "available": {
                                        "type": "boolean",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "available"
                                    ]
                                  },
                                  "6": {
                                    "type": "object",
                                    "properties": {
                                      "available": {
                                        "type": "boolean",
                                        "default": true
                                      }
                                    },
                                    "required": [
                                      "available"
                                    ]
                                  }
                                },
                                "required": [
                                  "0",
                                  "1",
                                  "2",
                                  "3",
                                  "4",
                                  "5",
                                  "6"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "to",
                          "from",
                          "repeatedDays"
                        ]
                      }
                    ]
                  },
                  "restrictedDates": {
                    "description": "restricted dates",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          },
          "pricingModel": {
            "type": "string",
            "enum": [
              "nightly_rate"
            ],
            "example": "nightly_rate",
            "description": "pricingModel"
          },
          "channelSync": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "bookingCom",
                "manual_reservations",
                "booking_engine"
              ]
            },
            "example": [
              "bookingCom"
            ],
            "description": "channelSync"
          },
          "active": {
            "type": "boolean",
            "example": true,
            "description": "is active"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2023-12-01T04:09:27.335Z",
            "description": "createdAt"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2023-12-01T04:09:27.335Z",
            "description": "updatedAt"
          }
        },
        "required": [
          "_id",
          "accountId",
          "type",
          "name",
          "pricingModel",
          "active",
          "createdAt",
          "updatedAt"
        ]
      },
      "CrudRatePlanDtoListOpenApi": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "ratePlans": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "5fae51c4fdff570029b147e8",
                  "description": "id"
                },
                "accountId": {
                  "type": "string",
                  "example": "5213a2d206112710005d96ff",
                  "description": "account id"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "independent"
                  ],
                  "example": "independent",
                  "description": "type"
                },
                "name": {
                  "type": "string",
                  "example": "My rate plan",
                  "description": "name"
                },
                "description": {
                  "type": "string",
                  "example": "My rate plan description",
                  "description": "description"
                },
                "cancellationPolicy": {
                  "nullable": true,
                  "enum": [
                    "strict",
                    "strict_60",
                    "strict_90",
                    "super_strict",
                    "moderate",
                    "semi_moderate",
                    "semi_flexible",
                    "firm",
                    "flex",
                    "free"
                  ],
                  "type": "string",
                  "example": "firm",
                  "description": "cancellationPolicy"
                },
                "cancellationFee": {
                  "nullable": true,
                  "enum": [
                    "FIRST_NIGHT",
                    "50%_TOTAL_PRICE",
                    "TOTAL_PRICE",
                    100,
                    50,
                    0
                  ],
                  "type": "string",
                  "example": 50,
                  "description": "cancellationFee"
                },
                "mealPlans": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "enum": [
                      [
                        "breakfast",
                        "lunch",
                        "dinner",
                        "all_inclusive"
                      ]
                    ]
                  },
                  "example": [
                    "all_inclusive"
                  ],
                  "description": "mealPlans"
                },
                "availabilityRules": {
                  "example": {
                    "advanceNotice": 10,
                    "bookingWindow": 20
                  },
                  "description": "availabilityRules",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "advanceNotice": {
                          "type": "number",
                          "description": "advance notice",
                          "example": 1
                        },
                        "bookingWindow": {
                          "type": "number",
                          "description": "booking window",
                          "example": 3
                        },
                        "dateRange": {
                          "description": "date range",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "to": {
                                  "format": "date-time",
                                  "type": "string",
                                  "description": "to date"
                                },
                                "from": {
                                  "format": "date-time",
                                  "type": "string",
                                  "description": "from date"
                                },
                                "repeatedDays": {
                                  "description": "repeated days",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "0": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        },
                                        "1": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        },
                                        "2": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        },
                                        "3": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        },
                                        "4": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        },
                                        "5": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        },
                                        "6": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "0",
                                        "1",
                                        "2",
                                        "3",
                                        "4",
                                        "5",
                                        "6"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "to",
                                "from",
                                "repeatedDays"
                              ]
                            }
                          ]
                        },
                        "restrictedDates": {
                          "description": "restricted dates",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  ]
                },
                "pricingModel": {
                  "type": "string",
                  "enum": [
                    "nightly_rate"
                  ],
                  "example": "nightly_rate",
                  "description": "pricingModel"
                },
                "channelSync": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "bookingCom",
                      "manual_reservations",
                      "booking_engine"
                    ]
                  },
                  "example": [
                    "bookingCom"
                  ],
                  "description": "channelSync"
                },
                "active": {
                  "type": "boolean",
                  "example": true,
                  "description": "is active"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string",
                  "example": "2023-12-01T04:09:27.335Z",
                  "description": "createdAt"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string",
                  "example": "2023-12-01T04:09:27.335Z",
                  "description": "updatedAt"
                }
              },
              "required": [
                "_id",
                "accountId",
                "type",
                "name",
                "pricingModel",
                "active",
                "createdAt",
                "updatedAt"
              ]
            }
          },
          "count": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          },
          "skip": {
            "type": "number"
          }
        },
        "required": [
          "requestId",
          "ratePlans",
          "count",
          "limit",
          "skip"
        ]
      },
      "CrudRatePlanDtoOpenApi": {
        "type": "object",
        "properties": {
          "ratePlan": {
            "description": "rate plan",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5fae51c4fdff570029b147e8",
                    "description": "id"
                  },
                  "accountId": {
                    "type": "string",
                    "example": "5213a2d206112710005d96ff",
                    "description": "account id"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "independent"
                    ],
                    "example": "independent",
                    "description": "type"
                  },
                  "name": {
                    "type": "string",
                    "example": "My rate plan",
                    "description": "name"
                  },
                  "description": {
                    "type": "string",
                    "example": "My rate plan description",
                    "description": "description"
                  },
                  "cancellationPolicy": {
                    "nullable": true,
                    "enum": [
                      "strict",
                      "strict_60",
                      "strict_90",
                      "super_strict",
                      "moderate",
                      "semi_moderate",
                      "semi_flexible",
                      "firm",
                      "flex",
                      "free"
                    ],
                    "type": "string",
                    "example": "firm",
                    "description": "cancellationPolicy"
                  },
                  "cancellationFee": {
                    "nullable": true,
                    "enum": [
                      "FIRST_NIGHT",
                      "50%_TOTAL_PRICE",
                      "TOTAL_PRICE",
                      100,
                      50,
                      0
                    ],
                    "type": "string",
                    "example": 50,
                    "description": "cancellationFee"
                  },
                  "mealPlans": {
                    "type": "array",
                    "items": {
                      "type": "number",
                      "enum": [
                        [
                          "breakfast",
                          "lunch",
                          "dinner",
                          "all_inclusive"
                        ]
                      ]
                    },
                    "example": [
                      "all_inclusive"
                    ],
                    "description": "mealPlans"
                  },
                  "availabilityRules": {
                    "example": {
                      "advanceNotice": 10,
                      "bookingWindow": 20
                    },
                    "description": "availabilityRules",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "advanceNotice": {
                            "type": "number",
                            "description": "advance notice",
                            "example": 1
                          },
                          "bookingWindow": {
                            "type": "number",
                            "description": "booking window",
                            "example": 3
                          },
                          "dateRange": {
                            "description": "date range",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "to": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "to date"
                                  },
                                  "from": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "from date"
                                  },
                                  "repeatedDays": {
                                    "description": "repeated days",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "0": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          },
                                          "1": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          },
                                          "2": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          },
                                          "3": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          },
                                          "4": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          },
                                          "5": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          },
                                          "6": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "0",
                                          "1",
                                          "2",
                                          "3",
                                          "4",
                                          "5",
                                          "6"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "to",
                                  "from",
                                  "repeatedDays"
                                ]
                              }
                            ]
                          },
                          "restrictedDates": {
                            "description": "restricted dates",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "pricingModel": {
                    "type": "string",
                    "enum": [
                      "nightly_rate"
                    ],
                    "example": "nightly_rate",
                    "description": "pricingModel"
                  },
                  "channelSync": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "bookingCom",
                        "manual_reservations",
                        "booking_engine"
                      ]
                    },
                    "example": [
                      "bookingCom"
                    ],
                    "description": "channelSync"
                  },
                  "active": {
                    "type": "boolean",
                    "example": true,
                    "description": "is active"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2023-12-01T04:09:27.335Z",
                    "description": "createdAt"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2023-12-01T04:09:27.335Z",
                    "description": "updatedAt"
                  }
                },
                "required": [
                  "_id",
                  "accountId",
                  "type",
                  "name",
                  "pricingModel",
                  "active",
                  "createdAt",
                  "updatedAt"
                ]
              }
            ]
          },
          "requestId": {
            "type": "string",
            "description": "request id"
          }
        },
        "required": [
          "ratePlan",
          "requestId"
        ]
      },
      "NotFoundRespExampleDto": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "default": {
              "code": "RATE_PLAN_NOT_FOUND",
              "data": "RatePlan not found",
              "message": "Not Found",
              "status": 404
            }
          }
        },
        "required": [
          "error"
        ]
      },
      "BasicRatePlanAvailabilityRules": {
        "type": "object",
        "properties": {
          "advanceNotice": {
            "type": "number",
            "description": "advance notice",
            "example": 1
          },
          "bookingWindow": {
            "type": "number",
            "description": "booking window",
            "example": 3
          }
        }
      },
      "CrudCreateRatePlanOpenAPIDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Rate plan name.",
            "example": "My RatePlan"
          },
          "description": {
            "type": "string",
            "description": "Describe the rate plan.",
            "example": "Rate plan description."
          },
          "type": {
            "type": "string",
            "enum": [
              "independent"
            ],
            "description": "Rate plan type.",
            "example": "independent"
          },
          "pricingModel": {
            "type": "string",
            "nullable": true,
            "enum": [
              "nightly_rate"
            ],
            "description": "The pricing model.",
            "example": "nightly_rate"
          },
          "cancellationPolicy": {
            "nullable": true,
            "enum": [
              "strict",
              "strict_60",
              "strict_90",
              "super_strict",
              "moderate",
              "semi_moderate",
              "semi_flexible",
              "firm",
              "flex",
              "free",
              "special",
              "direct_reservation_long_stay"
            ],
            "type": "string",
            "example": "strict",
            "description": "The rate plan cancellation policy."
          },
          "cancellationFee": {
            "nullable": true,
            "enum": [
              100,
              50,
              0
            ],
            "type": "number",
            "example": 100,
            "description": "The rate plan cancellation fee."
          },
          "channelSync": {
            "default": [],
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "bookingCom",
                "manual_reservations",
                "booking_engine"
              ]
            },
            "example": [
              "bookingCom"
            ],
            "description": "The channel to which the rate plan applies."
          },
          "mealPlans": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "breakfast",
                "lunch",
                "dinner",
                "all_inclusive"
              ]
            },
            "example": [
              "dinner",
              "lunch"
            ],
            "description": "Rate plan meal plans."
          },
          "availabilityRules": {
            "description": "Rate plan availability rules.n",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "advanceNotice": {
                    "type": "number",
                    "description": "advance notice",
                    "example": 1
                  },
                  "bookingWindow": {
                    "type": "number",
                    "description": "booking window",
                    "example": 3
                  }
                }
              }
            ]
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "SubProperty": {
        "type": "object",
        "properties": {
          "subPropertyName": {
            "items": {
              "type": "array"
            },
            "type": "array"
          }
        }
      },
      "ErrorDetails": {
        "type": "object",
        "properties": {
          "propertyName": {
            "items": {
              "type": "array"
            },
            "type": "array"
          },
          "property2Name": {
            "type": "object",
            "properties": {
              "subPropertyName": {
                "items": {
                  "type": "array"
                },
                "type": "array"
              }
            }
          },
          "property3Name": {
            "nullable": true,
            "example": [
              null,
              [
                "\"property3Name[1]\" does not match any of the allowed types"
              ]
            ],
            "items": {
              "type": "array"
            },
            "type": "array"
          }
        }
      },
      "ValidationFailedRespExampleDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "object",
            "default": 400,
            "enum": [
              "CONTINUE",
              "SWITCHING_PROTOCOLS",
              "PROCESSING",
              "EARLYHINTS",
              "OK",
              "CREATED",
              "ACCEPTED",
              "NON_AUTHORITATIVE_INFORMATION",
              "NO_CONTENT",
              "RESET_CONTENT",
              "PARTIAL_CONTENT",
              "AMBIGUOUS",
              "MOVED_PERMANENTLY",
              "FOUND",
              "SEE_OTHER",
              "NOT_MODIFIED",
              "TEMPORARY_REDIRECT",
              "PERMANENT_REDIRECT",
              "BAD_REQUEST",
              "UNAUTHORIZED",
              "PAYMENT_REQUIRED",
              "FORBIDDEN",
              "NOT_FOUND",
              "METHOD_NOT_ALLOWED",
              "NOT_ACCEPTABLE",
              "PROXY_AUTHENTICATION_REQUIRED",
              "REQUEST_TIMEOUT",
              "CONFLICT",
              "GONE",
              "LENGTH_REQUIRED",
              "PRECONDITION_FAILED",
              "PAYLOAD_TOO_LARGE",
              "URI_TOO_LONG",
              "UNSUPPORTED_MEDIA_TYPE",
              "REQUESTED_RANGE_NOT_SATISFIABLE",
              "EXPECTATION_FAILED",
              "I_AM_A_TEAPOT",
              "MISDIRECTED",
              "UNPROCESSABLE_ENTITY",
              "FAILED_DEPENDENCY",
              "PRECONDITION_REQUIRED",
              "TOO_MANY_REQUESTS",
              "INTERNAL_SERVER_ERROR",
              "NOT_IMPLEMENTED",
              "BAD_GATEWAY",
              "SERVICE_UNAVAILABLE",
              "GATEWAY_TIMEOUT",
              "HTTP_VERSION_NOT_SUPPORTED"
            ],
            "example": 400
          },
          "code": {
            "type": "object",
            "default": "VALIDATION_FAILED",
            "example": "VALIDATION_FAILED"
          },
          "message": {
            "type": "object",
            "default": "Bad Request",
            "example": "Bad Request"
          },
          "error": {
            "default": {},
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "propertyName": {
                    "items": {
                      "type": "array"
                    },
                    "type": "array"
                  },
                  "property2Name": {
                    "type": "object",
                    "properties": {
                      "subPropertyName": {
                        "items": {
                          "type": "array"
                        },
                        "type": "array"
                      }
                    }
                  },
                  "property3Name": {
                    "nullable": true,
                    "example": [
                      null,
                      [
                        "\"property3Name[1]\" does not match any of the allowed types"
                      ]
                    ],
                    "items": {
                      "type": "array"
                    },
                    "type": "array"
                  }
                }
              }
            ]
          }
        },
        "required": [
          "status",
          "code",
          "message",
          "error"
        ]
      },
      "CrudCreateOrUpdateRatePlanOpenAPIDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Rate plan name.",
            "example": "My RatePlan"
          },
          "description": {
            "type": "string",
            "description": "Describe the rate plan.",
            "example": "Rate plan description."
          },
          "type": {
            "type": "string",
            "enum": [
              "independent"
            ],
            "description": "Rate plan type.",
            "example": "independent"
          },
          "pricingModel": {
            "type": "string",
            "nullable": true,
            "enum": [
              "nightly_rate"
            ],
            "description": "The pricing model.",
            "example": "nightly_rate"
          },
          "cancellationPolicy": {
            "nullable": true,
            "enum": [
              "strict",
              "strict_60",
              "strict_90",
              "super_strict",
              "moderate",
              "semi_moderate",
              "semi_flexible",
              "firm",
              "flex",
              "free",
              "special",
              "direct_reservation_long_stay"
            ],
            "type": "string",
            "example": "strict",
            "description": "The rate plan cancellation policy."
          },
          "cancellationFee": {
            "nullable": true,
            "enum": [
              100,
              50,
              0
            ],
            "type": "number",
            "example": 100,
            "description": "The rate plan cancellation fee."
          },
          "channelSync": {
            "default": [],
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "bookingCom",
                "manual_reservations",
                "booking_engine"
              ]
            },
            "example": [
              "bookingCom"
            ],
            "description": "The channel to which the rate plan applies."
          },
          "mealPlans": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "breakfast",
                "lunch",
                "dinner",
                "all_inclusive"
              ]
            },
            "example": [
              "dinner",
              "lunch"
            ],
            "description": "Rate plan meal plans."
          },
          "availabilityRules": {
            "description": "Rate plan availability rules.n",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "advanceNotice": {
                    "type": "number",
                    "description": "advance notice",
                    "example": 1
                  },
                  "bookingWindow": {
                    "type": "number",
                    "description": "booking window",
                    "example": 3
                  }
                }
              }
            ]
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "Indicates whether the rate plan is active or not.",
            "example": true
          }
        },
        "required": [
          "name",
          "type",
          "active"
        ]
      },
      "CrudAssignListings": {
        "type": "object",
        "properties": {
          "listingIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "listingIds"
        ]
      },
      "RatePlanByListingDtoListOpenApi": {
        "type": "object",
        "properties": {
          "listingId": {
            "type": "string",
            "description": "Guesty property ID."
          },
          "ratePlans": {
            "description": "Rate Plans List",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "5fae51c4fdff570029b147e8",
                  "description": "id"
                },
                "accountId": {
                  "type": "string",
                  "example": "5213a2d206112710005d96ff",
                  "description": "account id"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "independent"
                  ],
                  "example": "independent",
                  "description": "type"
                },
                "name": {
                  "type": "string",
                  "example": "My rate plan",
                  "description": "name"
                },
                "description": {
                  "type": "string",
                  "example": "My rate plan description",
                  "description": "description"
                },
                "cancellationPolicy": {
                  "nullable": true,
                  "enum": [
                    "strict",
                    "strict_60",
                    "strict_90",
                    "super_strict",
                    "moderate",
                    "semi_moderate",
                    "semi_flexible",
                    "firm",
                    "flex",
                    "free"
                  ],
                  "type": "string",
                  "example": "firm",
                  "description": "cancellationPolicy"
                },
                "cancellationFee": {
                  "nullable": true,
                  "enum": [
                    "FIRST_NIGHT",
                    "50%_TOTAL_PRICE",
                    "TOTAL_PRICE",
                    100,
                    50,
                    0
                  ],
                  "type": "string",
                  "example": 50,
                  "description": "cancellationFee"
                },
                "mealPlans": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "enum": [
                      [
                        "breakfast",
                        "lunch",
                        "dinner",
                        "all_inclusive"
                      ]
                    ]
                  },
                  "example": [
                    "all_inclusive"
                  ],
                  "description": "mealPlans"
                },
                "availabilityRules": {
                  "example": {
                    "advanceNotice": 10,
                    "bookingWindow": 20
                  },
                  "description": "availabilityRules",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "advanceNotice": {
                          "type": "number",
                          "description": "advance notice",
                          "example": 1
                        },
                        "bookingWindow": {
                          "type": "number",
                          "description": "booking window",
                          "example": 3
                        },
                        "dateRange": {
                          "description": "date range",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "to": {
                                  "format": "date-time",
                                  "type": "string",
                                  "description": "to date"
                                },
                                "from": {
                                  "format": "date-time",
                                  "type": "string",
                                  "description": "from date"
                                },
                                "repeatedDays": {
                                  "description": "repeated days",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "0": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        },
                                        "1": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        },
                                        "2": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        },
                                        "3": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        },
                                        "4": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        },
                                        "5": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        },
                                        "6": {
                                          "type": "object",
                                          "properties": {
                                            "available": {
                                              "type": "boolean",
                                              "default": true
                                            }
                                          },
                                          "required": [
                                            "available"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "0",
                                        "1",
                                        "2",
                                        "3",
                                        "4",
                                        "5",
                                        "6"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "to",
                                "from",
                                "repeatedDays"
                              ]
                            }
                          ]
                        },
                        "restrictedDates": {
                          "description": "restricted dates",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  ]
                },
                "pricingModel": {
                  "type": "string",
                  "enum": [
                    "nightly_rate"
                  ],
                  "example": "nightly_rate",
                  "description": "pricingModel"
                },
                "channelSync": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "bookingCom",
                      "manual_reservations",
                      "booking_engine"
                    ]
                  },
                  "example": [
                    "bookingCom"
                  ],
                  "description": "channelSync"
                },
                "active": {
                  "type": "boolean",
                  "example": true,
                  "description": "is active"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string",
                  "example": "2023-12-01T04:09:27.335Z",
                  "description": "createdAt"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string",
                  "example": "2023-12-01T04:09:27.335Z",
                  "description": "updatedAt"
                }
              },
              "required": [
                "_id",
                "accountId",
                "type",
                "name",
                "pricingModel",
                "active",
                "createdAt",
                "updatedAt"
              ]
            }
          },
          "requestId": {
            "type": "string",
            "description": "The request ID."
          },
          "count": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          },
          "skip": {
            "type": "number"
          }
        },
        "required": [
          "listingId",
          "ratePlans",
          "requestId",
          "count",
          "limit",
          "skip"
        ]
      },
      "AriCalendarDayRespDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "object",
            "example": "2023-11-27",
            "description": "day date"
          },
          "price": {
            "type": "object",
            "example": 250,
            "description": "day price"
          },
          "minNights": {
            "type": "number",
            "example": 1,
            "description": "day min nights"
          },
          "maxNights": {
            "type": "number",
            "example": 45,
            "description": "day max nights"
          },
          "cta": {
            "type": "boolean",
            "example": false,
            "description": "cta"
          },
          "ctd": {
            "type": "boolean",
            "example": false,
            "description": "ctd"
          },
          "allotment": {
            "type": "number",
            "example": 3,
            "description": "allotment"
          },
          "closed": {
            "type": "boolean",
            "example": false,
            "description": "is day closed"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2023-11-27",
            "description": "cteated at"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2023-11-27",
            "description": "udated at"
          }
        },
        "required": [
          "date",
          "price"
        ]
      },
      "AriCalendarRespDtoOpenApi": {
        "type": "object",
        "properties": {
          "ratePlan": {
            "description": "rate plan id",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5fae51c4fdff570029b147e8",
                    "description": "id"
                  },
                  "accountId": {
                    "type": "string",
                    "example": "5213a2d206112710005d96ff",
                    "description": "account id"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "independent"
                    ],
                    "example": "independent",
                    "description": "type"
                  },
                  "name": {
                    "type": "string",
                    "example": "My rate plan",
                    "description": "name"
                  },
                  "description": {
                    "type": "string",
                    "example": "My rate plan description",
                    "description": "description"
                  },
                  "cancellationPolicy": {
                    "nullable": true,
                    "enum": [
                      "strict",
                      "strict_60",
                      "strict_90",
                      "super_strict",
                      "moderate",
                      "semi_moderate",
                      "semi_flexible",
                      "firm",
                      "flex",
                      "free"
                    ],
                    "type": "string",
                    "example": "firm",
                    "description": "cancellationPolicy"
                  },
                  "cancellationFee": {
                    "nullable": true,
                    "enum": [
                      "FIRST_NIGHT",
                      "50%_TOTAL_PRICE",
                      "TOTAL_PRICE",
                      100,
                      50,
                      0
                    ],
                    "type": "string",
                    "example": 50,
                    "description": "cancellationFee"
                  },
                  "mealPlans": {
                    "type": "array",
                    "items": {
                      "type": "number",
                      "enum": [
                        [
                          "breakfast",
                          "lunch",
                          "dinner",
                          "all_inclusive"
                        ]
                      ]
                    },
                    "example": [
                      "all_inclusive"
                    ],
                    "description": "mealPlans"
                  },
                  "availabilityRules": {
                    "example": {
                      "advanceNotice": 10,
                      "bookingWindow": 20
                    },
                    "description": "availabilityRules",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "advanceNotice": {
                            "type": "number",
                            "description": "advance notice",
                            "example": 1
                          },
                          "bookingWindow": {
                            "type": "number",
                            "description": "booking window",
                            "example": 3
                          },
                          "dateRange": {
                            "description": "date range",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "to": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "to date"
                                  },
                                  "from": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "from date"
                                  },
                                  "repeatedDays": {
                                    "description": "repeated days",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "0": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          },
                                          "1": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          },
                                          "2": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          },
                                          "3": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          },
                                          "4": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          },
                                          "5": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          },
                                          "6": {
                                            "type": "object",
                                            "properties": {
                                              "available": {
                                                "type": "boolean",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "available"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "0",
                                          "1",
                                          "2",
                                          "3",
                                          "4",
                                          "5",
                                          "6"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "to",
                                  "from",
                                  "repeatedDays"
                                ]
                              }
                            ]
                          },
                          "restrictedDates": {
                            "description": "restricted dates",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "pricingModel": {
                    "type": "string",
                    "enum": [
                      "nightly_rate"
                    ],
                    "example": "nightly_rate",
                    "description": "pricingModel"
                  },
                  "channelSync": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "bookingCom",
                        "manual_reservations",
                        "booking_engine"
                      ]
                    },
                    "example": [
                      "bookingCom"
                    ],
                    "description": "channelSync"
                  },
                  "active": {
                    "type": "boolean",
                    "example": true,
                    "description": "is active"
                  },
                  "createdAt": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2023-12-01T04:09:27.335Z",
                    "description": "createdAt"
                  },
                  "updatedAt": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2023-12-01T04:09:27.335Z",
                    "description": "updatedAt"
                  }
                },
                "required": [
                  "_id",
                  "accountId",
                  "type",
                  "name",
                  "pricingModel",
                  "active",
                  "createdAt",
                  "updatedAt"
                ]
              }
            ]
          },
          "days": {
            "description": "calendar days",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "object",
                  "example": "2023-11-27",
                  "description": "day date"
                },
                "price": {
                  "type": "object",
                  "example": 250,
                  "description": "day price"
                },
                "minNights": {
                  "type": "number",
                  "example": 1,
                  "description": "day min nights"
                },
                "maxNights": {
                  "type": "number",
                  "example": 45,
                  "description": "day max nights"
                },
                "cta": {
                  "type": "boolean",
                  "example": false,
                  "description": "cta"
                },
                "ctd": {
                  "type": "boolean",
                  "example": false,
                  "description": "ctd"
                },
                "allotment": {
                  "type": "number",
                  "example": 3,
                  "description": "allotment"
                },
                "closed": {
                  "type": "boolean",
                  "example": false,
                  "description": "is day closed"
                },
                "createdAt": {
                  "format": "date-time",
                  "type": "string",
                  "example": "2023-11-27",
                  "description": "cteated at"
                },
                "updatedAt": {
                  "format": "date-time",
                  "type": "string",
                  "example": "2023-11-27",
                  "description": "udated at"
                }
              },
              "required": [
                "date",
                "price"
              ]
            }
          },
          "listingId": {
            "type": "string",
            "description": "listing id"
          },
          "requestId": {
            "type": "string",
            "description": "request id"
          }
        },
        "required": [
          "ratePlan",
          "days",
          "listingId",
          "requestId"
        ]
      },
      "UpsertAriCalendarDto": {
        "type": "object",
        "properties": {
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "Period start date"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "Period end date"
          },
          "price": {
            "type": "number",
            "description": "Price for the period."
          },
          "minNights": {
            "type": "number",
            "description": "Minimum stay length."
          },
          "maxNights": {
            "type": "number",
            "description": "Maximum stay length."
          },
          "allotment": {
            "type": "number",
            "description": "Actual availability at the property."
          },
          "cta": {
            "type": "boolean",
            "description": "Closed to check-in."
          },
          "ctd": {
            "type": "boolean",
            "description": "Closed to check-out."
          },
          "closed": {
            "type": "boolean",
            "description": "is closed"
          }
        },
        "required": [
          "startDate",
          "endDate"
        ]
      },
      "UpsertAriCalendarRespDtoOpenApi": {
        "type": "object",
        "properties": {
          "ratePlanId": {
            "type": "string",
            "description": "rate plan id"
          },
          "listingId": {
            "type": "string",
            "description": "listing id"
          },
          "requestId": {
            "type": "string",
            "description": "request id"
          }
        },
        "required": [
          "ratePlanId",
          "listingId",
          "requestId"
        ]
      },
      "RestrictionDto": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Is the rule active?",
            "example": false
          },
          "checkInWeekDays": {
            "description": "Check-in weekdays",
            "example": [
              1,
              3,
              5
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "checkOutWeekDays": {
            "description": "Check-out weekdays",
            "example": [
              1,
              3,
              4,
              5
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "SeasonalRuleDto": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "description": "ID of the seasonal",
            "example": "5c07a535a9e7a8003cf0e43c"
          },
          "name": {
            "type": "string",
            "description": "Name of the rule",
            "example": "event name"
          },
          "from": {
            "type": "object",
            "description": "Start date",
            "example": "2023-11-30"
          },
          "to": {
            "type": "object",
            "description": "End date",
            "example": "2023-12-01"
          },
          "restriction": {
            "description": "Restrictions",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean",
                    "description": "Is the rule active?",
                    "example": false
                  },
                  "checkInWeekDays": {
                    "description": "Check-in weekdays",
                    "example": [
                      1,
                      3,
                      5
                    ],
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  },
                  "checkOutWeekDays": {
                    "description": "Check-out weekdays",
                    "example": [
                      1,
                      3,
                      4,
                      5
                    ],
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            ]
          },
          "adjustmentPercentage": {
            "type": "number",
            "description": "Adjustment percentage",
            "example": 3
          },
          "minNights": {
            "type": "number",
            "description": "Minimum nights",
            "example": 1
          },
          "isAnnual": {
            "type": "boolean",
            "description": "Is it annual?",
            "example": false
          },
          "weekDays": {
            "description": "Weekdays",
            "example": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "EventsRuleDto": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "description": "ID of the events",
            "example": "5c07a535a9e7a8003cf0e43c"
          },
          "name": {
            "type": "string",
            "description": "Name of the rule",
            "example": "event name"
          },
          "from": {
            "type": "object",
            "description": "Start date",
            "example": "2023-11-30"
          },
          "to": {
            "type": "object",
            "description": "End date",
            "example": "2023-12-01"
          },
          "restriction": {
            "description": "Restrictions",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean",
                    "description": "Is the rule active?",
                    "example": false
                  },
                  "checkInWeekDays": {
                    "description": "Check-in weekdays",
                    "example": [
                      1,
                      3,
                      5
                    ],
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  },
                  "checkOutWeekDays": {
                    "description": "Check-out weekdays",
                    "example": [
                      1,
                      3,
                      4,
                      5
                    ],
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            ]
          },
          "adjustmentPercentage": {
            "type": "number",
            "description": "Adjustment percentage",
            "example": 3
          },
          "minNights": {
            "type": "number",
            "description": "Minimum nights",
            "example": 1
          },
          "isAnnual": {
            "type": "boolean",
            "description": "Is it annual?",
            "example": false
          }
        }
      },
      "UpcomingAvailabilityRuleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the rule",
            "example": "upcoming availability rule name"
          },
          "fromDays": {
            "type": "number",
            "description": "Starting days",
            "example": 1
          },
          "toDays": {
            "type": "number",
            "description": "Ending days",
            "example": 3
          },
          "weekDays": {
            "description": "Weekdays",
            "example": [
              1,
              2,
              3,
              5
            ],
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "adjustmentPercentage": {
            "type": "number",
            "description": "Adjustment percentage",
            "example": 3
          },
          "minNights": {
            "type": "number",
            "description": "Minimum nights",
            "example": 4
          }
        }
      },
      "CustomizedGapRuleDto": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "description": "ID of the customized gap",
            "example": "5c07a535a9e7a8003cf0e43c"
          },
          "name": {
            "type": "string",
            "description": "Name of the rule",
            "example": "gap rule name"
          },
          "fromDays": {
            "type": "number",
            "description": "Starting days",
            "example": 2
          },
          "toDays": {
            "type": "number",
            "description": "Ending days",
            "example": 5
          },
          "adjustmentPercentage": {
            "type": "number",
            "description": "Adjustment percentage",
            "example": 4
          },
          "maxGap": {
            "type": "number",
            "description": "Maximum gap",
            "example": 3
          }
        }
      },
      "LengthDto": {
        "type": "object",
        "properties": {
          "from": {
            "type": "number",
            "description": "Starting length",
            "example": "2023-11-30"
          },
          "to": {
            "type": "number",
            "description": "Ending length",
            "example": "2023-12-03"
          }
        }
      },
      "LengthOfStayRuleDto": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "description": "ID of the length of stay",
            "example": "5c07a535a9e7a8003cf0e43c"
          },
          "length": {
            "description": "Length details",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "number",
                    "description": "Starting length",
                    "example": "2023-11-30"
                  },
                  "to": {
                    "type": "number",
                    "description": "Ending length",
                    "example": "2023-12-03"
                  }
                }
              }
            ]
          },
          "adjustmentPercentage": {
            "type": "number",
            "description": "Adjustment percentage",
            "example": 1
          },
          "type": {
            "enum": [
              "single",
              "range"
            ],
            "type": "string",
            "description": "Type of length",
            "example": "range"
          }
        }
      },
      "RepeatedDayRuleDto": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "description": "ID of the repeated day",
            "example": "5c07a535a9e7a8003cf0e43c"
          },
          "adjustmentPercentage": {
            "type": "number",
            "description": "Adjustment percentage",
            "example": 1
          },
          "minNights": {
            "type": "number",
            "description": "Minimum nights",
            "example": 2
          },
          "cta": {
            "type": "boolean",
            "description": "CTA flag",
            "example": false
          },
          "ctd": {
            "type": "boolean",
            "description": "CTD flag",
            "example": true
          }
        }
      },
      "RepeatedDaysRules1": {
        "type": "object",
        "properties": {
          "0": {
            "description": "Rule applied to Sundays",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "object",
                    "description": "ID of the repeated day",
                    "example": "5c07a535a9e7a8003cf0e43c"
                  },
                  "adjustmentPercentage": {
                    "type": "number",
                    "description": "Adjustment percentage",
                    "example": 1
                  },
                  "minNights": {
                    "type": "number",
                    "description": "Minimum nights",
                    "example": 2
                  },
                  "cta": {
                    "type": "boolean",
                    "description": "CTA flag",
                    "example": false
                  },
                  "ctd": {
                    "type": "boolean",
                    "description": "CTD flag",
                    "example": true
                  }
                }
              }
            ]
          },
          "1": {
            "description": "Rule applied to Mondays",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "object",
                    "description": "ID of the repeated day",
                    "example": "5c07a535a9e7a8003cf0e43c"
                  },
                  "adjustmentPercentage": {
                    "type": "number",
                    "description": "Adjustment percentage",
                    "example": 1
                  },
                  "minNights": {
                    "type": "number",
                    "description": "Minimum nights",
                    "example": 2
                  },
                  "cta": {
                    "type": "boolean",
                    "description": "CTA flag",
                    "example": false
                  },
                  "ctd": {
                    "type": "boolean",
                    "description": "CTD flag",
                    "example": true
                  }
                }
              }
            ]
          },
          "2": {
            "description": "Rule applied to Tuesdays",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "object",
                    "description": "ID of the repeated day",
                    "example": "5c07a535a9e7a8003cf0e43c"
                  },
                  "adjustmentPercentage": {
                    "type": "number",
                    "description": "Adjustment percentage",
                    "example": 1
                  },
                  "minNights": {
                    "type": "number",
                    "description": "Minimum nights",
                    "example": 2
                  },
                  "cta": {
                    "type": "boolean",
                    "description": "CTA flag",
                    "example": false
                  },
                  "ctd": {
                    "type": "boolean",
                    "description": "CTD flag",
                    "example": true
                  }
                }
              }
            ]
          },
          "3": {
            "description": "Rule applied to Wednesdays",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "object",
                    "description": "ID of the repeated day",
                    "example": "5c07a535a9e7a8003cf0e43c"
                  },
                  "adjustmentPercentage": {
                    "type": "number",
                    "description": "Adjustment percentage",
                    "example": 1
                  },
                  "minNights": {
                    "type": "number",
                    "description": "Minimum nights",
                    "example": 2
                  },
                  "cta": {
                    "type": "boolean",
                    "description": "CTA flag",
                    "example": false
                  },
                  "ctd": {
                    "type": "boolean",
                    "description": "CTD flag",
                    "example": true
                  }
                }
              }
            ]
          },
          "4": {
            "description": "Rule applied to Thursdays",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "object",
                    "description": "ID of the repeated day",
                    "example": "5c07a535a9e7a8003cf0e43c"
                  },
                  "adjustmentPercentage": {
                    "type": "number",
                    "description": "Adjustment percentage",
                    "example": 1
                  },
                  "minNights": {
                    "type": "number",
                    "description": "Minimum nights",
                    "example": 2
                  },
                  "cta": {
                    "type": "boolean",
                    "description": "CTA flag",
                    "example": false
                  },
                  "ctd": {
                    "type": "boolean",
                    "description": "CTD flag",
                    "example": true
                  }
                }
              }
            ]
          },
          "5": {
            "description": "Rule applied to Fridays",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "object",
                    "description": "ID of the repeated day",
                    "example": "5c07a535a9e7a8003cf0e43c"
                  },
                  "adjustmentPercentage": {
                    "type": "number",
                    "description": "Adjustment percentage",
                    "example": 1
                  },
                  "minNights": {
                    "type": "number",
                    "description": "Minimum nights",
                    "example": 2
                  },
                  "cta": {
                    "type": "boolean",
                    "description": "CTA flag",
                    "example": false
                  },
                  "ctd": {
                    "type": "boolean",
                    "description": "CTD flag",
                    "example": true
                  }
                }
              }
            ]
          },
          "6": {
            "description": "Rule applied to Saturdays",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "object",
                    "description": "ID of the repeated day",
                    "example": "5c07a535a9e7a8003cf0e43c"
                  },
                  "adjustmentPercentage": {
                    "type": "number",
                    "description": "Adjustment percentage",
                    "example": 1
                  },
                  "minNights": {
                    "type": "number",
                    "description": "Minimum nights",
                    "example": 2
                  },
                  "cta": {
                    "type": "boolean",
                    "description": "CTA flag",
                    "example": false
                  },
                  "ctd": {
                    "type": "boolean",
                    "description": "CTD flag",
                    "example": true
                  }
                }
              }
            ]
          }
        }
      },
      "RulesDto": {
        "type": "object",
        "properties": {
          "seasonal": {
            "description": "Seasonal rules",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "object",
                  "description": "ID of the seasonal",
                  "example": "5c07a535a9e7a8003cf0e43c"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the rule",
                  "example": "event name"
                },
                "from": {
                  "type": "object",
                  "description": "Start date",
                  "example": "2023-11-30"
                },
                "to": {
                  "type": "object",
                  "description": "End date",
                  "example": "2023-12-01"
                },
                "restriction": {
                  "description": "Restrictions",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is the rule active?",
                          "example": false
                        },
                        "checkInWeekDays": {
                          "description": "Check-in weekdays",
                          "example": [
                            1,
                            3,
                            5
                          ],
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        },
                        "checkOutWeekDays": {
                          "description": "Check-out weekdays",
                          "example": [
                            1,
                            3,
                            4,
                            5
                          ],
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  ]
                },
                "adjustmentPercentage": {
                  "type": "number",
                  "description": "Adjustment percentage",
                  "example": 3
                },
                "minNights": {
                  "type": "number",
                  "description": "Minimum nights",
                  "example": 1
                },
                "isAnnual": {
                  "type": "boolean",
                  "description": "Is it annual?",
                  "example": false
                },
                "weekDays": {
                  "description": "Weekdays",
                  "example": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                  ],
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "events": {
            "description": "Events rules",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "object",
                  "description": "ID of the events",
                  "example": "5c07a535a9e7a8003cf0e43c"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the rule",
                  "example": "event name"
                },
                "from": {
                  "type": "object",
                  "description": "Start date",
                  "example": "2023-11-30"
                },
                "to": {
                  "type": "object",
                  "description": "End date",
                  "example": "2023-12-01"
                },
                "restriction": {
                  "description": "Restrictions",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is the rule active?",
                          "example": false
                        },
                        "checkInWeekDays": {
                          "description": "Check-in weekdays",
                          "example": [
                            1,
                            3,
                            5
                          ],
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        },
                        "checkOutWeekDays": {
                          "description": "Check-out weekdays",
                          "example": [
                            1,
                            3,
                            4,
                            5
                          ],
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  ]
                },
                "adjustmentPercentage": {
                  "type": "number",
                  "description": "Adjustment percentage",
                  "example": 3
                },
                "minNights": {
                  "type": "number",
                  "description": "Minimum nights",
                  "example": 1
                },
                "isAnnual": {
                  "type": "boolean",
                  "description": "Is it annual?",
                  "example": false
                }
              }
            }
          },
          "upcomingAvailability": {
            "description": "Upcoming availability rules",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the rule",
                  "example": "upcoming availability rule name"
                },
                "fromDays": {
                  "type": "number",
                  "description": "Starting days",
                  "example": 1
                },
                "toDays": {
                  "type": "number",
                  "description": "Ending days",
                  "example": 3
                },
                "weekDays": {
                  "description": "Weekdays",
                  "example": [
                    1,
                    2,
                    3,
                    5
                  ],
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                },
                "adjustmentPercentage": {
                  "type": "number",
                  "description": "Adjustment percentage",
                  "example": 3
                },
                "minNights": {
                  "type": "number",
                  "description": "Minimum nights",
                  "example": 4
                }
              }
            }
          },
          "customizedGaps": {
            "description": "Customized gaps rules",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "object",
                  "description": "ID of the customized gap",
                  "example": "5c07a535a9e7a8003cf0e43c"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the rule",
                  "example": "gap rule name"
                },
                "fromDays": {
                  "type": "number",
                  "description": "Starting days",
                  "example": 2
                },
                "toDays": {
                  "type": "number",
                  "description": "Ending days",
                  "example": 5
                },
                "adjustmentPercentage": {
                  "type": "number",
                  "description": "Adjustment percentage",
                  "example": 4
                },
                "maxGap": {
                  "type": "number",
                  "description": "Maximum gap",
                  "example": 3
                }
              }
            }
          },
          "lengthOfStay": {
            "description": "Length of stay rules",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "object",
                  "description": "ID of the length of stay",
                  "example": "5c07a535a9e7a8003cf0e43c"
                },
                "length": {
                  "description": "Length details",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "number",
                          "description": "Starting length",
                          "example": "2023-11-30"
                        },
                        "to": {
                          "type": "number",
                          "description": "Ending length",
                          "example": "2023-12-03"
                        }
                      }
                    }
                  ]
                },
                "adjustmentPercentage": {
                  "type": "number",
                  "description": "Adjustment percentage",
                  "example": 1
                },
                "type": {
                  "enum": [
                    "single",
                    "range"
                  ],
                  "type": "string",
                  "description": "Type of length",
                  "example": "range"
                }
              }
            }
          },
          "repeatedDays": {
            "description": "Repeated days rules",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "0": {
                    "description": "Rule applied to Sundays",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "object",
                            "description": "ID of the repeated day",
                            "example": "5c07a535a9e7a8003cf0e43c"
                          },
                          "adjustmentPercentage": {
                            "type": "number",
                            "description": "Adjustment percentage",
                            "example": 1
                          },
                          "minNights": {
                            "type": "number",
                            "description": "Minimum nights",
                            "example": 2
                          },
                          "cta": {
                            "type": "boolean",
                            "description": "CTA flag",
                            "example": false
                          },
                          "ctd": {
                            "type": "boolean",
                            "description": "CTD flag",
                            "example": true
                          }
                        }
                      }
                    ]
                  },
                  "1": {
                    "description": "Rule applied to Mondays",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "object",
                            "description": "ID of the repeated day",
                            "example": "5c07a535a9e7a8003cf0e43c"
                          },
                          "adjustmentPercentage": {
                            "type": "number",
                            "description": "Adjustment percentage",
                            "example": 1
                          },
                          "minNights": {
                            "type": "number",
                            "description": "Minimum nights",
                            "example": 2
                          },
                          "cta": {
                            "type": "boolean",
                            "description": "CTA flag",
                            "example": false
                          },
                          "ctd": {
                            "type": "boolean",
                            "description": "CTD flag",
                            "example": true
                          }
                        }
                      }
                    ]
                  },
                  "2": {
                    "description": "Rule applied to Tuesdays",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "object",
                            "description": "ID of the repeated day",
                            "example": "5c07a535a9e7a8003cf0e43c"
                          },
                          "adjustmentPercentage": {
                            "type": "number",
                            "description": "Adjustment percentage",
                            "example": 1
                          },
                          "minNights": {
                            "type": "number",
                            "description": "Minimum nights",
                            "example": 2
                          },
                          "cta": {
                            "type": "boolean",
                            "description": "CTA flag",
                            "example": false
                          },
                          "ctd": {
                            "type": "boolean",
                            "description": "CTD flag",
                            "example": true
                          }
                        }
                      }
                    ]
                  },
                  "3": {
                    "description": "Rule applied to Wednesdays",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "object",
                            "description": "ID of the repeated day",
                            "example": "5c07a535a9e7a8003cf0e43c"
                          },
                          "adjustmentPercentage": {
                            "type": "number",
                            "description": "Adjustment percentage",
                            "example": 1
                          },
                          "minNights": {
                            "type": "number",
                            "description": "Minimum nights",
                            "example": 2
                          },
                          "cta": {
                            "type": "boolean",
                            "description": "CTA flag",
                            "example": false
                          },
                          "ctd": {
                            "type": "boolean",
                            "description": "CTD flag",
                            "example": true
                          }
                        }
                      }
                    ]
                  },
                  "4": {
                    "description": "Rule applied to Thursdays",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "object",
                            "description": "ID of the repeated day",
                            "example": "5c07a535a9e7a8003cf0e43c"
                          },
                          "adjustmentPercentage": {
                            "type": "number",
                            "description": "Adjustment percentage",
                            "example": 1
                          },
                          "minNights": {
                            "type": "number",
                            "description": "Minimum nights",
                            "example": 2
                          },
                          "cta": {
                            "type": "boolean",
                            "description": "CTA flag",
                            "example": false
                          },
                          "ctd": {
                            "type": "boolean",
                            "description": "CTD flag",
                            "example": true
                          }
                        }
                      }
                    ]
                  },
                  "5": {
                    "description": "Rule applied to Fridays",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "object",
                            "description": "ID of the repeated day",
                            "example": "5c07a535a9e7a8003cf0e43c"
                          },
                          "adjustmentPercentage": {
                            "type": "number",
                            "description": "Adjustment percentage",
                            "example": 1
                          },
                          "minNights": {
                            "type": "number",
                            "description": "Minimum nights",
                            "example": 2
                          },
                          "cta": {
                            "type": "boolean",
                            "description": "CTA flag",
                            "example": false
                          },
                          "ctd": {
                            "type": "boolean",
                            "description": "CTD flag",
                            "example": true
                          }
                        }
                      }
                    ]
                  },
                  "6": {
                    "description": "Rule applied to Saturdays",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "object",
                            "description": "ID of the repeated day",
                            "example": "5c07a535a9e7a8003cf0e43c"
                          },
                          "adjustmentPercentage": {
                            "type": "number",
                            "description": "Adjustment percentage",
                            "example": 1
                          },
                          "minNights": {
                            "type": "number",
                            "description": "Minimum nights",
                            "example": 2
                          },
                          "cta": {
                            "type": "boolean",
                            "description": "CTA flag",
                            "example": false
                          },
                          "ctd": {
                            "type": "boolean",
                            "description": "CTD flag",
                            "example": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      "RateStrategyDto": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "object",
            "description": "ID of the strategy",
            "example": "5c07a535a9e7a8003cf0e43c"
          },
          "accountId": {
            "type": "object",
            "description": "Account ID",
            "example": "5c07a535a9e7a8003cf0e43c"
          },
          "name": {
            "type": "string",
            "description": "Name of the strategy",
            "example": "my rate strategy name"
          },
          "assignedListingCount": {
            "type": "number",
            "description": "Assigned listing count",
            "example": 1
          },
          "rules": {
            "description": "Rules for the strategy",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "seasonal": {
                    "description": "Seasonal rules",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "object",
                          "description": "ID of the seasonal",
                          "example": "5c07a535a9e7a8003cf0e43c"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the rule",
                          "example": "event name"
                        },
                        "from": {
                          "type": "object",
                          "description": "Start date",
                          "example": "2023-11-30"
                        },
                        "to": {
                          "type": "object",
                          "description": "End date",
                          "example": "2023-12-01"
                        },
                        "restriction": {
                          "description": "Restrictions",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "active": {
                                  "type": "boolean",
                                  "description": "Is the rule active?",
                                  "example": false
                                },
                                "checkInWeekDays": {
                                  "description": "Check-in weekdays",
                                  "example": [
                                    1,
                                    3,
                                    5
                                  ],
                                  "type": "array",
                                  "items": {
                                    "type": "number"
                                  }
                                },
                                "checkOutWeekDays": {
                                  "description": "Check-out weekdays",
                                  "example": [
                                    1,
                                    3,
                                    4,
                                    5
                                  ],
                                  "type": "array",
                                  "items": {
                                    "type": "number"
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "adjustmentPercentage": {
                          "type": "number",
                          "description": "Adjustment percentage",
                          "example": 3
                        },
                        "minNights": {
                          "type": "number",
                          "description": "Minimum nights",
                          "example": 1
                        },
                        "isAnnual": {
                          "type": "boolean",
                          "description": "Is it annual?",
                          "example": false
                        },
                        "weekDays": {
                          "description": "Weekdays",
                          "example": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ],
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  "events": {
                    "description": "Events rules",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "object",
                          "description": "ID of the events",
                          "example": "5c07a535a9e7a8003cf0e43c"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the rule",
                          "example": "event name"
                        },
                        "from": {
                          "type": "object",
                          "description": "Start date",
                          "example": "2023-11-30"
                        },
                        "to": {
                          "type": "object",
                          "description": "End date",
                          "example": "2023-12-01"
                        },
                        "restriction": {
                          "description": "Restrictions",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "active": {
                                  "type": "boolean",
                                  "description": "Is the rule active?",
                                  "example": false
                                },
                                "checkInWeekDays": {
                                  "description": "Check-in weekdays",
                                  "example": [
                                    1,
                                    3,
                                    5
                                  ],
                                  "type": "array",
                                  "items": {
                                    "type": "number"
                                  }
                                },
                                "checkOutWeekDays": {
                                  "description": "Check-out weekdays",
                                  "example": [
                                    1,
                                    3,
                                    4,
                                    5
                                  ],
                                  "type": "array",
                                  "items": {
                                    "type": "number"
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "adjustmentPercentage": {
                          "type": "number",
                          "description": "Adjustment percentage",
                          "example": 3
                        },
                        "minNights": {
                          "type": "number",
                          "description": "Minimum nights",
                          "example": 1
                        },
                        "isAnnual": {
                          "type": "boolean",
                          "description": "Is it annual?",
                          "example": false
                        }
                      }
                    }
                  },
                  "upcomingAvailability": {
                    "description": "Upcoming availability rules",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the rule",
                          "example": "upcoming availability rule name"
                        },
                        "fromDays": {
                          "type": "number",
                          "description": "Starting days",
                          "example": 1
                        },
                        "toDays": {
                          "type": "number",
                          "description": "Ending days",
                          "example": 3
                        },
                        "weekDays": {
                          "description": "Weekdays",
                          "example": [
                            1,
                            2,
                            3,
                            5
                          ],
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        },
                        "adjustmentPercentage": {
                          "type": "number",
                          "description": "Adjustment percentage",
                          "example": 3
                        },
                        "minNights": {
                          "type": "number",
                          "description": "Minimum nights",
                          "example": 4
                        }
                      }
                    }
                  },
                  "customizedGaps": {
                    "description": "Customized gaps rules",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "object",
                          "description": "ID of the customized gap",
                          "example": "5c07a535a9e7a8003cf0e43c"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the rule",
                          "example": "gap rule name"
                        },
                        "fromDays": {
                          "type": "number",
                          "description": "Starting days",
                          "example": 2
                        },
                        "toDays": {
                          "type": "number",
                          "description": "Ending days",
                          "example": 5
                        },
                        "adjustmentPercentage": {
                          "type": "number",
                          "description": "Adjustment percentage",
                          "example": 4
                        },
                        "maxGap": {
                          "type": "number",
                          "description": "Maximum gap",
                          "example": 3
                        }
                      }
                    }
                  },
                  "lengthOfStay": {
                    "description": "Length of stay rules",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "object",
                          "description": "ID of the length of stay",
                          "example": "5c07a535a9e7a8003cf0e43c"
                        },
                        "length": {
                          "description": "Length details",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "from": {
                                  "type": "number",
                                  "description": "Starting length",
                                  "example": "2023-11-30"
                                },
                                "to": {
                                  "type": "number",
                                  "description": "Ending length",
                                  "example": "2023-12-03"
                                }
                              }
                            }
                          ]
                        },
                        "adjustmentPercentage": {
                          "type": "number",
                          "description": "Adjustment percentage",
                          "example": 1
                        },
                        "type": {
                          "enum": [
                            "single",
                            "range"
                          ],
                          "type": "string",
                          "description": "Type of length",
                          "example": "range"
                        }
                      }
                    }
                  },
                  "repeatedDays": {
                    "description": "Repeated days rules",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "0": {
                            "description": "Rule applied to Sundays",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "_id": {
                                    "type": "object",
                                    "description": "ID of the repeated day",
                                    "example": "5c07a535a9e7a8003cf0e43c"
                                  },
                                  "adjustmentPercentage": {
                                    "type": "number",
                                    "description": "Adjustment percentage",
                                    "example": 1
                                  },
                                  "minNights": {
                                    "type": "number",
                                    "description": "Minimum nights",
                                    "example": 2
                                  },
                                  "cta": {
                                    "type": "boolean",
                                    "description": "CTA flag",
                                    "example": false
                                  },
                                  "ctd": {
                                    "type": "boolean",
                                    "description": "CTD flag",
                                    "example": true
                                  }
                                }
                              }
                            ]
                          },
                          "1": {
                            "description": "Rule applied to Mondays",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "_id": {
                                    "type": "object",
                                    "description": "ID of the repeated day",
                                    "example": "5c07a535a9e7a8003cf0e43c"
                                  },
                                  "adjustmentPercentage": {
                                    "type": "number",
                                    "description": "Adjustment percentage",
                                    "example": 1
                                  },
                                  "minNights": {
                                    "type": "number",
                                    "description": "Minimum nights",
                                    "example": 2
                                  },
                                  "cta": {
                                    "type": "boolean",
                                    "description": "CTA flag",
                                    "example": false
                                  },
                                  "ctd": {
                                    "type": "boolean",
                                    "description": "CTD flag",
                                    "example": true
                                  }
                                }
                              }
                            ]
                          },
                          "2": {
                            "description": "Rule applied to Tuesdays",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "_id": {
                                    "type": "object",
                                    "description": "ID of the repeated day",
                                    "example": "5c07a535a9e7a8003cf0e43c"
                                  },
                                  "adjustmentPercentage": {
                                    "type": "number",
                                    "description": "Adjustment percentage",
                                    "example": 1
                                  },
                                  "minNights": {
                                    "type": "number",
                                    "description": "Minimum nights",
                                    "example": 2
                                  },
                                  "cta": {
                                    "type": "boolean",
                                    "description": "CTA flag",
                                    "example": false
                                  },
                                  "ctd": {
                                    "type": "boolean",
                                    "description": "CTD flag",
                                    "example": true
                                  }
                                }
                              }
                            ]
                          },
                          "3": {
                            "description": "Rule applied to Wednesdays",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "_id": {
                                    "type": "object",
                                    "description": "ID of the repeated day",
                                    "example": "5c07a535a9e7a8003cf0e43c"
                                  },
                                  "adjustmentPercentage": {
                                    "type": "number",
                                    "description": "Adjustment percentage",
                                    "example": 1
                                  },
                                  "minNights": {
                                    "type": "number",
                                    "description": "Minimum nights",
                                    "example": 2
                                  },
                                  "cta": {
                                    "type": "boolean",
                                    "description": "CTA flag",
                                    "example": false
                                  },
                                  "ctd": {
                                    "type": "boolean",
                                    "description": "CTD flag",
                                    "example": true
                                  }
                                }
                              }
                            ]
                          },
                          "4": {
                            "description": "Rule applied to Thursdays",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "_id": {
                                    "type": "object",
                                    "description": "ID of the repeated day",
                                    "example": "5c07a535a9e7a8003cf0e43c"
                                  },
                                  "adjustmentPercentage": {
                                    "type": "number",
                                    "description": "Adjustment percentage",
                                    "example": 1
                                  },
                                  "minNights": {
                                    "type": "number",
                                    "description": "Minimum nights",
                                    "example": 2
                                  },
                                  "cta": {
                                    "type": "boolean",
                                    "description": "CTA flag",
                                    "example": false
                                  },
                                  "ctd": {
                                    "type": "boolean",
                                    "description": "CTD flag",
                                    "example": true
                                  }
                                }
                              }
                            ]
                          },
                          "5": {
                            "description": "Rule applied to Fridays",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "_id": {
                                    "type": "object",
                                    "description": "ID of the repeated day",
                                    "example": "5c07a535a9e7a8003cf0e43c"
                                  },
                                  "adjustmentPercentage": {
                                    "type": "number",
                                    "description": "Adjustment percentage",
                                    "example": 1
                                  },
                                  "minNights": {
                                    "type": "number",
                                    "description": "Minimum nights",
                                    "example": 2
                                  },
                                  "cta": {
                                    "type": "boolean",
                                    "description": "CTA flag",
                                    "example": false
                                  },
                                  "ctd": {
                                    "type": "boolean",
                                    "description": "CTD flag",
                                    "example": true
                                  }
                                }
                              }
                            ]
                          },
                          "6": {
                            "description": "Rule applied to Saturdays",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "_id": {
                                    "type": "object",
                                    "description": "ID of the repeated day",
                                    "example": "5c07a535a9e7a8003cf0e43c"
                                  },
                                  "adjustmentPercentage": {
                                    "type": "number",
                                    "description": "Adjustment percentage",
                                    "example": 1
                                  },
                                  "minNights": {
                                    "type": "number",
                                    "description": "Minimum nights",
                                    "example": 2
                                  },
                                  "cta": {
                                    "type": "boolean",
                                    "description": "CTA flag",
                                    "example": false
                                  },
                                  "ctd": {
                                    "type": "boolean",
                                    "description": "CTD flag",
                                    "example": true
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the rate strategy",
            "example": "rate strategy best description"
          },
          "singleUnitsCount": {
            "type": "number",
            "description": "Count of single units",
            "example": 3
          },
          "multiUnitsCount": {
            "type": "number",
            "description": "Count of multiple units",
            "example": 1
          },
          "subUnitsCount": {
            "type": "number",
            "description": "Count of sub-units",
            "example": 4
          },
          "minAdjustmentPercentage": {
            "type": "number",
            "description": "Minimum adjustment percentage",
            "example": 5
          },
          "maxAdjustmentPercentage": {
            "type": "number",
            "description": "Maximum adjustment percentage",
            "example": 10
          },
          "minNights": {
            "type": "number",
            "description": "Minimum number of nights",
            "example": 4
          },
          "isOptimized": {
            "type": "boolean",
            "description": "Is the rate strategy optimized?",
            "example": true
          },
          "pendingSync": {
            "type": "boolean",
            "description": "Is the rate strategy pending for sync?",
            "example": false
          },
          "createdAt": {
            "type": "object",
            "description": "Rate strategy creation date",
            "example": "2023-12-19T07:53:09.567Z"
          },
          "updatedAt": {
            "type": "object",
            "description": "Rate strategy last update date",
            "example": "2023-12-19T07:55:09.567Z"
          }
        }
      },
      "RateStrategiesOpenApiResponseDto": {
        "type": "object",
        "properties": {
          "rateStrategies": {
            "description": "Partial rate strategies information",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "object",
                  "description": "ID of the strategy",
                  "example": "5c07a535a9e7a8003cf0e43c"
                },
                "accountId": {
                  "type": "object",
                  "description": "Account ID",
                  "example": "5c07a535a9e7a8003cf0e43c"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the strategy",
                  "example": "my rate strategy name"
                },
                "assignedListingCount": {
                  "type": "number",
                  "description": "Assigned listing count",
                  "example": 1
                },
                "rules": {
                  "description": "Rules for the strategy",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "seasonal": {
                          "description": "Seasonal rules",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "object",
                                "description": "ID of the seasonal",
                                "example": "5c07a535a9e7a8003cf0e43c"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the rule",
                                "example": "event name"
                              },
                              "from": {
                                "type": "object",
                                "description": "Start date",
                                "example": "2023-11-30"
                              },
                              "to": {
                                "type": "object",
                                "description": "End date",
                                "example": "2023-12-01"
                              },
                              "restriction": {
                                "description": "Restrictions",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "active": {
                                        "type": "boolean",
                                        "description": "Is the rule active?",
                                        "example": false
                                      },
                                      "checkInWeekDays": {
                                        "description": "Check-in weekdays",
                                        "example": [
                                          1,
                                          3,
                                          5
                                        ],
                                        "type": "array",
                                        "items": {
                                          "type": "number"
                                        }
                                      },
                                      "checkOutWeekDays": {
                                        "description": "Check-out weekdays",
                                        "example": [
                                          1,
                                          3,
                                          4,
                                          5
                                        ],
                                        "type": "array",
                                        "items": {
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "adjustmentPercentage": {
                                "type": "number",
                                "description": "Adjustment percentage",
                                "example": 3
                              },
                              "minNights": {
                                "type": "number",
                                "description": "Minimum nights",
                                "example": 1
                              },
                              "isAnnual": {
                                "type": "boolean",
                                "description": "Is it annual?",
                                "example": false
                              },
                              "weekDays": {
                                "description": "Weekdays",
                                "example": [
                                  0,
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6
                                ],
                                "type": "array",
                                "items": {
                                  "type": "number"
                                }
                              }
                            }
                          }
                        },
                        "events": {
                          "description": "Events rules",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "object",
                                "description": "ID of the events",
                                "example": "5c07a535a9e7a8003cf0e43c"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the rule",
                                "example": "event name"
                              },
                              "from": {
                                "type": "object",
                                "description": "Start date",
                                "example": "2023-11-30"
                              },
                              "to": {
                                "type": "object",
                                "description": "End date",
                                "example": "2023-12-01"
                              },
                              "restriction": {
                                "description": "Restrictions",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "active": {
                                        "type": "boolean",
                                        "description": "Is the rule active?",
                                        "example": false
                                      },
                                      "checkInWeekDays": {
                                        "description": "Check-in weekdays",
                                        "example": [
                                          1,
                                          3,
                                          5
                                        ],
                                        "type": "array",
                                        "items": {
                                          "type": "number"
                                        }
                                      },
                                      "checkOutWeekDays": {
                                        "description": "Check-out weekdays",
                                        "example": [
                                          1,
                                          3,
                                          4,
                                          5
                                        ],
                                        "type": "array",
                                        "items": {
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "adjustmentPercentage": {
                                "type": "number",
                                "description": "Adjustment percentage",
                                "example": 3
                              },
                              "minNights": {
                                "type": "number",
                                "description": "Minimum nights",
                                "example": 1
                              },
                              "isAnnual": {
                                "type": "boolean",
                                "description": "Is it annual?",
                                "example": false
                              }
                            }
                          }
                        },
                        "upcomingAvailability": {
                          "description": "Upcoming availability rules",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the rule",
                                "example": "upcoming availability rule name"
                              },
                              "fromDays": {
                                "type": "number",
                                "description": "Starting days",
                                "example": 1
                              },
                              "toDays": {
                                "type": "number",
                                "description": "Ending days",
                                "example": 3
                              },
                              "weekDays": {
                                "description": "Weekdays",
                                "example": [
                                  1,
                                  2,
                                  3,
                                  5
                                ],
                                "type": "array",
                                "items": {
                                  "type": "number"
                                }
                              },
                              "adjustmentPercentage": {
                                "type": "number",
                                "description": "Adjustment percentage",
                                "example": 3
                              },
                              "minNights": {
                                "type": "number",
                                "description": "Minimum nights",
                                "example": 4
                              }
                            }
                          }
                        },
                        "customizedGaps": {
                          "description": "Customized gaps rules",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "object",
                                "description": "ID of the customized gap",
                                "example": "5c07a535a9e7a8003cf0e43c"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the rule",
                                "example": "gap rule name"
                              },
                              "fromDays": {
                                "type": "number",
                                "description": "Starting days",
                                "example": 2
                              },
                              "toDays": {
                                "type": "number",
                                "description": "Ending days",
                                "example": 5
                              },
                              "adjustmentPercentage": {
                                "type": "number",
                                "description": "Adjustment percentage",
                                "example": 4
                              },
                              "maxGap": {
                                "type": "number",
                                "description": "Maximum gap",
                                "example": 3
                              }
                            }
                          }
                        },
                        "lengthOfStay": {
                          "description": "Length of stay rules",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "object",
                                "description": "ID of the length of stay",
                                "example": "5c07a535a9e7a8003cf0e43c"
                              },
                              "length": {
                                "description": "Length details",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "from": {
                                        "type": "number",
                                        "description": "Starting length",
                                        "example": "2023-11-30"
                                      },
                                      "to": {
                                        "type": "number",
                                        "description": "Ending length",
                                        "example": "2023-12-03"
                                      }
                                    }
                                  }
                                ]
                              },
                              "adjustmentPercentage": {
                                "type": "number",
                                "description": "Adjustment percentage",
                                "example": 1
                              },
                              "type": {
                                "enum": [
                                  "single",
                                  "range"
                                ],
                                "type": "string",
                                "description": "Type of length",
                                "example": "range"
                              }
                            }
                          }
                        },
                        "repeatedDays": {
                          "description": "Repeated days rules",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "0": {
                                  "description": "Rule applied to Sundays",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "_id": {
                                          "type": "object",
                                          "description": "ID of the repeated day",
                                          "example": "5c07a535a9e7a8003cf0e43c"
                                        },
                                        "adjustmentPercentage": {
                                          "type": "number",
                                          "description": "Adjustment percentage",
                                          "example": 1
                                        },
                                        "minNights": {
                                          "type": "number",
                                          "description": "Minimum nights",
                                          "example": 2
                                        },
                                        "cta": {
                                          "type": "boolean",
                                          "description": "CTA flag",
                                          "example": false
                                        },
                                        "ctd": {
                                          "type": "boolean",
                                          "description": "CTD flag",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "1": {
                                  "description": "Rule applied to Mondays",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "_id": {
                                          "type": "object",
                                          "description": "ID of the repeated day",
                                          "example": "5c07a535a9e7a8003cf0e43c"
                                        },
                                        "adjustmentPercentage": {
                                          "type": "number",
                                          "description": "Adjustment percentage",
                                          "example": 1
                                        },
                                        "minNights": {
                                          "type": "number",
                                          "description": "Minimum nights",
                                          "example": 2
                                        },
                                        "cta": {
                                          "type": "boolean",
                                          "description": "CTA flag",
                                          "example": false
                                        },
                                        "ctd": {
                                          "type": "boolean",
                                          "description": "CTD flag",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "2": {
                                  "description": "Rule applied to Tuesdays",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "_id": {
                                          "type": "object",
                                          "description": "ID of the repeated day",
                                          "example": "5c07a535a9e7a8003cf0e43c"
                                        },
                                        "adjustmentPercentage": {
                                          "type": "number",
                                          "description": "Adjustment percentage",
                                          "example": 1
                                        },
                                        "minNights": {
                                          "type": "number",
                                          "description": "Minimum nights",
                                          "example": 2
                                        },
                                        "cta": {
                                          "type": "boolean",
                                          "description": "CTA flag",
                                          "example": false
                                        },
                                        "ctd": {
                                          "type": "boolean",
                                          "description": "CTD flag",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "3": {
                                  "description": "Rule applied to Wednesdays",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "_id": {
                                          "type": "object",
                                          "description": "ID of the repeated day",
                                          "example": "5c07a535a9e7a8003cf0e43c"
                                        },
                                        "adjustmentPercentage": {
                                          "type": "number",
                                          "description": "Adjustment percentage",
                                          "example": 1
                                        },
                                        "minNights": {
                                          "type": "number",
                                          "description": "Minimum nights",
                                          "example": 2
                                        },
                                        "cta": {
                                          "type": "boolean",
                                          "description": "CTA flag",
                                          "example": false
                                        },
                                        "ctd": {
                                          "type": "boolean",
                                          "description": "CTD flag",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "4": {
                                  "description": "Rule applied to Thursdays",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "_id": {
                                          "type": "object",
                                          "description": "ID of the repeated day",
                                          "example": "5c07a535a9e7a8003cf0e43c"
                                        },
                                        "adjustmentPercentage": {
                                          "type": "number",
                                          "description": "Adjustment percentage",
                                          "example": 1
                                        },
                                        "minNights": {
                                          "type": "number",
                                          "description": "Minimum nights",
                                          "example": 2
                                        },
                                        "cta": {
                                          "type": "boolean",
                                          "description": "CTA flag",
                                          "example": false
                                        },
                                        "ctd": {
                                          "type": "boolean",
                                          "description": "CTD flag",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "5": {
                                  "description": "Rule applied to Fridays",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "_id": {
                                          "type": "object",
                                          "description": "ID of the repeated day",
                                          "example": "5c07a535a9e7a8003cf0e43c"
                                        },
                                        "adjustmentPercentage": {
                                          "type": "number",
                                          "description": "Adjustment percentage",
                                          "example": 1
                                        },
                                        "minNights": {
                                          "type": "number",
                                          "description": "Minimum nights",
                                          "example": 2
                                        },
                                        "cta": {
                                          "type": "boolean",
                                          "description": "CTA flag",
                                          "example": false
                                        },
                                        "ctd": {
                                          "type": "boolean",
                                          "description": "CTD flag",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "6": {
                                  "description": "Rule applied to Saturdays",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "_id": {
                                          "type": "object",
                                          "description": "ID of the repeated day",
                                          "example": "5c07a535a9e7a8003cf0e43c"
                                        },
                                        "adjustmentPercentage": {
                                          "type": "number",
                                          "description": "Adjustment percentage",
                                          "example": 1
                                        },
                                        "minNights": {
                                          "type": "number",
                                          "description": "Minimum nights",
                                          "example": 2
                                        },
                                        "cta": {
                                          "type": "boolean",
                                          "description": "CTA flag",
                                          "example": false
                                        },
                                        "ctd": {
                                          "type": "boolean",
                                          "description": "CTD flag",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "description": {
                  "type": "string",
                  "description": "Description of the rate strategy",
                  "example": "rate strategy best description"
                },
                "singleUnitsCount": {
                  "type": "number",
                  "description": "Count of single units",
                  "example": 3
                },
                "multiUnitsCount": {
                  "type": "number",
                  "description": "Count of multiple units",
                  "example": 1
                },
                "subUnitsCount": {
                  "type": "number",
                  "description": "Count of sub-units",
                  "example": 4
                },
                "minAdjustmentPercentage": {
                  "type": "number",
                  "description": "Minimum adjustment percentage",
                  "example": 5
                },
                "maxAdjustmentPercentage": {
                  "type": "number",
                  "description": "Maximum adjustment percentage",
                  "example": 10
                },
                "minNights": {
                  "type": "number",
                  "description": "Minimum number of nights",
                  "example": 4
                },
                "isOptimized": {
                  "type": "boolean",
                  "description": "Is the rate strategy optimized?",
                  "example": true
                },
                "pendingSync": {
                  "type": "boolean",
                  "description": "Is the rate strategy pending for sync?",
                  "example": false
                },
                "createdAt": {
                  "type": "object",
                  "description": "Rate strategy creation date",
                  "example": "2023-12-19T07:53:09.567Z"
                },
                "updatedAt": {
                  "type": "object",
                  "description": "Rate strategy last update date",
                  "example": "2023-12-19T07:55:09.567Z"
                }
              }
            }
          },
          "count": {
            "type": "number",
            "description": "Number of rate strategies in the result set",
            "example": 10
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of rate strategies that can be returned in the response",
            "example": 10
          },
          "skip": {
            "type": "number",
            "description": "Number of rate strategies that should be skipped from the result set",
            "example": 0
          },
          "requestId": {
            "type": "string",
            "description": "ID of the request",
            "example": "65a0639e9d142279"
          }
        },
        "required": [
          "rateStrategies",
          "count",
          "limit",
          "skip",
          "requestId"
        ]
      },
      "RateStrategyOpenApiResponseDto": {
        "type": "object",
        "properties": {
          "rateStrategy": {
            "description": "Partial rate strategy information",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "object",
                    "description": "ID of the strategy",
                    "example": "5c07a535a9e7a8003cf0e43c"
                  },
                  "accountId": {
                    "type": "object",
                    "description": "Account ID",
                    "example": "5c07a535a9e7a8003cf0e43c"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the strategy",
                    "example": "my rate strategy name"
                  },
                  "assignedListingCount": {
                    "type": "number",
                    "description": "Assigned listing count",
                    "example": 1
                  },
                  "rules": {
                    "description": "Rules for the strategy",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "seasonal": {
                            "description": "Seasonal rules",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "type": "object",
                                  "description": "ID of the seasonal",
                                  "example": "5c07a535a9e7a8003cf0e43c"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the rule",
                                  "example": "event name"
                                },
                                "from": {
                                  "type": "object",
                                  "description": "Start date",
                                  "example": "2023-11-30"
                                },
                                "to": {
                                  "type": "object",
                                  "description": "End date",
                                  "example": "2023-12-01"
                                },
                                "restriction": {
                                  "description": "Restrictions",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active": {
                                          "type": "boolean",
                                          "description": "Is the rule active?",
                                          "example": false
                                        },
                                        "checkInWeekDays": {
                                          "description": "Check-in weekdays",
                                          "example": [
                                            1,
                                            3,
                                            5
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "number"
                                          }
                                        },
                                        "checkOutWeekDays": {
                                          "description": "Check-out weekdays",
                                          "example": [
                                            1,
                                            3,
                                            4,
                                            5
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "number"
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "adjustmentPercentage": {
                                  "type": "number",
                                  "description": "Adjustment percentage",
                                  "example": 3
                                },
                                "minNights": {
                                  "type": "number",
                                  "description": "Minimum nights",
                                  "example": 1
                                },
                                "isAnnual": {
                                  "type": "boolean",
                                  "description": "Is it annual?",
                                  "example": false
                                },
                                "weekDays": {
                                  "description": "Weekdays",
                                  "example": [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6
                                  ],
                                  "type": "array",
                                  "items": {
                                    "type": "number"
                                  }
                                }
                              }
                            }
                          },
                          "events": {
                            "description": "Events rules",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "type": "object",
                                  "description": "ID of the events",
                                  "example": "5c07a535a9e7a8003cf0e43c"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the rule",
                                  "example": "event name"
                                },
                                "from": {
                                  "type": "object",
                                  "description": "Start date",
                                  "example": "2023-11-30"
                                },
                                "to": {
                                  "type": "object",
                                  "description": "End date",
                                  "example": "2023-12-01"
                                },
                                "restriction": {
                                  "description": "Restrictions",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "active": {
                                          "type": "boolean",
                                          "description": "Is the rule active?",
                                          "example": false
                                        },
                                        "checkInWeekDays": {
                                          "description": "Check-in weekdays",
                                          "example": [
                                            1,
                                            3,
                                            5
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "number"
                                          }
                                        },
                                        "checkOutWeekDays": {
                                          "description": "Check-out weekdays",
                                          "example": [
                                            1,
                                            3,
                                            4,
                                            5
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "number"
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "adjustmentPercentage": {
                                  "type": "number",
                                  "description": "Adjustment percentage",
                                  "example": 3
                                },
                                "minNights": {
                                  "type": "number",
                                  "description": "Minimum nights",
                                  "example": 1
                                },
                                "isAnnual": {
                                  "type": "boolean",
                                  "description": "Is it annual?",
                                  "example": false
                                }
                              }
                            }
                          },
                          "upcomingAvailability": {
                            "description": "Upcoming availability rules",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the rule",
                                  "example": "upcoming availability rule name"
                                },
                                "fromDays": {
                                  "type": "number",
                                  "description": "Starting days",
                                  "example": 1
                                },
                                "toDays": {
                                  "type": "number",
                                  "description": "Ending days",
                                  "example": 3
                                },
                                "weekDays": {
                                  "description": "Weekdays",
                                  "example": [
                                    1,
                                    2,
                                    3,
                                    5
                                  ],
                                  "type": "array",
                                  "items": {
                                    "type": "number"
                                  }
                                },
                                "adjustmentPercentage": {
                                  "type": "number",
                                  "description": "Adjustment percentage",
                                  "example": 3
                                },
                                "minNights": {
                                  "type": "number",
                                  "description": "Minimum nights",
                                  "example": 4
                                }
                              }
                            }
                          },
                          "customizedGaps": {
                            "description": "Customized gaps rules",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "type": "object",
                                  "description": "ID of the customized gap",
                                  "example": "5c07a535a9e7a8003cf0e43c"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the rule",
                                  "example": "gap rule name"
                                },
                                "fromDays": {
                                  "type": "number",
                                  "description": "Starting days",
                                  "example": 2
                                },
                                "toDays": {
                                  "type": "number",
                                  "description": "Ending days",
                                  "example": 5
                                },
                                "adjustmentPercentage": {
                                  "type": "number",
                                  "description": "Adjustment percentage",
                                  "example": 4
                                },
                                "maxGap": {
                                  "type": "number",
                                  "description": "Maximum gap",
                                  "example": 3
                                }
                              }
                            }
                          },
                          "lengthOfStay": {
                            "description": "Length of stay rules",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "type": "object",
                                  "description": "ID of the length of stay",
                                  "example": "5c07a535a9e7a8003cf0e43c"
                                },
                                "length": {
                                  "description": "Length details",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "from": {
                                          "type": "number",
                                          "description": "Starting length",
                                          "example": "2023-11-30"
                                        },
                                        "to": {
                                          "type": "number",
                                          "description": "Ending length",
                                          "example": "2023-12-03"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "adjustmentPercentage": {
                                  "type": "number",
                                  "description": "Adjustment percentage",
                                  "example": 1
                                },
                                "type": {
                                  "enum": [
                                    "single",
                                    "range"
                                  ],
                                  "type": "string",
                                  "description": "Type of length",
                                  "example": "range"
                                }
                              }
                            }
                          },
                          "repeatedDays": {
                            "description": "Repeated days rules",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "0": {
                                    "description": "Rule applied to Sundays",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "object",
                                            "description": "ID of the repeated day",
                                            "example": "5c07a535a9e7a8003cf0e43c"
                                          },
                                          "adjustmentPercentage": {
                                            "type": "number",
                                            "description": "Adjustment percentage",
                                            "example": 1
                                          },
                                          "minNights": {
                                            "type": "number",
                                            "description": "Minimum nights",
                                            "example": 2
                                          },
                                          "cta": {
                                            "type": "boolean",
                                            "description": "CTA flag",
                                            "example": false
                                          },
                                          "ctd": {
                                            "type": "boolean",
                                            "description": "CTD flag",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "1": {
                                    "description": "Rule applied to Mondays",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "object",
                                            "description": "ID of the repeated day",
                                            "example": "5c07a535a9e7a8003cf0e43c"
                                          },
                                          "adjustmentPercentage": {
                                            "type": "number",
                                            "description": "Adjustment percentage",
                                            "example": 1
                                          },
                                          "minNights": {
                                            "type": "number",
                                            "description": "Minimum nights",
                                            "example": 2
                                          },
                                          "cta": {
                                            "type": "boolean",
                                            "description": "CTA flag",
                                            "example": false
                                          },
                                          "ctd": {
                                            "type": "boolean",
                                            "description": "CTD flag",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "2": {
                                    "description": "Rule applied to Tuesdays",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "object",
                                            "description": "ID of the repeated day",
                                            "example": "5c07a535a9e7a8003cf0e43c"
                                          },
                                          "adjustmentPercentage": {
                                            "type": "number",
                                            "description": "Adjustment percentage",
                                            "example": 1
                                          },
                                          "minNights": {
                                            "type": "number",
                                            "description": "Minimum nights",
                                            "example": 2
                                          },
                                          "cta": {
                                            "type": "boolean",
                                            "description": "CTA flag",
                                            "example": false
                                          },
                                          "ctd": {
                                            "type": "boolean",
                                            "description": "CTD flag",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "3": {
                                    "description": "Rule applied to Wednesdays",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "object",
                                            "description": "ID of the repeated day",
                                            "example": "5c07a535a9e7a8003cf0e43c"
                                          },
                                          "adjustmentPercentage": {
                                            "type": "number",
                                            "description": "Adjustment percentage",
                                            "example": 1
                                          },
                                          "minNights": {
                                            "type": "number",
                                            "description": "Minimum nights",
                                            "example": 2
                                          },
                                          "cta": {
                                            "type": "boolean",
                                            "description": "CTA flag",
                                            "example": false
                                          },
                                          "ctd": {
                                            "type": "boolean",
                                            "description": "CTD flag",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "4": {
                                    "description": "Rule applied to Thursdays",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "object",
                                            "description": "ID of the repeated day",
                                            "example": "5c07a535a9e7a8003cf0e43c"
                                          },
                                          "adjustmentPercentage": {
                                            "type": "number",
                                            "description": "Adjustment percentage",
                                            "example": 1
                                          },
                                          "minNights": {
                                            "type": "number",
                                            "description": "Minimum nights",
                                            "example": 2
                                          },
                                          "cta": {
                                            "type": "boolean",
                                            "description": "CTA flag",
                                            "example": false
                                          },
                                          "ctd": {
                                            "type": "boolean",
                                            "description": "CTD flag",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "5": {
                                    "description": "Rule applied to Fridays",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "object",
                                            "description": "ID of the repeated day",
                                            "example": "5c07a535a9e7a8003cf0e43c"
                                          },
                                          "adjustmentPercentage": {
                                            "type": "number",
                                            "description": "Adjustment percentage",
                                            "example": 1
                                          },
                                          "minNights": {
                                            "type": "number",
                                            "description": "Minimum nights",
                                            "example": 2
                                          },
                                          "cta": {
                                            "type": "boolean",
                                            "description": "CTA flag",
                                            "example": false
                                          },
                                          "ctd": {
                                            "type": "boolean",
                                            "description": "CTD flag",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "6": {
                                    "description": "Rule applied to Saturdays",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "object",
                                            "description": "ID of the repeated day",
                                            "example": "5c07a535a9e7a8003cf0e43c"
                                          },
                                          "adjustmentPercentage": {
                                            "type": "number",
                                            "description": "Adjustment percentage",
                                            "example": 1
                                          },
                                          "minNights": {
                                            "type": "number",
                                            "description": "Minimum nights",
                                            "example": 2
                                          },
                                          "cta": {
                                            "type": "boolean",
                                            "description": "CTA flag",
                                            "example": false
                                          },
                                          "ctd": {
                                            "type": "boolean",
                                            "description": "CTD flag",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the rate strategy",
                    "example": "rate strategy best description"
                  },
                  "singleUnitsCount": {
                    "type": "number",
                    "description": "Count of single units",
                    "example": 3
                  },
                  "multiUnitsCount": {
                    "type": "number",
                    "description": "Count of multiple units",
                    "example": 1
                  },
                  "subUnitsCount": {
                    "type": "number",
                    "description": "Count of sub-units",
                    "example": 4
                  },
                  "minAdjustmentPercentage": {
                    "type": "number",
                    "description": "Minimum adjustment percentage",
                    "example": 5
                  },
                  "maxAdjustmentPercentage": {
                    "type": "number",
                    "description": "Maximum adjustment percentage",
                    "example": 10
                  },
                  "minNights": {
                    "type": "number",
                    "description": "Minimum number of nights",
                    "example": 4
                  },
                  "isOptimized": {
                    "type": "boolean",
                    "description": "Is the rate strategy optimized?",
                    "example": true
                  },
                  "pendingSync": {
                    "type": "boolean",
                    "description": "Is the rate strategy pending for sync?",
                    "example": false
                  },
                  "createdAt": {
                    "type": "object",
                    "description": "Rate strategy creation date",
                    "example": "2023-12-19T07:53:09.567Z"
                  },
                  "updatedAt": {
                    "type": "object",
                    "description": "Rate strategy last update date",
                    "example": "2023-12-19T07:55:09.567Z"
                  }
                }
              }
            ]
          },
          "unitTypeId": {
            "type": "string",
            "description": "ID of the unit type",
            "example": "65814be58b41561467b95de9"
          },
          "requestId": {
            "type": "string",
            "description": "ID of the request",
            "example": "65814be58b41561467b95de9"
          }
        },
        "required": [
          "rateStrategy",
          "unitTypeId",
          "requestId"
        ]
      },
      "ScrTriggers": {
        "type": "object",
        "properties": {
          "manual": {
            "type": "boolean"
          }
        },
        "required": [
          "manual"
        ]
      },
      "ScrPublicInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "sourceListingId": {
            "type": "string"
          },
          "destinationListingId": {
            "type": "string"
          },
          "isTwoWayRule": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "status": {
            "enum": [
              "active",
              "disabled",
              "removed"
            ],
            "type": "string"
          },
          "triggers": {
            "type": "object",
            "properties": {
              "manual": {
                "type": "boolean"
              }
            },
            "required": [
              "manual"
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "accountId",
          "sourceListingId",
          "destinationListingId",
          "isTwoWayRule",
          "isActive",
          "status",
          "triggers",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateScrInputDto": {
        "type": "object",
        "properties": {
          "sourceListingId": {
            "type": "string",
            "description": "Listing ID that triggers the rule"
          },
          "destinationListingId": {
            "type": "string",
            "description": "Listing ID that the rule will work on"
          },
          "isTwoWayRule": {
            "type": "boolean",
            "description": "Applies the rule both ways between properties. Booking one property blocks off the other and the other way around."
          },
          "applyRetroactively": {
            "type": "boolean",
            "description": "Rules can be applied retroactively for upcoming reservations. This also includes manual blocks if they were added to this rule."
          },
          "triggers": {
            "description": "Enforces the rule on manual blocks your team created directly in the Multi-Calendar instead of only enforcing the rule on reservations.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "manual": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "manual"
                ]
              }
            ]
          }
        },
        "required": [
          "sourceListingId",
          "destinationListingId",
          "isTwoWayRule",
          "applyRetroactively",
          "triggers"
        ]
      },
      "UpdateScrInputDto": {
        "type": "object",
        "properties": {
          "isTwoWayRule": {
            "type": "boolean",
            "description": "Applies the rule both ways between properties. Booking one property blocks off the other and the other way around."
          },
          "applyRetroactively": {
            "type": "boolean",
            "description": "Rules can be applied retroactively for upcoming reservations. This also includes manual blocks if they were added to this rule."
          },
          "triggers": {
            "description": "Enforces the rule on manual blocks your team created directly in the Multi-Calendar instead of only enforcing the rule on reservations.",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "manual": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "manual"
                ]
              }
            ]
          },
          "isActive": {
            "type": "boolean",
            "description": "Define if the rule should be active or not. Note: in case of activation it is recommended to apply with `applyRetroactively`. Example input: active or disabled"
          }
        },
        "required": [
          "isTwoWayRule",
          "applyRetroactively",
          "triggers",
          "isActive"
        ]
      },
      "AccessCodeResponseDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "startsAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "endsAt": {
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "lockIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "code",
          "purpose",
          "status",
          "startsAt",
          "endsAt",
          "lockIds"
        ]
      },
      "LockResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "batteryLevel": {
            "type": "number"
          },
          "online": {
            "type": "boolean"
          },
          "provider": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "hasIssues": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "batteryLevel",
          "online",
          "provider",
          "imageUrl"
        ]
      },
      "LocksAndCodesResponseDto": {
        "type": "object",
        "properties": {
          "codes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "purpose": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "startsAt": {
                  "format": "date-time",
                  "type": "string",
                  "nullable": true
                },
                "endsAt": {
                  "format": "date-time",
                  "type": "string",
                  "nullable": true
                },
                "lockIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "code",
                "purpose",
                "status",
                "startsAt",
                "endsAt",
                "lockIds"
              ]
            }
          },
          "locks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "batteryLevel": {
                  "type": "number"
                },
                "online": {
                  "type": "boolean"
                },
                "provider": {
                  "type": "string"
                },
                "imageUrl": {
                  "type": "string",
                  "nullable": true
                },
                "hasIssues": {
                  "type": "boolean",
                  "nullable": true
                }
              },
              "required": [
                "id",
                "name",
                "batteryLevel",
                "online",
                "provider",
                "imageUrl"
              ]
            }
          }
        },
        "required": [
          "codes",
          "locks"
        ]
      },
      "BadRequestErrorResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Bad Request"
          },
          "code": {
            "type": "string",
            "example": "VALIDATION_FAILED"
          },
          "status": {
            "type": "number",
            "example": 400
          },
          "data": {
            "example": [
              "reservationId must be a mongodb id"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "message",
          "code",
          "status",
          "data"
        ]
      },
      "BadRequestResponseExampleDto": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Bad Request"
              },
              "code": {
                "type": "string",
                "example": "VALIDATION_FAILED"
              },
              "status": {
                "type": "number",
                "example": 400
              },
              "data": {
                "example": [
                  "reservationId must be a mongodb id"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "message",
              "code",
              "status",
              "data"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "CreateTaskRequest": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "The name you call the task"
          },
          "description": {
            "type": "string",
            "description": "Add any additional information needed to define the task."
          },
          "priority": {
            "type": "string",
            "description": "Priority value",
            "enum": [
              "medium",
              "high",
              "low"
            ],
            "default": "medium"
          },
          "type": {
            "type": "string",
            "description": "Task types help you with better identification and reporting.",
            "enum": [
              "cleaning",
              "maintenance",
              "inspection",
              "mid-stay",
              "runner",
              "sanitation",
              "check-in",
              "issue",
              "inventory",
              "administration"
            ]
          },
          "assigneeGroup": {
            "type": "array",
            "description": "The team the assignees are part of. This is a tag.",
            "items": {
              "type": "string"
            }
          },
          "assigneeId": {
            "description": "The unique identifier of the person assigned to the task.",
            "type": "string"
          },
          "supervisorId": {
            "type": "string",
            "description": "The uniqueID of the person assigned to supervise the task."
          },
          "checklist": {
            "type": "array",
            "description": "A list of action items that help define the task.",
            "items": {
              "type": "string"
            }
          },
          "attachments": {
            "type": "array",
            "description": "The place to attach external files needed for the task.",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "URL location of the attached file."
                },
                "title": {
                  "type": "string",
                  "description": "Title name of the attached file."
                },
                "mimetype": {
                  "type": "string",
                  "description": "State the kind of file attached"
                },
                "size": {
                  "type": "number",
                  "description": "The storage size of the attachment"
                },
                "client": {
                  "type": "string",
                  "description": "Add any additional information needed to define the task.",
                  "default": "cbt"
                }
              }
            }
          },
          "expenses": {
            "type": "array",
            "maxItems": 20,
            "description": "The list of expenses that will be created in Accounting automatically either upon completion of the task or at the date provided (only available for accounting add-on users). Max items: 20.",
            "items": {
              "type": "object",
              "required": [
                "name",
                "category",
                "vendorId",
                "amount",
                "vendorName",
                "expenseShare"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Expense name.",
                  "example": "Maintenance expense"
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "advertising",
                    "cleaning",
                    "electricity",
                    "furniture_appliances",
                    "gas",
                    "internet",
                    "lock_automation",
                    "management",
                    "mortgage",
                    "pest_control",
                    "pool_cleaning",
                    "property_taxes",
                    "repairs_maintenance",
                    "supplies_purchases",
                    "other_misc",
                    "taxes_paid",
                    "telephone",
                    "television",
                    "trash",
                    "water_septic",
                    "guest_cleaning",
                    "owner_cleaning",
                    "channel_commission",
                    "payment_charge",
                    "pet_fee",
                    "startup_fee",
                    "fotoshoot",
                    "vat"
                  ],
                  "description": "Expense category"
                },
                "description": {
                  "type": "string",
                  "description": "Expense description",
                  "example": "Bulb replacement"
                },
                "amount": {
                  "type": "number",
                  "description": "Amount value",
                  "example": 20.45
                },
                "recognitionDate": {
                  "type": "string",
                  "format": "date",
                  "description": "Expense recognition date. ISO 8601 Date format (year-month-day). If no date provided, will be used date of task creation.",
                  "example": "2023-10-27"
                },
                "vendorId": {
                  "type": "string",
                  "description": "You can get your vendor ID [here](/reference/vendorscontroller_getall)",
                  "example": "5f4f6e1c1c6e4e001f7e8b4e"
                },
                "shareSplit": {
                  "type": "number",
                  "description": "A share split is a floating point number that represents the percentage. For example, \n      - \\`0.5\\` means that the share is 50% between PMC and Owner.\n      - \\`0.1\\` means that the share is 10% Owner and 90% PMC.\n      - \\`0\\` means that the charge covered 100% by PMC.",
                  "example": 0.5
                },
                "attachments": {
                  "type": "object",
                  "description": "Add attachments to expense.",
                  "required": [
                    "url",
                    "extension",
                    "fileName"
                  ],
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "URL to CDN where attachment is stored. Max length is 2048 characters",
                      "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                    },
                    "extension": {
                      "type": "string",
                      "description": "Attachment file extension. Max length is 10 characters",
                      "example": "png"
                    },
                    "fileName": {
                      "type": "string",
                      "description": "Attachment file name. Max length is 256 characters",
                      "example": "Invoice copy"
                    }
                  }
                }
              }
            }
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the task must begin (specific task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
          },
          "canStartAfter": {
            "type": "string",
            "format": "date-time",
            "description": "The date and the time after which the task can begin (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
          },
          "mustFinishBefore": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time before which the task must be completed (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
          },
          "listingId": {
            "type": "string",
            "description": "The object ID of the listing the task is attached to"
          },
          "reservationId": {
            "type": "string",
            "description": "The reservation ID of the listing the task is attached to"
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "description": "Textual comment"
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "plannedDuration": {
            "type": "number",
            "description": "The amount of time budgeted for the task (hours)."
          }
        },
        "example": {
          "title": "Post Stay Clean",
          "description": "A regular clean between guest stays.",
          "priority": 2,
          "type": "cleaning",
          "assigneeGroup": [
            "Cleaners A",
            "Cleaners B"
          ],
          "assigneeId": "69gvymvx55zwf5nn2ubng97cm",
          "supervisorId": "eg2x3iyeqnttngcn4mhzrzawr",
          "checklist": [
            "Clean floors",
            "Clean bathroom with bleach.",
            "Change the linen"
          ],
          "attachments": [
            {
              "title": "Clean Room 7",
              "url": "attachment.png",
              "mimetyoe": "image/png",
              "size": 4401630,
              "client": "cbt"
            }
          ],
          "startTime": "2021-05-10T11:30:00-04:00",
          "plannedDuration": 2,
          "canStartAfter": "2021-05-10T11:30:00-04:00",
          "mustFinishBefore": "2021-05-10T14:00:00-04:00",
          "listingId": "5803ca18e48f450300c76173",
          "reservationId": "5803ca18e48f450300c76173",
          "comments": [
            {
              "text": "This is a cool comment",
              "attachments": []
            }
          ]
        }
      },
      "UpdateTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The name you call the task"
          },
          "description": {
            "type": "string",
            "description": "Add any additional information needed to define the task."
          },
          "priority": {
            "type": "string",
            "description": "Priority value",
            "enum": [
              "medium",
              "high",
              "low"
            ],
            "default": "medium"
          },
          "type": {
            "type": "string",
            "description": "Task types help you with better identification and reporting.",
            "enum": [
              "cleaning",
              "maintenance",
              "inspection",
              "mid-stay",
              "runner",
              "sanitation",
              "check-in",
              "issue",
              "inventory",
              "administration"
            ]
          },
          "assigneeGroup": {
            "type": "array",
            "description": "The team the assignees are part of. This is a tag.",
            "items": {
              "type": "string"
            }
          },
          "assigneeId": {
            "description": "The unique identifier of the person assigned to the task.",
            "type": "string"
          },
          "supervisorId": {
            "type": "string",
            "description": "The uniqueID of the person assigned to supervise the task."
          },
          "checklist": {
            "type": "array",
            "description": "A list of action items that help define the task.",
            "items": {
              "type": "string"
            }
          },
          "attachments": {
            "type": "array",
            "description": "The place to attach external files needed for the task.",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "URL location of the attached file."
                },
                "title": {
                  "type": "string",
                  "description": "Title name of the attached file."
                },
                "mimetype": {
                  "type": "string",
                  "description": "State the kind of file attached"
                },
                "size": {
                  "type": "number",
                  "description": "The storage size of the attachment"
                },
                "client": {
                  "type": "string",
                  "description": "Add any additional information needed to define the task.",
                  "default": "cbt"
                }
              }
            }
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the task must begin (specific task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
          },
          "canStartAfter": {
            "type": "string",
            "format": "date-time",
            "description": "The date and the time after which the task can begin (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
          },
          "mustFinishBefore": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time before which the task must be completed (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
          },
          "listingId": {
            "type": "string",
            "description": "The object ID of the listing the task is attached to"
          },
          "reservationId": {
            "type": "string",
            "description": "The reservation ID of the listing the task is attached to"
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Comment identifier for update specific comment",
                  "example": "5803ca18e48f450300c76173"
                },
                "text": {
                  "type": "string",
                  "description": "Textual comment"
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "in progress",
              "completed",
              "canceled"
            ]
          },
          "plannedDuration": {
            "type": "number",
            "description": "The amount of time budgeted for the task (hours)."
          }
        },
        "example": {
          "title": "Post Stay Clean",
          "description": "A regular clean between guest stays.",
          "priority": 2,
          "type": "cleaning",
          "assigneeGroup": [
            "Cleaners A",
            "Cleaners B"
          ],
          "assigneeId": "69gvymvx55zwf5nn2ubng97cm",
          "supervisorId": "eg2x3iyeqnttngcn4mhzrzawr",
          "checklist": [
            "Clean floors",
            "Clean bathroom with bleach.",
            "Change the linen"
          ],
          "attachments": [
            {
              "title": "Clean Room 7",
              "url": "attachment.png",
              "mimetyoe": "image/png",
              "size": 4401630,
              "client": "cbt"
            }
          ],
          "startTime": "2021-05-10T11:30:00-04:00",
          "plannedDuration": 2,
          "canStartAfter": "2021-05-10T11:30:00-04:00",
          "mustFinishBefore": "2021-05-10T14:00:00-04:00",
          "listingId": "5803ca18e48f450300c76173",
          "reservationId": "5803ca18e48f450300c76173",
          "comments": [
            {
              "text": "This is a cool comment",
              "attachments": []
            }
          ]
        }
      },
      "TaskResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier of the task."
          },
          "shortTaskId": {
            "type": "array",
            "description": "A short task ID for quick reference.",
            "properties": {
              "items": {
                "type": "string"
              }
            }
          },
          "assigneeGroup": {
            "type": "array",
            "description": "The team the assignees is part of. This is a tag",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "description": "Task types help you with better identification and reporting."
          },
          "checklistFinished": {
            "type": "array",
            "description": "A list of finished action items that help define the task.",
            "items": {
              "type": "string"
            }
          },
          "checklist": {
            "type": "array",
            "description": "A list of action items that help define the task.",
            "items": {
              "type": "string"
            }
          },
          "checklistAggregated": {
            "type": "array",
            "description": "A list of action items."
          },
          "tags": {
            "type": "array",
            "description": "List of tags the task is related to",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "description": "The status of the task, being one of the following enumerators: pending,confirmed, in progress,completed,canceled."
          },
          "comment": {
            "type": "object",
            "description": "Notes added to the task by the assignee and supervisor. Contains the text, user ID and date the comment was published.",
            "properties": {
              "_id": {
                "type": "string",
                "description": "The unique identifier of the comment."
              },
              "text": {
                "type": "string",
                "description": "The comment text."
              },
              "by": {
                "type": "string",
                "description": "The unique identifier of the user who made the comment."
              },
              "date": {
                "type": "string",
                "description": "The date and time the comment was posted."
              }
            }
          },
          "accountId": {
            "type": "string",
            "description": "The ID of the account the task is attached to"
          },
          "createdBy": {
            "type": "string",
            "description": "The ID of the user who created the task."
          },
          "title": {
            "type": "string",
            "description": "The name you call the task"
          },
          "description": {
            "type": "string",
            "description": "Add any additional information needed to define the task."
          },
          "priority": {
            "type": "string",
            "description": "Assign the level of importance to the task in enumerators - High,Medium,Low",
            "enum": [
              "medium",
              "high",
              "low"
            ]
          },
          "assigneeId": {
            "type": "string",
            "description": "The unique identifier of the person assigned to the task."
          },
          "supervisorId": {
            "type": "string",
            "description": "The uniqueID of the person assigned to supervise the task."
          },
          "timezone": {
            "type": "string",
            "description": ""
          },
          "afterEffects": {
            "type": "object",
            "description": "Actions to be triggered upon the completion of the task.",
            "properties": {
              "action": {
                "type": "string",
                "description": "The action to be performed."
              },
              "_id": {
                "type": "string",
                "description": "The unique identifier of the action."
              },
              "payload": {
                "type": "object",
                "description": "The information or data to be included within the action.",
                "properties": {
                  "target": {
                    "type": "string",
                    "description": "The intended recipient.",
                    "enum": [
                      "user",
                      "contact",
                      "guest",
                      "supervisor"
                    ]
                  },
                  "targetId": {
                    "type": "string",
                    "description": "The unique identifier of the target."
                  },
                  "message": {
                    "type": "object",
                    "description": "The message object.",
                    "properties": {
                      "subject": {
                        "type": "string",
                        "description": "States topic of the message."
                      },
                      "body": {
                        "type": "string",
                        "description": "Contains the message string."
                      },
                      "attachments": {
                        "type": "object",
                        "description": "Contains and describes an attached file.",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Unique identifier of the attachment object."
                          },
                          "url": {
                            "type": "string",
                            "description": "URL location of the attached file."
                          },
                          "title": {
                            "type": "string",
                            "description": "Name of the file attachment."
                          },
                          "mimetype": {
                            "type": "string",
                            "description": "State the kind of file attached."
                          },
                          "size": {
                            "type": "string",
                            "description": "The storage size of the attachment."
                          },
                          "client": {
                            "type": "string",
                            "description": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "attachments": {
            "type": "object",
            "description": "The place to attach external files needed for the task.",
            "properties": {
              "title": {
                "type": "string",
                "description": "Title name of the attached file."
              },
              "url": {
                "type": "string",
                "description": "URL location of the attached file."
              },
              "mimetype": {
                "type": "string",
                "description": "State the kind of file attached."
              },
              "size": {
                "type": "number",
                "description": "The storage size of the attachment."
              },
              "client": {
                "type": "string",
                "description": "Add any additional information needed to define the task."
              }
            }
          },
          "timing": {
            "type": "object",
            "description": "",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "none",
                  "specific",
                  "flexible",
                  "legacy"
                ]
              },
              "startTime": {
                "type": "string",
                "description": "The date and time the task must begin (fixed task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
              },
              "canStartAfter": {
                "type": "string",
                "description": "The date and the time after which the task can begin (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
              },
              "mustFinishBefore": {
                "type": "string",
                "description": "The date and time before which the task must be completed (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
              }
            }
          },
          "apply": {
            "type": "object",
            "description": "",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "listing",
                  "reservation",
                  "owner-reservation"
                ]
              },
              "listingId": {
                "type": "string",
                "description": "The object ID of the listing the task is attached to. Only when reservationId don't exist"
              },
              "reservationId": {
                "type": "string",
                "description": "The reservation ID of the listing the task is attached to. Only when listingId don't exist"
              },
              "ownerReservationId": {
                "type": "string",
                "description": "The owner reservation ID of the listing the task is attached to. Only when owner reservation "
              }
            }
          },
          "plannedDuration": {
            "type": "number",
            "description": "The amount of time budgeted for the task (hours)."
          }
        },
        "example": {
          "_id": "5fc628f3d6391a00363234d",
          "assigneeGroup": [
            "cleaners"
          ],
          "checklistFinished": [
            "Clean room A",
            "Clean room B"
          ],
          "checklist": [
            "Clean room A",
            "Clean room B"
          ],
          "tags": [],
          "status": "confirmed",
          "accountId": "Q5fb67280e396Q77002e6c2683",
          "createdBy": "Q5fb67280e39Q677002e6c268c",
          "title": "Post Stay Clean",
          "checklistAggregated": [
            {
              "name": "Clean room A",
              "finished": "true",
              "at": "2024-01-06T21:08:53.990Z",
              "by": ""
            },
            {
              "name": "Clean room B",
              "finished": "False"
            }
          ],
          "attachments": [
            {
              "_id": "6599c15c1d103f000e6464de",
              "mimetype": "image/png",
              "size": 31356,
              "client": "cbt",
              "title": "",
              "url": ""
            }
          ],
          "comments": [],
          "createdAt": "2020-12-01T11:28:51.968Z",
          "updatedAt": "2024-01-06T21:08:55.193Z",
          "assigneeId": null,
          "priority": "high",
          "supervisorId": "64a6b8cfa08e0446a6f4b840",
          "plannedDuration": 0.08,
          "description": "A regular clean between guest stays.",
          "startedAt": "2020-12-02T07:35:24.333Z",
          "enumeratedStatus": 1,
          "timezone": "Australia/Sydney",
          "afterEffects": [],
          "endTime": "2024-01-10T21:04:48.000Z",
          "timing": {
            "type": "specific",
            "startTime": "2024-01-10T21:00:00.000Z"
          },
          "apply": {
            "type": "reservation",
            "listingId": "5fba2d97d8e638002d76d842",
            "reservationId": "9fba3d97d8e62500Gd7f6d842"
          },
          "assignedToMyGroup": false
        }
      },
      "CreateTaskResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier of the task."
          },
          "shortTaskId": {
            "type": "array",
            "description": "A short task ID for quick reference.",
            "properties": {
              "items": {
                "type": "string"
              }
            }
          },
          "assigneeGroup": {
            "type": "array",
            "description": "The team the assignees is part of. This is a tag",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "description": "Task types help you with better identification and reporting."
          },
          "checklistFinished": {
            "type": "array",
            "description": "A list of finished action items that help define the task.",
            "items": {
              "type": "string"
            }
          },
          "checklist": {
            "type": "array",
            "description": "A list of action items that help define the task.",
            "items": {
              "type": "string"
            }
          },
          "checklistAggregated": {
            "type": "array",
            "description": "A list of action items."
          },
          "tags": {
            "type": "array",
            "description": "List of tags the task is related to",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "description": "The status of the task, being one of the following enumerators: pending,confirmed, in progress,completed,canceled."
          },
          "comment": {
            "type": "object",
            "description": "Notes added to the task by the assignee and supervisor. Contains the text, user ID and date the comment was published.",
            "properties": {
              "_id": {
                "type": "string",
                "description": "The unique identifier of the comment."
              },
              "text": {
                "type": "string",
                "description": "The comment text."
              },
              "by": {
                "type": "string",
                "description": "The unique identifier of the user who made the comment."
              },
              "date": {
                "type": "string",
                "description": "The date and time the comment was posted."
              }
            }
          },
          "accountId": {
            "type": "string",
            "description": "The ID of the account the task is attached to"
          },
          "createdBy": {
            "type": "string",
            "description": "The ID of the user who created the task."
          },
          "title": {
            "type": "string",
            "description": "The name you call the task"
          },
          "description": {
            "type": "string",
            "description": "Add any additional information needed to define the task."
          },
          "priority": {
            "type": "string",
            "description": "Assign the level of importance to the task in enumerators - High,Medium,Low",
            "enum": [
              "medium",
              "high",
              "low"
            ]
          },
          "assigneeId": {
            "type": "string",
            "description": "The unique identifier of the person assigned to the task."
          },
          "supervisorId": {
            "type": "string",
            "description": "The uniqueID of the person assigned to supervise the task."
          },
          "timezone": {
            "type": "string",
            "description": ""
          },
          "afterEffects": {
            "type": "object",
            "description": "Actions to be triggered upon the completion of the task.",
            "properties": {
              "action": {
                "type": "string",
                "description": "The action to be performed."
              },
              "_id": {
                "type": "string",
                "description": "The unique identifier of the action."
              },
              "payload": {
                "type": "object",
                "description": "The information or data to be included within the action.",
                "properties": {
                  "target": {
                    "type": "string",
                    "description": "The intended recipient.",
                    "enum": [
                      "user",
                      "contact",
                      "guest",
                      "supervisor"
                    ]
                  },
                  "targetId": {
                    "type": "string",
                    "description": "The unique identifier of the target."
                  },
                  "message": {
                    "type": "object",
                    "description": "The message object.",
                    "properties": {
                      "subject": {
                        "type": "string",
                        "description": "States topic of the message."
                      },
                      "body": {
                        "type": "string",
                        "description": "Contains the message string."
                      },
                      "attachments": {
                        "type": "object",
                        "description": "Contains and describes an attached file.",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Unique identifier of the attachment object."
                          },
                          "url": {
                            "type": "string",
                            "description": "URL location of the attached file."
                          },
                          "title": {
                            "type": "string",
                            "description": "Name of the file attachment."
                          },
                          "mimetype": {
                            "type": "string",
                            "description": "State the kind of file attached."
                          },
                          "size": {
                            "type": "string",
                            "description": "The storage size of the attachment."
                          },
                          "client": {
                            "type": "string",
                            "description": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "attachments": {
            "type": "object",
            "description": "The place to attach external files needed for the task.",
            "properties": {
              "title": {
                "type": "string",
                "description": "Title name of the attached file."
              },
              "url": {
                "type": "string",
                "description": "URL location of the attached file."
              },
              "mimetype": {
                "type": "string",
                "description": "State the kind of file attached."
              },
              "size": {
                "type": "number",
                "description": "The storage size of the attachment."
              },
              "client": {
                "type": "string",
                "description": "Add any additional information needed to define the task."
              }
            }
          },
          "timing": {
            "type": "object",
            "description": "",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "none",
                  "specific",
                  "flexible",
                  "legacy"
                ]
              },
              "startTime": {
                "type": "string",
                "description": "The date and time the task must begin (fixed task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
              },
              "canStartAfter": {
                "type": "string",
                "description": "The date and the time after which the task can begin (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
              },
              "mustFinishBefore": {
                "type": "string",
                "description": "The date and time before which the task must be completed (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
              }
            }
          },
          "apply": {
            "type": "object",
            "description": "",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "listing",
                  "reservation",
                  "owner-reservation"
                ]
              },
              "listingId": {
                "type": "string",
                "description": "The object ID of the listing the task is attached to. Only when reservationId don't exist"
              },
              "reservationId": {
                "type": "string",
                "description": "The reservation ID of the listing the task is attached to. Only when listingId don't exist"
              },
              "ownerReservationId": {
                "type": "string",
                "description": "The owner reservation ID of the listing the task is attached to. Only when owner reservation "
              }
            }
          },
          "plannedDuration": {
            "type": "number",
            "description": "The amount of time budgeted for the task (hours)."
          },
          "pendingExpenses": {
            "description": "The list of expenses that will be created upon task completion",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Expense id",
                  "example": "66851bfe7ac4c20e71804f08"
                },
                "name": {
                  "type": "string",
                  "description": "Expense name",
                  "example": "Cleaning"
                },
                "description": {
                  "type": "string",
                  "description": "Expense description",
                  "example": "Expense details"
                },
                "shareSplit": {
                  "type": "number",
                  "description": "Expense split coefficient",
                  "example": "0.3"
                },
                "shareType": {
                  "enum": [
                    "percent"
                  ],
                  "description": "Share split type will be always `percent`",
                  "example": "percent"
                },
                "accounting": {
                  "type": "object",
                  "description": "Not available for Pending expenses",
                  "properties": {
                    "charges": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "description": "Charge ids"
                      }
                    }
                  }
                },
                "category": {
                  "type": "object",
                  "description": "Expense category",
                  "enum": [
                    "advertising",
                    "cleaning",
                    "electricity",
                    "furniture_appliances",
                    "gas",
                    "internet",
                    "lock_automation",
                    "management",
                    "mortgage",
                    "pest_control",
                    "pool_cleaning",
                    "property_taxes",
                    "repairs_maintenance",
                    "supplies_purchases",
                    "other_misc",
                    "taxes_paid",
                    "telephone",
                    "television",
                    "trash",
                    "water_septic",
                    "guest_cleaning",
                    "owner_cleaning",
                    "channel_commission",
                    "payment_charge",
                    "pet_fee",
                    "startup_fee",
                    "fotoshoot",
                    "vat"
                  ],
                  "example": "pool_cleaning"
                },
                "chargeable": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "number",
                      "example": 25
                    }
                  }
                },
                "payTo": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "664c6a01b6d00de42dbda741",
                      "description": "Vendor id"
                    }
                  }
                },
                "attachments": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Url for cdc where attachment is uploaded"
                    },
                    "originalExtension": {
                      "type": "string",
                      "description": "Attachment extension"
                    },
                    "originalFilename": {
                      "type": "string",
                      "description": "Attachment file name"
                    },
                    "uploadedAt": {
                      "type": "string",
                      "description": "Date of attachment uploading"
                    },
                    "uploadedBy": {
                      "type": "string",
                      "example": "66851bfe7ac4c20e71804f08",
                      "description": "User id who upload attachment"
                    }
                  }
                }
              }
            }
          },
          "postedExpenses": {
            "type": "array",
            "description": "The list of recognized expenses",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Expense id",
                  "example": "66851bfe7ac4c20e71804f08"
                },
                "name": {
                  "type": "string",
                  "description": "Expense name",
                  "example": "Cleaning"
                },
                "description": {
                  "type": "string",
                  "description": "Expense description",
                  "example": "Expense details"
                },
                "shareSplit": {
                  "type": "number",
                  "description": "Expense split coefficient",
                  "example": "0.3"
                },
                "shareType": {
                  "enum": [
                    "percent"
                  ],
                  "description": "Share split type will be always `percent`",
                  "example": "percent"
                },
                "accounting": {
                  "type": "object",
                  "description": "Expense accounting data",
                  "properties": {
                    "charges": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "description": "Charge ids"
                      }
                    },
                    "failureCode": {
                      "type": "number",
                      "example": 10001,
                      "description": "Charge creation Error code"
                    },
                    "requestId": {
                      "type": "string",
                      "example": "456dd47bdb3862d2",
                      "description": "Request id for debugging"
                    }
                  }
                },
                "category": {
                  "type": "object",
                  "description": "Expense category",
                  "enum": [
                    "advertising",
                    "cleaning",
                    "electricity",
                    "furniture_appliances",
                    "gas",
                    "internet",
                    "lock_automation",
                    "management",
                    "mortgage",
                    "pest_control",
                    "pool_cleaning",
                    "property_taxes",
                    "repairs_maintenance",
                    "supplies_purchases",
                    "other_misc",
                    "taxes_paid",
                    "telephone",
                    "television",
                    "trash",
                    "water_septic",
                    "guest_cleaning",
                    "owner_cleaning",
                    "channel_commission",
                    "payment_charge",
                    "pet_fee",
                    "startup_fee",
                    "fotoshoot",
                    "vat"
                  ],
                  "example": "pool_cleaning"
                },
                "chargeable": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "number",
                      "example": 25
                    }
                  }
                },
                "payTo": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "664c6a01b6d00de42dbda741",
                      "description": "Vendor id"
                    }
                  }
                },
                "attachments": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Url for cdc where attachment is uploaded"
                    },
                    "originalExtension": {
                      "type": "string",
                      "description": "Attachment extension"
                    },
                    "originalFilename": {
                      "type": "string",
                      "description": "Attachment file name"
                    },
                    "uploadedAt": {
                      "type": "string",
                      "description": "Date of attachment uploading"
                    },
                    "uploadedBy": {
                      "type": "string",
                      "example": "66851bfe7ac4c20e71804f08",
                      "description": "User id who upload attachment"
                    }
                  }
                }
              }
            }
          }
        },
        "example": {
          "_id": "5fc628f3d6391a00363234d",
          "assigneeGroup": [
            "cleaners"
          ],
          "checklistFinished": [
            "Clean room A",
            "Clean room B"
          ],
          "checklist": [
            "Clean room A",
            "Clean room B"
          ],
          "tags": [],
          "status": "confirmed",
          "accountId": "Q5fb67280e396Q77002e6c2683",
          "createdBy": "Q5fb67280e39Q677002e6c268c",
          "title": "Post Stay Clean",
          "checklistAggregated": [
            {
              "name": "Clean room A",
              "finished": "true",
              "at": "2024-01-06T21:08:53.990Z",
              "by": ""
            },
            {
              "name": "Clean room B",
              "finished": "False"
            }
          ],
          "attachments": [
            {
              "_id": "6599c15c1d103f000e6464de",
              "mimetype": "image/png",
              "size": 31356,
              "client": "cbt",
              "title": "",
              "url": ""
            }
          ],
          "comments": [],
          "createdAt": "2020-12-01T11:28:51.968Z",
          "updatedAt": "2024-01-06T21:08:55.193Z",
          "assigneeId": null,
          "priority": "high",
          "supervisorId": "64a6b8cfa08e0446a6f4b840",
          "plannedDuration": 0.08,
          "description": "A regular clean between guest stays.",
          "startedAt": "2020-12-02T07:35:24.333Z",
          "enumeratedStatus": 1,
          "timezone": "Australia/Sydney",
          "afterEffects": [],
          "endTime": "2024-01-10T21:04:48.000Z",
          "timing": {
            "type": "specific",
            "startTime": "2024-01-10T21:00:00.000Z"
          },
          "apply": {
            "type": "reservation",
            "listingId": "5fba2d97d8e638002d76d842",
            "reservationId": "9fba3d97d8e62500Gd7f6d842"
          },
          "assignedToMyGroup": false
        }
      },
      "GetTasksRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The name you call the task"
          },
          "description": {
            "type": "string",
            "description": "Add any additional information needed to define the task."
          },
          "priority": {
            "type": "string",
            "description": "Priority value",
            "enum": [
              "medium",
              "high",
              "low"
            ],
            "default": "medium"
          },
          "type": {
            "type": "string",
            "description": "Task types help you with better identification and reporting.",
            "enum": [
              "cleaning",
              "maintenance",
              "inspection",
              "mid-stay",
              "runner",
              "sanitation",
              "check-in",
              "issue",
              "inventory",
              "administration"
            ]
          },
          "assigneeGroup": {
            "type": "array",
            "description": "The team the assignees are part of. This is a tag.",
            "items": {
              "type": "string"
            }
          },
          "assigneeId": {
            "description": "The unique identifier of the person assigned to the task.",
            "type": "string"
          },
          "supervisorId": {
            "type": "string",
            "description": "The uniqueID of the person assigned to supervise the task."
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the task must begin (specific task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
          },
          "canStartAfter": {
            "type": "string",
            "format": "date-time",
            "description": "The date and the time after which the task can begin (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
          },
          "mustFinishBefore": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time before which the task must be completed (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
          },
          "listingId": {
            "type": "string",
            "description": "The object ID of the listing the task is attached to"
          },
          "reservationId": {
            "type": "string",
            "description": "The reservation ID of the listing the task is attached to"
          },
          "plannedDuration": {
            "type": "number",
            "description": "The amount of time budgeted for the task (hours)."
          }
        },
        "example": {
          "title": "Post Stay Clean",
          "description": "A regular clean between guest stays.",
          "priority": 2,
          "assigneeGroup": [
            "Cleaners A",
            "Cleaners B"
          ],
          "assigneeId": "69gvymvx55zwf5nn2ubng97cm",
          "supervisorId": "eg2x3iyeqnttngcn4mhzrzawr",
          "startTime": "2021-05-10T11:30:00-04:00",
          "plannedDuration": 2,
          "canStartAfter": "2021-05-10T11:30:00-04:00",
          "mustFinishBefore": "2021-05-10T14:00:00-04:00",
          "listingId": "5803ca18e48f450300c76173",
          "reservationId": "5803ca18e48f450300c76173",
          "type": "cleaning"
        }
      },
      "GetTasksResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "status": {
              "type": "object",
              "description": "The status of the task.",
              "properties": {
                "children": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "confirmed",
                    "in progress",
                    "completed",
                    "canceled"
                  ]
                }
              }
            },
            "taskTitle": {
              "type": "object",
              "description": "The name of the task.",
              "properties": {
                "children": {
                  "type": "string"
                }
              }
            },
            "type": {
              "type": "string",
              "description": "Task types help you with better identification and reporting.",
              "properties": {
                "children": {
                  "type": "string"
                }
              }
            },
            "shortTaskId": {
              "type": "array",
              "description": "A short task ID for quick reference.",
              "properties": {
                "items": {
                  "type": "string"
                }
              }
            },
            "listing": {
              "type": "object",
              "description": "The property to which the task is assigned.",
              "properties": {
                "listingId": {
                  "type": "string"
                },
                "img": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            },
            "reservation": {
              "type": "object",
              "description": "The reservation to which the task is assigned."
            },
            "scheduledFor": {
              "type": "object",
              "properties": {
                "startTime": {
                  "type": "string",
                  "description": "The date and time the task must begin."
                },
                "canStartAfter": {
                  "type": "string",
                  "description": "The date and the time after which the task can begin."
                },
                "mustFinishBefore": {
                  "type": "string",
                  "description": "The date and time before which the task must be completed."
                }
              }
            },
            "endTime": {
              "type": "object",
              "format": "date-time",
              "description": "The date and time the task was completed.",
              "properties": {
                "date": {
                  "type": "string"
                }
              }
            },
            "canStartAfter": {
              "type": "object",
              "format": "date-time",
              "description": "The date and the time after which the task can begin.",
              "properties": {
                "date": {
                  "type": "string"
                }
              }
            },
            "mustFinishBefore": {
              "type": "object",
              "format": "date-time",
              "description": "The date and time before which the task must be completed.",
              "properties": {
                "date": {
                  "type": "string"
                }
              }
            },
            "assignee": {
              "type": "object",
              "properties": {
                "taskId": {
                  "type": "string",
                  "description": "The unique identifier of the task."
                },
                "assigneeId": {
                  "type": "string",
                  "description": "The unique identifier of the person assigned to the task."
                },
                "picture": {
                  "type": "string"
                }
              }
            },
            "id": {
              "type": "string"
            }
          }
        }
      },
      "Forbidden1": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "Picture1": {
        "type": "object",
        "properties": {
          "thumbnail": {
            "type": "string",
            "example": "https://thumbnail.url.com"
          },
          "regular": {
            "type": "string",
            "example": "https://regular.url.com"
          },
          "large": {
            "type": "string",
            "example": "https://large.url.com"
          }
        },
        "required": [
          "thumbnail",
          "regular",
          "large"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "description": "Role ID:\n\n* `58db6932ea2a13ea9f4855a5` - Account manager\n\n* `578b52a6dddfe2b1d0781b0e` - Listing Viewer\n\n* `578b52a6dddfe2b1d0781b0f` - Calendar Availability Control\n\n* `578b52a6dddfe2b1d0781b12` - Listing Admin\n\n* `578b52a6dddfe2b1d0781b10` - Calendar Full Control\n\n* `578b52a6dddfe2b1d0781b11` - Listing's Financials\n\n* `57447a900ebc04ba98064035` - Account admin\n\n* `57c2d040cf6c3fed6a4d1775` - Integration Manager\n\n* `58db693fea2a13ea9f4855aa` - Viewer\n\n* `579e1769cf6c3fed6a3f6b1a` - Listing Manager\n\n* `5e567a850ba1fb0244146fc0` - Calendar Viewer\n\n* `5e57b0826b4440002a603a93` - Communication Agent\n\n* `60d1b0fb396b25993e756e63` - Revenue Manager"
          },
          "listingIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "roleId"
        ]
      },
      "Favs": {
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "views"
        ]
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PAYMENT",
              "RESERVATION",
              "TASK",
              "GENERAL",
              "NIGHTS_LIMIT"
            ],
            "example": "PAYMENT"
          },
          "name": {
            "type": "string",
            "example": "FAILED"
          },
          "targets": {
            "type": "array",
            "example": [
              "DASHBOARD"
            ],
            "items": {
              "type": "string",
              "enum": [
                "EMAIL",
                "SMS",
                "DASHBOARD"
              ]
            }
          }
        },
        "required": [
          "type",
          "name",
          "targets"
        ]
      },
      "Notifications": {
        "type": "object",
        "properties": {
          "subscriptions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "PAYMENT",
                    "RESERVATION",
                    "TASK",
                    "GENERAL",
                    "NIGHTS_LIMIT"
                  ],
                  "example": "PAYMENT"
                },
                "name": {
                  "type": "string",
                  "example": "FAILED"
                },
                "targets": {
                  "type": "array",
                  "example": [
                    "DASHBOARD"
                  ],
                  "items": {
                    "type": "string",
                    "enum": [
                      "EMAIL",
                      "SMS",
                      "DASHBOARD"
                    ]
                  }
                }
              },
              "required": [
                "type",
                "name",
                "targets"
              ]
            }
          }
        },
        "required": [
          "subscriptions"
        ]
      },
      "Settings": {
        "type": "object",
        "properties": {
          "notifications": {
            "description": "Notification settings",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "subscriptions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "PAYMENT",
                            "RESERVATION",
                            "TASK",
                            "GENERAL",
                            "NIGHTS_LIMIT"
                          ],
                          "example": "PAYMENT"
                        },
                        "name": {
                          "type": "string",
                          "example": "FAILED"
                        },
                        "targets": {
                          "type": "array",
                          "example": [
                            "DASHBOARD"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "EMAIL",
                              "SMS",
                              "DASHBOARD"
                            ]
                          }
                        }
                      },
                      "required": [
                        "type",
                        "name",
                        "targets"
                      ]
                    }
                  }
                },
                "required": [
                  "subscriptions"
                ]
              }
            ]
          }
        }
      },
      "UserResultDto": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "611d02b7c9c54b01736ae01d",
            "description": "User MongoDB _id"
          },
          "accountId": {
            "type": "string",
            "example": "611cf837c9c54b01736ae01c",
            "description": "Your account ID"
          },
          "email": {
            "type": "string",
            "example": "example@email.com"
          },
          "emails": {
            "example": [
              "example@email.com"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "userStartedUpdateEmailFlow": {
            "type": "boolean"
          },
          "lastName": {
            "type": "string",
            "example": "Boe"
          },
          "fullName": {
            "type": "string",
            "example": "John Boe"
          },
          "title": {
            "type": "string",
            "example": "CTO"
          },
          "timezone": {
            "type": "string",
            "example": "Europe/Zurich"
          },
          "picture": {
            "type": "object",
            "properties": {
              "thumbnail": {
                "type": "string",
                "example": "https://thumbnail.url.com"
              },
              "regular": {
                "type": "string",
                "example": "https://regular.url.com"
              },
              "large": {
                "type": "string",
                "example": "https://large.url.com"
              }
            },
            "required": [
              "thumbnail",
              "regular",
              "large"
            ]
          },
          "tags": {
            "example": [
              "tag1"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lastActivityTime": {
            "type": "number"
          },
          "phone": {
            "type": "string"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preferredContactMethod": {
            "type": "string"
          },
          "noteBeforeContacting": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "roleId": {
                  "type": "string",
                  "description": "Role ID:\n\n* `58db6932ea2a13ea9f4855a5` - Account manager\n\n* `578b52a6dddfe2b1d0781b0e` - Listing Viewer\n\n* `578b52a6dddfe2b1d0781b0f` - Calendar Availability Control\n\n* `578b52a6dddfe2b1d0781b12` - Listing Admin\n\n* `578b52a6dddfe2b1d0781b10` - Calendar Full Control\n\n* `578b52a6dddfe2b1d0781b11` - Listing's Financials\n\n* `57447a900ebc04ba98064035` - Account admin\n\n* `57c2d040cf6c3fed6a4d1775` - Integration Manager\n\n* `58db693fea2a13ea9f4855aa` - Viewer\n\n* `579e1769cf6c3fed6a3f6b1a` - Listing Manager\n\n* `5e567a850ba1fb0244146fc0` - Calendar Viewer\n\n* `5e57b0826b4440002a603a93` - Communication Agent\n\n* `60d1b0fb396b25993e756e63` - Revenue Manager"
                },
                "listingIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "roleId"
              ]
            }
          },
          "favs": {
            "type": "object",
            "properties": {
              "views": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "views"
            ]
          },
          "displayLanguage": {
            "type": "string"
          },
          "settings": {
            "type": "object",
            "properties": {
              "notifications": {
                "description": "Notification settings",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "subscriptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PAYMENT",
                                "RESERVATION",
                                "TASK",
                                "GENERAL",
                                "NIGHTS_LIMIT"
                              ],
                              "example": "PAYMENT"
                            },
                            "name": {
                              "type": "string",
                              "example": "FAILED"
                            },
                            "targets": {
                              "type": "array",
                              "example": [
                                "DASHBOARD"
                              ],
                              "items": {
                                "type": "string",
                                "enum": [
                                  "EMAIL",
                                  "SMS",
                                  "DASHBOARD"
                                ]
                              }
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "targets"
                          ]
                        }
                      }
                    },
                    "required": [
                      "subscriptions"
                    ]
                  }
                ]
              }
            }
          }
        }
      },
      "PaginatedDto": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "example": 42
          },
          "fields": {
            "type": "string",
            "example": "fullName"
          },
          "sort": {
            "type": "string",
            "example": "fullName"
          },
          "skip": {
            "type": "number",
            "example": 20
          },
          "limit": {
            "type": "number",
            "example": 10
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "611d02b7c9c54b01736ae01d",
                  "description": "User MongoDB _id"
                },
                "accountId": {
                  "type": "string",
                  "example": "611cf837c9c54b01736ae01c",
                  "description": "Your account ID"
                },
                "email": {
                  "type": "string",
                  "example": "example@email.com"
                },
                "emails": {
                  "example": [
                    "example@email.com"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "userStartedUpdateEmailFlow": {
                  "type": "boolean"
                },
                "lastName": {
                  "type": "string",
                  "example": "Boe"
                },
                "fullName": {
                  "type": "string",
                  "example": "John Boe"
                },
                "title": {
                  "type": "string",
                  "example": "CTO"
                },
                "timezone": {
                  "type": "string",
                  "example": "Europe/Zurich"
                },
                "picture": {
                  "type": "object",
                  "properties": {
                    "thumbnail": {
                      "type": "string",
                      "example": "https://thumbnail.url.com"
                    },
                    "regular": {
                      "type": "string",
                      "example": "https://regular.url.com"
                    },
                    "large": {
                      "type": "string",
                      "example": "https://large.url.com"
                    }
                  },
                  "required": [
                    "thumbnail",
                    "regular",
                    "large"
                  ]
                },
                "tags": {
                  "example": [
                    "tag1"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "lastActivityTime": {
                  "type": "number"
                },
                "phone": {
                  "type": "string"
                },
                "phones": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "preferredContactMethod": {
                  "type": "string"
                },
                "noteBeforeContacting": {
                  "type": "string"
                },
                "notes": {
                  "type": "string"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "roleId": {
                        "type": "string",
                        "description": "Role ID:\n\n* `58db6932ea2a13ea9f4855a5` - Account manager\n\n* `578b52a6dddfe2b1d0781b0e` - Listing Viewer\n\n* `578b52a6dddfe2b1d0781b0f` - Calendar Availability Control\n\n* `578b52a6dddfe2b1d0781b12` - Listing Admin\n\n* `578b52a6dddfe2b1d0781b10` - Calendar Full Control\n\n* `578b52a6dddfe2b1d0781b11` - Listing's Financials\n\n* `57447a900ebc04ba98064035` - Account admin\n\n* `57c2d040cf6c3fed6a4d1775` - Integration Manager\n\n* `58db693fea2a13ea9f4855aa` - Viewer\n\n* `579e1769cf6c3fed6a3f6b1a` - Listing Manager\n\n* `5e567a850ba1fb0244146fc0` - Calendar Viewer\n\n* `5e57b0826b4440002a603a93` - Communication Agent\n\n* `60d1b0fb396b25993e756e63` - Revenue Manager"
                      },
                      "listingIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "roleId"
                    ]
                  }
                },
                "favs": {
                  "type": "object",
                  "properties": {
                    "views": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "views"
                  ]
                },
                "displayLanguage": {
                  "type": "string"
                },
                "settings": {
                  "type": "object",
                  "properties": {
                    "notifications": {
                      "description": "Notification settings",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "subscriptions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "PAYMENT",
                                      "RESERVATION",
                                      "TASK",
                                      "GENERAL",
                                      "NIGHTS_LIMIT"
                                    ],
                                    "example": "PAYMENT"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "FAILED"
                                  },
                                  "targets": {
                                    "type": "array",
                                    "example": [
                                      "DASHBOARD"
                                    ],
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "EMAIL",
                                        "SMS",
                                        "DASHBOARD"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "type",
                                  "name",
                                  "targets"
                                ]
                              }
                            }
                          },
                          "required": [
                            "subscriptions"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "count",
          "fields",
          "sort",
          "skip",
          "limit",
          "results"
        ]
      },
      "ErrorObj": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Bad Request"
          },
          "code": {
            "type": "string",
            "example": "VALIDATION_FAILED"
          },
          "status": {
            "type": "number",
            "example": 400
          },
          "data": {
            "example": [
              "property1 must not be less than 0",
              "property1 must be an integer number"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "message",
          "code",
          "status",
          "data"
        ]
      },
      "BadRequestResponseExampleDto1": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Bad Request"
              },
              "code": {
                "type": "string",
                "example": "VALIDATION_FAILED"
              },
              "status": {
                "type": "number",
                "example": 400
              },
              "data": {
                "example": [
                  "property1 must not be less than 0",
                  "property1 must be an integer number"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "message",
              "code",
              "status",
              "data"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "RoleForCreateDto": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "enum": [
              "57447a900ebc04ba98064035",
              "58db6932ea2a13ea9f4855a5",
              "578b52a6dddfe2b1d0781b0e",
              "578b52a6dddfe2b1d0781b0f",
              "578b52a6dddfe2b1d0781b12",
              "578b52a6dddfe2b1d0781b10",
              "578b52a6dddfe2b1d0781b11",
              "57c2d040cf6c3fed6a4d1775",
              "58db693fea2a13ea9f4855aa",
              "579e1769cf6c3fed6a3f6b1a",
              "5e567a850ba1fb0244146fc0",
              "5e57b0826b4440002a603a93",
              "60d1b0fb396b25993e756e63",
              "5cf7846e02d9171c4e4b1698"
            ],
            "example": "579e1769cf6c3fed6a3f6b1a",
            "description": "Role ID:\n\n* `58db6932ea2a13ea9f4855a5` - Account manager\n\n* `578b52a6dddfe2b1d0781b0e` - Listing Viewer\n\n* `578b52a6dddfe2b1d0781b0f` - Calendar Availability Control\n\n* `578b52a6dddfe2b1d0781b12` - Listing Admin\n\n* `578b52a6dddfe2b1d0781b10` - Calendar Full Control\n\n* `578b52a6dddfe2b1d0781b11` - Listing's Financials\n\n* `57447a900ebc04ba98064035` - Account admin\n\n* `57c2d040cf6c3fed6a4d1775` - Integration Manager\n\n* `58db693fea2a13ea9f4855aa` - Viewer\n\n* `579e1769cf6c3fed6a3f6b1a` - Listing Manager\n\n* `5e567a850ba1fb0244146fc0` - Calendar Viewer\n\n* `5e57b0826b4440002a603a93` - Communication Agent\n\n* `60d1b0fb396b25993e756e63` - Revenue Manager"
          },
          "listingIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "roleId"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "picture": {
            "type": "object",
            "properties": {
              "thumbnail": {
                "type": "string",
                "example": "https://thumbnail.url.com"
              },
              "regular": {
                "type": "string",
                "example": "https://regular.url.com"
              },
              "large": {
                "type": "string",
                "example": "https://large.url.com"
              }
            },
            "required": [
              "thumbnail",
              "regular",
              "large"
            ]
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phone": {
            "type": "string"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preferredContactMethod": {
            "type": "string"
          },
          "noteBeforeContacting": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "roleId": {
                  "type": "string",
                  "enum": [
                    "57447a900ebc04ba98064035",
                    "58db6932ea2a13ea9f4855a5",
                    "578b52a6dddfe2b1d0781b0e",
                    "578b52a6dddfe2b1d0781b0f",
                    "578b52a6dddfe2b1d0781b12",
                    "578b52a6dddfe2b1d0781b10",
                    "578b52a6dddfe2b1d0781b11",
                    "57c2d040cf6c3fed6a4d1775",
                    "58db693fea2a13ea9f4855aa",
                    "579e1769cf6c3fed6a3f6b1a",
                    "5e567a850ba1fb0244146fc0",
                    "5e57b0826b4440002a603a93",
                    "60d1b0fb396b25993e756e63",
                    "5cf7846e02d9171c4e4b1698"
                  ],
                  "example": "579e1769cf6c3fed6a3f6b1a",
                  "description": "Role ID:\n\n* `58db6932ea2a13ea9f4855a5` - Account manager\n\n* `578b52a6dddfe2b1d0781b0e` - Listing Viewer\n\n* `578b52a6dddfe2b1d0781b0f` - Calendar Availability Control\n\n* `578b52a6dddfe2b1d0781b12` - Listing Admin\n\n* `578b52a6dddfe2b1d0781b10` - Calendar Full Control\n\n* `578b52a6dddfe2b1d0781b11` - Listing's Financials\n\n* `57447a900ebc04ba98064035` - Account admin\n\n* `57c2d040cf6c3fed6a4d1775` - Integration Manager\n\n* `58db693fea2a13ea9f4855aa` - Viewer\n\n* `579e1769cf6c3fed6a3f6b1a` - Listing Manager\n\n* `5e567a850ba1fb0244146fc0` - Calendar Viewer\n\n* `5e57b0826b4440002a603a93` - Communication Agent\n\n* `60d1b0fb396b25993e756e63` - Revenue Manager"
                },
                "listingIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "roleId"
              ]
            }
          },
          "favs": {
            "type": "object",
            "properties": {
              "views": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "views"
            ]
          },
          "displayLanguage": {
            "type": "string"
          },
          "settings": {
            "type": "object",
            "properties": {
              "notifications": {
                "description": "Notification settings",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "subscriptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PAYMENT",
                                "RESERVATION",
                                "TASK",
                                "GENERAL",
                                "NIGHTS_LIMIT"
                              ],
                              "example": "PAYMENT"
                            },
                            "name": {
                              "type": "string",
                              "example": "FAILED"
                            },
                            "targets": {
                              "type": "array",
                              "example": [
                                "DASHBOARD"
                              ],
                              "items": {
                                "type": "string",
                                "enum": [
                                  "EMAIL",
                                  "SMS",
                                  "DASHBOARD"
                                ]
                              }
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "targets"
                          ]
                        }
                      }
                    },
                    "required": [
                      "subscriptions"
                    ]
                  }
                ]
              }
            }
          }
        }
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "picture": {
            "type": "object",
            "properties": {
              "thumbnail": {
                "type": "string",
                "example": "https://thumbnail.url.com"
              },
              "regular": {
                "type": "string",
                "example": "https://regular.url.com"
              },
              "large": {
                "type": "string",
                "example": "https://large.url.com"
              }
            },
            "required": [
              "thumbnail",
              "regular",
              "large"
            ]
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phone": {
            "type": "string"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preferredContactMethod": {
            "type": "string"
          },
          "noteBeforeContacting": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "customerType": {
            "enum": [
              "lite",
              "pro"
            ],
            "type": "string"
          },
          "roles": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "roleId": {
                  "type": "string",
                  "enum": [
                    "57447a900ebc04ba98064035",
                    "58db6932ea2a13ea9f4855a5",
                    "578b52a6dddfe2b1d0781b0e",
                    "578b52a6dddfe2b1d0781b0f",
                    "578b52a6dddfe2b1d0781b12",
                    "578b52a6dddfe2b1d0781b10",
                    "578b52a6dddfe2b1d0781b11",
                    "57c2d040cf6c3fed6a4d1775",
                    "58db693fea2a13ea9f4855aa",
                    "579e1769cf6c3fed6a3f6b1a",
                    "5e567a850ba1fb0244146fc0",
                    "5e57b0826b4440002a603a93",
                    "60d1b0fb396b25993e756e63",
                    "5cf7846e02d9171c4e4b1698"
                  ],
                  "example": "579e1769cf6c3fed6a3f6b1a",
                  "description": "Role ID:\n\n* `58db6932ea2a13ea9f4855a5` - Account manager\n\n* `578b52a6dddfe2b1d0781b0e` - Listing Viewer\n\n* `578b52a6dddfe2b1d0781b0f` - Calendar Availability Control\n\n* `578b52a6dddfe2b1d0781b12` - Listing Admin\n\n* `578b52a6dddfe2b1d0781b10` - Calendar Full Control\n\n* `578b52a6dddfe2b1d0781b11` - Listing's Financials\n\n* `57447a900ebc04ba98064035` - Account admin\n\n* `57c2d040cf6c3fed6a4d1775` - Integration Manager\n\n* `58db693fea2a13ea9f4855aa` - Viewer\n\n* `579e1769cf6c3fed6a3f6b1a` - Listing Manager\n\n* `5e567a850ba1fb0244146fc0` - Calendar Viewer\n\n* `5e57b0826b4440002a603a93` - Communication Agent\n\n* `60d1b0fb396b25993e756e63` - Revenue Manager"
                },
                "listingIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "roleId"
              ]
            }
          },
          "favs": {
            "type": "object",
            "properties": {
              "views": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "views"
            ]
          },
          "displayLanguage": {
            "type": "string"
          },
          "settings": {
            "type": "object",
            "properties": {
              "notifications": {
                "description": "Notification settings",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "subscriptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PAYMENT",
                                "RESERVATION",
                                "TASK",
                                "GENERAL",
                                "NIGHTS_LIMIT"
                              ],
                              "example": "PAYMENT"
                            },
                            "name": {
                              "type": "string",
                              "example": "FAILED"
                            },
                            "targets": {
                              "type": "array",
                              "example": [
                                "DASHBOARD"
                              ],
                              "items": {
                                "type": "string",
                                "enum": [
                                  "EMAIL",
                                  "SMS",
                                  "DASHBOARD"
                                ]
                              }
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "targets"
                          ]
                        }
                      }
                    },
                    "required": [
                      "subscriptions"
                    ]
                  }
                ]
              }
            }
          },
          "registrationType": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "roles"
        ]
      },
      "Hash": {
        "type": "object",
        "properties": {
          "algorithm": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "algorithm",
          "value"
        ]
      },
      "Password": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "object",
            "properties": {
              "algorithm": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "algorithm",
              "value"
            ]
          }
        },
        "required": [
          "hash"
        ]
      },
      "Credentials": {
        "type": "object",
        "properties": {
          "password": {
            "type": "object",
            "properties": {
              "hash": {
                "type": "object",
                "properties": {
                  "algorithm": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "required": [
                  "algorithm",
                  "value"
                ]
              }
            },
            "required": [
              "hash"
            ]
          }
        },
        "required": [
          "password"
        ]
      },
      "MigrateUserDto": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "picture": {
            "type": "object",
            "properties": {
              "thumbnail": {
                "type": "string",
                "example": "https://thumbnail.url.com"
              },
              "regular": {
                "type": "string",
                "example": "https://regular.url.com"
              },
              "large": {
                "type": "string",
                "example": "https://large.url.com"
              }
            },
            "required": [
              "thumbnail",
              "regular",
              "large"
            ]
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phone": {
            "type": "string"
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "preferredContactMethod": {
            "type": "string"
          },
          "noteBeforeContacting": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "roles": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "roleId": {
                  "type": "string",
                  "description": "Role ID:\n\n* `58db6932ea2a13ea9f4855a5` - Account manager\n\n* `578b52a6dddfe2b1d0781b0e` - Listing Viewer\n\n* `578b52a6dddfe2b1d0781b0f` - Calendar Availability Control\n\n* `578b52a6dddfe2b1d0781b12` - Listing Admin\n\n* `578b52a6dddfe2b1d0781b10` - Calendar Full Control\n\n* `578b52a6dddfe2b1d0781b11` - Listing's Financials\n\n* `57447a900ebc04ba98064035` - Account admin\n\n* `57c2d040cf6c3fed6a4d1775` - Integration Manager\n\n* `58db693fea2a13ea9f4855aa` - Viewer\n\n* `579e1769cf6c3fed6a3f6b1a` - Listing Manager\n\n* `5e567a850ba1fb0244146fc0` - Calendar Viewer\n\n* `5e57b0826b4440002a603a93` - Communication Agent\n\n* `60d1b0fb396b25993e756e63` - Revenue Manager"
                },
                "listingIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "roleId"
              ]
            }
          },
          "favs": {
            "type": "object",
            "properties": {
              "views": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "views"
            ]
          },
          "displayLanguage": {
            "type": "string"
          },
          "credentials": {
            "type": "object",
            "properties": {
              "password": {
                "type": "object",
                "properties": {
                  "hash": {
                    "type": "object",
                    "properties": {
                      "algorithm": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "algorithm",
                      "value"
                    ]
                  }
                },
                "required": [
                  "hash"
                ]
              }
            },
            "required": [
              "password"
            ]
          },
          "settings": {
            "type": "object",
            "properties": {
              "notifications": {
                "description": "Notification settings",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "subscriptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PAYMENT",
                                "RESERVATION",
                                "TASK",
                                "GENERAL",
                                "NIGHTS_LIMIT"
                              ],
                              "example": "PAYMENT"
                            },
                            "name": {
                              "type": "string",
                              "example": "FAILED"
                            },
                            "targets": {
                              "type": "array",
                              "example": [
                                "DASHBOARD"
                              ],
                              "items": {
                                "type": "string",
                                "enum": [
                                  "EMAIL",
                                  "SMS",
                                  "DASHBOARD"
                                ]
                              }
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "targets"
                          ]
                        }
                      }
                    },
                    "required": [
                      "subscriptions"
                    ]
                  }
                ]
              }
            }
          }
        },
        "required": [
          "_id",
          "email",
          "roles"
        ]
      },
      "VerifyUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "VendorResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "phone": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "address": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "company",
          "firstName",
          "lastName",
          "phone",
          "email"
        ]
      },
      "ListVendorsResponseDto": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "company": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "fullName": {
                  "type": "string"
                },
                "phone": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "email": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "address": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "notes": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "company",
                "firstName",
                "lastName",
                "phone",
                "email"
              ]
            }
          }
        },
        "required": [
          "count",
          "results"
        ]
      },
      "ValidationErrorBody": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Bad Request"
          },
          "status": {
            "type": "number",
            "example": 400
          },
          "code": {
            "type": "string",
            "example": "VALIDATION_FAILED"
          },
          "data": {
            "example": [
              "limit must not be less than 25"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "message",
          "status",
          "code",
          "data"
        ]
      },
      "ValidationErrorDto": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Bad Request"
              },
              "status": {
                "type": "number",
                "example": 400
              },
              "code": {
                "type": "string",
                "example": "VALIDATION_FAILED"
              },
              "data": {
                "example": [
                  "limit must not be less than 25"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "message",
              "status",
              "code",
              "data"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "NotFoundErrorBody": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Not Found"
          },
          "status": {
            "type": "number",
            "example": 404
          },
          "data": {
            "type": "string",
            "example": "Not Found"
          }
        },
        "required": [
          "message",
          "status",
          "data"
        ]
      },
      "NotFoundErrorDto": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Not Found"
              },
              "status": {
                "type": "number",
                "example": 404
              },
              "data": {
                "type": "string",
                "example": "Not Found"
              }
            },
            "required": [
              "message",
              "status",
              "data"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "EndpointSecretOut": {
        "type": "object",
        "properties": {}
      }
    },
    "examples": {
      "Account": {
        "description": "Guesty account",
        "value": {
          "id": "563e0b6a08a2710e00057b82",
          "name": "BnbAir",
          "timezone": "Asia/Jerusalem",
          "pms": {
            "paymentProcessing": {
              "active": true,
              "paymentProviders": {
                "stripe": {
                  "accountName": "Poll dancers etc.",
                  "active": true,
                  "defaultCurrency": "usd",
                  "payload": {
                    "access_token": "<ACCESS_TOKEN>",
                    "livemode": true,
                    "refresh_token": "<REFRESH_TOKEN>",
                    "token_type": "bearer",
                    "stripe_publishable_key": "<PUBLISHABLE_KEY>",
                    "stripe_user_id": "<USER_ID>",
                    "scope": "read_write",
                    "id": "acct_19nmQxLYcJ0oiNhY"
                  },
                  "status": "ACTIVE",
                  "syncedAt": "2017-03-02T13:06:31.857Z"
                }
              }
            }
          },
          "billing": {
            "stripeCustomerId": "<CUSTOMER_ID>",
            "prevBillingDate": "2017-07-03T15:30:50.174Z",
            "paymentMethods": [],
            "balance": {
              "amount": 3,
              "currency": "USD"
            },
            "nextBillingDate": "2017-07-10T15:30:50.174Z",
            "billingDay": 1,
            "billingCycle": "Weekly"
          }
        }
      },
      "PaymentMethod": {
        "description": "Payment method",
        "value": {
          "saveForFutureUse": true,
          "status": "ACTIVE",
          "type": "PHYSICAL",
          "_id": "paymentMethodId",
          "accountId": "accountId",
          "method": "STRIPE",
          "payload": {
            "id": "pm_...",
            "object": "payment_method",
            "customer": "cus_...",
            "name": "test test",
            "address_city": null,
            "address_country": null,
            "address_line1": null,
            "address_line2": null,
            "address_state": null,
            "address_zip": null,
            "address_line1_check": null,
            "address_zip_check": null,
            "cvc_check": "pass",
            "brand": "visa",
            "country": "US",
            "exp_month": 4,
            "exp_year": 2024,
            "fingerprint": "6i2ad2EHQpQJ8PeH",
            "funding": "credit",
            "last4": "4242"
          },
          "createdAt": "2020-05-20T10:12:39.438Z",
          "last4": "4242",
          "brand": "visa",
          "__v": 0
        }
      },
      "PaymentMethodList": {
        "description": "List of payment methods",
        "value": [
          {
            "saveForFutureUse": true,
            "status": "ACTIVE",
            "type": "PHYSICAL",
            "_id": "paymentMethodId",
            "accountId": "accountId",
            "method": "STRIPE",
            "payload": {
              "id": "pm_...",
              "object": "payment_method",
              "customer": "cus_...",
              "name": "test test",
              "address_city": null,
              "address_country": null,
              "address_line1": null,
              "address_line2": null,
              "address_state": null,
              "address_zip": null,
              "address_line1_check": null,
              "address_zip_check": null,
              "cvc_check": "pass",
              "brand": "visa",
              "country": "US",
              "exp_month": 4,
              "exp_year": 2024,
              "fingerprint": "6i2ad2EHQpQJ8PeH",
              "funding": "credit",
              "last4": "4242"
            },
            "createdAt": "2020-05-20T10:12:39.438Z",
            "last4": "4242",
            "brand": "visa",
            "__v": 0
          }
        ]
      },
      "singleFee": {
        "description": "additional fee example",
        "value": {
          "_id": "5fa02fa358d2db673e17bc2d",
          "isPercentage": false,
          "automationSources": [],
          "automationPlatforms": [],
          "RUSources": [],
          "isAutomated": false,
          "allPlatforms": false,
          "allRUSources": false,
          "allSources": false,
          "name": "AB",
          "type": "FOOD",
          "value": 5,
          "accountId": "596f6fe706112710005d96ff",
          "isSyncToSupportedChannelsEnabled": false,
          "__v": 0
        }
      },
      "multipleFees": {
        "description": "list of additional fees",
        "value": [
          {
            "_id": "5fa02fa358d2db673e17bc2d",
            "isPercentage": false,
            "automationSources": [],
            "automationPlatforms": [],
            "RUSources": [],
            "isAutomated": false,
            "allPlatforms": false,
            "allRUSources": false,
            "allSources": false,
            "name": "AB",
            "type": "EARLY_CHECK_IN",
            "value": 5,
            "accountId": "596f6fe706112710005d96ff",
            "isSyncToSupportedChannelsEnabled": false,
            "multiplier": "PER_GUEST",
            "__v": 0
          }
        ]
      },
      "singleFeeListing": {
        "description": "additional fee example",
        "value": {
          "_id": "5fa02fa358d2db673e17bc2d",
          "isPercentage": false,
          "automationSources": [],
          "automationPlatforms": [],
          "RUSources": [],
          "listingId": "5c2cc4be46cb1e00226a5b6e",
          "isAutomated": false,
          "allPlatforms": false,
          "allRUSources": false,
          "allSources": false,
          "name": "AB",
          "type": "FOOD",
          "value": 5,
          "accountId": "596f6fe706112710005d96ff",
          "isSyncToSupportedChannelsEnabled": false,
          "__v": 0
        }
      },
      "multipleFeesListing": {
        "description": "list of additional fees",
        "value": [
          {
            "_id": "5fa02fa358d2db673e17bc2d",
            "isPercentage": false,
            "automationSources": [],
            "automationPlatforms": [],
            "RUSources": [],
            "listingId": "5c2cc4be46cb1e00226a5b6e",
            "isAutomated": false,
            "allPlatforms": false,
            "allRUSources": false,
            "allSources": false,
            "name": "AB",
            "type": "EARLY_CHECK_IN",
            "value": 5,
            "accountId": "596f6fe706112710005d96ff",
            "isSyncToSupportedChannelsEnabled": false,
            "multiplier": "PER_GUEST",
            "__v": 0
          }
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "name": "authorization",
        "in": "header"
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "paths": {
    "/accounts/me": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get account details of current user",
        "responses": {
          "200": {
            "description": "Retrieved account details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Status of connection"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "mailgun": {
                      "type": "object",
                      "properties": {}
                    },
                    "isInterestedInServiceOnExistingReservations": {
                      "type": "boolean"
                    },
                    "siqnupQuestions": {
                      "type": "object",
                      "properties": {}
                    },
                    "ignoredHooks": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "5981b4b8c97c260f0067c499"
                      }
                    },
                    "initialLocation": {
                      "type": "string"
                    },
                    "recognizedRevenueDays": {
                      "type": "number"
                    },
                    "initialReferrer": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "question": {
                          "type": "string"
                        },
                        "answer": {
                          "type": "string"
                        }
                      }
                    },
                    "mailingAddress": {
                      "type": "object",
                      "properties": {
                        "lat": {
                          "type": "number"
                        },
                        "lng": {
                          "type": "number"
                        },
                        "full": {
                          "type": "string"
                        }
                      }
                    },
                    "sisenseAccess": {
                      "type": "boolean"
                    },
                    "recognizedRevenueMode": {
                      "type": "string",
                      "enum": [
                        "check-in",
                        "check-out",
                        "per_night"
                      ]
                    },
                    "companyInformation": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "contactFirstname": {
                          "type": "string"
                        },
                        "contactLastname": {
                          "type": "string"
                        },
                        "contactEmail": {
                          "type": "string",
                          "format": "email"
                        },
                        "contactPhone": {
                          "type": "string"
                        },
                        "businessType": {
                          "type": "string"
                        },
                        "vatNum": {
                          "type": "number"
                        },
                        "country": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "zipCode": {
                          "type": "string"
                        },
                        "corporationPlace": {
                          "type": "string"
                        },
                        "submittedAt": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date"
                    },
                    "RUFeeActivation": {
                      "type": "boolean"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "companyLogo": {
                      "type": "string"
                    },
                    "accountCategorization": {
                      "type": "number"
                    },
                    "accountCategorizationIsManual": {
                      "type": "boolean"
                    },
                    "agodaEmail": {
                      "type": "string",
                      "format": "email"
                    },
                    "onBoarding": {
                      "type": "object",
                      "properties": {
                        "createdFirstHookAt": {
                          "type": "string",
                          "format": "date"
                        },
                        "zendeskTicketId": {
                          "type": "string"
                        }
                      }
                    },
                    "migration": {
                      "type": "object",
                      "properties": {
                        "rateStrategy": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    },
                    "pricePlanMinimum": {
                      "type": "number"
                    },
                    "pricePlanMaximum": {
                      "type": "number"
                    },
                    "SaaS": {
                      "type": "object",
                      "properties": {}
                    },
                    "billing": {
                      "type": "object",
                      "properties": {
                        "billingCycle": {
                          "type": "string"
                        },
                        "billingDay": {
                          "type": "number"
                        },
                        "nextBillingDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "paymentMethods": {
                          "type": "array",
                          "items": {}
                        },
                        "noFreezingFlow": {
                          "type": "boolean"
                        },
                        "stripeCustomerId": {
                          "type": "string"
                        }
                      }
                    },
                    "weekendBasePriceMigrationDone": {
                      "type": "boolean"
                    },
                    "pms": {
                      "type": "object",
                      "properties": {
                        "website": {
                          "type": "object",
                          "properties": {
                            "defaultStatusForNewReservations": {
                              "type": "string"
                            },
                            "defaultSort": {
                              "type": "string"
                            },
                            "includedListings": {
                              "type": "array",
                              "items": {}
                            },
                            "excludedListings": {
                              "type": "array",
                              "items": {}
                            }
                          }
                        },
                        "calendar": {
                          "type": "object",
                          "properties": {
                            "requireReasonForUpdatingPricing": {
                              "type": "boolean"
                            }
                          }
                        },
                        "cleaningStatus": {
                          "type": "object",
                          "properties": {
                            "statusFade": {
                              "type": "object",
                              "properties": {
                                "active": {
                                  "type": "boolean"
                                },
                                "days": {
                                  "type": "number"
                                },
                                "toStatus": {
                                  "type": "string"
                                }
                              }
                            },
                            "markAsDirtyOnCheckIn": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "whiteLabel": {
                      "type": "object",
                      "properties": {
                        "integrationEmailDomains": {
                          "type": "array",
                          "items": {}
                        },
                        "shouldWhiteLabelApp": {
                          "type": "boolean"
                        }
                      }
                    },
                    "hadFirstBookingAt": {
                      "type": "string",
                      "format": "date"
                    },
                    "availablePhoneNumbers": {
                      "type": "array",
                      "items": {}
                    },
                    "customFields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "displayName": {
                            "type": "string"
                          },
                          "isPublic": {
                            "type": "boolean"
                          },
                          "key": {
                            "type": "string"
                          },
                          "object": {
                            "type": "string",
                            "enum": [
                              "listing",
                              "reservation"
                            ]
                          },
                          "options": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "user",
                              "boolean",
                              "enum",
                              "longtext",
                              "date",
                              "text",
                              "time",
                              "contact",
                              "number"
                            ]
                          }
                        }
                      }
                    },
                    "plan": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "planType": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "isLocked": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "financials": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "channelCommission": {
                          "type": "object",
                          "properties": {
                            "rentalsUnited": {
                              "type": "object",
                              "properties": {
                                "bookingCom": {
                                  "type": "object",
                                  "properties": {
                                    "tax": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "expedia": {
                                  "type": "object",
                                  "properties": {
                                    "commission": {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "of": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tax": {
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                },
                                "agoda": {
                                  "type": "object",
                                  "properties": {
                                    "commission": {
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "type": "number"
                                        },
                                        "of": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "tax": {
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "bookingCom": {
                              "type": "object",
                              "properties": {
                                "tax": {
                                  "type": "number"
                                }
                              }
                            },
                            "homeaway2": {
                              "type": "object",
                              "properties": {
                                "commission": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "number"
                                    },
                                    "of": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "tax": {
                                      "type": "number"
                                    }
                                  }
                                }
                              }
                            },
                            "useAccountSettings": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "commissionFormula": {
                      "type": "string"
                    },
                    "netIncomeFormula": {
                      "type": "string"
                    },
                    "ownerRevenueFormula": {
                      "type": "string"
                    },
                    "cancellationSurvey": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date"
                          },
                          "reasons": {
                            "type": "object",
                            "properties": {
                              "Onboarding experience": {
                                "type": "string",
                                "enum": [
                                  "hidden",
                                  "unselected",
                                  "selected"
                                ]
                              },
                              "Missing features": {
                                "type": "string",
                                "enum": [
                                  "hidden",
                                  "unselected",
                                  "selected"
                                ]
                              },
                              "Technical issues": {
                                "type": "string",
                                "enum": [
                                  "hidden",
                                  "unselected",
                                  "selected"
                                ]
                              },
                              "System usability": {
                                "type": "string",
                                "enum": [
                                  "hidden",
                                  "unselected",
                                  "selected"
                                ]
                              },
                              "Value for money": {
                                "type": "string",
                                "enum": [
                                  "hidden",
                                  "unselected",
                                  "selected"
                                ]
                              },
                              "Customer support": {
                                "type": "string",
                                "enum": [
                                  "hidden",
                                  "unselected",
                                  "selected"
                                ]
                              },
                              "Guest Communication Service": {
                                "type": "string",
                                "enum": [
                                  "hidden",
                                  "unselected",
                                  "selected"
                                ]
                              },
                              "Other": {
                                "type": "string",
                                "enum": [
                                  "hidden",
                                  "unselected",
                                  "selected"
                                ]
                              }
                            }
                          },
                          "subReasons": {
                            "type": "object",
                            "properties": {
                              "Other": {
                                "type": "object",
                                "properties": {
                                  "Other": {
                                    "type": "string",
                                    "enum": [
                                      "hidden",
                                      "unselected",
                                      "selected"
                                    ]
                                  },
                                  "OtherInput": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "internalData": {
                      "type": "object",
                      "properties": {
                        "agreedToTOS": {
                          "type": "object",
                          "properties": {
                            "firstName": {
                              "type": "string"
                            },
                            "lastName": {
                              "type": "string"
                            },
                            "userEmail": {
                              "type": "string",
                              "format": "email"
                            },
                            "date": {
                              "type": "string",
                              "format": "email"
                            }
                          }
                        },
                        "features": {
                          "type": "object",
                          "properties": {
                            "airbnbIntegration": {
                              "type": "string"
                            }
                          }
                        },
                        "oldOnboardingStatus": {
                          "type": "string"
                        },
                        "accountManager": {
                          "type": "string"
                        },
                        "onboardingStatus": {
                          "type": "string"
                        }
                      }
                    },
                    "taxes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "units": {
                            "type": "string"
                          },
                          "quantifier": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "commissionTaxPercentage": {
                      "type": "number"
                    },
                    "systemEmailsRecipients": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "apiKeys": {
                      "type": "array",
                      "items": {}
                    },
                    "markups": {
                      "type": "object",
                      "properties": {
                        "agoda": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "number"
                            },
                            "units": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "signupQuestions": {
                      "type": "array",
                      "items": {}
                    },
                    "receptionistsService": {
                      "type": "object",
                      "properties": {
                        "receptionDesk": {
                          "type": "object",
                          "properties": {
                            "ittt": {
                              "type": "array",
                              "items": {}
                            }
                          }
                        },
                        "screening": {
                          "type": "object",
                          "properties": {
                            "checklist": {
                              "type": "array",
                              "items": {}
                            }
                          }
                        },
                        "contactPersonUserId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/accounts/{id}/custom-fields": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "e.g. - Account id"
          }
        ],
        "summary": "Get All Custom Fields",
        "responses": {
          "200": {
            "description": "Custom Fields Array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "fieldId": {
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string"
                      },
                      "isPublic": {
                        "type": "boolean"
                      },
                      "key": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string",
                        "enum": [
                          "listing",
                          "reservation"
                        ]
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "boolean",
                          "enum",
                          "longtext",
                          "date",
                          "text",
                          "time",
                          "contact",
                          "number"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "e.g. - Account id"
          }
        ],
        "summary": "Create new custom field",
        "requestBody": {
          "description": "Custom Fields Array: all new fields",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customFields": {
                    "type": "array",
                    "description": "Custom Fields Array: all new fields",
                    "items": {
                      "oneOf": [
                        {
                          "description": "Use when createing *options* customField: ```type:enum```\n This case required options arry in edition",
                          "type": "object",
                          "required": [
                            "isPublic",
                            "key",
                            "object",
                            "options",
                            "type"
                          ],
                          "properties": {
                            "isPublic": {
                              "type": "boolean"
                            },
                            "key": {
                              "type": "string"
                            },
                            "object": {
                              "type": "string",
                              "enum": [
                                "listing",
                                "reservation"
                              ]
                            },
                            "options": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "enum"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "isPublic",
                            "key",
                            "object",
                            "type"
                          ],
                          "properties": {
                            "isPublic": {
                              "type": "boolean"
                            },
                            "key": {
                              "type": "string"
                            },
                            "object": {
                              "type": "string",
                              "enum": [
                                "listing",
                                "reservation"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "user",
                                "boolean",
                                "longtext",
                                "date",
                                "text",
                                "time",
                                "contact",
                                "number"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Custom Fields Array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string"
                      },
                      "isPublic": {
                        "type": "boolean"
                      },
                      "key": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string",
                        "enum": [
                          "listing",
                          "reservation"
                        ]
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "boolean",
                          "enum",
                          "longtext",
                          "date",
                          "text",
                          "time",
                          "contact",
                          "number"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Update custom field",
        "requestBody": {
          "description": "Custom Field. IMPORTANT NOTE: The only field editable is 'options' on (on custom filed ```type:enum```) type Custom Fields. The whole object need to be sent",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customFields": {
                    "type": "array",
                    "description": "**IMPORTANT NOTE:**\nThe oroginal object should be sent,\n **The only field editable is 'options' for 'enum' customFiled type**",
                    "items": {
                      "allOf": [
                        {
                          "description": "Use when createing *options* customField: ```type:enum```\n This case required options arry in edition",
                          "type": "object",
                          "required": [
                            "isPublic",
                            "key",
                            "object",
                            "options",
                            "type"
                          ],
                          "properties": {
                            "isPublic": {
                              "type": "boolean"
                            },
                            "key": {
                              "type": "string"
                            },
                            "object": {
                              "type": "string",
                              "enum": [
                                "listing",
                                "reservation"
                              ]
                            },
                            "options": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "enum"
                              ]
                            }
                          }
                        },
                        {
                          "required": [
                            "fieldId"
                          ],
                          "properties": {
                            "fieldId": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Custom Fields Array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string"
                      },
                      "isPublic": {
                        "type": "boolean"
                      },
                      "key": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string",
                        "enum": [
                          "listing",
                          "reservation"
                        ]
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "boolean",
                          "enum",
                          "longtext",
                          "date",
                          "text",
                          "time",
                          "contact",
                          "number"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/accounts/{id}/custom-fields/{field_id}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Custom Field",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "field_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Custom Field",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fieldId": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "isPublic": {
                      "type": "boolean"
                    },
                    "key": {
                      "type": "string"
                    },
                    "object": {
                      "type": "string",
                      "enum": [
                        "listing",
                        "reservation"
                      ]
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "user",
                        "boolean",
                        "enum",
                        "longtext",
                        "date",
                        "text",
                        "time",
                        "contact",
                        "number"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Delete Custom Field",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "field_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Custom Field",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string"
                      },
                      "isPublic": {
                        "type": "boolean"
                      },
                      "key": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string",
                        "enum": [
                          "listing",
                          "reservation"
                        ]
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "boolean",
                          "enum",
                          "longtext",
                          "date",
                          "text",
                          "time",
                          "contact",
                          "number"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "UsersHttpController_getUsers",
        "summary": "List all users",
        "description": "List all users",
        "parameters": [
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Selection of fields, separated by space. If fields not be chosen response will be return with all fields. The selected fields from the users table will be returned inside the response",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "description": "Pagination",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Pagination, max: 200",
            "schema": {
              "minimum": 0,
              "maximum": 200,
              "default": 200,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sorting",
            "schema": {
              "default": "fullName",
              "type": "string"
            }
          },
          {
            "name": "q",
            "required": false,
            "in": "query",
            "description": "Search query string. Searches in fullName, emails, phones",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number",
                      "example": 42
                    },
                    "fields": {
                      "type": "string",
                      "example": "fullName"
                    },
                    "sort": {
                      "type": "string",
                      "example": "fullName"
                    },
                    "skip": {
                      "type": "number",
                      "example": 20
                    },
                    "limit": {
                      "type": "number",
                      "example": 10
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "611d02b7c9c54b01736ae01d",
                            "description": "User MongoDB _id"
                          },
                          "accountId": {
                            "type": "string",
                            "example": "611cf837c9c54b01736ae01c",
                            "description": "Your account ID"
                          },
                          "email": {
                            "type": "string",
                            "example": "example@email.com"
                          },
                          "emails": {
                            "example": [
                              "example@email.com"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "firstName": {
                            "type": "string",
                            "example": "John"
                          },
                          "userStartedUpdateEmailFlow": {
                            "type": "boolean"
                          },
                          "lastName": {
                            "type": "string",
                            "example": "Boe"
                          },
                          "fullName": {
                            "type": "string",
                            "example": "John Boe"
                          },
                          "title": {
                            "type": "string",
                            "example": "CTO"
                          },
                          "timezone": {
                            "type": "string",
                            "example": "Europe/Zurich"
                          },
                          "picture": {
                            "type": "object",
                            "properties": {
                              "thumbnail": {
                                "type": "string",
                                "example": "https://thumbnail.url.com"
                              },
                              "regular": {
                                "type": "string",
                                "example": "https://regular.url.com"
                              },
                              "large": {
                                "type": "string",
                                "example": "https://large.url.com"
                              }
                            },
                            "required": [
                              "thumbnail",
                              "regular",
                              "large"
                            ]
                          },
                          "tags": {
                            "example": [
                              "tag1"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "lastActivityTime": {
                            "type": "number"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "phones": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "preferredContactMethod": {
                            "type": "string"
                          },
                          "noteBeforeContacting": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "roleId": {
                                  "type": "string",
                                  "description": "Role ID:\n\n* `58db6932ea2a13ea9f4855a5` - Account manager\n\n* `578b52a6dddfe2b1d0781b0e` - Listing Viewer\n\n* `578b52a6dddfe2b1d0781b0f` - Calendar Availability Control\n\n* `578b52a6dddfe2b1d0781b12` - Listing Admin\n\n* `578b52a6dddfe2b1d0781b10` - Calendar Full Control\n\n* `578b52a6dddfe2b1d0781b11` - Listing's Financials\n\n* `57447a900ebc04ba98064035` - Account admin\n\n* `57c2d040cf6c3fed6a4d1775` - Integration Manager\n\n* `58db693fea2a13ea9f4855aa` - Viewer\n\n* `579e1769cf6c3fed6a3f6b1a` - Listing Manager\n\n* `5e567a850ba1fb0244146fc0` - Calendar Viewer\n\n* `5e57b0826b4440002a603a93` - Communication Agent\n\n* `60d1b0fb396b25993e756e63` - Revenue Manager"
                                },
                                "listingIds": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "roleId"
                              ]
                            }
                          },
                          "favs": {
                            "type": "object",
                            "properties": {
                              "views": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "views"
                            ]
                          },
                          "displayLanguage": {
                            "type": "string"
                          },
                          "settings": {
                            "type": "object",
                            "properties": {
                              "notifications": {
                                "description": "Notification settings",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "subscriptions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "PAYMENT",
                                                "RESERVATION",
                                                "TASK",
                                                "GENERAL",
                                                "NIGHTS_LIMIT"
                                              ],
                                              "example": "PAYMENT"
                                            },
                                            "name": {
                                              "type": "string",
                                              "example": "FAILED"
                                            },
                                            "targets": {
                                              "type": "array",
                                              "example": [
                                                "DASHBOARD"
                                              ],
                                              "items": {
                                                "type": "string",
                                                "enum": [
                                                  "EMAIL",
                                                  "SMS",
                                                  "DASHBOARD"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "name",
                                            "targets"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "subscriptions"
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "count",
                    "fields",
                    "sort",
                    "skip",
                    "limit",
                    "results"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_FAILED"
                        },
                        "status": {
                          "type": "number",
                          "example": 400
                        },
                        "data": {
                          "example": [
                            "property1 must not be less than 0",
                            "property1 must be an integer number"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "message",
                        "code",
                        "status",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "post": {
        "operationId": "UsersHttpController_createUser",
        "summary": "Create user",
        "description": "Create a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "picture": {
                    "type": "object",
                    "properties": {
                      "thumbnail": {
                        "type": "string",
                        "example": "https://thumbnail.url.com"
                      },
                      "regular": {
                        "type": "string",
                        "example": "https://regular.url.com"
                      },
                      "large": {
                        "type": "string",
                        "example": "https://large.url.com"
                      }
                    },
                    "required": [
                      "thumbnail",
                      "regular",
                      "large"
                    ]
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "phone": {
                    "type": "string"
                  },
                  "phones": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "preferredContactMethod": {
                    "type": "string"
                  },
                  "noteBeforeContacting": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "customerType": {
                    "enum": [
                      "lite",
                      "pro"
                    ],
                    "type": "string"
                  },
                  "roles": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "roleId": {
                          "type": "string",
                          "enum": [
                            "57447a900ebc04ba98064035",
                            "58db6932ea2a13ea9f4855a5",
                            "578b52a6dddfe2b1d0781b0e",
                            "578b52a6dddfe2b1d0781b0f",
                            "578b52a6dddfe2b1d0781b12",
                            "578b52a6dddfe2b1d0781b10",
                            "578b52a6dddfe2b1d0781b11",
                            "57c2d040cf6c3fed6a4d1775",
                            "58db693fea2a13ea9f4855aa",
                            "579e1769cf6c3fed6a3f6b1a",
                            "5e567a850ba1fb0244146fc0",
                            "5e57b0826b4440002a603a93",
                            "60d1b0fb396b25993e756e63",
                            "5cf7846e02d9171c4e4b1698"
                          ],
                          "example": "579e1769cf6c3fed6a3f6b1a",
                          "description": "Role ID:\n\n* `58db6932ea2a13ea9f4855a5` - Account manager\n\n* `578b52a6dddfe2b1d0781b0e` - Listing Viewer\n\n* `578b52a6dddfe2b1d0781b0f` - Calendar Availability Control\n\n* `578b52a6dddfe2b1d0781b12` - Listing Admin\n\n* `578b52a6dddfe2b1d0781b10` - Calendar Full Control\n\n* `578b52a6dddfe2b1d0781b11` - Listing's Financials\n\n* `57447a900ebc04ba98064035` - Account admin\n\n* `57c2d040cf6c3fed6a4d1775` - Integration Manager\n\n* `58db693fea2a13ea9f4855aa` - Viewer\n\n* `579e1769cf6c3fed6a3f6b1a` - Listing Manager\n\n* `5e567a850ba1fb0244146fc0` - Calendar Viewer\n\n* `5e57b0826b4440002a603a93` - Communication Agent\n\n* `60d1b0fb396b25993e756e63` - Revenue Manager"
                        },
                        "listingIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "roleId"
                      ]
                    }
                  },
                  "favs": {
                    "type": "object",
                    "properties": {
                      "views": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "views"
                    ]
                  },
                  "displayLanguage": {
                    "type": "string"
                  },
                  "settings": {
                    "type": "object",
                    "properties": {
                      "notifications": {
                        "description": "Notification settings",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "subscriptions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "PAYMENT",
                                        "RESERVATION",
                                        "TASK",
                                        "GENERAL",
                                        "NIGHTS_LIMIT"
                                      ],
                                      "example": "PAYMENT"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "FAILED"
                                    },
                                    "targets": {
                                      "type": "array",
                                      "example": [
                                        "DASHBOARD"
                                      ],
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "EMAIL",
                                          "SMS",
                                          "DASHBOARD"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "name",
                                    "targets"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "subscriptions"
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "registrationType": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "firstName",
                  "lastName",
                  "roles"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "611d02b7c9c54b01736ae01d",
                      "description": "User MongoDB _id"
                    },
                    "accountId": {
                      "type": "string",
                      "example": "611cf837c9c54b01736ae01c",
                      "description": "Your account ID"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@email.com"
                    },
                    "emails": {
                      "example": [
                        "example@email.com"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "userStartedUpdateEmailFlow": {
                      "type": "boolean"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Boe"
                    },
                    "fullName": {
                      "type": "string",
                      "example": "John Boe"
                    },
                    "title": {
                      "type": "string",
                      "example": "CTO"
                    },
                    "timezone": {
                      "type": "string",
                      "example": "Europe/Zurich"
                    },
                    "picture": {
                      "type": "object",
                      "properties": {
                        "thumbnail": {
                          "type": "string",
                          "example": "https://thumbnail.url.com"
                        },
                        "regular": {
                          "type": "string",
                          "example": "https://regular.url.com"
                        },
                        "large": {
                          "type": "string",
                          "example": "https://large.url.com"
                        }
                      },
                      "required": [
                        "thumbnail",
                        "regular",
                        "large"
                      ]
                    },
                    "tags": {
                      "example": [
                        "tag1"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "lastActivityTime": {
                      "type": "number"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "phones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "preferredContactMethod": {
                      "type": "string"
                    },
                    "noteBeforeContacting": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "roleId": {
                            "type": "string",
                            "description": "Role ID:\n\n* `58db6932ea2a13ea9f4855a5` - Account manager\n\n* `578b52a6dddfe2b1d0781b0e` - Listing Viewer\n\n* `578b52a6dddfe2b1d0781b0f` - Calendar Availability Control\n\n* `578b52a6dddfe2b1d0781b12` - Listing Admin\n\n* `578b52a6dddfe2b1d0781b10` - Calendar Full Control\n\n* `578b52a6dddfe2b1d0781b11` - Listing's Financials\n\n* `57447a900ebc04ba98064035` - Account admin\n\n* `57c2d040cf6c3fed6a4d1775` - Integration Manager\n\n* `58db693fea2a13ea9f4855aa` - Viewer\n\n* `579e1769cf6c3fed6a3f6b1a` - Listing Manager\n\n* `5e567a850ba1fb0244146fc0` - Calendar Viewer\n\n* `5e57b0826b4440002a603a93` - Communication Agent\n\n* `60d1b0fb396b25993e756e63` - Revenue Manager"
                          },
                          "listingIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "roleId"
                        ]
                      }
                    },
                    "favs": {
                      "type": "object",
                      "properties": {
                        "views": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "views"
                      ]
                    },
                    "displayLanguage": {
                      "type": "string"
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "notifications": {
                          "description": "Notification settings",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "subscriptions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "PAYMENT",
                                          "RESERVATION",
                                          "TASK",
                                          "GENERAL",
                                          "NIGHTS_LIMIT"
                                        ],
                                        "example": "PAYMENT"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "FAILED"
                                      },
                                      "targets": {
                                        "type": "array",
                                        "example": [
                                          "DASHBOARD"
                                        ],
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "EMAIL",
                                            "SMS",
                                            "DASHBOARD"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "name",
                                      "targets"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "subscriptions"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_FAILED"
                        },
                        "status": {
                          "type": "number",
                          "example": 400
                        },
                        "data": {
                          "example": [
                            "property1 must not be less than 0",
                            "property1 must be an integer number"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "message",
                        "code",
                        "status",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UsersHttpController_getUserById",
        "summary": "Get user",
        "description": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "611d02b7c9c54b01736ae01d",
            "description": "User MongoDB _id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Selection of fields, separated by space",
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "611d02b7c9c54b01736ae01d",
                      "description": "User MongoDB _id"
                    },
                    "accountId": {
                      "type": "string",
                      "example": "611cf837c9c54b01736ae01c",
                      "description": "Your account ID"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@email.com"
                    },
                    "emails": {
                      "example": [
                        "example@email.com"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "userStartedUpdateEmailFlow": {
                      "type": "boolean"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Boe"
                    },
                    "fullName": {
                      "type": "string",
                      "example": "John Boe"
                    },
                    "title": {
                      "type": "string",
                      "example": "CTO"
                    },
                    "timezone": {
                      "type": "string",
                      "example": "Europe/Zurich"
                    },
                    "picture": {
                      "type": "object",
                      "properties": {
                        "thumbnail": {
                          "type": "string",
                          "example": "https://thumbnail.url.com"
                        },
                        "regular": {
                          "type": "string",
                          "example": "https://regular.url.com"
                        },
                        "large": {
                          "type": "string",
                          "example": "https://large.url.com"
                        }
                      },
                      "required": [
                        "thumbnail",
                        "regular",
                        "large"
                      ]
                    },
                    "tags": {
                      "example": [
                        "tag1"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "lastActivityTime": {
                      "type": "number"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "phones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "preferredContactMethod": {
                      "type": "string"
                    },
                    "noteBeforeContacting": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "roleId": {
                            "type": "string",
                            "description": "Role ID:\n\n* `58db6932ea2a13ea9f4855a5` - Account manager\n\n* `578b52a6dddfe2b1d0781b0e` - Listing Viewer\n\n* `578b52a6dddfe2b1d0781b0f` - Calendar Availability Control\n\n* `578b52a6dddfe2b1d0781b12` - Listing Admin\n\n* `578b52a6dddfe2b1d0781b10` - Calendar Full Control\n\n* `578b52a6dddfe2b1d0781b11` - Listing's Financials\n\n* `57447a900ebc04ba98064035` - Account admin\n\n* `57c2d040cf6c3fed6a4d1775` - Integration Manager\n\n* `58db693fea2a13ea9f4855aa` - Viewer\n\n* `579e1769cf6c3fed6a3f6b1a` - Listing Manager\n\n* `5e567a850ba1fb0244146fc0` - Calendar Viewer\n\n* `5e57b0826b4440002a603a93` - Communication Agent\n\n* `60d1b0fb396b25993e756e63` - Revenue Manager"
                          },
                          "listingIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "roleId"
                        ]
                      }
                    },
                    "favs": {
                      "type": "object",
                      "properties": {
                        "views": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "views"
                      ]
                    },
                    "displayLanguage": {
                      "type": "string"
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "notifications": {
                          "description": "Notification settings",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "subscriptions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "PAYMENT",
                                          "RESERVATION",
                                          "TASK",
                                          "GENERAL",
                                          "NIGHTS_LIMIT"
                                        ],
                                        "example": "PAYMENT"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "FAILED"
                                      },
                                      "targets": {
                                        "type": "array",
                                        "example": [
                                          "DASHBOARD"
                                        ],
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "EMAIL",
                                            "SMS",
                                            "DASHBOARD"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "name",
                                      "targets"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "subscriptions"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_FAILED"
                        },
                        "status": {
                          "type": "number",
                          "example": 400
                        },
                        "data": {
                          "example": [
                            "property1 must not be less than 0",
                            "property1 must be an integer number"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "message",
                        "code",
                        "status",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "put": {
        "operationId": "UsersHttpController_updateUser",
        "summary": "Update user",
        "description": "Update user by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "611d02b7c9c54b01736ae01d",
            "description": "User MongoDB _id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "picture": {
                    "type": "object",
                    "properties": {
                      "thumbnail": {
                        "type": "string",
                        "example": "https://thumbnail.url.com"
                      },
                      "regular": {
                        "type": "string",
                        "example": "https://regular.url.com"
                      },
                      "large": {
                        "type": "string",
                        "example": "https://large.url.com"
                      }
                    },
                    "required": [
                      "thumbnail",
                      "regular",
                      "large"
                    ]
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "phone": {
                    "type": "string"
                  },
                  "phones": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "preferredContactMethod": {
                    "type": "string"
                  },
                  "noteBeforeContacting": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "roleId": {
                          "type": "string",
                          "enum": [
                            "57447a900ebc04ba98064035",
                            "58db6932ea2a13ea9f4855a5",
                            "578b52a6dddfe2b1d0781b0e",
                            "578b52a6dddfe2b1d0781b0f",
                            "578b52a6dddfe2b1d0781b12",
                            "578b52a6dddfe2b1d0781b10",
                            "578b52a6dddfe2b1d0781b11",
                            "57c2d040cf6c3fed6a4d1775",
                            "58db693fea2a13ea9f4855aa",
                            "579e1769cf6c3fed6a3f6b1a",
                            "5e567a850ba1fb0244146fc0",
                            "5e57b0826b4440002a603a93",
                            "60d1b0fb396b25993e756e63",
                            "5cf7846e02d9171c4e4b1698"
                          ],
                          "example": "579e1769cf6c3fed6a3f6b1a",
                          "description": "Role ID:\n\n* `58db6932ea2a13ea9f4855a5` - Account manager\n\n* `578b52a6dddfe2b1d0781b0e` - Listing Viewer\n\n* `578b52a6dddfe2b1d0781b0f` - Calendar Availability Control\n\n* `578b52a6dddfe2b1d0781b12` - Listing Admin\n\n* `578b52a6dddfe2b1d0781b10` - Calendar Full Control\n\n* `578b52a6dddfe2b1d0781b11` - Listing's Financials\n\n* `57447a900ebc04ba98064035` - Account admin\n\n* `57c2d040cf6c3fed6a4d1775` - Integration Manager\n\n* `58db693fea2a13ea9f4855aa` - Viewer\n\n* `579e1769cf6c3fed6a3f6b1a` - Listing Manager\n\n* `5e567a850ba1fb0244146fc0` - Calendar Viewer\n\n* `5e57b0826b4440002a603a93` - Communication Agent\n\n* `60d1b0fb396b25993e756e63` - Revenue Manager"
                        },
                        "listingIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "roleId"
                      ]
                    }
                  },
                  "favs": {
                    "type": "object",
                    "properties": {
                      "views": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "views"
                    ]
                  },
                  "displayLanguage": {
                    "type": "string"
                  },
                  "settings": {
                    "type": "object",
                    "properties": {
                      "notifications": {
                        "description": "Notification settings",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "subscriptions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "PAYMENT",
                                        "RESERVATION",
                                        "TASK",
                                        "GENERAL",
                                        "NIGHTS_LIMIT"
                                      ],
                                      "example": "PAYMENT"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "FAILED"
                                    },
                                    "targets": {
                                      "type": "array",
                                      "example": [
                                        "DASHBOARD"
                                      ],
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "EMAIL",
                                          "SMS",
                                          "DASHBOARD"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "name",
                                    "targets"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "subscriptions"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "611d02b7c9c54b01736ae01d",
                      "description": "User MongoDB _id"
                    },
                    "accountId": {
                      "type": "string",
                      "example": "611cf837c9c54b01736ae01c",
                      "description": "Your account ID"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@email.com"
                    },
                    "emails": {
                      "example": [
                        "example@email.com"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "userStartedUpdateEmailFlow": {
                      "type": "boolean"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Boe"
                    },
                    "fullName": {
                      "type": "string",
                      "example": "John Boe"
                    },
                    "title": {
                      "type": "string",
                      "example": "CTO"
                    },
                    "timezone": {
                      "type": "string",
                      "example": "Europe/Zurich"
                    },
                    "picture": {
                      "type": "object",
                      "properties": {
                        "thumbnail": {
                          "type": "string",
                          "example": "https://thumbnail.url.com"
                        },
                        "regular": {
                          "type": "string",
                          "example": "https://regular.url.com"
                        },
                        "large": {
                          "type": "string",
                          "example": "https://large.url.com"
                        }
                      },
                      "required": [
                        "thumbnail",
                        "regular",
                        "large"
                      ]
                    },
                    "tags": {
                      "example": [
                        "tag1"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "lastActivityTime": {
                      "type": "number"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "phones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "preferredContactMethod": {
                      "type": "string"
                    },
                    "noteBeforeContacting": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "roleId": {
                            "type": "string",
                            "description": "Role ID:\n\n* `58db6932ea2a13ea9f4855a5` - Account manager\n\n* `578b52a6dddfe2b1d0781b0e` - Listing Viewer\n\n* `578b52a6dddfe2b1d0781b0f` - Calendar Availability Control\n\n* `578b52a6dddfe2b1d0781b12` - Listing Admin\n\n* `578b52a6dddfe2b1d0781b10` - Calendar Full Control\n\n* `578b52a6dddfe2b1d0781b11` - Listing's Financials\n\n* `57447a900ebc04ba98064035` - Account admin\n\n* `57c2d040cf6c3fed6a4d1775` - Integration Manager\n\n* `58db693fea2a13ea9f4855aa` - Viewer\n\n* `579e1769cf6c3fed6a3f6b1a` - Listing Manager\n\n* `5e567a850ba1fb0244146fc0` - Calendar Viewer\n\n* `5e57b0826b4440002a603a93` - Communication Agent\n\n* `60d1b0fb396b25993e756e63` - Revenue Manager"
                          },
                          "listingIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "roleId"
                        ]
                      }
                    },
                    "favs": {
                      "type": "object",
                      "properties": {
                        "views": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "views"
                      ]
                    },
                    "displayLanguage": {
                      "type": "string"
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "notifications": {
                          "description": "Notification settings",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "subscriptions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "PAYMENT",
                                          "RESERVATION",
                                          "TASK",
                                          "GENERAL",
                                          "NIGHTS_LIMIT"
                                        ],
                                        "example": "PAYMENT"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "FAILED"
                                      },
                                      "targets": {
                                        "type": "array",
                                        "example": [
                                          "DASHBOARD"
                                        ],
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "EMAIL",
                                            "SMS",
                                            "DASHBOARD"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "name",
                                      "targets"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "subscriptions"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_FAILED"
                        },
                        "status": {
                          "type": "number",
                          "example": 400
                        },
                        "data": {
                          "example": [
                            "property1 must not be less than 0",
                            "property1 must be an integer number"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "message",
                        "code",
                        "status",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UsersHttpController_removeUser",
        "summary": "Delete user",
        "description": "Delete user by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "611d02b7c9c54b01736ae01d",
            "description": "User MongoDB _id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success response"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_FAILED"
                        },
                        "status": {
                          "type": "number",
                          "example": 400
                        },
                        "data": {
                          "example": [
                            "property1 must not be less than 0",
                            "property1 must be an integer number"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "message",
                        "code",
                        "status",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/integrations": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "List all integrations",
        "description": "Retrieve a list of all your account integrations.",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "nickname incomingEmail",
            "description": "Selection of fields, separated by space"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "example": 25,
            "description": "Limit for list of records. Default value: `25`, max: `100`"
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "example": 0,
            "description": "Skip number of records. In case nothing provided so nothing will be skipped"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "nickname",
            "description": "Ascending alphabetical sort , use - to descending sort. Default `-active nickname`"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of requested integrations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "5958c7e5884e961000817799"
                          },
                          "airbnb2": {
                            "type": "object",
                            "properties": {
                              "credentials": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "expiresAt": {
                                    "type": "integer"
                                  },
                                  "accessToken": {
                                    "type": "string"
                                  },
                                  "refreshToken": {
                                    "type": "string"
                                  },
                                  "lastForceRefresh": {
                                    "type": "string",
                                    "description": "date"
                                  }
                                }
                              },
                              "forwardEmails": {
                                "type": "object",
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                    "default": true
                                  },
                                  "emails": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "date"
                              }
                            },
                            "description": "Only if platform is airbnb",
                            "example": {
                              "ignored": {
                                "reservations": [],
                                "listings": []
                              },
                              "emailsFromSupport": []
                            }
                          },
                          "forwardEmails": {
                            "type": "object",
                            "properties": {
                              "all": {
                                "type": "boolean",
                                "default": true
                              },
                              "emails": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Status of connection"
                          },
                          "platform": {
                            "type": "string"
                          },
                          "listings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Listing details"
                            }
                          },
                          "complexes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Complex details"
                            }
                          },
                          "nickname": {
                            "type": "string",
                            "example": "naama"
                          },
                          "channelId": {
                            "type": "string"
                          },
                          "activatedAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "disconnectedAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "proxyEmail": {
                            "type": "string"
                          },
                          "incomingEmail": {
                            "type": "string"
                          },
                          "externalAccountId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer",
                            "example": "naama@user.guesty.com",
                            "description": "External ID"
                          },
                          "companyName": {
                            "type": "string"
                          },
                          "fetchRequests": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "fetchAllListings": {
                                  "type": "boolean"
                                },
                                "externalListingIds": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "NOT_STARTED",
                                    "IN_PROGRESS",
                                    "COMPLETED",
                                    "FAILED",
                                    "TIMEOUT"
                                  ]
                                },
                                "createTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "updateTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "finishedTime": {
                                  "type": "string",
                                  "description": "Date"
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "NOT_CONNECTED",
                              "CONNECTING",
                              "CONNECTED",
                              "FAILED",
                              "TIMEOUT",
                              "DISCONNECTED",
                              "PENDING"
                            ]
                          },
                          "migration": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "IN_PROGRESS",
                                  "COMPLETED",
                                  "FAILED"
                                ]
                              },
                              "createTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "updateTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "finishedTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "steps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Step details"
                                }
                              },
                              "discrepancyStepExecuted": {
                                "type": "boolean",
                                "default": false
                              },
                              "discrepancyResolution": {
                                "type": "string",
                                "enum": [
                                  "GUESTY",
                                  "AIRBNB"
                                ]
                              },
                              "listingQuantityDiscrepancyStepExecuted": {
                                "type": "boolean",
                                "default": false
                              },
                              "error": {
                                "type": "object",
                                "properties": {
                                  "at": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  },
                                  "raw": {
                                    "type": "object"
                                  }
                                }
                              },
                              "notes": {
                                "type": "string"
                              },
                              "isRollingBack": {
                                "type": "boolean",
                                "default": false
                              }
                            }
                          },
                          "userId": {
                            "type": "string",
                            "example": "563e0b6a08a2710e00057b85"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Owner",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "tripAdvisor": {
                            "type": "object",
                            "description": "TripAdvisor details"
                          },
                          "homeaway2": {
                            "type": "object",
                            "description": "Homeaway details"
                          },
                          "bookingCom": {
                            "type": "object",
                            "properties": {
                              "legalEntityId": {
                                "type": "string"
                              }
                            },
                            "description": "BookingCom details"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "missingStep": {
                            "type": "string"
                          },
                          "steps": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "COMPLETED",
                                    "IN_PROGRESS"
                                  ]
                                },
                                "createTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "updateTime": {
                                  "type": "string",
                                  "description": "Date"
                                }
                              }
                            }
                          },
                          "newIntegrationBackup": {
                            "type": "object"
                          },
                          "threadIdsMigrated": {
                            "type": "boolean"
                          },
                          "isDeleted": {
                            "type": "boolean"
                          },
                          "deletedAt": {
                            "type": "string",
                            "description": "Date"
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "example": 25
                    },
                    "skip": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Create integration",
        "description": "Create an integration.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "platform": {
                    "description": "Integration name",
                    "type": "string",
                    "example": "manual"
                  }
                },
                "required": [
                  "platform"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created integration object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "5958c7e5884e961000817799"
                    },
                    "airbnb2": {
                      "type": "object",
                      "properties": {
                        "credentials": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "expiresAt": {
                              "type": "integer"
                            },
                            "accessToken": {
                              "type": "string"
                            },
                            "refreshToken": {
                              "type": "string"
                            },
                            "lastForceRefresh": {
                              "type": "string",
                              "description": "date"
                            }
                          }
                        },
                        "forwardEmails": {
                          "type": "object",
                          "properties": {
                            "all": {
                              "type": "boolean",
                              "default": true
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "date"
                        }
                      },
                      "description": "Only if platform is airbnb",
                      "example": {
                        "ignored": {
                          "reservations": [],
                          "listings": []
                        },
                        "emailsFromSupport": []
                      }
                    },
                    "forwardEmails": {
                      "type": "object",
                      "properties": {
                        "all": {
                          "type": "boolean",
                          "default": true
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Status of connection"
                    },
                    "platform": {
                      "type": "string"
                    },
                    "listings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Listing details"
                      }
                    },
                    "complexes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Complex details"
                      }
                    },
                    "nickname": {
                      "type": "string",
                      "example": "naama"
                    },
                    "channelId": {
                      "type": "string"
                    },
                    "activatedAt": {
                      "type": "string",
                      "description": "Date"
                    },
                    "disconnectedAt": {
                      "type": "string",
                      "description": "Date"
                    },
                    "proxyEmail": {
                      "type": "string"
                    },
                    "incomingEmail": {
                      "type": "string"
                    },
                    "externalAccountId": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer",
                      "example": "naama@user.guesty.com",
                      "description": "External ID"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "fetchRequests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fetchAllListings": {
                            "type": "boolean"
                          },
                          "externalListingIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "NOT_STARTED",
                              "IN_PROGRESS",
                              "COMPLETED",
                              "FAILED",
                              "TIMEOUT"
                            ]
                          },
                          "createTime": {
                            "type": "string",
                            "description": "Date"
                          },
                          "updateTime": {
                            "type": "string",
                            "description": "Date"
                          },
                          "finishedTime": {
                            "type": "string",
                            "description": "Date"
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "NOT_CONNECTED",
                        "CONNECTING",
                        "CONNECTED",
                        "FAILED",
                        "TIMEOUT",
                        "DISCONNECTED",
                        "PENDING"
                      ]
                    },
                    "migration": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "IN_PROGRESS",
                            "COMPLETED",
                            "FAILED"
                          ]
                        },
                        "createTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "finishedTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "steps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Step details"
                          }
                        },
                        "discrepancyStepExecuted": {
                          "type": "boolean",
                          "default": false
                        },
                        "discrepancyResolution": {
                          "type": "string",
                          "enum": [
                            "GUESTY",
                            "AIRBNB"
                          ]
                        },
                        "listingQuantityDiscrepancyStepExecuted": {
                          "type": "boolean",
                          "default": false
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "at": {
                              "type": "string",
                              "description": "Date"
                            },
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "raw": {
                              "type": "object"
                            }
                          }
                        },
                        "notes": {
                          "type": "string"
                        },
                        "isRollingBack": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "userId": {
                      "type": "string",
                      "example": "563e0b6a08a2710e00057b85"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Owner",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "tripAdvisor": {
                      "type": "object",
                      "description": "TripAdvisor details"
                    },
                    "homeaway2": {
                      "type": "object",
                      "description": "Homeaway details"
                    },
                    "bookingCom": {
                      "type": "object",
                      "properties": {
                        "legalEntityId": {
                          "type": "string"
                        }
                      },
                      "description": "BookingCom details"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Date"
                    },
                    "missingStep": {
                      "type": "string"
                    },
                    "steps": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "COMPLETED",
                              "IN_PROGRESS"
                            ]
                          },
                          "createTime": {
                            "type": "string",
                            "description": "Date"
                          },
                          "updateTime": {
                            "type": "string",
                            "description": "Date"
                          }
                        }
                      }
                    },
                    "newIntegrationBackup": {
                      "type": "object"
                    },
                    "threadIdsMigrated": {
                      "type": "boolean"
                    },
                    "isDeleted": {
                      "type": "boolean"
                    },
                    "deletedAt": {
                      "type": "string",
                      "description": "Date"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/integrations/{id}": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Get integration",
        "description": "Use this endpoint to retrieve all a single account integration.",
        "parameters": [
          {
            "name": "id",
            "description": "Integration ID",
            "in": "path",
            "example": "5fa02fa358d2db673e17de3f",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Selection of fields, separated by space. When null retrieve the main properties of the object. We recommend always specifying the specific fields you'd like to receive to ensure that you get them. Please see the full list above",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User Integration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "5958c7e5884e961000817799"
                    },
                    "airbnb2": {
                      "type": "object",
                      "properties": {
                        "credentials": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "expiresAt": {
                              "type": "integer"
                            },
                            "accessToken": {
                              "type": "string"
                            },
                            "refreshToken": {
                              "type": "string"
                            },
                            "lastForceRefresh": {
                              "type": "string",
                              "description": "date"
                            }
                          }
                        },
                        "forwardEmails": {
                          "type": "object",
                          "properties": {
                            "all": {
                              "type": "boolean",
                              "default": true
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "date"
                        }
                      },
                      "description": "Only if platform is airbnb",
                      "example": {
                        "ignored": {
                          "reservations": [],
                          "listings": []
                        },
                        "emailsFromSupport": []
                      }
                    },
                    "forwardEmails": {
                      "type": "object",
                      "properties": {
                        "all": {
                          "type": "boolean",
                          "default": true
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Status of connection"
                    },
                    "platform": {
                      "type": "string"
                    },
                    "listings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Listing details"
                      }
                    },
                    "complexes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Complex details"
                      }
                    },
                    "nickname": {
                      "type": "string",
                      "example": "naama"
                    },
                    "channelId": {
                      "type": "string"
                    },
                    "activatedAt": {
                      "type": "string",
                      "description": "Date"
                    },
                    "disconnectedAt": {
                      "type": "string",
                      "description": "Date"
                    },
                    "proxyEmail": {
                      "type": "string"
                    },
                    "incomingEmail": {
                      "type": "string"
                    },
                    "externalAccountId": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer",
                      "example": "naama@user.guesty.com",
                      "description": "External ID"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "fetchRequests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fetchAllListings": {
                            "type": "boolean"
                          },
                          "externalListingIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "NOT_STARTED",
                              "IN_PROGRESS",
                              "COMPLETED",
                              "FAILED",
                              "TIMEOUT"
                            ]
                          },
                          "createTime": {
                            "type": "string",
                            "description": "Date"
                          },
                          "updateTime": {
                            "type": "string",
                            "description": "Date"
                          },
                          "finishedTime": {
                            "type": "string",
                            "description": "Date"
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "NOT_CONNECTED",
                        "CONNECTING",
                        "CONNECTED",
                        "FAILED",
                        "TIMEOUT",
                        "DISCONNECTED",
                        "PENDING"
                      ]
                    },
                    "migration": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "IN_PROGRESS",
                            "COMPLETED",
                            "FAILED"
                          ]
                        },
                        "createTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "finishedTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "steps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Step details"
                          }
                        },
                        "discrepancyStepExecuted": {
                          "type": "boolean",
                          "default": false
                        },
                        "discrepancyResolution": {
                          "type": "string",
                          "enum": [
                            "GUESTY",
                            "AIRBNB"
                          ]
                        },
                        "listingQuantityDiscrepancyStepExecuted": {
                          "type": "boolean",
                          "default": false
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "at": {
                              "type": "string",
                              "description": "Date"
                            },
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "raw": {
                              "type": "object"
                            }
                          }
                        },
                        "notes": {
                          "type": "string"
                        },
                        "isRollingBack": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "userId": {
                      "type": "string",
                      "example": "563e0b6a08a2710e00057b85"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Owner",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "tripAdvisor": {
                      "type": "object",
                      "description": "TripAdvisor details"
                    },
                    "homeaway2": {
                      "type": "object",
                      "description": "Homeaway details"
                    },
                    "bookingCom": {
                      "type": "object",
                      "properties": {
                        "legalEntityId": {
                          "type": "string"
                        }
                      },
                      "description": "BookingCom details"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Date"
                    },
                    "missingStep": {
                      "type": "string"
                    },
                    "steps": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "COMPLETED",
                              "IN_PROGRESS"
                            ]
                          },
                          "createTime": {
                            "type": "string",
                            "description": "Date"
                          },
                          "updateTime": {
                            "type": "string",
                            "description": "Date"
                          }
                        }
                      }
                    },
                    "newIntegrationBackup": {
                      "type": "object"
                    },
                    "threadIdsMigrated": {
                      "type": "boolean"
                    },
                    "isDeleted": {
                      "type": "boolean"
                    },
                    "deletedAt": {
                      "type": "string",
                      "description": "Date"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Integration Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Integrations"
        ],
        "summary": "Update integration",
        "description": "Selectively update fields of single account integration.",
        "parameters": [
          {
            "name": "id",
            "description": "Integration ID",
            "example": "5fa02fa358d2db673e17de3f",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Unique Id",
                    "example": "5958c7e5884e961000817799"
                  },
                  "airbnb2": {
                    "type": "object",
                    "properties": {
                      "credentials": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "expiresAt": {
                            "type": "integer"
                          },
                          "accessToken": {
                            "type": "string"
                          },
                          "refreshToken": {
                            "type": "string"
                          },
                          "lastForceRefresh": {
                            "type": "string",
                            "description": "date"
                          }
                        }
                      },
                      "forwardEmails": {
                        "type": "object",
                        "properties": {
                          "all": {
                            "type": "boolean",
                            "default": true
                          },
                          "emails": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "description": "Only if platform is airbnb",
                    "example": {
                      "ignored": {
                        "reservations": [],
                        "listings": []
                      },
                      "emailsFromSupport": []
                    }
                  },
                  "forwardEmails": {
                    "type": "object",
                    "properties": {
                      "all": {
                        "type": "boolean",
                        "default": true
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Status of connection"
                  },
                  "platform": {
                    "type": "string",
                    "example": "airbnb2",
                    "description": "Platform information"
                  },
                  "listings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Listing details"
                    }
                  },
                  "complexes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Complex details"
                    }
                  },
                  "nickname": {
                    "type": "string",
                    "example": "naama",
                    "description": "Integration nickname"
                  },
                  "channelId": {
                    "type": "string",
                    "example": "airbnb2",
                    "description": "Channel Id"
                  },
                  "proxyEmail": {
                    "type": "string",
                    "example": "test@user.guesty.com"
                  },
                  "incomingEmail": {
                    "type": "string",
                    "example": "test@user.guesty.com"
                  },
                  "externalAccountId": {
                    "type": "string",
                    "example": "123456789"
                  },
                  "id": {
                    "type": "integer",
                    "example": "naama@user.guesty.com",
                    "description": "External ID"
                  },
                  "companyName": {
                    "type": "string",
                    "description": "Company name",
                    "example": "Test company"
                  },
                  "fetchRequests": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fetchAllListings": {
                          "type": "boolean"
                        },
                        "externalListingIds": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "NOT_STARTED",
                            "IN_PROGRESS",
                            "COMPLETED",
                            "FAILED",
                            "TIMEOUT"
                          ]
                        },
                        "createTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "finishedTime": {
                          "type": "string",
                          "description": "Date"
                        }
                      }
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of integration",
                    "enum": [
                      "NOT_CONNECTED",
                      "CONNECTING",
                      "CONNECTED",
                      "FAILED",
                      "TIMEOUT",
                      "DISCONNECTED",
                      "PENDING"
                    ]
                  },
                  "migration": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "IN_PROGRESS",
                          "COMPLETED",
                          "FAILED"
                        ]
                      },
                      "createTime": {
                        "type": "string",
                        "description": "Date"
                      },
                      "updateTime": {
                        "type": "string",
                        "description": "Date"
                      },
                      "finishedTime": {
                        "type": "string",
                        "description": "Date"
                      },
                      "steps": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Step details"
                        }
                      },
                      "discrepancyStepExecuted": {
                        "type": "boolean",
                        "default": false
                      },
                      "discrepancyResolution": {
                        "type": "string",
                        "enum": [
                          "GUESTY",
                          "AIRBNB"
                        ]
                      },
                      "listingQuantityDiscrepancyStepExecuted": {
                        "type": "boolean",
                        "default": false
                      },
                      "error": {
                        "type": "object",
                        "properties": {
                          "at": {
                            "type": "string",
                            "description": "Date"
                          },
                          "code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "raw": {
                            "type": "object"
                          }
                        }
                      },
                      "notes": {
                        "type": "string"
                      },
                      "isRollingBack": {
                        "type": "boolean",
                        "default": false
                      }
                    }
                  },
                  "userId": {
                    "type": "string",
                    "example": "563e0b6a08a2710e00057b85"
                  },
                  "accountId": {
                    "type": "string",
                    "description": "Owner",
                    "example": "563e0b6a08a2710e00057b82"
                  },
                  "tripAdvisor": {
                    "type": "object",
                    "description": "TripAdvisor details"
                  },
                  "homeaway2": {
                    "type": "object",
                    "description": "Homeaway details"
                  },
                  "bookingCom": {
                    "type": "object",
                    "properties": {
                      "legalEntityId": {
                        "type": "string"
                      }
                    },
                    "description": "BookingCom details"
                  },
                  "missingStep": {
                    "type": "string",
                    "example": "add_account_settings",
                    "description": "Missing integration step"
                  },
                  "steps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "COMPLETED",
                            "IN_PROGRESS"
                          ]
                        }
                      }
                    }
                  },
                  "newIntegrationBackup": {
                    "type": "object"
                  },
                  "threadIdsMigrated": {
                    "type": "boolean",
                    "example": "false"
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "description": "Flag to delete integration"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Integration object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "5958c7e5884e961000817799"
                    },
                    "airbnb2": {
                      "type": "object",
                      "properties": {
                        "credentials": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "expiresAt": {
                              "type": "integer"
                            },
                            "accessToken": {
                              "type": "string"
                            },
                            "refreshToken": {
                              "type": "string"
                            },
                            "lastForceRefresh": {
                              "type": "string",
                              "description": "date"
                            }
                          }
                        },
                        "forwardEmails": {
                          "type": "object",
                          "properties": {
                            "all": {
                              "type": "boolean",
                              "default": true
                            },
                            "emails": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "date"
                        }
                      },
                      "description": "Only if platform is airbnb",
                      "example": {
                        "ignored": {
                          "reservations": [],
                          "listings": []
                        },
                        "emailsFromSupport": []
                      }
                    },
                    "forwardEmails": {
                      "type": "object",
                      "properties": {
                        "all": {
                          "type": "boolean",
                          "default": true
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Status of connection"
                    },
                    "platform": {
                      "type": "string"
                    },
                    "listings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Listing details"
                      }
                    },
                    "complexes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Complex details"
                      }
                    },
                    "nickname": {
                      "type": "string",
                      "example": "naama"
                    },
                    "channelId": {
                      "type": "string"
                    },
                    "activatedAt": {
                      "type": "string",
                      "description": "Date"
                    },
                    "disconnectedAt": {
                      "type": "string",
                      "description": "Date"
                    },
                    "proxyEmail": {
                      "type": "string"
                    },
                    "incomingEmail": {
                      "type": "string"
                    },
                    "externalAccountId": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer",
                      "example": "naama@user.guesty.com",
                      "description": "External ID"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "fetchRequests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fetchAllListings": {
                            "type": "boolean"
                          },
                          "externalListingIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "NOT_STARTED",
                              "IN_PROGRESS",
                              "COMPLETED",
                              "FAILED",
                              "TIMEOUT"
                            ]
                          },
                          "createTime": {
                            "type": "string",
                            "description": "Date"
                          },
                          "updateTime": {
                            "type": "string",
                            "description": "Date"
                          },
                          "finishedTime": {
                            "type": "string",
                            "description": "Date"
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "NOT_CONNECTED",
                        "CONNECTING",
                        "CONNECTED",
                        "FAILED",
                        "TIMEOUT",
                        "DISCONNECTED",
                        "PENDING"
                      ]
                    },
                    "migration": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "IN_PROGRESS",
                            "COMPLETED",
                            "FAILED"
                          ]
                        },
                        "createTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "finishedTime": {
                          "type": "string",
                          "description": "Date"
                        },
                        "steps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Step details"
                          }
                        },
                        "discrepancyStepExecuted": {
                          "type": "boolean",
                          "default": false
                        },
                        "discrepancyResolution": {
                          "type": "string",
                          "enum": [
                            "GUESTY",
                            "AIRBNB"
                          ]
                        },
                        "listingQuantityDiscrepancyStepExecuted": {
                          "type": "boolean",
                          "default": false
                        },
                        "error": {
                          "type": "object",
                          "properties": {
                            "at": {
                              "type": "string",
                              "description": "Date"
                            },
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "raw": {
                              "type": "object"
                            }
                          }
                        },
                        "notes": {
                          "type": "string"
                        },
                        "isRollingBack": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "userId": {
                      "type": "string",
                      "example": "563e0b6a08a2710e00057b85"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Owner",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "tripAdvisor": {
                      "type": "object",
                      "description": "TripAdvisor details"
                    },
                    "homeaway2": {
                      "type": "object",
                      "description": "Homeaway details"
                    },
                    "bookingCom": {
                      "type": "object",
                      "properties": {
                        "legalEntityId": {
                          "type": "string"
                        }
                      },
                      "description": "BookingCom details"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Date"
                    },
                    "missingStep": {
                      "type": "string"
                    },
                    "steps": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "COMPLETED",
                              "IN_PROGRESS"
                            ]
                          },
                          "createTime": {
                            "type": "string",
                            "description": "Date"
                          },
                          "updateTime": {
                            "type": "string",
                            "description": "Date"
                          }
                        }
                      }
                    },
                    "newIntegrationBackup": {
                      "type": "object"
                    },
                    "threadIdsMigrated": {
                      "type": "boolean"
                    },
                    "isDeleted": {
                      "type": "boolean"
                    },
                    "deletedAt": {
                      "type": "string",
                      "description": "Date"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "API is deprecated for HomeAway integrations"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/listings": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Retrieve all listings",
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "Limit results to these ids, comma separated",
            "schema": {
              "type": "string",
              "example": "3847fh87hs78n79f3,fj78fh78fbw7yyhdfyb"
            }
          },
          {
            "in": "query",
            "name": "nids",
            "description": "Limit results to not include these ids, comma seperated",
            "schema": {
              "type": "string",
              "example": "3847fh87hs78n79f3,fj78fh78fbw7yyhdfyb"
            }
          },
          {
            "in": "query",
            "name": "viewId",
            "description": "Pull a specific view (view is a saved settings of accountId, filters, fields,sort)",
            "schema": {
              "type": "string",
              "default": null,
              "example": "Cozy luxurious"
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "Search query string. Searches in title, internalNote, address.full",
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "in": "query",
            "name": "city",
            "description": "Limit results to city",
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "in": "query",
            "name": "active",
            "description": "Limit results to active state. Boolean, true for only active, false for only inactive, don't include for all.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "in": "query",
            "name": "pmsActive",
            "description": "Limit results to listings with the feature pms active. Boolean, true for only active, false for only inactive, don't include for all.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "in": "query",
            "name": "integrationId",
            "description": "Limit results to specific integration",
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "in": "query",
            "name": "listed",
            "description": "Limit results to listed state. Boolean, true for only listed, false for only unlisted, don't include for all.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "in": "query",
            "name": "available",
            "description": "Limit results to only available listings in specific dates\n\n **IMPORTANT NOTE:**\n Fields in this query must be enclosed in curly braces as shown below, and NOT as displayed in the coding playground output.\n `available = {\"checkIn\":\"YYYY-MM-DD\",\"checkOut\":\"YYYY-MM-DD\",\"minOccupancy\":3}`",
            "schema": {
              "type": "object",
              "properties": {
                "checkIn": {
                  "type": "string",
                  "example": "2022-12-27"
                },
                "checkOut": {
                  "type": "string",
                  "example": "2022-12-29"
                },
                "minOccupancy": {
                  "type": "number",
                  "example": 3
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ignoreFlexibleBlocks",
            "description": "Shows available listings and listings with flexible blocks.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Limit results to listings with specific tag",
            "schema": {
              "type": "string",
              "default": null,
              "example": "tags=kinesu"
            }
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Selection of fields, separated by space",
            "schema": {
              "type": "string",
              "default": null,
              "example": "title address"
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "ascending alphabetical sort , use - to descending sort",
            "schema": {
              "type": "string",
              "default": "title",
              "example": "title/-title"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Pagination, max: 100",
            "schema": {
              "type": "number",
              "default": 25
            }
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Pagination skip",
            "schema": {
              "type": "number",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listings Array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "String (ObjectId)",
                        "example": "59ac245d27cb310f0017afe3"
                      },
                      "accountId": {
                        "type": "string",
                        "description": "String (ObjectId)",
                        "example": "59ac245d27cb310f0017afe3"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2017-09-03T15:48:45.070Z"
                      },
                      "integrations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "description": "Unique Id",
                              "example": "5958c7e5884e961000817799"
                            },
                            "airbnb2": {
                              "type": "object",
                              "properties": {
                                "credentials": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "expiresAt": {
                                      "type": "integer"
                                    },
                                    "accessToken": {
                                      "type": "string"
                                    },
                                    "refreshToken": {
                                      "type": "string"
                                    },
                                    "lastForceRefresh": {
                                      "type": "string",
                                      "description": "date"
                                    }
                                  }
                                },
                                "forwardEmails": {
                                  "type": "object",
                                  "properties": {
                                    "all": {
                                      "type": "boolean",
                                      "default": true
                                    },
                                    "emails": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "createdAt": {
                                  "type": "string",
                                  "description": "date"
                                }
                              },
                              "description": "Only if platform is airbnb",
                              "example": {
                                "ignored": {
                                  "reservations": [],
                                  "listings": []
                                },
                                "emailsFromSupport": []
                              }
                            },
                            "forwardEmails": {
                              "type": "object",
                              "properties": {
                                "all": {
                                  "type": "boolean",
                                  "default": true
                                },
                                "emails": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "active": {
                              "type": "boolean",
                              "description": "Status of connection"
                            },
                            "platform": {
                              "type": "string"
                            },
                            "listings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Listing details"
                              }
                            },
                            "complexes": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Complex details"
                              }
                            },
                            "nickname": {
                              "type": "string",
                              "example": "naama"
                            },
                            "channelId": {
                              "type": "string"
                            },
                            "activatedAt": {
                              "type": "string",
                              "description": "Date"
                            },
                            "disconnectedAt": {
                              "type": "string",
                              "description": "Date"
                            },
                            "proxyEmail": {
                              "type": "string"
                            },
                            "incomingEmail": {
                              "type": "string"
                            },
                            "externalAccountId": {
                              "type": "string"
                            },
                            "id": {
                              "type": "integer",
                              "example": "naama@user.guesty.com",
                              "description": "External ID"
                            },
                            "companyName": {
                              "type": "string"
                            },
                            "fetchRequests": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "fetchAllListings": {
                                    "type": "boolean"
                                  },
                                  "externalListingIds": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "NOT_STARTED",
                                      "IN_PROGRESS",
                                      "COMPLETED",
                                      "FAILED",
                                      "TIMEOUT"
                                    ]
                                  },
                                  "createTime": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "updateTime": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "finishedTime": {
                                    "type": "string",
                                    "description": "Date"
                                  }
                                }
                              }
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "NOT_CONNECTED",
                                "CONNECTING",
                                "CONNECTED",
                                "FAILED",
                                "TIMEOUT",
                                "DISCONNECTED",
                                "PENDING"
                              ]
                            },
                            "migration": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "COMPLETED",
                                    "FAILED"
                                  ]
                                },
                                "createTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "updateTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "finishedTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "steps": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Step details"
                                  }
                                },
                                "discrepancyStepExecuted": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "discrepancyResolution": {
                                  "type": "string",
                                  "enum": [
                                    "GUESTY",
                                    "AIRBNB"
                                  ]
                                },
                                "listingQuantityDiscrepancyStepExecuted": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "error": {
                                  "type": "object",
                                  "properties": {
                                    "at": {
                                      "type": "string",
                                      "description": "Date"
                                    },
                                    "code": {
                                      "type": "string"
                                    },
                                    "message": {
                                      "type": "string"
                                    },
                                    "raw": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "notes": {
                                  "type": "string"
                                },
                                "isRollingBack": {
                                  "type": "boolean",
                                  "default": false
                                }
                              }
                            },
                            "userId": {
                              "type": "string",
                              "example": "563e0b6a08a2710e00057b85"
                            },
                            "accountId": {
                              "type": "string",
                              "description": "Owner",
                              "example": "563e0b6a08a2710e00057b82"
                            },
                            "tripAdvisor": {
                              "type": "object",
                              "description": "TripAdvisor details"
                            },
                            "homeaway2": {
                              "type": "object",
                              "description": "Homeaway details"
                            },
                            "bookingCom": {
                              "type": "object",
                              "properties": {
                                "legalEntityId": {
                                  "type": "string"
                                }
                              },
                              "description": "BookingCom details"
                            },
                            "createdAt": {
                              "type": "string",
                              "description": "Date"
                            },
                            "missingStep": {
                              "type": "string"
                            },
                            "steps": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "COMPLETED",
                                      "IN_PROGRESS"
                                    ]
                                  },
                                  "createTime": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "updateTime": {
                                    "type": "string",
                                    "description": "Date"
                                  }
                                }
                              }
                            },
                            "newIntegrationBackup": {
                              "type": "object"
                            },
                            "threadIdsMigrated": {
                              "type": "boolean"
                            },
                            "isDeleted": {
                              "type": "boolean"
                            },
                            "deletedAt": {
                              "type": "string",
                              "description": "Date"
                            }
                          }
                        }
                      },
                      "isVirtual": {
                        "type": "boolean"
                      },
                      "nickname": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "isListed": {
                        "type": "boolean"
                      },
                      "title": {
                        "type": "string"
                      },
                      "propertyType": {
                        "type": "string"
                      },
                      "roomType": {
                        "type": "string"
                      },
                      "bedType": {
                        "type": "string"
                      },
                      "accommodates": {
                        "type": "number"
                      },
                      "bedrooms": {
                        "type": "number"
                      },
                      "areaSquareFeet": {
                        "type": "number"
                      },
                      "address": {
                        "type": "object",
                        "properties": {
                          "full": {
                            "type": "string",
                            "description": "full address",
                            "example": "Kaplan St 2, Ramat Gan, Israel"
                          },
                          "lng": {
                            "type": "number",
                            "example": 34.8202173
                          },
                          "lat": {
                            "type": "number",
                            "example": 32.0695525
                          },
                          "street": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      },
                      "publishedAddress": {
                        "type": "object",
                        "properties": {
                          "full": {
                            "type": "string",
                            "description": "full address",
                            "example": "Kaplan St 2, Ramat Gan, Israel"
                          },
                          "lng": {
                            "type": "number",
                            "example": 34.8202173
                          },
                          "lat": {
                            "type": "number",
                            "example": 32.0695525
                          },
                          "street": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      },
                      "timezone": {
                        "type": "string"
                      },
                      "defaultCheckInTime": {
                        "type": "string"
                      },
                      "defaultCheckOutTime": {
                        "type": "string"
                      },
                      "cleaning": {
                        "type": "object",
                        "properties": {
                          "defaultCleaningTime": {
                            "type": "string"
                          },
                          "instructions": {
                            "type": "string"
                          }
                        }
                      },
                      "cleaningStatus": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "enum": [
                              "clean",
                              "waitingForInspection",
                              "dirty",
                              "unknown"
                            ]
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2019-08-24T14:15:22Z"
                          }
                        }
                      },
                      "picture": {
                        "type": "object",
                        "properties": {
                          "regular": {
                            "type": "string"
                          },
                          "thumbnail": {
                            "type": "string",
                            "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                          },
                          "large": {
                            "type": "string"
                          },
                          "caption": {
                            "type": "string"
                          },
                          "height": {
                            "type": "number",
                            "example": 756
                          },
                          "original": {
                            "type": "string",
                            "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                          },
                          "size": {
                            "type": "number",
                            "example": 39516
                          },
                          "width": {
                            "type": "number",
                            "example": 756
                          }
                        }
                      },
                      "pictures": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "regular": {
                              "type": "string"
                            },
                            "thumbnail": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                            },
                            "large": {
                              "type": "string"
                            },
                            "caption": {
                              "type": "string"
                            },
                            "height": {
                              "type": "number",
                              "example": 756
                            },
                            "original": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                            },
                            "size": {
                              "type": "number",
                              "example": 39516
                            },
                            "width": {
                              "type": "number",
                              "example": 756
                            }
                          }
                        }
                      },
                      "amenities": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "amenitiesNotIncluded": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "terms": {
                        "type": "object",
                        "properties": {
                          "minNights": {
                            "type": "number"
                          },
                          "maxNights": {
                            "type": "number"
                          },
                          "cancellation": {
                            "type": "string"
                          }
                        }
                      },
                      "prices": {
                        "type": "object",
                        "properties": {
                          "guestsIncludedInRegularFee": {
                            "type": "number"
                          },
                          "extraPersonFee": {
                            "type": "number"
                          },
                          "basePrice": {
                            "type": "number"
                          },
                          "basePriceUSD": {
                            "type": "number"
                          },
                          "monthlyPriceFactor": {
                            "type": "number"
                          },
                          "weeklyPriceFactor": {
                            "type": "number"
                          },
                          "weekendBasePrice": {
                            "type": "number"
                          },
                          "securityDepositFee": {
                            "type": "number"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "cleaningFee": {
                            "type": "number"
                          }
                        }
                      },
                      "netIncomeFormula": {
                        "type": "string"
                      },
                      "commissionFormula": {
                        "type": "string"
                      },
                      "commissionTaxPrecentage": {
                        "type": "string"
                      },
                      "pms": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "boolean"
                          },
                          "automation": {
                            "type": "object",
                            "properties": {
                              "autoList": {
                                "type": "object",
                                "properties": {
                                  "active": {
                                    "type": "boolean"
                                  },
                                  "config": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "inbox": {
                            "type": "object",
                            "properties": {
                              "customSignature": {
                                "type": "string"
                              }
                            }
                          },
                          "cleaningStatus": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "string",
                                "enum": [
                                  "clean",
                                  "waitingForInspection",
                                  "dirty",
                                  "unknown"
                                ]
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2019-08-24T14:15:22Z"
                              }
                            }
                          },
                          "paymentProcessing": {
                            "type": "object",
                            "properties": {
                              "active": {
                                "type": "boolean"
                              },
                              "paymentProviders": {
                                "type": "object",
                                "properties": {
                                  "stripe": {
                                    "type": "object",
                                    "properties": {
                                      "active": {
                                        "type": "boolean"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "accountName": {
                                        "type": "string"
                                      },
                                      "defaultCurrency": {
                                        "type": "string"
                                      },
                                      "syncedAt": {
                                        "type": "string",
                                        "format": "date"
                                      },
                                      "payload": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "livemode": {
                                            "type": "boolean"
                                          },
                                          "token_type": {
                                            "type": "string"
                                          },
                                          "stripe_publishable_key": {
                                            "type": "string"
                                          },
                                          "stripe_user_id": {
                                            "type": "string"
                                          },
                                          "scope": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "autoPayments": {
                            "type": "object",
                            "properties": {
                              "policy": {
                                "type": "array"
                              }
                            }
                          }
                        }
                      },
                      "receptionistsService": {
                        "title": "object",
                        "properties": {
                          "receptionDesk": {
                            "type": "object",
                            "properties": {
                              "ittt": {
                                "type": "array",
                                "items": {}
                              }
                            }
                          },
                          "screening": {
                            "type": "object",
                            "properties": {
                              "checklist": {
                                "type": "array",
                                "items": {}
                              }
                            }
                          },
                          "contactPersonUserId": {
                            "type": "string"
                          }
                        }
                      },
                      "active": {
                        "type": "boolean"
                      },
                      "customFields": {
                        "type": "object"
                      },
                      "calendarRules": {
                        "type": "object"
                      },
                      "publicDescription": {
                        "type": "object"
                      },
                      "privateDescription": {
                        "type": "object"
                      },
                      "markups": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Create a listing",
        "requestBody": {
          "description": "Any full address will do, we advise using the full property (the data will be parsed to the rest of the fields). PMS is automatically ON for this listing.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "object",
                    "properties": {
                      "full": {
                        "type": "string",
                        "description": "full address",
                        "example": "Kaplan St 2, Ramat Gan, Israel"
                      },
                      "lng": {
                        "type": "number",
                        "example": 34.8202173
                      },
                      "lat": {
                        "type": "number",
                        "example": 32.0695525
                      },
                      "street": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "title": {
                    "type": "string",
                    "example": "Example listing title"
                  },
                  "origin": {
                    "type": "string",
                    "example": "company_name",
                    "description": "Marks the origin platform that the listing was migrated from"
                  },
                  "originId": {
                    "type": "string",
                    "example": "67890234",
                    "description": "Marks the origin platform listing ID"
                  },
                  "accommodates": {
                    "type": "number",
                    "default": 2
                  },
                  "bathrooms": {
                    "type": "number"
                  },
                  "minimumAge": {
                    "type": "number"
                  },
                  "prices": {
                    "type": "object",
                    "properties": {
                      "guestsIncludedInRegularFee": {
                        "type": "number"
                      },
                      "extraPersonFee": {
                        "type": "number"
                      },
                      "basePrice": {
                        "type": "number"
                      },
                      "basePriceUSD": {
                        "type": "number"
                      },
                      "monthlyPriceFactor": {
                        "type": "number"
                      },
                      "weeklyPriceFactor": {
                        "type": "number"
                      },
                      "weekendBasePrice": {
                        "type": "number"
                      },
                      "securityDepositFee": {
                        "type": "number"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "cleaningFee": {
                        "type": "number"
                      }
                    }
                  },
                  "terms": {
                    "type": "object",
                    "properties": {
                      "minNights": {
                        "type": "number"
                      },
                      "maxNights": {
                        "type": "number"
                      },
                      "cancellation": {
                        "type": "string"
                      }
                    },
                    "default": {
                      "minNights": 1,
                      "maxNights": 45
                    }
                  },
                  "timezone": {
                    "type": "string",
                    "default": "Asia/Jerusalem"
                  },
                  "pictures": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "regular": {
                          "type": "string"
                        },
                        "thumbnail": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                        },
                        "large": {
                          "type": "string"
                        },
                        "caption": {
                          "type": "string"
                        },
                        "height": {
                          "type": "number",
                          "example": 756
                        },
                        "original": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                        },
                        "size": {
                          "type": "number",
                          "example": 39516
                        },
                        "width": {
                          "type": "number",
                          "example": 756
                        }
                      }
                    }
                  },
                  "propertyType": {
                    "type": "string",
                    "description": "property type",
                    "enum": [
                      "Apartment",
                      "House",
                      "Loft",
                      "Boat",
                      "Camper/RV",
                      "Condominium",
                      "Chalet",
                      "Bed & Breakfast",
                      "Villa",
                      "Tent",
                      "Other",
                      "Cabin",
                      "Townhouse",
                      "Bungalow",
                      "Hut"
                    ],
                    "default": "Apartment"
                  },
                  "roomType": {
                    "type": "string",
                    "description": "room type",
                    "enum": [
                      "Entire home/apt",
                      "Apartment",
                      "Quadruple",
                      "Suite",
                      "Triple",
                      "Studio",
                      "Family",
                      "Dormitory room",
                      "Bungalow",
                      "Chalet",
                      "Holiday Home",
                      "Villa",
                      "Mobile home",
                      "Tent"
                    ],
                    "default": "Entire home/apt"
                  },
                  "defaultCheckInTime": {
                    "type": "string",
                    "default": "15:00"
                  },
                  "defaultCheckOutTime": {
                    "type": "string",
                    "default": "10:00"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "SINGLE",
                      "MTL"
                    ],
                    "description": "Listing type"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "pms": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "automation": {
                        "type": "object",
                        "properties": {
                          "autoList": {
                            "type": "object",
                            "properties": {
                              "active": {
                                "type": "boolean"
                              },
                              "config": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "inbox": {
                        "type": "object",
                        "properties": {
                          "customSignature": {
                            "type": "string"
                          }
                        }
                      },
                      "cleaningStatus": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "enum": [
                              "clean",
                              "waitingForInspection",
                              "dirty",
                              "unknown"
                            ]
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2019-08-24T14:15:22Z"
                          }
                        }
                      },
                      "paymentProcessing": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "boolean"
                          },
                          "paymentProviders": {
                            "type": "object",
                            "properties": {
                              "stripe": {
                                "type": "object",
                                "properties": {
                                  "active": {
                                    "type": "boolean"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "accountName": {
                                    "type": "string"
                                  },
                                  "defaultCurrency": {
                                    "type": "string"
                                  },
                                  "syncedAt": {
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "payload": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "livemode": {
                                        "type": "boolean"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "stripe_publishable_key": {
                                        "type": "string"
                                      },
                                      "stripe_user_id": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "autoPayments": {
                        "type": "object",
                        "properties": {
                          "policy": {
                            "type": "array"
                          }
                        }
                      }
                    }
                  },
                  "owners": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "nickname": {
                    "type": "string",
                    "description": "Listing nickname"
                  },
                  "amenities": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "mtl": {
                    "description": "In case if you are going to create a listing with the child unit, please fill in 'mtl' object",
                    "type": "object",
                    "properties": {
                      "aas": {
                        "type": "string",
                        "example": "bc",
                        "description": "Can be one of the following: 'oc'(on create), 'm'(manual), 'bc'(before check-in)"
                      },
                      "aao": {
                        "type": "string",
                        "example": "f",
                        "nullable": true,
                        "description": "Define the automatic assignment rules for the selected multi unit. Note that it is not relevant for listings that have manual assignment logic (aas: 'm'). Can be one of the following: 'f'(first free by unit's nickname), 'r'(randomly)"
                      },
                      "bc": {
                        "type": "number",
                        "nullable": true,
                        "description": "Number of days before check-in"
                      },
                      "c": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "description": "Array with children ids"
                      },
                      "p": {
                        "type": "string",
                        "nullable": true,
                        "description": "Parent id"
                      },
                      "hdb4": {
                        "type": "number",
                        "nullable": true,
                        "description": "Highlighting days before"
                      },
                      "lmcn": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "True if the availability should be calculated according to max consecutive nights. Otherwise it will be calculated according to the number of vacant sub-unit"
                      }
                    }
                  },
                  "manageSubunitPictures": {
                    "type": "boolean"
                  },
                  "isListed": {
                    "type": "boolean"
                  },
                  "numberOfChildrenToCreate": {
                    "type": "number"
                  }
                },
                "required": [
                  "address",
                  "title",
                  "prices",
                  "pictures",
                  "type",
                  "nickname",
                  "terms"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Listing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "String (ObjectId)",
                      "example": "59ac245d27cb310f0017afe3"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "String (ObjectId)",
                      "example": "59ac245d27cb310f0017afe3"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2017-09-03T15:48:45.070Z"
                    },
                    "integrations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "5958c7e5884e961000817799"
                          },
                          "airbnb2": {
                            "type": "object",
                            "properties": {
                              "credentials": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "expiresAt": {
                                    "type": "integer"
                                  },
                                  "accessToken": {
                                    "type": "string"
                                  },
                                  "refreshToken": {
                                    "type": "string"
                                  },
                                  "lastForceRefresh": {
                                    "type": "string",
                                    "description": "date"
                                  }
                                }
                              },
                              "forwardEmails": {
                                "type": "object",
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                    "default": true
                                  },
                                  "emails": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "date"
                              }
                            },
                            "description": "Only if platform is airbnb",
                            "example": {
                              "ignored": {
                                "reservations": [],
                                "listings": []
                              },
                              "emailsFromSupport": []
                            }
                          },
                          "forwardEmails": {
                            "type": "object",
                            "properties": {
                              "all": {
                                "type": "boolean",
                                "default": true
                              },
                              "emails": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Status of connection"
                          },
                          "platform": {
                            "type": "string"
                          },
                          "listings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Listing details"
                            }
                          },
                          "complexes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Complex details"
                            }
                          },
                          "nickname": {
                            "type": "string",
                            "example": "naama"
                          },
                          "channelId": {
                            "type": "string"
                          },
                          "activatedAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "disconnectedAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "proxyEmail": {
                            "type": "string"
                          },
                          "incomingEmail": {
                            "type": "string"
                          },
                          "externalAccountId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer",
                            "example": "naama@user.guesty.com",
                            "description": "External ID"
                          },
                          "companyName": {
                            "type": "string"
                          },
                          "fetchRequests": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "fetchAllListings": {
                                  "type": "boolean"
                                },
                                "externalListingIds": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "NOT_STARTED",
                                    "IN_PROGRESS",
                                    "COMPLETED",
                                    "FAILED",
                                    "TIMEOUT"
                                  ]
                                },
                                "createTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "updateTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "finishedTime": {
                                  "type": "string",
                                  "description": "Date"
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "NOT_CONNECTED",
                              "CONNECTING",
                              "CONNECTED",
                              "FAILED",
                              "TIMEOUT",
                              "DISCONNECTED",
                              "PENDING"
                            ]
                          },
                          "migration": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "IN_PROGRESS",
                                  "COMPLETED",
                                  "FAILED"
                                ]
                              },
                              "createTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "updateTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "finishedTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "steps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Step details"
                                }
                              },
                              "discrepancyStepExecuted": {
                                "type": "boolean",
                                "default": false
                              },
                              "discrepancyResolution": {
                                "type": "string",
                                "enum": [
                                  "GUESTY",
                                  "AIRBNB"
                                ]
                              },
                              "listingQuantityDiscrepancyStepExecuted": {
                                "type": "boolean",
                                "default": false
                              },
                              "error": {
                                "type": "object",
                                "properties": {
                                  "at": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  },
                                  "raw": {
                                    "type": "object"
                                  }
                                }
                              },
                              "notes": {
                                "type": "string"
                              },
                              "isRollingBack": {
                                "type": "boolean",
                                "default": false
                              }
                            }
                          },
                          "userId": {
                            "type": "string",
                            "example": "563e0b6a08a2710e00057b85"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Owner",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "tripAdvisor": {
                            "type": "object",
                            "description": "TripAdvisor details"
                          },
                          "homeaway2": {
                            "type": "object",
                            "description": "Homeaway details"
                          },
                          "bookingCom": {
                            "type": "object",
                            "properties": {
                              "legalEntityId": {
                                "type": "string"
                              }
                            },
                            "description": "BookingCom details"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "missingStep": {
                            "type": "string"
                          },
                          "steps": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "COMPLETED",
                                    "IN_PROGRESS"
                                  ]
                                },
                                "createTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "updateTime": {
                                  "type": "string",
                                  "description": "Date"
                                }
                              }
                            }
                          },
                          "newIntegrationBackup": {
                            "type": "object"
                          },
                          "threadIdsMigrated": {
                            "type": "boolean"
                          },
                          "isDeleted": {
                            "type": "boolean"
                          },
                          "deletedAt": {
                            "type": "string",
                            "description": "Date"
                          }
                        }
                      }
                    },
                    "isVirtual": {
                      "type": "boolean"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isListed": {
                      "type": "boolean"
                    },
                    "title": {
                      "type": "string"
                    },
                    "propertyType": {
                      "type": "string"
                    },
                    "roomType": {
                      "type": "string"
                    },
                    "bedType": {
                      "type": "string"
                    },
                    "accommodates": {
                      "type": "number"
                    },
                    "bedrooms": {
                      "type": "number"
                    },
                    "areaSquareFeet": {
                      "type": "number"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "full": {
                          "type": "string",
                          "description": "full address",
                          "example": "Kaplan St 2, Ramat Gan, Israel"
                        },
                        "lng": {
                          "type": "number",
                          "example": 34.8202173
                        },
                        "lat": {
                          "type": "number",
                          "example": 32.0695525
                        },
                        "street": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "publishedAddress": {
                      "type": "object",
                      "properties": {
                        "full": {
                          "type": "string",
                          "description": "full address",
                          "example": "Kaplan St 2, Ramat Gan, Israel"
                        },
                        "lng": {
                          "type": "number",
                          "example": 34.8202173
                        },
                        "lat": {
                          "type": "number",
                          "example": 32.0695525
                        },
                        "street": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "defaultCheckInTime": {
                      "type": "string"
                    },
                    "defaultCheckOutTime": {
                      "type": "string"
                    },
                    "cleaning": {
                      "type": "object",
                      "properties": {
                        "defaultCleaningTime": {
                          "type": "string"
                        },
                        "instructions": {
                          "type": "string"
                        }
                      }
                    },
                    "cleaningStatus": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "enum": [
                            "clean",
                            "waitingForInspection",
                            "dirty",
                            "unknown"
                          ]
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "picture": {
                      "type": "object",
                      "properties": {
                        "regular": {
                          "type": "string"
                        },
                        "thumbnail": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                        },
                        "large": {
                          "type": "string"
                        },
                        "caption": {
                          "type": "string"
                        },
                        "height": {
                          "type": "number",
                          "example": 756
                        },
                        "original": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                        },
                        "size": {
                          "type": "number",
                          "example": 39516
                        },
                        "width": {
                          "type": "number",
                          "example": 756
                        }
                      }
                    },
                    "pictures": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "regular": {
                            "type": "string"
                          },
                          "thumbnail": {
                            "type": "string",
                            "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                          },
                          "large": {
                            "type": "string"
                          },
                          "caption": {
                            "type": "string"
                          },
                          "height": {
                            "type": "number",
                            "example": 756
                          },
                          "original": {
                            "type": "string",
                            "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                          },
                          "size": {
                            "type": "number",
                            "example": 39516
                          },
                          "width": {
                            "type": "number",
                            "example": 756
                          }
                        }
                      }
                    },
                    "amenities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "amenitiesNotIncluded": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "terms": {
                      "type": "object",
                      "properties": {
                        "minNights": {
                          "type": "number"
                        },
                        "maxNights": {
                          "type": "number"
                        },
                        "cancellation": {
                          "type": "string"
                        }
                      }
                    },
                    "prices": {
                      "type": "object",
                      "properties": {
                        "guestsIncludedInRegularFee": {
                          "type": "number"
                        },
                        "extraPersonFee": {
                          "type": "number"
                        },
                        "basePrice": {
                          "type": "number"
                        },
                        "basePriceUSD": {
                          "type": "number"
                        },
                        "monthlyPriceFactor": {
                          "type": "number"
                        },
                        "weeklyPriceFactor": {
                          "type": "number"
                        },
                        "weekendBasePrice": {
                          "type": "number"
                        },
                        "securityDepositFee": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "cleaningFee": {
                          "type": "number"
                        }
                      }
                    },
                    "netIncomeFormula": {
                      "type": "string"
                    },
                    "commissionFormula": {
                      "type": "string"
                    },
                    "commissionTaxPrecentage": {
                      "type": "string"
                    },
                    "pms": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "automation": {
                          "type": "object",
                          "properties": {
                            "autoList": {
                              "type": "object",
                              "properties": {
                                "active": {
                                  "type": "boolean"
                                },
                                "config": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "inbox": {
                          "type": "object",
                          "properties": {
                            "customSignature": {
                              "type": "string"
                            }
                          }
                        },
                        "cleaningStatus": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "enum": [
                                "clean",
                                "waitingForInspection",
                                "dirty",
                                "unknown"
                              ]
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2019-08-24T14:15:22Z"
                            }
                          }
                        },
                        "paymentProcessing": {
                          "type": "object",
                          "properties": {
                            "active": {
                              "type": "boolean"
                            },
                            "paymentProviders": {
                              "type": "object",
                              "properties": {
                                "stripe": {
                                  "type": "object",
                                  "properties": {
                                    "active": {
                                      "type": "boolean"
                                    },
                                    "status": {
                                      "type": "string"
                                    },
                                    "accountName": {
                                      "type": "string"
                                    },
                                    "defaultCurrency": {
                                      "type": "string"
                                    },
                                    "syncedAt": {
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "payload": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "livemode": {
                                          "type": "boolean"
                                        },
                                        "token_type": {
                                          "type": "string"
                                        },
                                        "stripe_publishable_key": {
                                          "type": "string"
                                        },
                                        "stripe_user_id": {
                                          "type": "string"
                                        },
                                        "scope": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "autoPayments": {
                          "type": "object",
                          "properties": {
                            "policy": {
                              "type": "array"
                            }
                          }
                        }
                      }
                    },
                    "receptionistsService": {
                      "title": "object",
                      "properties": {
                        "receptionDesk": {
                          "type": "object",
                          "properties": {
                            "ittt": {
                              "type": "array",
                              "items": {}
                            }
                          }
                        },
                        "screening": {
                          "type": "object",
                          "properties": {
                            "checklist": {
                              "type": "array",
                              "items": {}
                            }
                          }
                        },
                        "contactPersonUserId": {
                          "type": "string"
                        }
                      }
                    },
                    "active": {
                      "type": "boolean"
                    },
                    "customFields": {
                      "type": "object"
                    },
                    "calendarRules": {
                      "type": "object"
                    },
                    "publicDescription": {
                      "type": "object"
                    },
                    "privateDescription": {
                      "type": "object"
                    },
                    "markups": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/listings/{id}": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Retrieve a listing",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Listing ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Listings fields to retrieve, separated by space",
            "required": false,
            "example": "title address",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listing object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "String (ObjectId)",
                      "example": "59ac245d27cb310f0017afe3"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "String (ObjectId)",
                      "example": "59ac245d27cb310f0017afe3"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2017-09-03T15:48:45.070Z"
                    },
                    "integrations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "5958c7e5884e961000817799"
                          },
                          "airbnb2": {
                            "type": "object",
                            "properties": {
                              "credentials": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "expiresAt": {
                                    "type": "integer"
                                  },
                                  "accessToken": {
                                    "type": "string"
                                  },
                                  "refreshToken": {
                                    "type": "string"
                                  },
                                  "lastForceRefresh": {
                                    "type": "string",
                                    "description": "date"
                                  }
                                }
                              },
                              "forwardEmails": {
                                "type": "object",
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                    "default": true
                                  },
                                  "emails": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "date"
                              }
                            },
                            "description": "Only if platform is airbnb",
                            "example": {
                              "ignored": {
                                "reservations": [],
                                "listings": []
                              },
                              "emailsFromSupport": []
                            }
                          },
                          "forwardEmails": {
                            "type": "object",
                            "properties": {
                              "all": {
                                "type": "boolean",
                                "default": true
                              },
                              "emails": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Status of connection"
                          },
                          "platform": {
                            "type": "string"
                          },
                          "listings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Listing details"
                            }
                          },
                          "complexes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Complex details"
                            }
                          },
                          "nickname": {
                            "type": "string",
                            "example": "naama"
                          },
                          "channelId": {
                            "type": "string"
                          },
                          "activatedAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "disconnectedAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "proxyEmail": {
                            "type": "string"
                          },
                          "incomingEmail": {
                            "type": "string"
                          },
                          "externalAccountId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer",
                            "example": "naama@user.guesty.com",
                            "description": "External ID"
                          },
                          "companyName": {
                            "type": "string"
                          },
                          "fetchRequests": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "fetchAllListings": {
                                  "type": "boolean"
                                },
                                "externalListingIds": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "NOT_STARTED",
                                    "IN_PROGRESS",
                                    "COMPLETED",
                                    "FAILED",
                                    "TIMEOUT"
                                  ]
                                },
                                "createTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "updateTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "finishedTime": {
                                  "type": "string",
                                  "description": "Date"
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "NOT_CONNECTED",
                              "CONNECTING",
                              "CONNECTED",
                              "FAILED",
                              "TIMEOUT",
                              "DISCONNECTED",
                              "PENDING"
                            ]
                          },
                          "migration": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "IN_PROGRESS",
                                  "COMPLETED",
                                  "FAILED"
                                ]
                              },
                              "createTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "updateTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "finishedTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "steps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Step details"
                                }
                              },
                              "discrepancyStepExecuted": {
                                "type": "boolean",
                                "default": false
                              },
                              "discrepancyResolution": {
                                "type": "string",
                                "enum": [
                                  "GUESTY",
                                  "AIRBNB"
                                ]
                              },
                              "listingQuantityDiscrepancyStepExecuted": {
                                "type": "boolean",
                                "default": false
                              },
                              "error": {
                                "type": "object",
                                "properties": {
                                  "at": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  },
                                  "raw": {
                                    "type": "object"
                                  }
                                }
                              },
                              "notes": {
                                "type": "string"
                              },
                              "isRollingBack": {
                                "type": "boolean",
                                "default": false
                              }
                            }
                          },
                          "userId": {
                            "type": "string",
                            "example": "563e0b6a08a2710e00057b85"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Owner",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "tripAdvisor": {
                            "type": "object",
                            "description": "TripAdvisor details"
                          },
                          "homeaway2": {
                            "type": "object",
                            "description": "Homeaway details"
                          },
                          "bookingCom": {
                            "type": "object",
                            "properties": {
                              "legalEntityId": {
                                "type": "string"
                              }
                            },
                            "description": "BookingCom details"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "missingStep": {
                            "type": "string"
                          },
                          "steps": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "COMPLETED",
                                    "IN_PROGRESS"
                                  ]
                                },
                                "createTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "updateTime": {
                                  "type": "string",
                                  "description": "Date"
                                }
                              }
                            }
                          },
                          "newIntegrationBackup": {
                            "type": "object"
                          },
                          "threadIdsMigrated": {
                            "type": "boolean"
                          },
                          "isDeleted": {
                            "type": "boolean"
                          },
                          "deletedAt": {
                            "type": "string",
                            "description": "Date"
                          }
                        }
                      }
                    },
                    "isVirtual": {
                      "type": "boolean"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isListed": {
                      "type": "boolean"
                    },
                    "title": {
                      "type": "string"
                    },
                    "propertyType": {
                      "type": "string"
                    },
                    "roomType": {
                      "type": "string"
                    },
                    "bedType": {
                      "type": "string"
                    },
                    "accommodates": {
                      "type": "number"
                    },
                    "bedrooms": {
                      "type": "number"
                    },
                    "areaSquareFeet": {
                      "type": "number"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "full": {
                          "type": "string",
                          "description": "full address",
                          "example": "Kaplan St 2, Ramat Gan, Israel"
                        },
                        "lng": {
                          "type": "number",
                          "example": 34.8202173
                        },
                        "lat": {
                          "type": "number",
                          "example": 32.0695525
                        },
                        "street": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "publishedAddress": {
                      "type": "object",
                      "properties": {
                        "full": {
                          "type": "string",
                          "description": "full address",
                          "example": "Kaplan St 2, Ramat Gan, Israel"
                        },
                        "lng": {
                          "type": "number",
                          "example": 34.8202173
                        },
                        "lat": {
                          "type": "number",
                          "example": 32.0695525
                        },
                        "street": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "defaultCheckInTime": {
                      "type": "string"
                    },
                    "defaultCheckOutTime": {
                      "type": "string"
                    },
                    "cleaning": {
                      "type": "object",
                      "properties": {
                        "defaultCleaningTime": {
                          "type": "string"
                        },
                        "instructions": {
                          "type": "string"
                        }
                      }
                    },
                    "cleaningStatus": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "enum": [
                            "clean",
                            "waitingForInspection",
                            "dirty",
                            "unknown"
                          ]
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "picture": {
                      "type": "object",
                      "properties": {
                        "regular": {
                          "type": "string"
                        },
                        "thumbnail": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                        },
                        "large": {
                          "type": "string"
                        },
                        "caption": {
                          "type": "string"
                        },
                        "height": {
                          "type": "number",
                          "example": 756
                        },
                        "original": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                        },
                        "size": {
                          "type": "number",
                          "example": 39516
                        },
                        "width": {
                          "type": "number",
                          "example": 756
                        }
                      }
                    },
                    "pictures": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "regular": {
                            "type": "string"
                          },
                          "thumbnail": {
                            "type": "string",
                            "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                          },
                          "large": {
                            "type": "string"
                          },
                          "caption": {
                            "type": "string"
                          },
                          "height": {
                            "type": "number",
                            "example": 756
                          },
                          "original": {
                            "type": "string",
                            "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                          },
                          "size": {
                            "type": "number",
                            "example": 39516
                          },
                          "width": {
                            "type": "number",
                            "example": 756
                          }
                        }
                      }
                    },
                    "amenities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "amenitiesNotIncluded": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "terms": {
                      "type": "object",
                      "properties": {
                        "minNights": {
                          "type": "number"
                        },
                        "maxNights": {
                          "type": "number"
                        },
                        "cancellation": {
                          "type": "string"
                        }
                      }
                    },
                    "prices": {
                      "type": "object",
                      "properties": {
                        "guestsIncludedInRegularFee": {
                          "type": "number"
                        },
                        "extraPersonFee": {
                          "type": "number"
                        },
                        "basePrice": {
                          "type": "number"
                        },
                        "basePriceUSD": {
                          "type": "number"
                        },
                        "monthlyPriceFactor": {
                          "type": "number"
                        },
                        "weeklyPriceFactor": {
                          "type": "number"
                        },
                        "weekendBasePrice": {
                          "type": "number"
                        },
                        "securityDepositFee": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "cleaningFee": {
                          "type": "number"
                        }
                      }
                    },
                    "netIncomeFormula": {
                      "type": "string"
                    },
                    "commissionFormula": {
                      "type": "string"
                    },
                    "commissionTaxPrecentage": {
                      "type": "string"
                    },
                    "pms": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "automation": {
                          "type": "object",
                          "properties": {
                            "autoList": {
                              "type": "object",
                              "properties": {
                                "active": {
                                  "type": "boolean"
                                },
                                "config": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "inbox": {
                          "type": "object",
                          "properties": {
                            "customSignature": {
                              "type": "string"
                            }
                          }
                        },
                        "cleaningStatus": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "enum": [
                                "clean",
                                "waitingForInspection",
                                "dirty",
                                "unknown"
                              ]
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2019-08-24T14:15:22Z"
                            }
                          }
                        },
                        "paymentProcessing": {
                          "type": "object",
                          "properties": {
                            "active": {
                              "type": "boolean"
                            },
                            "paymentProviders": {
                              "type": "object",
                              "properties": {
                                "stripe": {
                                  "type": "object",
                                  "properties": {
                                    "active": {
                                      "type": "boolean"
                                    },
                                    "status": {
                                      "type": "string"
                                    },
                                    "accountName": {
                                      "type": "string"
                                    },
                                    "defaultCurrency": {
                                      "type": "string"
                                    },
                                    "syncedAt": {
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "payload": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "livemode": {
                                          "type": "boolean"
                                        },
                                        "token_type": {
                                          "type": "string"
                                        },
                                        "stripe_publishable_key": {
                                          "type": "string"
                                        },
                                        "stripe_user_id": {
                                          "type": "string"
                                        },
                                        "scope": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "autoPayments": {
                          "type": "object",
                          "properties": {
                            "policy": {
                              "type": "array"
                            }
                          }
                        }
                      }
                    },
                    "receptionistsService": {
                      "title": "object",
                      "properties": {
                        "receptionDesk": {
                          "type": "object",
                          "properties": {
                            "ittt": {
                              "type": "array",
                              "items": {}
                            }
                          }
                        },
                        "screening": {
                          "type": "object",
                          "properties": {
                            "checklist": {
                              "type": "array",
                              "items": {}
                            }
                          }
                        },
                        "contactPersonUserId": {
                          "type": "string"
                        }
                      }
                    },
                    "active": {
                      "type": "boolean"
                    },
                    "customFields": {
                      "type": "object"
                    },
                    "calendarRules": {
                      "type": "object"
                    },
                    "publicDescription": {
                      "type": "object"
                    },
                    "privateDescription": {
                      "type": "object"
                    },
                    "markups": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Listings"
        ],
        "summary": "Update a listing",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Listing ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Listing new values",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accommodates": {
                    "type": "number"
                  },
                  "bathrooms": {
                    "type": "number"
                  },
                  "minimumAge": {
                    "type": "number"
                  },
                  "defaultCheckInTime": {
                    "type": "string"
                  },
                  "defaultCheckOutTime": {
                    "type": "string"
                  },
                  "timezone": {
                    "type": "string"
                  },
                  "listingType": {
                    "type": "string",
                    "description": "listing type",
                    "enum": [
                      "Private Room",
                      "Entire home/apt",
                      "Shared room"
                    ]
                  },
                  "propertyType": {
                    "type": "string",
                    "description": "property type",
                    "enum": [
                      "Apartment",
                      "House",
                      "Loft",
                      "Boat",
                      "Camper/RV",
                      "Condominium",
                      "Chalet",
                      "Bed & Breakfast",
                      "Villa",
                      "Tent",
                      "Other",
                      "Cabin",
                      "Townhouse",
                      "Bungalow",
                      "Hut"
                    ]
                  },
                  "roomType": {
                    "type": "string",
                    "description": "room type",
                    "enum": [
                      "Apartment",
                      "Quadruple",
                      "Suite",
                      "Triple",
                      "Studio",
                      "Family",
                      "Dormitory room",
                      "Bungalow",
                      "Chalet",
                      "Holiday Home",
                      "Villa",
                      "Mobile home",
                      "Tent"
                    ]
                  },
                  "childrenToConnect": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array with children ids that are supposed to be connected"
                  },
                  "childrenToDisconnect": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array with children ids that are supposed to be disconnected"
                  },
                  "numberOfChildrenToCreate": {
                    "type": "number",
                    "description": "Number of children to create automatically"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "full": {
                        "type": "string",
                        "description": "full address",
                        "example": "Kaplan St 2, Ramat Gan, Israel"
                      },
                      "lng": {
                        "type": "number",
                        "example": 34.8202173
                      },
                      "lat": {
                        "type": "number",
                        "example": 32.0695525
                      },
                      "street": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "pms": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "automation": {
                        "type": "object",
                        "properties": {
                          "autoList": {
                            "type": "object",
                            "properties": {
                              "active": {
                                "type": "boolean"
                              },
                              "config": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "inbox": {
                        "type": "object",
                        "properties": {
                          "customSignature": {
                            "type": "string"
                          }
                        }
                      },
                      "cleaningStatus": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "enum": [
                              "clean",
                              "waitingForInspection",
                              "dirty",
                              "unknown"
                            ]
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2019-08-24T14:15:22Z"
                          }
                        }
                      },
                      "paymentProcessing": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "boolean"
                          },
                          "paymentProviders": {
                            "type": "object",
                            "properties": {
                              "stripe": {
                                "type": "object",
                                "properties": {
                                  "active": {
                                    "type": "boolean"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "accountName": {
                                    "type": "string"
                                  },
                                  "defaultCurrency": {
                                    "type": "string"
                                  },
                                  "syncedAt": {
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "payload": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "livemode": {
                                        "type": "boolean"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "stripe_publishable_key": {
                                        "type": "string"
                                      },
                                      "stripe_user_id": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "autoPayments": {
                        "type": "object",
                        "properties": {
                          "policy": {
                            "type": "array"
                          }
                        }
                      }
                    }
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "nickname": {
                    "type": "string"
                  },
                  "publicDescription": {
                    "type": "object",
                    "properties": {
                      "summary": {
                        "type": "string"
                      },
                      "space": {
                        "type": "string"
                      },
                      "access": {
                        "type": "string"
                      },
                      "interactionWithGuests": {
                        "type": "string"
                      },
                      "neighborhood": {
                        "type": "string"
                      },
                      "transit": {
                        "type": "string"
                      },
                      "notes": {
                        "type": "string"
                      },
                      "houseRules": {
                        "type": "string"
                      }
                    }
                  },
                  "hostName": {
                    "type": "string"
                  },
                  "houseManual": {
                    "type": "string"
                  },
                  "parkingInstructions": {
                    "type": "string"
                  },
                  "trashCollectedOn": {
                    "type": "string"
                  },
                  "wifiName": {
                    "type": "string"
                  },
                  "wifiPassword": {
                    "type": "string"
                  },
                  "cleaning": {
                    "type": "object",
                    "properties": {
                      "defaultCleaningTime": {
                        "type": "string"
                      },
                      "instructions": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retrieve the updated listing, selection of fields that were sent in body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "String (ObjectId)",
                      "example": "59ac245d27cb310f0017afe3"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "String (ObjectId)",
                      "example": "59ac245d27cb310f0017afe3"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2017-09-03T15:48:45.070Z"
                    },
                    "integrations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "5958c7e5884e961000817799"
                          },
                          "airbnb2": {
                            "type": "object",
                            "properties": {
                              "credentials": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "expiresAt": {
                                    "type": "integer"
                                  },
                                  "accessToken": {
                                    "type": "string"
                                  },
                                  "refreshToken": {
                                    "type": "string"
                                  },
                                  "lastForceRefresh": {
                                    "type": "string",
                                    "description": "date"
                                  }
                                }
                              },
                              "forwardEmails": {
                                "type": "object",
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                    "default": true
                                  },
                                  "emails": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "date"
                              }
                            },
                            "description": "Only if platform is airbnb",
                            "example": {
                              "ignored": {
                                "reservations": [],
                                "listings": []
                              },
                              "emailsFromSupport": []
                            }
                          },
                          "forwardEmails": {
                            "type": "object",
                            "properties": {
                              "all": {
                                "type": "boolean",
                                "default": true
                              },
                              "emails": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Status of connection"
                          },
                          "platform": {
                            "type": "string"
                          },
                          "listings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Listing details"
                            }
                          },
                          "complexes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Complex details"
                            }
                          },
                          "nickname": {
                            "type": "string",
                            "example": "naama"
                          },
                          "channelId": {
                            "type": "string"
                          },
                          "activatedAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "disconnectedAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "proxyEmail": {
                            "type": "string"
                          },
                          "incomingEmail": {
                            "type": "string"
                          },
                          "externalAccountId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer",
                            "example": "naama@user.guesty.com",
                            "description": "External ID"
                          },
                          "companyName": {
                            "type": "string"
                          },
                          "fetchRequests": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "fetchAllListings": {
                                  "type": "boolean"
                                },
                                "externalListingIds": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "NOT_STARTED",
                                    "IN_PROGRESS",
                                    "COMPLETED",
                                    "FAILED",
                                    "TIMEOUT"
                                  ]
                                },
                                "createTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "updateTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "finishedTime": {
                                  "type": "string",
                                  "description": "Date"
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "NOT_CONNECTED",
                              "CONNECTING",
                              "CONNECTED",
                              "FAILED",
                              "TIMEOUT",
                              "DISCONNECTED",
                              "PENDING"
                            ]
                          },
                          "migration": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "IN_PROGRESS",
                                  "COMPLETED",
                                  "FAILED"
                                ]
                              },
                              "createTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "updateTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "finishedTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "steps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Step details"
                                }
                              },
                              "discrepancyStepExecuted": {
                                "type": "boolean",
                                "default": false
                              },
                              "discrepancyResolution": {
                                "type": "string",
                                "enum": [
                                  "GUESTY",
                                  "AIRBNB"
                                ]
                              },
                              "listingQuantityDiscrepancyStepExecuted": {
                                "type": "boolean",
                                "default": false
                              },
                              "error": {
                                "type": "object",
                                "properties": {
                                  "at": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  },
                                  "raw": {
                                    "type": "object"
                                  }
                                }
                              },
                              "notes": {
                                "type": "string"
                              },
                              "isRollingBack": {
                                "type": "boolean",
                                "default": false
                              }
                            }
                          },
                          "userId": {
                            "type": "string",
                            "example": "563e0b6a08a2710e00057b85"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Owner",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "tripAdvisor": {
                            "type": "object",
                            "description": "TripAdvisor details"
                          },
                          "homeaway2": {
                            "type": "object",
                            "description": "Homeaway details"
                          },
                          "bookingCom": {
                            "type": "object",
                            "properties": {
                              "legalEntityId": {
                                "type": "string"
                              }
                            },
                            "description": "BookingCom details"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "missingStep": {
                            "type": "string"
                          },
                          "steps": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "COMPLETED",
                                    "IN_PROGRESS"
                                  ]
                                },
                                "createTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "updateTime": {
                                  "type": "string",
                                  "description": "Date"
                                }
                              }
                            }
                          },
                          "newIntegrationBackup": {
                            "type": "object"
                          },
                          "threadIdsMigrated": {
                            "type": "boolean"
                          },
                          "isDeleted": {
                            "type": "boolean"
                          },
                          "deletedAt": {
                            "type": "string",
                            "description": "Date"
                          }
                        }
                      }
                    },
                    "isVirtual": {
                      "type": "boolean"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isListed": {
                      "type": "boolean"
                    },
                    "title": {
                      "type": "string"
                    },
                    "propertyType": {
                      "type": "string"
                    },
                    "roomType": {
                      "type": "string"
                    },
                    "bedType": {
                      "type": "string"
                    },
                    "accommodates": {
                      "type": "number"
                    },
                    "bedrooms": {
                      "type": "number"
                    },
                    "areaSquareFeet": {
                      "type": "number"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "full": {
                          "type": "string",
                          "description": "full address",
                          "example": "Kaplan St 2, Ramat Gan, Israel"
                        },
                        "lng": {
                          "type": "number",
                          "example": 34.8202173
                        },
                        "lat": {
                          "type": "number",
                          "example": 32.0695525
                        },
                        "street": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "publishedAddress": {
                      "type": "object",
                      "properties": {
                        "full": {
                          "type": "string",
                          "description": "full address",
                          "example": "Kaplan St 2, Ramat Gan, Israel"
                        },
                        "lng": {
                          "type": "number",
                          "example": 34.8202173
                        },
                        "lat": {
                          "type": "number",
                          "example": 32.0695525
                        },
                        "street": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "defaultCheckInTime": {
                      "type": "string"
                    },
                    "defaultCheckOutTime": {
                      "type": "string"
                    },
                    "cleaning": {
                      "type": "object",
                      "properties": {
                        "defaultCleaningTime": {
                          "type": "string"
                        },
                        "instructions": {
                          "type": "string"
                        }
                      }
                    },
                    "cleaningStatus": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "enum": [
                            "clean",
                            "waitingForInspection",
                            "dirty",
                            "unknown"
                          ]
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "picture": {
                      "type": "object",
                      "properties": {
                        "regular": {
                          "type": "string"
                        },
                        "thumbnail": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                        },
                        "large": {
                          "type": "string"
                        },
                        "caption": {
                          "type": "string"
                        },
                        "height": {
                          "type": "number",
                          "example": 756
                        },
                        "original": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                        },
                        "size": {
                          "type": "number",
                          "example": 39516
                        },
                        "width": {
                          "type": "number",
                          "example": 756
                        }
                      }
                    },
                    "pictures": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "regular": {
                            "type": "string"
                          },
                          "thumbnail": {
                            "type": "string",
                            "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                          },
                          "large": {
                            "type": "string"
                          },
                          "caption": {
                            "type": "string"
                          },
                          "height": {
                            "type": "number",
                            "example": 756
                          },
                          "original": {
                            "type": "string",
                            "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                          },
                          "size": {
                            "type": "number",
                            "example": 39516
                          },
                          "width": {
                            "type": "number",
                            "example": 756
                          }
                        }
                      }
                    },
                    "amenities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "amenitiesNotIncluded": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "terms": {
                      "type": "object",
                      "properties": {
                        "minNights": {
                          "type": "number"
                        },
                        "maxNights": {
                          "type": "number"
                        },
                        "cancellation": {
                          "type": "string"
                        }
                      }
                    },
                    "prices": {
                      "type": "object",
                      "properties": {
                        "guestsIncludedInRegularFee": {
                          "type": "number"
                        },
                        "extraPersonFee": {
                          "type": "number"
                        },
                        "basePrice": {
                          "type": "number"
                        },
                        "basePriceUSD": {
                          "type": "number"
                        },
                        "monthlyPriceFactor": {
                          "type": "number"
                        },
                        "weeklyPriceFactor": {
                          "type": "number"
                        },
                        "weekendBasePrice": {
                          "type": "number"
                        },
                        "securityDepositFee": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "cleaningFee": {
                          "type": "number"
                        }
                      }
                    },
                    "netIncomeFormula": {
                      "type": "string"
                    },
                    "commissionFormula": {
                      "type": "string"
                    },
                    "commissionTaxPrecentage": {
                      "type": "string"
                    },
                    "pms": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "automation": {
                          "type": "object",
                          "properties": {
                            "autoList": {
                              "type": "object",
                              "properties": {
                                "active": {
                                  "type": "boolean"
                                },
                                "config": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "inbox": {
                          "type": "object",
                          "properties": {
                            "customSignature": {
                              "type": "string"
                            }
                          }
                        },
                        "cleaningStatus": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "enum": [
                                "clean",
                                "waitingForInspection",
                                "dirty",
                                "unknown"
                              ]
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2019-08-24T14:15:22Z"
                            }
                          }
                        },
                        "paymentProcessing": {
                          "type": "object",
                          "properties": {
                            "active": {
                              "type": "boolean"
                            },
                            "paymentProviders": {
                              "type": "object",
                              "properties": {
                                "stripe": {
                                  "type": "object",
                                  "properties": {
                                    "active": {
                                      "type": "boolean"
                                    },
                                    "status": {
                                      "type": "string"
                                    },
                                    "accountName": {
                                      "type": "string"
                                    },
                                    "defaultCurrency": {
                                      "type": "string"
                                    },
                                    "syncedAt": {
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "payload": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "livemode": {
                                          "type": "boolean"
                                        },
                                        "token_type": {
                                          "type": "string"
                                        },
                                        "stripe_publishable_key": {
                                          "type": "string"
                                        },
                                        "stripe_user_id": {
                                          "type": "string"
                                        },
                                        "scope": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "autoPayments": {
                          "type": "object",
                          "properties": {
                            "policy": {
                              "type": "array"
                            }
                          }
                        }
                      }
                    },
                    "receptionistsService": {
                      "title": "object",
                      "properties": {
                        "receptionDesk": {
                          "type": "object",
                          "properties": {
                            "ittt": {
                              "type": "array",
                              "items": {}
                            }
                          }
                        },
                        "screening": {
                          "type": "object",
                          "properties": {
                            "checklist": {
                              "type": "array",
                              "items": {}
                            }
                          }
                        },
                        "contactPersonUserId": {
                          "type": "string"
                        }
                      }
                    },
                    "active": {
                      "type": "boolean"
                    },
                    "customFields": {
                      "type": "object"
                    },
                    "calendarRules": {
                      "type": "object"
                    },
                    "publicDescription": {
                      "type": "object"
                    },
                    "privateDescription": {
                      "type": "object"
                    },
                    "markups": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Listings"
        ],
        "summary": "Delete a listing",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Listing ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted Listing ID",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/listings/{id}/availability-settings": {
      "put": {
        "tags": [
          "Listings"
        ],
        "summary": "Update listings availability settings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Listing ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Listing new values",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "calendarRules"
                ],
                "properties": {
                  "calendarRules": {
                    "type": "object",
                    "properties": {
                      "defaultAvailability": {
                        "type": "string",
                        "enum": [
                          "AVAILABLE",
                          "BLOCKED"
                        ]
                      },
                      "seasonalMinNights": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "from": {
                              "type": "string",
                              "description": "date of the format YYYY-MM-DD"
                            },
                            "to": {
                              "type": "string",
                              "description": "date of the format YYYY-MM-DD"
                            }
                          }
                        }
                      },
                      "preparationTime": {
                        "type": "object",
                        "description": "To set the preparation time to none, send the preparation time in the following way:\n '\"preparationTime\":{\"defaultSettings\":{\"days\":0}}'",
                        "properties": {
                          "defaultSettings": {
                            "type": "object",
                            "properties": {
                              "days": {
                                "type": "number"
                              },
                              "when": {
                                "type": "string",
                                "enum": [
                                  "BEFORE",
                                  "AFTER"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "rentalPeriods": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "from": {
                              "type": "string",
                              "description": "date of the format YYYY-MM-DD"
                            },
                            "to": {
                              "type": "string",
                              "description": "date of the format YYYY-MM-DD"
                            }
                          }
                        }
                      },
                      "advanceNotice": {
                        "type": "object",
                        "properties": {
                          "defaultSettings": {
                            "type": "object",
                            "properties": {
                              "hours": {
                                "type": "number"
                              },
                              "allowRequestToBook": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "bookingWindow": {
                        "type": "object",
                        "properties": {
                          "defaultSettings": {
                            "type": "object",
                            "properties": {
                              "days": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    },
                    "example": {
                      "defaultAvailability": "AVAILABLE",
                      "advanceNotice": {
                        "defaultSettings": {
                          "hours": 0,
                          "allowRequestToBook": false
                        }
                      },
                      "bookingWindow": {
                        "defaultSettings": {
                          "days": 180
                        }
                      },
                      "weekendMinNights": 2,
                      "rentalPeriods": [],
                      "seasonalMinNights": [
                        {
                          "from": "2020-12-01",
                          "to": "2021-12-01",
                          "minNights": 1
                        },
                        {
                          "from": "2020-02-29",
                          "to": "2020-11-30",
                          "minNights": 4
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "String (ObjectId)",
                      "example": "59ac245d27cb310f0017afe3"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "String (ObjectId)",
                      "example": "59ac245d27cb310f0017afe3"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2017-09-03T15:48:45.070Z"
                    },
                    "integrations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "5958c7e5884e961000817799"
                          },
                          "airbnb2": {
                            "type": "object",
                            "properties": {
                              "credentials": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "expiresAt": {
                                    "type": "integer"
                                  },
                                  "accessToken": {
                                    "type": "string"
                                  },
                                  "refreshToken": {
                                    "type": "string"
                                  },
                                  "lastForceRefresh": {
                                    "type": "string",
                                    "description": "date"
                                  }
                                }
                              },
                              "forwardEmails": {
                                "type": "object",
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                    "default": true
                                  },
                                  "emails": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "date"
                              }
                            },
                            "description": "Only if platform is airbnb",
                            "example": {
                              "ignored": {
                                "reservations": [],
                                "listings": []
                              },
                              "emailsFromSupport": []
                            }
                          },
                          "forwardEmails": {
                            "type": "object",
                            "properties": {
                              "all": {
                                "type": "boolean",
                                "default": true
                              },
                              "emails": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Status of connection"
                          },
                          "platform": {
                            "type": "string"
                          },
                          "listings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Listing details"
                            }
                          },
                          "complexes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Complex details"
                            }
                          },
                          "nickname": {
                            "type": "string",
                            "example": "naama"
                          },
                          "channelId": {
                            "type": "string"
                          },
                          "activatedAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "disconnectedAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "proxyEmail": {
                            "type": "string"
                          },
                          "incomingEmail": {
                            "type": "string"
                          },
                          "externalAccountId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer",
                            "example": "naama@user.guesty.com",
                            "description": "External ID"
                          },
                          "companyName": {
                            "type": "string"
                          },
                          "fetchRequests": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "fetchAllListings": {
                                  "type": "boolean"
                                },
                                "externalListingIds": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "NOT_STARTED",
                                    "IN_PROGRESS",
                                    "COMPLETED",
                                    "FAILED",
                                    "TIMEOUT"
                                  ]
                                },
                                "createTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "updateTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "finishedTime": {
                                  "type": "string",
                                  "description": "Date"
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "NOT_CONNECTED",
                              "CONNECTING",
                              "CONNECTED",
                              "FAILED",
                              "TIMEOUT",
                              "DISCONNECTED",
                              "PENDING"
                            ]
                          },
                          "migration": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "enum": [
                                  "IN_PROGRESS",
                                  "COMPLETED",
                                  "FAILED"
                                ]
                              },
                              "createTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "updateTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "finishedTime": {
                                "type": "string",
                                "description": "Date"
                              },
                              "steps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Step details"
                                }
                              },
                              "discrepancyStepExecuted": {
                                "type": "boolean",
                                "default": false
                              },
                              "discrepancyResolution": {
                                "type": "string",
                                "enum": [
                                  "GUESTY",
                                  "AIRBNB"
                                ]
                              },
                              "listingQuantityDiscrepancyStepExecuted": {
                                "type": "boolean",
                                "default": false
                              },
                              "error": {
                                "type": "object",
                                "properties": {
                                  "at": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  },
                                  "raw": {
                                    "type": "object"
                                  }
                                }
                              },
                              "notes": {
                                "type": "string"
                              },
                              "isRollingBack": {
                                "type": "boolean",
                                "default": false
                              }
                            }
                          },
                          "userId": {
                            "type": "string",
                            "example": "563e0b6a08a2710e00057b85"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Owner",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "tripAdvisor": {
                            "type": "object",
                            "description": "TripAdvisor details"
                          },
                          "homeaway2": {
                            "type": "object",
                            "description": "Homeaway details"
                          },
                          "bookingCom": {
                            "type": "object",
                            "properties": {
                              "legalEntityId": {
                                "type": "string"
                              }
                            },
                            "description": "BookingCom details"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "Date"
                          },
                          "missingStep": {
                            "type": "string"
                          },
                          "steps": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "COMPLETED",
                                    "IN_PROGRESS"
                                  ]
                                },
                                "createTime": {
                                  "type": "string",
                                  "description": "Date"
                                },
                                "updateTime": {
                                  "type": "string",
                                  "description": "Date"
                                }
                              }
                            }
                          },
                          "newIntegrationBackup": {
                            "type": "object"
                          },
                          "threadIdsMigrated": {
                            "type": "boolean"
                          },
                          "isDeleted": {
                            "type": "boolean"
                          },
                          "deletedAt": {
                            "type": "string",
                            "description": "Date"
                          }
                        }
                      }
                    },
                    "isVirtual": {
                      "type": "boolean"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isListed": {
                      "type": "boolean"
                    },
                    "title": {
                      "type": "string"
                    },
                    "propertyType": {
                      "type": "string"
                    },
                    "roomType": {
                      "type": "string"
                    },
                    "bedType": {
                      "type": "string"
                    },
                    "accommodates": {
                      "type": "number"
                    },
                    "bedrooms": {
                      "type": "number"
                    },
                    "areaSquareFeet": {
                      "type": "number"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "full": {
                          "type": "string",
                          "description": "full address",
                          "example": "Kaplan St 2, Ramat Gan, Israel"
                        },
                        "lng": {
                          "type": "number",
                          "example": 34.8202173
                        },
                        "lat": {
                          "type": "number",
                          "example": 32.0695525
                        },
                        "street": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "publishedAddress": {
                      "type": "object",
                      "properties": {
                        "full": {
                          "type": "string",
                          "description": "full address",
                          "example": "Kaplan St 2, Ramat Gan, Israel"
                        },
                        "lng": {
                          "type": "number",
                          "example": 34.8202173
                        },
                        "lat": {
                          "type": "number",
                          "example": 32.0695525
                        },
                        "street": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "timezone": {
                      "type": "string"
                    },
                    "defaultCheckInTime": {
                      "type": "string"
                    },
                    "defaultCheckOutTime": {
                      "type": "string"
                    },
                    "cleaning": {
                      "type": "object",
                      "properties": {
                        "defaultCleaningTime": {
                          "type": "string"
                        },
                        "instructions": {
                          "type": "string"
                        }
                      }
                    },
                    "cleaningStatus": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "enum": [
                            "clean",
                            "waitingForInspection",
                            "dirty",
                            "unknown"
                          ]
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2019-08-24T14:15:22Z"
                        }
                      }
                    },
                    "picture": {
                      "type": "object",
                      "properties": {
                        "regular": {
                          "type": "string"
                        },
                        "thumbnail": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                        },
                        "large": {
                          "type": "string"
                        },
                        "caption": {
                          "type": "string"
                        },
                        "height": {
                          "type": "number",
                          "example": 756
                        },
                        "original": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                        },
                        "size": {
                          "type": "number",
                          "example": 39516
                        },
                        "width": {
                          "type": "number",
                          "example": 756
                        }
                      }
                    },
                    "pictures": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "regular": {
                            "type": "string"
                          },
                          "thumbnail": {
                            "type": "string",
                            "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                          },
                          "large": {
                            "type": "string"
                          },
                          "caption": {
                            "type": "string"
                          },
                          "height": {
                            "type": "number",
                            "example": 756
                          },
                          "original": {
                            "type": "string",
                            "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                          },
                          "size": {
                            "type": "number",
                            "example": 39516
                          },
                          "width": {
                            "type": "number",
                            "example": 756
                          }
                        }
                      }
                    },
                    "amenities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "amenitiesNotIncluded": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "terms": {
                      "type": "object",
                      "properties": {
                        "minNights": {
                          "type": "number"
                        },
                        "maxNights": {
                          "type": "number"
                        },
                        "cancellation": {
                          "type": "string"
                        }
                      }
                    },
                    "prices": {
                      "type": "object",
                      "properties": {
                        "guestsIncludedInRegularFee": {
                          "type": "number"
                        },
                        "extraPersonFee": {
                          "type": "number"
                        },
                        "basePrice": {
                          "type": "number"
                        },
                        "basePriceUSD": {
                          "type": "number"
                        },
                        "monthlyPriceFactor": {
                          "type": "number"
                        },
                        "weeklyPriceFactor": {
                          "type": "number"
                        },
                        "weekendBasePrice": {
                          "type": "number"
                        },
                        "securityDepositFee": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "cleaningFee": {
                          "type": "number"
                        }
                      }
                    },
                    "netIncomeFormula": {
                      "type": "string"
                    },
                    "commissionFormula": {
                      "type": "string"
                    },
                    "commissionTaxPrecentage": {
                      "type": "string"
                    },
                    "pms": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "automation": {
                          "type": "object",
                          "properties": {
                            "autoList": {
                              "type": "object",
                              "properties": {
                                "active": {
                                  "type": "boolean"
                                },
                                "config": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "inbox": {
                          "type": "object",
                          "properties": {
                            "customSignature": {
                              "type": "string"
                            }
                          }
                        },
                        "cleaningStatus": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "enum": [
                                "clean",
                                "waitingForInspection",
                                "dirty",
                                "unknown"
                              ]
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2019-08-24T14:15:22Z"
                            }
                          }
                        },
                        "paymentProcessing": {
                          "type": "object",
                          "properties": {
                            "active": {
                              "type": "boolean"
                            },
                            "paymentProviders": {
                              "type": "object",
                              "properties": {
                                "stripe": {
                                  "type": "object",
                                  "properties": {
                                    "active": {
                                      "type": "boolean"
                                    },
                                    "status": {
                                      "type": "string"
                                    },
                                    "accountName": {
                                      "type": "string"
                                    },
                                    "defaultCurrency": {
                                      "type": "string"
                                    },
                                    "syncedAt": {
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "payload": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "livemode": {
                                          "type": "boolean"
                                        },
                                        "token_type": {
                                          "type": "string"
                                        },
                                        "stripe_publishable_key": {
                                          "type": "string"
                                        },
                                        "stripe_user_id": {
                                          "type": "string"
                                        },
                                        "scope": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "autoPayments": {
                          "type": "object",
                          "properties": {
                            "policy": {
                              "type": "array"
                            }
                          }
                        }
                      }
                    },
                    "receptionistsService": {
                      "title": "object",
                      "properties": {
                        "receptionDesk": {
                          "type": "object",
                          "properties": {
                            "ittt": {
                              "type": "array",
                              "items": {}
                            }
                          }
                        },
                        "screening": {
                          "type": "object",
                          "properties": {
                            "checklist": {
                              "type": "array",
                              "items": {}
                            }
                          }
                        },
                        "contactPersonUserId": {
                          "type": "string"
                        }
                      }
                    },
                    "active": {
                      "type": "boolean"
                    },
                    "customFields": {
                      "type": "object"
                    },
                    "calendarRules": {
                      "type": "object"
                    },
                    "publicDescription": {
                      "type": "object"
                    },
                    "privateDescription": {
                      "type": "object"
                    },
                    "markups": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/listings/cities": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "List all cities",
        "responses": {
          "200": {
            "description": "Array of cities (strings).",
            "content": {
              "application/json": {
                "example": [
                  "Burnt Ranch",
                  "New York",
                  "Autun",
                  "Kfar Sirkin",
                  "London",
                  "Newton",
                  "Atlanta",
                  "Montpelier",
                  "Tel Aviv-Yafo",
                  "Decatur",
                  "Vancouver",
                  "Amsterdam",
                  "Cuyahoga Falls",
                  "Palo Alto",
                  "Ramat Gan"
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/listings/tags": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "List all tags",
        "responses": {
          "200": {
            "description": "Array of tags (strings).",
            "content": {
              "application/json": {
                "example": [
                  "Tag A",
                  "Tag B",
                  "Tag C"
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/listings/{id}?fields=paymentProviderId": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Retrieve a listing's paymentProviderId",
        "description": " providerAccountId is important! - this is how you identify with Stripe once the clearing payment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Listing ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Listings fields to retrieve",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listings PaymentProviderId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "paymentProviderId": {
                      "type": "string"
                    },
                    "paymentProvider": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "syncedAt": {
                          "type": "string",
                          "format": "date"
                        },
                        "lastPendingPaymentDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "pendingPaymentsCount": {
                          "type": "number"
                        },
                        "paymentMethodsCount": {
                          "type": "number"
                        },
                        "providerAccountId": {
                          "type": "string"
                        },
                        "isDefault": {
                          "type": "boolean"
                        },
                        "providerType": {
                          "type": "string"
                        },
                        "connectedBy": {
                          "type": "string"
                        },
                        "accountName": {
                          "type": "string"
                        },
                        "defaultCurrency": {
                          "type": "string"
                        },
                        "statsLastUpdated": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/listings.csv": {
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Export as CSV",
        "description": "Same as GET /listings but results are returned as a downloadable csv file",
        "responses": {
          "200": {
            "description": "Listings csv",
            "content": {
              "text/csv": {}
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/listings.email": {
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Send results in email",
        "description": "Same as /listings but results are sent as an email",
        "requestBody": {
          "description": "Listing new values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "to": {
                    "description": "Address of recipient",
                    "required": [
                      "to"
                    ],
                    "example": "koby@guesty.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of listing objects",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/listings/{id}/custom-fields": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Get all listing's custom fields",
        "description": "Get custom fields such as wifi password etc.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Listings"
        ],
        "summary": "Update listing's Custom Fields",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Listings custom fields new values",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customFields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fieldId": {
                          "type": "string",
                          "example": "5f744b491af840002ca636a2"
                        },
                        "value": {
                          "type": "string",
                          "example": "Door code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated object.",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/listings/{id}/custom-fields/{field_id}": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Get custom field-Listings",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "field_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/listings/{listing_id}/custom-fields/{field_id}": {
      "delete": {
        "tags": [
          "Listings"
        ],
        "summary": "Delete listing's custom fields",
        "parameters": [
          {
            "in": "path",
            "name": "listing_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "field_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financials/listing/{id}": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Retrieve listing Financials",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Financials object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "guestsIncludedInRegularFee": {
                      "type": "number",
                      "description": "The higest number of guests that will not reauires to add extraPersonFee"
                    },
                    "extraPersonFee": {
                      "type": "number",
                      "description": "The amount of fee which is added for each extra person, above guestsIncludedInRegularFee, in the reservation"
                    },
                    "basePrice": {
                      "type": "number",
                      "description": "The cost per night for the listing"
                    },
                    "basePriceUSD": {
                      "type": "number",
                      "description": "The cost per night in USD for the listing"
                    },
                    "monthlyPriceFactor": {
                      "type": "number",
                      "description": "A factor for the nightly cost for reservations that are longer then a month"
                    },
                    "weeklyPriceFactor": {
                      "type": "number",
                      "description": "A factor for the nightly cost for reservations that are longer then a week"
                    },
                    "weekendBasePrice": {
                      "type": "number",
                      "description": "The base price for weekend"
                    },
                    "securityDepositFee": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string",
                      "description": "The currency that is in use for the listing prices"
                    },
                    "cleaningFee": {
                      "type": "object",
                      "description": "Object to define cleaningFee settings",
                      "properties": {
                        "value": {
                          "type": "object",
                          "description": "Default settings for cleaning fee",
                          "properties": {
                            "valueType": {
                              "type": "string",
                              "description": "Defines rather value is a fixed number or percentage",
                              "enum": [
                                "FIXED",
                                "PERCENTAGE"
                              ]
                            },
                            "multiplier": {
                              "type": "string",
                              "description": "Sets the factor by which cleaning fee value will be multiplied",
                              "enum": [
                                "PER_STAY",
                                "PER_GUEST",
                                "PER_NIGHT",
                                "PER_GUEST_PER_NIGHT"
                              ]
                            },
                            "formula": {
                              "type": "number",
                              "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                            }
                          }
                        },
                        "lastUpdatedAt": {
                          "type": "string",
                          "format": "date",
                          "description": "Last update date"
                        },
                        "airbnb": {
                          "type": "object",
                          "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                          "properties": {
                            "value": {
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "type": "string",
                                  "description": "Defines rather value is a fixed number or percentage",
                                  "enum": [
                                    "FIXED",
                                    "PERCENTAGE"
                                  ]
                                },
                                "multiplier": {
                                  "type": "string",
                                  "description": "Sets the factor by which cleaning fee value will be multiplied",
                                  "enum": [
                                    "PER_STAY",
                                    "PER_GUEST",
                                    "PER_NIGHT",
                                    "PER_GUEST_PER_NIGHT"
                                  ]
                                },
                                "formula": {
                                  "type": "number",
                                  "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                                },
                                "_id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "rentalsUnited": {
                          "type": "object",
                          "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                          "properties": {
                            "value": {
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "type": "string",
                                  "description": "Defines rather value is a fixed number or percentage",
                                  "enum": [
                                    "FIXED",
                                    "PERCENTAGE"
                                  ]
                                },
                                "multiplier": {
                                  "type": "string",
                                  "description": "Sets the factor by which cleaning fee value will be multiplied",
                                  "enum": [
                                    "PER_STAY",
                                    "PER_GUEST",
                                    "PER_NIGHT",
                                    "PER_GUEST_PER_NIGHT"
                                  ]
                                },
                                "formula": {
                                  "type": "number",
                                  "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                                },
                                "_id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "homeAway": {
                          "type": "object",
                          "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                          "properties": {
                            "value": {
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "type": "string",
                                  "description": "Defines rather value is a fixed number or percentage",
                                  "enum": [
                                    "FIXED",
                                    "PERCENTAGE"
                                  ]
                                },
                                "multiplier": {
                                  "type": "string",
                                  "description": "Sets the factor by which cleaning fee value will be multiplied",
                                  "enum": [
                                    "PER_STAY",
                                    "PER_GUEST",
                                    "PER_NIGHT",
                                    "PER_GUEST_PER_NIGHT"
                                  ]
                                },
                                "formula": {
                                  "type": "number",
                                  "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                                },
                                "_id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "expedia": {
                          "type": "object",
                          "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                          "properties": {
                            "value": {
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "type": "string",
                                  "description": "Defines rather value is a fixed number or percentage",
                                  "enum": [
                                    "FIXED",
                                    "PERCENTAGE"
                                  ]
                                },
                                "multiplier": {
                                  "type": "string",
                                  "description": "Sets the factor by which cleaning fee value will be multiplied",
                                  "enum": [
                                    "PER_STAY",
                                    "PER_GUEST",
                                    "PER_NIGHT",
                                    "PER_GUEST_PER_NIGHT"
                                  ]
                                },
                                "formula": {
                                  "type": "number",
                                  "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                                },
                                "_id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "despegar": {
                          "type": "object",
                          "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                          "properties": {
                            "value": {
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "type": "string",
                                  "description": "Defines rather value is a fixed number or percentage",
                                  "enum": [
                                    "FIXED",
                                    "PERCENTAGE"
                                  ]
                                },
                                "multiplier": {
                                  "type": "string",
                                  "description": "Sets the factor by which cleaning fee value will be multiplied",
                                  "enum": [
                                    "PER_STAY",
                                    "PER_GUEST",
                                    "PER_NIGHT",
                                    "PER_GUEST_PER_NIGHT"
                                  ]
                                },
                                "formula": {
                                  "type": "number",
                                  "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                                },
                                "_id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "bookingCom": {
                          "type": "object",
                          "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                          "properties": {
                            "value": {
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "type": "string",
                                  "description": "Defines rather value is a fixed number or percentage",
                                  "enum": [
                                    "FIXED",
                                    "PERCENTAGE"
                                  ]
                                },
                                "multiplier": {
                                  "type": "string",
                                  "description": "Sets the factor by which cleaning fee value will be multiplied",
                                  "enum": [
                                    "PER_STAY",
                                    "PER_GUEST",
                                    "PER_NIGHT",
                                    "PER_GUEST_PER_NIGHT"
                                  ]
                                },
                                "formula": {
                                  "type": "number",
                                  "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                                },
                                "_id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Listings"
        ],
        "summary": "Update listing Financials",
        "description": "Only accessible to Admin or User tokens.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Select financials fields with updated values",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Select financials fields with updated values. Non-updated fields are not required in the body",
                "properties": {
                  "guestsIncludedInRegularFee": {
                    "type": "number",
                    "description": "The higest number of guests that will not reauires to add extraPersonFee"
                  },
                  "extraPersonFee": {
                    "type": "number",
                    "description": "The amount of fee which is added for each extra person, above guestsIncludedInRegularFee, in the reservation"
                  },
                  "basePrice": {
                    "type": "number",
                    "description": "The cost per night for the listing"
                  },
                  "basePriceUSD": {
                    "type": "number",
                    "description": "The cost per night in USD for the listing"
                  },
                  "monthlyPriceFactor": {
                    "type": "number",
                    "description": "A factor for the nightly cost for reservations that are longer then a month"
                  },
                  "weeklyPriceFactor": {
                    "type": "number",
                    "description": "A factor for the nightly cost for reservations that are longer then a week"
                  },
                  "weekendBasePrice": {
                    "type": "number",
                    "description": "The base price for weekend"
                  },
                  "securityDepositFee": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string",
                    "description": "The currency that is in use for the listing prices"
                  },
                  "cleaningFee": {
                    "type": "object",
                    "description": "Object to define cleaningFee settings",
                    "properties": {
                      "value": {
                        "type": "object",
                        "description": "Default settings for cleaning fee",
                        "properties": {
                          "valueType": {
                            "type": "string",
                            "description": "Defines rather value is a fixed number or percentage",
                            "enum": [
                              "FIXED",
                              "PERCENTAGE"
                            ]
                          },
                          "multiplier": {
                            "type": "string",
                            "description": "Sets the factor by which cleaning fee value will be multiplied",
                            "enum": [
                              "PER_STAY",
                              "PER_GUEST",
                              "PER_NIGHT",
                              "PER_GUEST_PER_NIGHT"
                            ]
                          },
                          "formula": {
                            "type": "number",
                            "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                          }
                        }
                      },
                      "lastUpdatedAt": {
                        "type": "string",
                        "format": "date",
                        "description": "Last update date"
                      },
                      "airbnb": {
                        "type": "object",
                        "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                        "properties": {
                          "value": {
                            "type": "object",
                            "properties": {
                              "valueType": {
                                "type": "string",
                                "description": "Defines rather value is a fixed number or percentage",
                                "enum": [
                                  "FIXED",
                                  "PERCENTAGE"
                                ]
                              },
                              "multiplier": {
                                "type": "string",
                                "description": "Sets the factor by which cleaning fee value will be multiplied",
                                "enum": [
                                  "PER_STAY",
                                  "PER_GUEST",
                                  "PER_NIGHT",
                                  "PER_GUEST_PER_NIGHT"
                                ]
                              },
                              "formula": {
                                "type": "number",
                                "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                              },
                              "_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "rentalsUnited": {
                        "type": "object",
                        "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                        "properties": {
                          "value": {
                            "type": "object",
                            "properties": {
                              "valueType": {
                                "type": "string",
                                "description": "Defines rather value is a fixed number or percentage",
                                "enum": [
                                  "FIXED",
                                  "PERCENTAGE"
                                ]
                              },
                              "multiplier": {
                                "type": "string",
                                "description": "Sets the factor by which cleaning fee value will be multiplied",
                                "enum": [
                                  "PER_STAY",
                                  "PER_GUEST",
                                  "PER_NIGHT",
                                  "PER_GUEST_PER_NIGHT"
                                ]
                              },
                              "formula": {
                                "type": "number",
                                "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                              },
                              "_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "homeAway": {
                        "type": "object",
                        "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                        "properties": {
                          "value": {
                            "type": "object",
                            "properties": {
                              "valueType": {
                                "type": "string",
                                "description": "Defines rather value is a fixed number or percentage",
                                "enum": [
                                  "FIXED",
                                  "PERCENTAGE"
                                ]
                              },
                              "multiplier": {
                                "type": "string",
                                "description": "Sets the factor by which cleaning fee value will be multiplied",
                                "enum": [
                                  "PER_STAY",
                                  "PER_GUEST",
                                  "PER_NIGHT",
                                  "PER_GUEST_PER_NIGHT"
                                ]
                              },
                              "formula": {
                                "type": "number",
                                "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                              },
                              "_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "expedia": {
                        "type": "object",
                        "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                        "properties": {
                          "value": {
                            "type": "object",
                            "properties": {
                              "valueType": {
                                "type": "string",
                                "description": "Defines rather value is a fixed number or percentage",
                                "enum": [
                                  "FIXED",
                                  "PERCENTAGE"
                                ]
                              },
                              "multiplier": {
                                "type": "string",
                                "description": "Sets the factor by which cleaning fee value will be multiplied",
                                "enum": [
                                  "PER_STAY",
                                  "PER_GUEST",
                                  "PER_NIGHT",
                                  "PER_GUEST_PER_NIGHT"
                                ]
                              },
                              "formula": {
                                "type": "number",
                                "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                              },
                              "_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "despegar": {
                        "type": "object",
                        "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                        "properties": {
                          "value": {
                            "type": "object",
                            "properties": {
                              "valueType": {
                                "type": "string",
                                "description": "Defines rather value is a fixed number or percentage",
                                "enum": [
                                  "FIXED",
                                  "PERCENTAGE"
                                ]
                              },
                              "multiplier": {
                                "type": "string",
                                "description": "Sets the factor by which cleaning fee value will be multiplied",
                                "enum": [
                                  "PER_STAY",
                                  "PER_GUEST",
                                  "PER_NIGHT",
                                  "PER_GUEST_PER_NIGHT"
                                ]
                              },
                              "formula": {
                                "type": "number",
                                "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                              },
                              "_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "bookingCom": {
                        "type": "object",
                        "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                        "properties": {
                          "value": {
                            "type": "object",
                            "properties": {
                              "valueType": {
                                "type": "string",
                                "description": "Defines rather value is a fixed number or percentage",
                                "enum": [
                                  "FIXED",
                                  "PERCENTAGE"
                                ]
                              },
                              "multiplier": {
                                "type": "string",
                                "description": "Sets the factor by which cleaning fee value will be multiplied",
                                "enum": [
                                  "PER_STAY",
                                  "PER_GUEST",
                                  "PER_NIGHT",
                                  "PER_GUEST_PER_NIGHT"
                                ]
                              },
                              "formula": {
                                "type": "number",
                                "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                              },
                              "_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Updated financials object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "guestsIncludedInRegularFee": {
                      "type": "number",
                      "description": "The higest number of guests that will not reauires to add extraPersonFee"
                    },
                    "extraPersonFee": {
                      "type": "number",
                      "description": "The amount of fee which is added for each extra person, above guestsIncludedInRegularFee, in the reservation"
                    },
                    "basePrice": {
                      "type": "number",
                      "description": "The cost per night for the listing"
                    },
                    "basePriceUSD": {
                      "type": "number",
                      "description": "The cost per night in USD for the listing"
                    },
                    "monthlyPriceFactor": {
                      "type": "number",
                      "description": "A factor for the nightly cost for reservations that are longer then a month"
                    },
                    "weeklyPriceFactor": {
                      "type": "number",
                      "description": "A factor for the nightly cost for reservations that are longer then a week"
                    },
                    "weekendBasePrice": {
                      "type": "number",
                      "description": "The base price for weekend"
                    },
                    "securityDepositFee": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string",
                      "description": "The currency that is in use for the listing prices"
                    },
                    "cleaningFee": {
                      "type": "object",
                      "description": "Object to define cleaningFee settings",
                      "properties": {
                        "value": {
                          "type": "object",
                          "description": "Default settings for cleaning fee",
                          "properties": {
                            "valueType": {
                              "type": "string",
                              "description": "Defines rather value is a fixed number or percentage",
                              "enum": [
                                "FIXED",
                                "PERCENTAGE"
                              ]
                            },
                            "multiplier": {
                              "type": "string",
                              "description": "Sets the factor by which cleaning fee value will be multiplied",
                              "enum": [
                                "PER_STAY",
                                "PER_GUEST",
                                "PER_NIGHT",
                                "PER_GUEST_PER_NIGHT"
                              ]
                            },
                            "formula": {
                              "type": "number",
                              "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                            }
                          }
                        },
                        "lastUpdatedAt": {
                          "type": "string",
                          "format": "date",
                          "description": "Last update date"
                        },
                        "airbnb": {
                          "type": "object",
                          "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                          "properties": {
                            "value": {
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "type": "string",
                                  "description": "Defines rather value is a fixed number or percentage",
                                  "enum": [
                                    "FIXED",
                                    "PERCENTAGE"
                                  ]
                                },
                                "multiplier": {
                                  "type": "string",
                                  "description": "Sets the factor by which cleaning fee value will be multiplied",
                                  "enum": [
                                    "PER_STAY",
                                    "PER_GUEST",
                                    "PER_NIGHT",
                                    "PER_GUEST_PER_NIGHT"
                                  ]
                                },
                                "formula": {
                                  "type": "number",
                                  "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                                },
                                "_id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "rentalsUnited": {
                          "type": "object",
                          "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                          "properties": {
                            "value": {
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "type": "string",
                                  "description": "Defines rather value is a fixed number or percentage",
                                  "enum": [
                                    "FIXED",
                                    "PERCENTAGE"
                                  ]
                                },
                                "multiplier": {
                                  "type": "string",
                                  "description": "Sets the factor by which cleaning fee value will be multiplied",
                                  "enum": [
                                    "PER_STAY",
                                    "PER_GUEST",
                                    "PER_NIGHT",
                                    "PER_GUEST_PER_NIGHT"
                                  ]
                                },
                                "formula": {
                                  "type": "number",
                                  "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                                },
                                "_id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "homeAway": {
                          "type": "object",
                          "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                          "properties": {
                            "value": {
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "type": "string",
                                  "description": "Defines rather value is a fixed number or percentage",
                                  "enum": [
                                    "FIXED",
                                    "PERCENTAGE"
                                  ]
                                },
                                "multiplier": {
                                  "type": "string",
                                  "description": "Sets the factor by which cleaning fee value will be multiplied",
                                  "enum": [
                                    "PER_STAY",
                                    "PER_GUEST",
                                    "PER_NIGHT",
                                    "PER_GUEST_PER_NIGHT"
                                  ]
                                },
                                "formula": {
                                  "type": "number",
                                  "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                                },
                                "_id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "expedia": {
                          "type": "object",
                          "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                          "properties": {
                            "value": {
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "type": "string",
                                  "description": "Defines rather value is a fixed number or percentage",
                                  "enum": [
                                    "FIXED",
                                    "PERCENTAGE"
                                  ]
                                },
                                "multiplier": {
                                  "type": "string",
                                  "description": "Sets the factor by which cleaning fee value will be multiplied",
                                  "enum": [
                                    "PER_STAY",
                                    "PER_GUEST",
                                    "PER_NIGHT",
                                    "PER_GUEST_PER_NIGHT"
                                  ]
                                },
                                "formula": {
                                  "type": "number",
                                  "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                                },
                                "_id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "despegar": {
                          "type": "object",
                          "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                          "properties": {
                            "value": {
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "type": "string",
                                  "description": "Defines rather value is a fixed number or percentage",
                                  "enum": [
                                    "FIXED",
                                    "PERCENTAGE"
                                  ]
                                },
                                "multiplier": {
                                  "type": "string",
                                  "description": "Sets the factor by which cleaning fee value will be multiplied",
                                  "enum": [
                                    "PER_STAY",
                                    "PER_GUEST",
                                    "PER_NIGHT",
                                    "PER_GUEST_PER_NIGHT"
                                  ]
                                },
                                "formula": {
                                  "type": "number",
                                  "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                                },
                                "_id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "bookingCom": {
                          "type": "object",
                          "description": "For channel specific cleaningFee settings, the 'value' field will be saved under the channel name",
                          "properties": {
                            "value": {
                              "type": "object",
                              "properties": {
                                "valueType": {
                                  "type": "string",
                                  "description": "Defines rather value is a fixed number or percentage",
                                  "enum": [
                                    "FIXED",
                                    "PERCENTAGE"
                                  ]
                                },
                                "multiplier": {
                                  "type": "string",
                                  "description": "Sets the factor by which cleaning fee value will be multiplied",
                                  "enum": [
                                    "PER_STAY",
                                    "PER_GUEST",
                                    "PER_NIGHT",
                                    "PER_GUEST_PER_NIGHT"
                                  ]
                                },
                                "formula": {
                                  "type": "number",
                                  "description": "Defines the cleaningFee value, as fixed or as a percentage accordinf to 'valueType'"
                                },
                                "_id": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Search reservations",
        "description": "Retrieve all reservations or a filtered subset of them.",
        "parameters": [
          {
            "in": "query",
            "name": "viewId",
            "description": "View Id",
            "example": "5fa02fa358d2db673e17de4e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "Subject of the filter",
                    "example": "checkIn"
                  },
                  "operator": {
                    "type": "string",
                    "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between\n\n **IMPORTANT NOTE:**\n In order to use the $between operator please check the syntax of the example below:\n `[{\"field\":\"checkIn\", \"operator\":\"$between\",\"from\":\"2023-03-02T00:00:00%2B01:00\",\"to\":\"2023-03-02T23:59:59%2B01:00\"}]`",
                    "example": "$gt"
                  },
                  "value": {
                    "type": "integer",
                    "description": "Value to filter by",
                    "example": 0
                  },
                  "context": {
                    "type": "string",
                    "description": "Optional preprocessing. Options are now, createdAt, confirmedAt, canceledAt, alteredAt. When given, the date in value is relative to the context.",
                    "default": null,
                    "example": "now"
                  }
                }
              },
              "required": [
                "field",
                "operator",
                "value"
              ]
            },
            "description": "Array of filters to query by"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Selection of fields, separated by space",
            "example": "checkIn checkOut confirmationCode guest.fullname listing.title"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting, default: `_id`",
            "example": "checkIn"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Limit for list of records. Default value: `25`, max: `100`",
            "example": "25"
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "type": "integer"
            },
            "example": "100",
            "description": "Skip number of records. In case nothing provided so nothing will be skipped"
          }
        ],
        "responses": {
          "200": {
            "description": "Reservation object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "integration": {
                      "type": "object",
                      "properties": {
                        "limitations": {
                          "type": "object",
                          "properties": {
                            "availableStatuses": {
                              "type": "array"
                            }
                          }
                        },
                        "bookingCom": {
                          "type": "object",
                          "properties": {
                            "invalidCreditCards": {
                              "type": "array"
                            },
                            "reports": {
                              "type": "array"
                            }
                          }
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "platform": {
                          "type": "string"
                        }
                      }
                    },
                    "guestyFeeDetails": {
                      "type": "object",
                      "properties": {
                        "commission": {
                          "type": "number"
                        },
                        "feeMinimum": {
                          "type": "number"
                        },
                        "fee": {
                          "type": "number"
                        },
                        "feeUsd": {
                          "type": "number"
                        },
                        "isMinimumFee": {
                          "type": "boolean"
                        },
                        "isMaximumFee": {
                          "type": "boolean"
                        },
                        "planItems": {
                          "type": "array"
                        }
                      }
                    },
                    "review": {
                      "type": "object",
                      "properties": {
                        "shouldReview": {
                          "type": "boolean"
                        }
                      }
                    },
                    "atTimeOfConfirmation": {
                      "type": "object",
                      "properties": {
                        "snapshotCreated": {
                          "type": "boolean"
                        },
                        "channelCommission": {
                          "type": "object",
                          "properties": {
                            "useAccountSettings": {
                              "type": "boolean"
                            },
                            "_id": {
                              "type": "string",
                              "description": "Unique Id",
                              "example": "563e0b6a08a2710e00057b82"
                            },
                            "manual": {
                              "type": "array"
                            }
                          }
                        },
                        "taxes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "appliedOnFees": {
                                "type": "string"
                              },
                              "appliedByDefaultOnChannels": {
                                "type": "array"
                              },
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "name": {
                                "type": "string"
                              },
                              "units": {
                                "type": "string"
                              },
                              "quantifier": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "appliedToAllFees": {
                                "type": "boolean"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "monthlyPriceFactor": {
                          "type": "number"
                        },
                        "weeklyPriceFactor": {
                          "type": "number"
                        },
                        "useAccountRevenueShare": {
                          "type": "boolean"
                        }
                      }
                    },
                    "flag": {
                      "type": "boolean"
                    },
                    "accountingEnabled": {
                      "type": "boolean"
                    },
                    "isBMApplied": {
                      "type": "boolean"
                    },
                    "confirmedPreBookings": {
                      "type": "array"
                    },
                    "pulledByDailySync": {
                      "type": "boolean"
                    },
                    "manuallyCreated": {
                      "type": "boolean"
                    },
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "status": {
                      "type": "string"
                    },
                    "checkIn": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "checkOut": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "nightsCount": {
                      "type": "number"
                    },
                    "guestsCount": {
                      "type": "number"
                    },
                    "money": {
                      "type": "object",
                      "properties": {
                        "altered": {
                          "type": "boolean"
                        },
                        "invoiceItems": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "title": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "isLocked": {
                                "type": "boolean"
                              },
                              "isTax": {
                                "type": "boolean"
                              },
                              "normalType": {
                                "type": "string"
                              },
                              "isAutoAdditionalFee": {
                                "type": "boolean"
                              },
                              "secondIdentifier": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "payments": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "authenticationRequiredData": {
                                "type": "object",
                                "properties": {
                                  "lastAuthMsgSentDate": {
                                    "type": "string",
                                    "example": "2021-08-16T08:38:20.280Z"
                                  },
                                  "authenticationUrl": {
                                    "type": "string"
                                  }
                                }
                              },
                              "paymentMethodStatus": {
                                "type": "string"
                              },
                              "isAuthorizationHold": {
                                "type": "boolean"
                              },
                              "status": {
                                "type": "string"
                              },
                              "refunds": {
                                "type": "array"
                              },
                              "authorizationHoldCaptures": {
                                "type": "array"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2021-08-16T08:38:20.280Z"
                              },
                              "attempts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "createdAt": {
                                      "type": "string",
                                      "example": "2021-08-16T08:38:20.280Z"
                                    },
                                    "_id": {
                                      "type": "string",
                                      "description": "Unique Id",
                                      "example": "563e0b6a08a2710e00057b82"
                                    },
                                    "status": {
                                      "type": "string"
                                    },
                                    "error": {
                                      "type": "string"
                                    },
                                    "payload": {
                                      "type": "object",
                                      "properties": {
                                        "charge": {
                                          "type": "string"
                                        },
                                        "code": {
                                          "type": "string"
                                        },
                                        "decline_code": {
                                          "type": "string"
                                        },
                                        "doc_url": {
                                          "type": "string"
                                        },
                                        "message": {
                                          "type": "string"
                                        },
                                        "payment_intent": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Unique Id",
                                              "example": "563e0b6a08a2710e00057b82"
                                            },
                                            "object": {
                                              "type": "string"
                                            },
                                            "amount": {
                                              "type": "number"
                                            },
                                            "amount_capturable": {
                                              "type": "number"
                                            },
                                            "amount_received": {
                                              "type": "number"
                                            },
                                            "application": {
                                              "type": "string"
                                            },
                                            "capture_method": {
                                              "type": "string"
                                            },
                                            "charges": {
                                              "type": "object",
                                              "properties": {
                                                "object": {
                                                  "type": "string"
                                                },
                                                "data": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "object": {
                                                        "type": "string"
                                                      },
                                                      "amount": {
                                                        "type": "number"
                                                      },
                                                      "amount_captured": {
                                                        "type": "number"
                                                      },
                                                      "amount_refunded": {
                                                        "type": "number"
                                                      },
                                                      "application": {
                                                        "type": "string"
                                                      },
                                                      "billing_details": {
                                                        "type": "object",
                                                        "properties": {
                                                          "address": {
                                                            "type": "object",
                                                            "properties": {
                                                              "city": {
                                                                "type": "string"
                                                              },
                                                              "country": {
                                                                "type": "string"
                                                              },
                                                              "line1": {
                                                                "type": "string"
                                                              },
                                                              "line2": {
                                                                "type": "string"
                                                              },
                                                              "postal_code": {
                                                                "type": "string"
                                                              },
                                                              "state": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "email": {
                                                            "type": "string"
                                                          },
                                                          "name": {
                                                            "type": "string"
                                                          },
                                                          "phone": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "calculated_statement_descriptor": {
                                                        "type": "string"
                                                      },
                                                      "captured": {
                                                        "type": "boolean"
                                                      },
                                                      "created": {
                                                        "type": "number"
                                                      },
                                                      "currency": {
                                                        "type": "string"
                                                      },
                                                      "customer": {
                                                        "type": "string"
                                                      },
                                                      "description": {
                                                        "type": "string"
                                                      },
                                                      "disputed": {
                                                        "type": "boolean"
                                                      },
                                                      "failure_code": {
                                                        "type": "string"
                                                      },
                                                      "failure_message": {
                                                        "type": "string"
                                                      },
                                                      "livemode": {
                                                        "type": "boolean"
                                                      },
                                                      "metadata": {
                                                        "type": "object",
                                                        "properties": {
                                                          "accountId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          },
                                                          "confirmationCode": {
                                                            "type": "string"
                                                          },
                                                          "reservationId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          },
                                                          "OTA": {
                                                            "type": "string"
                                                          },
                                                          "listingId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          }
                                                        }
                                                      },
                                                      "outcome": {
                                                        "type": "object",
                                                        "properties": {
                                                          "network_status": {
                                                            "type": "string"
                                                          },
                                                          "reason": {
                                                            "type": "string"
                                                          },
                                                          "risk_level": {
                                                            "type": "string"
                                                          },
                                                          "risk_score": {
                                                            "type": "number"
                                                          },
                                                          "seller_message": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "paid": {
                                                        "type": "boolean"
                                                      },
                                                      "payment_intent": {
                                                        "type": "string"
                                                      },
                                                      "payment_method": {
                                                        "type": "string"
                                                      },
                                                      "payment_method_details": {
                                                        "type": "object",
                                                        "properties": {
                                                          "card": {
                                                            "type": "object",
                                                            "properties": {
                                                              "brand": {
                                                                "type": "string"
                                                              },
                                                              "checks": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "cvc_check": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "country": {
                                                                "type": "string"
                                                              },
                                                              "exp_month": {
                                                                "type": "number"
                                                              },
                                                              "exp_year": {
                                                                "type": "number"
                                                              },
                                                              "fingerprint": {
                                                                "type": "string"
                                                              },
                                                              "funding": {
                                                                "type": "string"
                                                              },
                                                              "last4": {
                                                                "type": "string"
                                                              },
                                                              "network": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "refunded": {
                                                        "type": "boolean"
                                                      },
                                                      "refunds": {
                                                        "type": "object",
                                                        "properties": {
                                                          "object": {
                                                            "type": "string"
                                                          },
                                                          "data": {
                                                            "type": "array"
                                                          },
                                                          "has_more": {
                                                            "type": "boolean"
                                                          },
                                                          "total_count": {
                                                            "type": "number"
                                                          },
                                                          "url": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "statement_descriptor": {
                                                        "type": "string"
                                                      },
                                                      "status": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "has_more": {
                                                  "type": "boolean"
                                                },
                                                "total_count": {
                                                  "type": "number"
                                                },
                                                "url": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "client_secret": {
                                              "type": "string"
                                            },
                                            "confirmation_method": {
                                              "type": "string"
                                            },
                                            "created": {
                                              "type": "number"
                                            },
                                            "currency": {
                                              "type": "string"
                                            },
                                            "customer": {
                                              "type": "string"
                                            },
                                            "description": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "metadata": {
                                              "type": "object",
                                              "properties": {
                                                "accountId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                },
                                                "confirmationCode": {
                                                  "type": "string"
                                                },
                                                "reservationId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                },
                                                "OTA": {
                                                  "type": "string"
                                                },
                                                "listingId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                }
                                              }
                                            },
                                            "next_action": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string"
                                                },
                                                "use_stripe_sdk": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "merchant": {
                                                      "type": "string"
                                                    },
                                                    "three_d_secure_2_source": {
                                                      "type": "string"
                                                    },
                                                    "directory_server_name": {
                                                      "type": "string"
                                                    },
                                                    "server_transaction_id": {
                                                      "type": "string"
                                                    },
                                                    "three_ds_method_url": {
                                                      "type": "string"
                                                    },
                                                    "three_ds_optimizations": {
                                                      "type": "string"
                                                    },
                                                    "directory_server_encryption": {
                                                      "type": "object",
                                                      "properties": {
                                                        "directory_server_id": {
                                                          "type": "string"
                                                        },
                                                        "algorithm": {
                                                          "type": "string"
                                                        },
                                                        "certificate": {
                                                          "type": "string"
                                                        },
                                                        "root_certificate_authorities": {
                                                          "type": "array"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "payment_method": {
                                              "type": "string"
                                            },
                                            "payment_method_options": {
                                              "type": "object",
                                              "properties": {
                                                "card": {
                                                  "type": "object",
                                                  "properties": {
                                                    "request_three_d_secure": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "payment_method_types": {
                                              "type": "array"
                                            },
                                            "statement_descriptor": {
                                              "type": "string"
                                            },
                                            "status": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "payment_method": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "object": {
                                              "type": "string"
                                            },
                                            "billing_details": {
                                              "type": "object",
                                              "properties": {
                                                "address": {
                                                  "type": "object",
                                                  "properties": {
                                                    "city": {
                                                      "type": "string"
                                                    },
                                                    "country": {
                                                      "type": "string"
                                                    },
                                                    "line1": {
                                                      "type": "string"
                                                    },
                                                    "line2": {
                                                      "type": "string"
                                                    },
                                                    "postal_code": {
                                                      "type": "string"
                                                    },
                                                    "state": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "email": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "phone": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "card": {
                                              "type": "object",
                                              "properties": {
                                                "brand": {
                                                  "type": "string"
                                                },
                                                "checks": {
                                                  "type": "object",
                                                  "properties": {
                                                    "cvc_check": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "country": {
                                                  "type": "string"
                                                },
                                                "exp_month": {
                                                  "type": "number"
                                                },
                                                "exp_year": {
                                                  "type": "number"
                                                },
                                                "fingerprint": {
                                                  "type": "string"
                                                },
                                                "funding": {
                                                  "type": "string"
                                                },
                                                "last4": {
                                                  "type": "string"
                                                },
                                                "networks": {
                                                  "type": "object",
                                                  "properties": {
                                                    "available": {
                                                      "type": "array"
                                                    }
                                                  }
                                                },
                                                "three_d_secure_usage": {
                                                  "type": "object",
                                                  "properties": {
                                                    "supported": {
                                                      "type": "boolean"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "created": {
                                              "type": "number"
                                            },
                                            "customer": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": {
                                          "type": "string"
                                        },
                                        "statusCode": {
                                          "type": "number"
                                        },
                                        "requestId": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "receiptTargets": {
                                "type": "array"
                              },
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "shouldBePaidAt": {
                                "type": "string",
                                "example": "2021-08-16T08:38:20.280Z"
                              },
                              "paymentMethodId": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "guestId": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "currency": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "autoPaymentsPolicy": {
                          "type": "array"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "paymentProviderIds": {
                          "type": "array"
                        },
                        "fareAccommodationAdjustment": {
                          "type": "number"
                        },
                        "fareAccommodationDiscount": {
                          "type": "number"
                        },
                        "fareAccommodation": {
                          "type": "number"
                        },
                        "fareAccommodationAdjusted": {
                          "type": "number"
                        },
                        "fareCleaning": {
                          "type": "number"
                        },
                        "hostServiceFee": {
                          "type": "number"
                        },
                        "hostServiceFeeTax": {
                          "type": "number"
                        },
                        "hostServiceFeeIncTax": {
                          "type": "number"
                        },
                        "subTotalPrice": {
                          "type": "number"
                        },
                        "hostPayout": {
                          "type": "number"
                        },
                        "hostPayoutUsd": {
                          "type": "number"
                        },
                        "totalTaxes": {
                          "type": "number"
                        },
                        "totalRefunded": {
                          "type": "number"
                        },
                        "totalPaid": {
                          "type": "number"
                        },
                        "paymentsDue": {
                          "type": "number"
                        },
                        "balanceDue": {
                          "type": "number"
                        },
                        "isFullyPaid": {
                          "type": "boolean"
                        },
                        "useAccountRevenueShare": {
                          "type": "boolean"
                        },
                        "netIncomeFormula": {
                          "type": "string"
                        },
                        "netIncome": {
                          "type": "number"
                        },
                        "commissionFormula": {
                          "type": "string"
                        },
                        "commission": {
                          "type": "number"
                        },
                        "commissionTaxPercentage": {
                          "type": "number"
                        },
                        "commissionTax": {
                          "type": "number"
                        },
                        "commissionIncTax": {
                          "type": "number"
                        },
                        "ownerRevenueFormula": {
                          "type": "string"
                        },
                        "ownerRevenue": {
                          "type": "number"
                        },
                        "currencyConversionRateToAccount": {
                          "type": "number"
                        },
                        "isTouchedPayments": {
                          "type": "boolean"
                        }
                      }
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "checkInDateLocalized": {
                      "type": "string"
                    },
                    "checkOutDateLocalized": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "guestId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "source": {
                      "type": "string"
                    },
                    "confirmationCode": {
                      "type": "string"
                    },
                    "mtl": {
                      "type": "object",
                      "properties": {
                        "assigned": {
                          "type": "boolean"
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        }
                      }
                    },
                    "isReturningGuest": {
                      "type": "boolean"
                    },
                    "confirmedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "importedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "additionalFeesAtCreation": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "automationSources": {
                            "type": "array"
                          },
                          "_id": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "isPercentage": {
                            "type": "boolean"
                          },
                          "isAutomated": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "multiplier": {
                            "type": "string"
                          },
                          "targetFee": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "pendingTasks": {
                      "type": "array"
                    },
                    "customFields": {
                      "type": "array"
                    },
                    "lastUpdatedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "__v": {
                      "type": "number"
                    },
                    "conversationId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Create a reservation",
        "description": "Use this request to create a direct booking.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listingId": {
                    "type": "string",
                    "description": "Unique Id",
                    "example": "563e0b6a08a2710e00057b82"
                  },
                  "checkInDateLocalized": {
                    "type": "string",
                    "description": "Date of the format YYYY-MM-DD",
                    "example": "2023-01-01"
                  },
                  "checkOutDateLocalized": {
                    "type": "string",
                    "description": "Date of the format YYYY-MM-DD",
                    "example": "2023-01-04"
                  },
                  "status": {
                    "type": "string",
                    "description": "Reservation status",
                    "example": "confirmed"
                  },
                  "money": {
                    "type": "object",
                    "properties": {
                      "fareAccommodation": {
                        "type": "number",
                        "example": "120"
                      },
                      "fareCleaning": {
                        "type": "number",
                        "example": "20"
                      },
                      "invoiceItems": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "title": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "number"
                            },
                            "normalType": {
                              "type": "string",
                              "enum": [
                                "AF",
                                "AFO",
                                "AFD",
                                "AFA",
                                "ARC",
                                "CF",
                                "PRO",
                                "CO",
                                "LOSD",
                                "GCD",
                                "AFE",
                                "LT",
                                "CT",
                                "TT",
                                "GST",
                                "VAT",
                                "ST",
                                "COT",
                                "OCT",
                                "TOT",
                                "HSHAT",
                                "HST",
                                "MAT",
                                "TRT",
                                "CFE",
                                "CM",
                                "PCM",
                                "PF",
                                "LGT",
                                "HT",
                                "TAF",
                                "RT",
                                "OT",
                                "TAX",
                                "SDC",
                                "ADF",
                                "OTHER"
                              ],
                              "description": "Invoice item's type identifier"
                            },
                            "description": {
                              "type": "string"
                            },
                            "secondIdentifier": {
                              "type": "string",
                              "enum": [
                                "ADDITIONAL_BED",
                                "AIR_CONDITIONING",
                                "EARLY_CHECK_IN",
                                "LATE_CHECK_IN",
                                "BABY_BED",
                                "CLEANING",
                                "CLUB_CARD",
                                "CONCIERGE",
                                "EARLY_CHECKOUT",
                                "LATE_CHECKOUT",
                                "DEPOSIT",
                                "ELECTRICITY",
                                "FOOD",
                                "HEATING",
                                "INTERNET",
                                "LAUNDRY",
                                "LINENS",
                                "TOWELS",
                                "MANAGEMENT",
                                "OIL",
                                "PARKING",
                                "PET",
                                "POOL",
                                "POOL_HEATING",
                                "RESORT",
                                "SERVICE",
                                "TOILETRIES",
                                "TOUR",
                                "TRANSPORTATION",
                                "CAR_RENTAL",
                                "WATER",
                                "WOOD",
                                "TRANSFER",
                                "HOUSEKEEPING",
                                "INSURANCE",
                                "COMMUNITY",
                                "CREDIT_CARD_PROCESSING_FEE",
                                "DAMAGE_WAIVER"
                              ],
                              "description": "An additional optional identifier",
                              "example": "MANAGEMENT"
                            }
                          },
                          "required": [
                            "title",
                            "amount",
                            "normalType",
                            "secondIdentifier"
                          ]
                        }
                      },
                      "currency": {
                        "type": "string",
                        "example": "USD"
                      }
                    },
                    "required": [
                      "fareAccommodation",
                      "currency"
                    ]
                  },
                  "guest": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "description": "Guest's first name",
                        "example": "Tony"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Guest's last name",
                        "example": "Stark"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Guest's phone number",
                        "example": "+97777777"
                      },
                      "email": {
                        "type": "string",
                        "description": "Guest's email",
                        "example": "tony@stark.com"
                      }
                    }
                  },
                  "guestId": {
                    "type": "string",
                    "description": "Unique Id",
                    "example": "563e0b6a08a2710e00057b82"
                  }
                },
                "required": [
                  "listingId",
                  "checkInDateLocalized",
                  "checkOutDateLocalized",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The inserted object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "integration": {
                      "type": "object",
                      "properties": {
                        "limitations": {
                          "type": "object",
                          "properties": {
                            "availableStatuses": {
                              "type": "array"
                            }
                          }
                        },
                        "bookingCom": {
                          "type": "object",
                          "properties": {
                            "invalidCreditCards": {
                              "type": "array"
                            },
                            "reports": {
                              "type": "array"
                            }
                          }
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "platform": {
                          "type": "string"
                        }
                      }
                    },
                    "guestyFeeDetails": {
                      "type": "object",
                      "properties": {
                        "commission": {
                          "type": "number"
                        },
                        "feeMinimum": {
                          "type": "number"
                        },
                        "fee": {
                          "type": "number"
                        },
                        "feeUsd": {
                          "type": "number"
                        },
                        "isMinimumFee": {
                          "type": "boolean"
                        },
                        "isMaximumFee": {
                          "type": "boolean"
                        },
                        "planItems": {
                          "type": "array"
                        }
                      }
                    },
                    "review": {
                      "type": "object",
                      "properties": {
                        "shouldReview": {
                          "type": "boolean"
                        }
                      }
                    },
                    "atTimeOfConfirmation": {
                      "type": "object",
                      "properties": {
                        "snapshotCreated": {
                          "type": "boolean"
                        },
                        "channelCommission": {
                          "type": "object",
                          "properties": {
                            "useAccountSettings": {
                              "type": "boolean"
                            },
                            "_id": {
                              "type": "string",
                              "description": "Unique Id",
                              "example": "563e0b6a08a2710e00057b82"
                            },
                            "manual": {
                              "type": "array"
                            }
                          }
                        },
                        "taxes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "appliedOnFees": {
                                "type": "string"
                              },
                              "appliedByDefaultOnChannels": {
                                "type": "array"
                              },
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "name": {
                                "type": "string"
                              },
                              "units": {
                                "type": "string"
                              },
                              "quantifier": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "appliedToAllFees": {
                                "type": "boolean"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "monthlyPriceFactor": {
                          "type": "number"
                        },
                        "weeklyPriceFactor": {
                          "type": "number"
                        },
                        "useAccountRevenueShare": {
                          "type": "boolean"
                        }
                      }
                    },
                    "flag": {
                      "type": "boolean"
                    },
                    "accountingEnabled": {
                      "type": "boolean"
                    },
                    "isBMApplied": {
                      "type": "boolean"
                    },
                    "confirmedPreBookings": {
                      "type": "array"
                    },
                    "pulledByDailySync": {
                      "type": "boolean"
                    },
                    "manuallyCreated": {
                      "type": "boolean"
                    },
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "status": {
                      "type": "string"
                    },
                    "checkIn": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "checkOut": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "nightsCount": {
                      "type": "number"
                    },
                    "guestsCount": {
                      "type": "number"
                    },
                    "money": {
                      "type": "object",
                      "properties": {
                        "altered": {
                          "type": "boolean"
                        },
                        "invoiceItems": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "title": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "isLocked": {
                                "type": "boolean"
                              },
                              "isTax": {
                                "type": "boolean"
                              },
                              "normalType": {
                                "type": "string"
                              },
                              "isAutoAdditionalFee": {
                                "type": "boolean"
                              },
                              "secondIdentifier": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "payments": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "authenticationRequiredData": {
                                "type": "object",
                                "properties": {
                                  "lastAuthMsgSentDate": {
                                    "type": "string",
                                    "example": "2021-08-16T08:38:20.280Z"
                                  },
                                  "authenticationUrl": {
                                    "type": "string"
                                  }
                                }
                              },
                              "paymentMethodStatus": {
                                "type": "string"
                              },
                              "isAuthorizationHold": {
                                "type": "boolean"
                              },
                              "status": {
                                "type": "string"
                              },
                              "refunds": {
                                "type": "array"
                              },
                              "authorizationHoldCaptures": {
                                "type": "array"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2021-08-16T08:38:20.280Z"
                              },
                              "attempts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "createdAt": {
                                      "type": "string",
                                      "example": "2021-08-16T08:38:20.280Z"
                                    },
                                    "_id": {
                                      "type": "string",
                                      "description": "Unique Id",
                                      "example": "563e0b6a08a2710e00057b82"
                                    },
                                    "status": {
                                      "type": "string"
                                    },
                                    "error": {
                                      "type": "string"
                                    },
                                    "payload": {
                                      "type": "object",
                                      "properties": {
                                        "charge": {
                                          "type": "string"
                                        },
                                        "code": {
                                          "type": "string"
                                        },
                                        "decline_code": {
                                          "type": "string"
                                        },
                                        "doc_url": {
                                          "type": "string"
                                        },
                                        "message": {
                                          "type": "string"
                                        },
                                        "payment_intent": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Unique Id",
                                              "example": "563e0b6a08a2710e00057b82"
                                            },
                                            "object": {
                                              "type": "string"
                                            },
                                            "amount": {
                                              "type": "number"
                                            },
                                            "amount_capturable": {
                                              "type": "number"
                                            },
                                            "amount_received": {
                                              "type": "number"
                                            },
                                            "application": {
                                              "type": "string"
                                            },
                                            "capture_method": {
                                              "type": "string"
                                            },
                                            "charges": {
                                              "type": "object",
                                              "properties": {
                                                "object": {
                                                  "type": "string"
                                                },
                                                "data": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "object": {
                                                        "type": "string"
                                                      },
                                                      "amount": {
                                                        "type": "number"
                                                      },
                                                      "amount_captured": {
                                                        "type": "number"
                                                      },
                                                      "amount_refunded": {
                                                        "type": "number"
                                                      },
                                                      "application": {
                                                        "type": "string"
                                                      },
                                                      "billing_details": {
                                                        "type": "object",
                                                        "properties": {
                                                          "address": {
                                                            "type": "object",
                                                            "properties": {
                                                              "city": {
                                                                "type": "string"
                                                              },
                                                              "country": {
                                                                "type": "string"
                                                              },
                                                              "line1": {
                                                                "type": "string"
                                                              },
                                                              "line2": {
                                                                "type": "string"
                                                              },
                                                              "postal_code": {
                                                                "type": "string"
                                                              },
                                                              "state": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "email": {
                                                            "type": "string"
                                                          },
                                                          "name": {
                                                            "type": "string"
                                                          },
                                                          "phone": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "calculated_statement_descriptor": {
                                                        "type": "string"
                                                      },
                                                      "captured": {
                                                        "type": "boolean"
                                                      },
                                                      "created": {
                                                        "type": "number"
                                                      },
                                                      "currency": {
                                                        "type": "string"
                                                      },
                                                      "customer": {
                                                        "type": "string"
                                                      },
                                                      "description": {
                                                        "type": "string"
                                                      },
                                                      "disputed": {
                                                        "type": "boolean"
                                                      },
                                                      "failure_code": {
                                                        "type": "string"
                                                      },
                                                      "failure_message": {
                                                        "type": "string"
                                                      },
                                                      "livemode": {
                                                        "type": "boolean"
                                                      },
                                                      "metadata": {
                                                        "type": "object",
                                                        "properties": {
                                                          "accountId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          },
                                                          "confirmationCode": {
                                                            "type": "string"
                                                          },
                                                          "reservationId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          },
                                                          "OTA": {
                                                            "type": "string"
                                                          },
                                                          "listingId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          }
                                                        }
                                                      },
                                                      "outcome": {
                                                        "type": "object",
                                                        "properties": {
                                                          "network_status": {
                                                            "type": "string"
                                                          },
                                                          "reason": {
                                                            "type": "string"
                                                          },
                                                          "risk_level": {
                                                            "type": "string"
                                                          },
                                                          "risk_score": {
                                                            "type": "number"
                                                          },
                                                          "seller_message": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "paid": {
                                                        "type": "boolean"
                                                      },
                                                      "payment_intent": {
                                                        "type": "string"
                                                      },
                                                      "payment_method": {
                                                        "type": "string"
                                                      },
                                                      "payment_method_details": {
                                                        "type": "object",
                                                        "properties": {
                                                          "card": {
                                                            "type": "object",
                                                            "properties": {
                                                              "brand": {
                                                                "type": "string"
                                                              },
                                                              "checks": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "cvc_check": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "country": {
                                                                "type": "string"
                                                              },
                                                              "exp_month": {
                                                                "type": "number"
                                                              },
                                                              "exp_year": {
                                                                "type": "number"
                                                              },
                                                              "fingerprint": {
                                                                "type": "string"
                                                              },
                                                              "funding": {
                                                                "type": "string"
                                                              },
                                                              "last4": {
                                                                "type": "string"
                                                              },
                                                              "network": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "refunded": {
                                                        "type": "boolean"
                                                      },
                                                      "refunds": {
                                                        "type": "object",
                                                        "properties": {
                                                          "object": {
                                                            "type": "string"
                                                          },
                                                          "data": {
                                                            "type": "array"
                                                          },
                                                          "has_more": {
                                                            "type": "boolean"
                                                          },
                                                          "total_count": {
                                                            "type": "number"
                                                          },
                                                          "url": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "statement_descriptor": {
                                                        "type": "string"
                                                      },
                                                      "status": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "has_more": {
                                                  "type": "boolean"
                                                },
                                                "total_count": {
                                                  "type": "number"
                                                },
                                                "url": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "client_secret": {
                                              "type": "string"
                                            },
                                            "confirmation_method": {
                                              "type": "string"
                                            },
                                            "created": {
                                              "type": "number"
                                            },
                                            "currency": {
                                              "type": "string"
                                            },
                                            "customer": {
                                              "type": "string"
                                            },
                                            "description": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "metadata": {
                                              "type": "object",
                                              "properties": {
                                                "accountId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                },
                                                "confirmationCode": {
                                                  "type": "string"
                                                },
                                                "reservationId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                },
                                                "OTA": {
                                                  "type": "string"
                                                },
                                                "listingId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                }
                                              }
                                            },
                                            "next_action": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string"
                                                },
                                                "use_stripe_sdk": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "merchant": {
                                                      "type": "string"
                                                    },
                                                    "three_d_secure_2_source": {
                                                      "type": "string"
                                                    },
                                                    "directory_server_name": {
                                                      "type": "string"
                                                    },
                                                    "server_transaction_id": {
                                                      "type": "string"
                                                    },
                                                    "three_ds_method_url": {
                                                      "type": "string"
                                                    },
                                                    "three_ds_optimizations": {
                                                      "type": "string"
                                                    },
                                                    "directory_server_encryption": {
                                                      "type": "object",
                                                      "properties": {
                                                        "directory_server_id": {
                                                          "type": "string"
                                                        },
                                                        "algorithm": {
                                                          "type": "string"
                                                        },
                                                        "certificate": {
                                                          "type": "string"
                                                        },
                                                        "root_certificate_authorities": {
                                                          "type": "array"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "payment_method": {
                                              "type": "string"
                                            },
                                            "payment_method_options": {
                                              "type": "object",
                                              "properties": {
                                                "card": {
                                                  "type": "object",
                                                  "properties": {
                                                    "request_three_d_secure": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "payment_method_types": {
                                              "type": "array"
                                            },
                                            "statement_descriptor": {
                                              "type": "string"
                                            },
                                            "status": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "payment_method": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "object": {
                                              "type": "string"
                                            },
                                            "billing_details": {
                                              "type": "object",
                                              "properties": {
                                                "address": {
                                                  "type": "object",
                                                  "properties": {
                                                    "city": {
                                                      "type": "string"
                                                    },
                                                    "country": {
                                                      "type": "string"
                                                    },
                                                    "line1": {
                                                      "type": "string"
                                                    },
                                                    "line2": {
                                                      "type": "string"
                                                    },
                                                    "postal_code": {
                                                      "type": "string"
                                                    },
                                                    "state": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "email": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "phone": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "card": {
                                              "type": "object",
                                              "properties": {
                                                "brand": {
                                                  "type": "string"
                                                },
                                                "checks": {
                                                  "type": "object",
                                                  "properties": {
                                                    "cvc_check": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "country": {
                                                  "type": "string"
                                                },
                                                "exp_month": {
                                                  "type": "number"
                                                },
                                                "exp_year": {
                                                  "type": "number"
                                                },
                                                "fingerprint": {
                                                  "type": "string"
                                                },
                                                "funding": {
                                                  "type": "string"
                                                },
                                                "last4": {
                                                  "type": "string"
                                                },
                                                "networks": {
                                                  "type": "object",
                                                  "properties": {
                                                    "available": {
                                                      "type": "array"
                                                    }
                                                  }
                                                },
                                                "three_d_secure_usage": {
                                                  "type": "object",
                                                  "properties": {
                                                    "supported": {
                                                      "type": "boolean"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "created": {
                                              "type": "number"
                                            },
                                            "customer": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": {
                                          "type": "string"
                                        },
                                        "statusCode": {
                                          "type": "number"
                                        },
                                        "requestId": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "receiptTargets": {
                                "type": "array"
                              },
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "shouldBePaidAt": {
                                "type": "string",
                                "example": "2021-08-16T08:38:20.280Z"
                              },
                              "paymentMethodId": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "guestId": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "currency": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "autoPaymentsPolicy": {
                          "type": "array"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "paymentProviderIds": {
                          "type": "array"
                        },
                        "fareAccommodationAdjustment": {
                          "type": "number"
                        },
                        "fareAccommodationDiscount": {
                          "type": "number"
                        },
                        "fareAccommodation": {
                          "type": "number"
                        },
                        "fareAccommodationAdjusted": {
                          "type": "number"
                        },
                        "fareCleaning": {
                          "type": "number"
                        },
                        "hostServiceFee": {
                          "type": "number"
                        },
                        "hostServiceFeeTax": {
                          "type": "number"
                        },
                        "hostServiceFeeIncTax": {
                          "type": "number"
                        },
                        "subTotalPrice": {
                          "type": "number"
                        },
                        "hostPayout": {
                          "type": "number"
                        },
                        "hostPayoutUsd": {
                          "type": "number"
                        },
                        "totalTaxes": {
                          "type": "number"
                        },
                        "totalRefunded": {
                          "type": "number"
                        },
                        "totalPaid": {
                          "type": "number"
                        },
                        "paymentsDue": {
                          "type": "number"
                        },
                        "balanceDue": {
                          "type": "number"
                        },
                        "isFullyPaid": {
                          "type": "boolean"
                        },
                        "useAccountRevenueShare": {
                          "type": "boolean"
                        },
                        "netIncomeFormula": {
                          "type": "string"
                        },
                        "netIncome": {
                          "type": "number"
                        },
                        "commissionFormula": {
                          "type": "string"
                        },
                        "commission": {
                          "type": "number"
                        },
                        "commissionTaxPercentage": {
                          "type": "number"
                        },
                        "commissionTax": {
                          "type": "number"
                        },
                        "commissionIncTax": {
                          "type": "number"
                        },
                        "ownerRevenueFormula": {
                          "type": "string"
                        },
                        "ownerRevenue": {
                          "type": "number"
                        },
                        "currencyConversionRateToAccount": {
                          "type": "number"
                        },
                        "isTouchedPayments": {
                          "type": "boolean"
                        }
                      }
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "checkInDateLocalized": {
                      "type": "string"
                    },
                    "checkOutDateLocalized": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "guestId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "source": {
                      "type": "string"
                    },
                    "confirmationCode": {
                      "type": "string"
                    },
                    "mtl": {
                      "type": "object",
                      "properties": {
                        "assigned": {
                          "type": "boolean"
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        }
                      }
                    },
                    "isReturningGuest": {
                      "type": "boolean"
                    },
                    "confirmedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "importedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "additionalFeesAtCreation": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "automationSources": {
                            "type": "array"
                          },
                          "_id": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "isPercentage": {
                            "type": "boolean"
                          },
                          "isAutomated": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "multiplier": {
                            "type": "string"
                          },
                          "targetFee": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "pendingTasks": {
                      "type": "array"
                    },
                    "customFields": {
                      "type": "array"
                    },
                    "lastUpdatedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "__v": {
                      "type": "number"
                    },
                    "conversationId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Account ID is required"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations/{id}": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Retrieve a reservation",
        "description": "This allows you to obtain details about a specific reservation. \n\nNOTE: \n- To include the check-in and check-out times of a reservations include the parameters: `listing.defaultCheckInTime`, `plannedArrival`, `listing.defaultCheckOutTime` and `plannedDeparture`. Planned arrival and departure times override the default times.\n- Use `checkInDateLocalized` and `checkOutDateLocalized` to retrieve the reservation according to the location of the listing.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Reservation fields to retrieve, separated by space",
            "required": false,
            "example": "title address",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reservation object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "integration": {
                      "type": "object",
                      "properties": {
                        "limitations": {
                          "type": "object",
                          "properties": {
                            "availableStatuses": {
                              "type": "array"
                            }
                          }
                        },
                        "bookingCom": {
                          "type": "object",
                          "properties": {
                            "invalidCreditCards": {
                              "type": "array"
                            },
                            "reports": {
                              "type": "array"
                            }
                          }
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "platform": {
                          "type": "string"
                        }
                      }
                    },
                    "guestyFeeDetails": {
                      "type": "object",
                      "properties": {
                        "commission": {
                          "type": "number"
                        },
                        "feeMinimum": {
                          "type": "number"
                        },
                        "fee": {
                          "type": "number"
                        },
                        "feeUsd": {
                          "type": "number"
                        },
                        "isMinimumFee": {
                          "type": "boolean"
                        },
                        "isMaximumFee": {
                          "type": "boolean"
                        },
                        "planItems": {
                          "type": "array"
                        }
                      }
                    },
                    "review": {
                      "type": "object",
                      "properties": {
                        "shouldReview": {
                          "type": "boolean"
                        }
                      }
                    },
                    "atTimeOfConfirmation": {
                      "type": "object",
                      "properties": {
                        "snapshotCreated": {
                          "type": "boolean"
                        },
                        "channelCommission": {
                          "type": "object",
                          "properties": {
                            "useAccountSettings": {
                              "type": "boolean"
                            },
                            "_id": {
                              "type": "string",
                              "description": "Unique Id",
                              "example": "563e0b6a08a2710e00057b82"
                            },
                            "manual": {
                              "type": "array"
                            }
                          }
                        },
                        "taxes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "appliedOnFees": {
                                "type": "string"
                              },
                              "appliedByDefaultOnChannels": {
                                "type": "array"
                              },
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "name": {
                                "type": "string"
                              },
                              "units": {
                                "type": "string"
                              },
                              "quantifier": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "appliedToAllFees": {
                                "type": "boolean"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "monthlyPriceFactor": {
                          "type": "number"
                        },
                        "weeklyPriceFactor": {
                          "type": "number"
                        },
                        "useAccountRevenueShare": {
                          "type": "boolean"
                        }
                      }
                    },
                    "flag": {
                      "type": "boolean"
                    },
                    "accountingEnabled": {
                      "type": "boolean"
                    },
                    "isBMApplied": {
                      "type": "boolean"
                    },
                    "confirmedPreBookings": {
                      "type": "array"
                    },
                    "pulledByDailySync": {
                      "type": "boolean"
                    },
                    "manuallyCreated": {
                      "type": "boolean"
                    },
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "status": {
                      "type": "string"
                    },
                    "checkIn": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "checkOut": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "nightsCount": {
                      "type": "number"
                    },
                    "guestsCount": {
                      "type": "number"
                    },
                    "money": {
                      "type": "object",
                      "properties": {
                        "altered": {
                          "type": "boolean"
                        },
                        "invoiceItems": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "title": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "isLocked": {
                                "type": "boolean"
                              },
                              "isTax": {
                                "type": "boolean"
                              },
                              "normalType": {
                                "type": "string"
                              },
                              "isAutoAdditionalFee": {
                                "type": "boolean"
                              },
                              "secondIdentifier": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "payments": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "authenticationRequiredData": {
                                "type": "object",
                                "properties": {
                                  "lastAuthMsgSentDate": {
                                    "type": "string",
                                    "example": "2021-08-16T08:38:20.280Z"
                                  },
                                  "authenticationUrl": {
                                    "type": "string"
                                  }
                                }
                              },
                              "paymentMethodStatus": {
                                "type": "string"
                              },
                              "isAuthorizationHold": {
                                "type": "boolean"
                              },
                              "status": {
                                "type": "string"
                              },
                              "refunds": {
                                "type": "array"
                              },
                              "authorizationHoldCaptures": {
                                "type": "array"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2021-08-16T08:38:20.280Z"
                              },
                              "attempts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "createdAt": {
                                      "type": "string",
                                      "example": "2021-08-16T08:38:20.280Z"
                                    },
                                    "_id": {
                                      "type": "string",
                                      "description": "Unique Id",
                                      "example": "563e0b6a08a2710e00057b82"
                                    },
                                    "status": {
                                      "type": "string"
                                    },
                                    "error": {
                                      "type": "string"
                                    },
                                    "payload": {
                                      "type": "object",
                                      "properties": {
                                        "charge": {
                                          "type": "string"
                                        },
                                        "code": {
                                          "type": "string"
                                        },
                                        "decline_code": {
                                          "type": "string"
                                        },
                                        "doc_url": {
                                          "type": "string"
                                        },
                                        "message": {
                                          "type": "string"
                                        },
                                        "payment_intent": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Unique Id",
                                              "example": "563e0b6a08a2710e00057b82"
                                            },
                                            "object": {
                                              "type": "string"
                                            },
                                            "amount": {
                                              "type": "number"
                                            },
                                            "amount_capturable": {
                                              "type": "number"
                                            },
                                            "amount_received": {
                                              "type": "number"
                                            },
                                            "application": {
                                              "type": "string"
                                            },
                                            "capture_method": {
                                              "type": "string"
                                            },
                                            "charges": {
                                              "type": "object",
                                              "properties": {
                                                "object": {
                                                  "type": "string"
                                                },
                                                "data": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "object": {
                                                        "type": "string"
                                                      },
                                                      "amount": {
                                                        "type": "number"
                                                      },
                                                      "amount_captured": {
                                                        "type": "number"
                                                      },
                                                      "amount_refunded": {
                                                        "type": "number"
                                                      },
                                                      "application": {
                                                        "type": "string"
                                                      },
                                                      "billing_details": {
                                                        "type": "object",
                                                        "properties": {
                                                          "address": {
                                                            "type": "object",
                                                            "properties": {
                                                              "city": {
                                                                "type": "string"
                                                              },
                                                              "country": {
                                                                "type": "string"
                                                              },
                                                              "line1": {
                                                                "type": "string"
                                                              },
                                                              "line2": {
                                                                "type": "string"
                                                              },
                                                              "postal_code": {
                                                                "type": "string"
                                                              },
                                                              "state": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "email": {
                                                            "type": "string"
                                                          },
                                                          "name": {
                                                            "type": "string"
                                                          },
                                                          "phone": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "calculated_statement_descriptor": {
                                                        "type": "string"
                                                      },
                                                      "captured": {
                                                        "type": "boolean"
                                                      },
                                                      "created": {
                                                        "type": "number"
                                                      },
                                                      "currency": {
                                                        "type": "string"
                                                      },
                                                      "customer": {
                                                        "type": "string"
                                                      },
                                                      "description": {
                                                        "type": "string"
                                                      },
                                                      "disputed": {
                                                        "type": "boolean"
                                                      },
                                                      "failure_code": {
                                                        "type": "string"
                                                      },
                                                      "failure_message": {
                                                        "type": "string"
                                                      },
                                                      "livemode": {
                                                        "type": "boolean"
                                                      },
                                                      "metadata": {
                                                        "type": "object",
                                                        "properties": {
                                                          "accountId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          },
                                                          "confirmationCode": {
                                                            "type": "string"
                                                          },
                                                          "reservationId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          },
                                                          "OTA": {
                                                            "type": "string"
                                                          },
                                                          "listingId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          }
                                                        }
                                                      },
                                                      "outcome": {
                                                        "type": "object",
                                                        "properties": {
                                                          "network_status": {
                                                            "type": "string"
                                                          },
                                                          "reason": {
                                                            "type": "string"
                                                          },
                                                          "risk_level": {
                                                            "type": "string"
                                                          },
                                                          "risk_score": {
                                                            "type": "number"
                                                          },
                                                          "seller_message": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "paid": {
                                                        "type": "boolean"
                                                      },
                                                      "payment_intent": {
                                                        "type": "string"
                                                      },
                                                      "payment_method": {
                                                        "type": "string"
                                                      },
                                                      "payment_method_details": {
                                                        "type": "object",
                                                        "properties": {
                                                          "card": {
                                                            "type": "object",
                                                            "properties": {
                                                              "brand": {
                                                                "type": "string"
                                                              },
                                                              "checks": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "cvc_check": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "country": {
                                                                "type": "string"
                                                              },
                                                              "exp_month": {
                                                                "type": "number"
                                                              },
                                                              "exp_year": {
                                                                "type": "number"
                                                              },
                                                              "fingerprint": {
                                                                "type": "string"
                                                              },
                                                              "funding": {
                                                                "type": "string"
                                                              },
                                                              "last4": {
                                                                "type": "string"
                                                              },
                                                              "network": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "refunded": {
                                                        "type": "boolean"
                                                      },
                                                      "refunds": {
                                                        "type": "object",
                                                        "properties": {
                                                          "object": {
                                                            "type": "string"
                                                          },
                                                          "data": {
                                                            "type": "array"
                                                          },
                                                          "has_more": {
                                                            "type": "boolean"
                                                          },
                                                          "total_count": {
                                                            "type": "number"
                                                          },
                                                          "url": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "statement_descriptor": {
                                                        "type": "string"
                                                      },
                                                      "status": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "has_more": {
                                                  "type": "boolean"
                                                },
                                                "total_count": {
                                                  "type": "number"
                                                },
                                                "url": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "client_secret": {
                                              "type": "string"
                                            },
                                            "confirmation_method": {
                                              "type": "string"
                                            },
                                            "created": {
                                              "type": "number"
                                            },
                                            "currency": {
                                              "type": "string"
                                            },
                                            "customer": {
                                              "type": "string"
                                            },
                                            "description": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "metadata": {
                                              "type": "object",
                                              "properties": {
                                                "accountId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                },
                                                "confirmationCode": {
                                                  "type": "string"
                                                },
                                                "reservationId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                },
                                                "OTA": {
                                                  "type": "string"
                                                },
                                                "listingId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                }
                                              }
                                            },
                                            "next_action": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string"
                                                },
                                                "use_stripe_sdk": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "merchant": {
                                                      "type": "string"
                                                    },
                                                    "three_d_secure_2_source": {
                                                      "type": "string"
                                                    },
                                                    "directory_server_name": {
                                                      "type": "string"
                                                    },
                                                    "server_transaction_id": {
                                                      "type": "string"
                                                    },
                                                    "three_ds_method_url": {
                                                      "type": "string"
                                                    },
                                                    "three_ds_optimizations": {
                                                      "type": "string"
                                                    },
                                                    "directory_server_encryption": {
                                                      "type": "object",
                                                      "properties": {
                                                        "directory_server_id": {
                                                          "type": "string"
                                                        },
                                                        "algorithm": {
                                                          "type": "string"
                                                        },
                                                        "certificate": {
                                                          "type": "string"
                                                        },
                                                        "root_certificate_authorities": {
                                                          "type": "array"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "payment_method": {
                                              "type": "string"
                                            },
                                            "payment_method_options": {
                                              "type": "object",
                                              "properties": {
                                                "card": {
                                                  "type": "object",
                                                  "properties": {
                                                    "request_three_d_secure": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "payment_method_types": {
                                              "type": "array"
                                            },
                                            "statement_descriptor": {
                                              "type": "string"
                                            },
                                            "status": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "payment_method": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "object": {
                                              "type": "string"
                                            },
                                            "billing_details": {
                                              "type": "object",
                                              "properties": {
                                                "address": {
                                                  "type": "object",
                                                  "properties": {
                                                    "city": {
                                                      "type": "string"
                                                    },
                                                    "country": {
                                                      "type": "string"
                                                    },
                                                    "line1": {
                                                      "type": "string"
                                                    },
                                                    "line2": {
                                                      "type": "string"
                                                    },
                                                    "postal_code": {
                                                      "type": "string"
                                                    },
                                                    "state": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "email": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "phone": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "card": {
                                              "type": "object",
                                              "properties": {
                                                "brand": {
                                                  "type": "string"
                                                },
                                                "checks": {
                                                  "type": "object",
                                                  "properties": {
                                                    "cvc_check": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "country": {
                                                  "type": "string"
                                                },
                                                "exp_month": {
                                                  "type": "number"
                                                },
                                                "exp_year": {
                                                  "type": "number"
                                                },
                                                "fingerprint": {
                                                  "type": "string"
                                                },
                                                "funding": {
                                                  "type": "string"
                                                },
                                                "last4": {
                                                  "type": "string"
                                                },
                                                "networks": {
                                                  "type": "object",
                                                  "properties": {
                                                    "available": {
                                                      "type": "array"
                                                    }
                                                  }
                                                },
                                                "three_d_secure_usage": {
                                                  "type": "object",
                                                  "properties": {
                                                    "supported": {
                                                      "type": "boolean"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "created": {
                                              "type": "number"
                                            },
                                            "customer": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": {
                                          "type": "string"
                                        },
                                        "statusCode": {
                                          "type": "number"
                                        },
                                        "requestId": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "receiptTargets": {
                                "type": "array"
                              },
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "shouldBePaidAt": {
                                "type": "string",
                                "example": "2021-08-16T08:38:20.280Z"
                              },
                              "paymentMethodId": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "guestId": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "currency": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "autoPaymentsPolicy": {
                          "type": "array"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "paymentProviderIds": {
                          "type": "array"
                        },
                        "fareAccommodationAdjustment": {
                          "type": "number"
                        },
                        "fareAccommodationDiscount": {
                          "type": "number"
                        },
                        "fareAccommodation": {
                          "type": "number"
                        },
                        "fareAccommodationAdjusted": {
                          "type": "number"
                        },
                        "fareCleaning": {
                          "type": "number"
                        },
                        "hostServiceFee": {
                          "type": "number"
                        },
                        "hostServiceFeeTax": {
                          "type": "number"
                        },
                        "hostServiceFeeIncTax": {
                          "type": "number"
                        },
                        "subTotalPrice": {
                          "type": "number"
                        },
                        "hostPayout": {
                          "type": "number"
                        },
                        "hostPayoutUsd": {
                          "type": "number"
                        },
                        "totalTaxes": {
                          "type": "number"
                        },
                        "totalRefunded": {
                          "type": "number"
                        },
                        "totalPaid": {
                          "type": "number"
                        },
                        "paymentsDue": {
                          "type": "number"
                        },
                        "balanceDue": {
                          "type": "number"
                        },
                        "isFullyPaid": {
                          "type": "boolean"
                        },
                        "useAccountRevenueShare": {
                          "type": "boolean"
                        },
                        "netIncomeFormula": {
                          "type": "string"
                        },
                        "netIncome": {
                          "type": "number"
                        },
                        "commissionFormula": {
                          "type": "string"
                        },
                        "commission": {
                          "type": "number"
                        },
                        "commissionTaxPercentage": {
                          "type": "number"
                        },
                        "commissionTax": {
                          "type": "number"
                        },
                        "commissionIncTax": {
                          "type": "number"
                        },
                        "ownerRevenueFormula": {
                          "type": "string"
                        },
                        "ownerRevenue": {
                          "type": "number"
                        },
                        "currencyConversionRateToAccount": {
                          "type": "number"
                        },
                        "isTouchedPayments": {
                          "type": "boolean"
                        }
                      }
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "checkInDateLocalized": {
                      "type": "string"
                    },
                    "checkOutDateLocalized": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "guestId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "source": {
                      "type": "string"
                    },
                    "confirmationCode": {
                      "type": "string"
                    },
                    "mtl": {
                      "type": "object",
                      "properties": {
                        "assigned": {
                          "type": "boolean"
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        }
                      }
                    },
                    "isReturningGuest": {
                      "type": "boolean"
                    },
                    "confirmedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "importedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "additionalFeesAtCreation": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "automationSources": {
                            "type": "array"
                          },
                          "_id": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "isPercentage": {
                            "type": "boolean"
                          },
                          "isAutomated": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "multiplier": {
                            "type": "string"
                          },
                          "targetFee": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "pendingTasks": {
                      "type": "array"
                    },
                    "customFields": {
                      "type": "array"
                    },
                    "lastUpdatedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "__v": {
                      "type": "number"
                    },
                    "conversationId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Reservation Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Update a reservation",
        "description": "Use this request to alter a guest reservation.\n\nNOTE:\n- To amend the check-in and check-out dates, please use`checkInDateLocalized` and `checkOutDateLocalized` with the format `YYYY-MM-DD`.\nIn this case, we do not recommend using fields `checkIn` and `checkOut` with UTC format (example `2023-01-30T10:00:00+02:00`) it might cause timezone and dates discrepancies.\n- Update check-in and check-out times using `plannedArrival` and `plannedDeparture`.\n\nIMPORTANT:\nInclude `ignoreCalendar` and `ignoreTerms` at your own risk. These will ignore any calendar block or listing requirement and may lead to an overbooking or unsuitable booking.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Selected fields to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retrieve the updated reservation, selection of fields that were sent in body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "integration": {
                      "type": "object",
                      "properties": {
                        "limitations": {
                          "type": "object",
                          "properties": {
                            "availableStatuses": {
                              "type": "array"
                            }
                          }
                        },
                        "bookingCom": {
                          "type": "object",
                          "properties": {
                            "invalidCreditCards": {
                              "type": "array"
                            },
                            "reports": {
                              "type": "array"
                            }
                          }
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "platform": {
                          "type": "string"
                        }
                      }
                    },
                    "guestyFeeDetails": {
                      "type": "object",
                      "properties": {
                        "commission": {
                          "type": "number"
                        },
                        "feeMinimum": {
                          "type": "number"
                        },
                        "fee": {
                          "type": "number"
                        },
                        "feeUsd": {
                          "type": "number"
                        },
                        "isMinimumFee": {
                          "type": "boolean"
                        },
                        "isMaximumFee": {
                          "type": "boolean"
                        },
                        "planItems": {
                          "type": "array"
                        }
                      }
                    },
                    "review": {
                      "type": "object",
                      "properties": {
                        "shouldReview": {
                          "type": "boolean"
                        }
                      }
                    },
                    "atTimeOfConfirmation": {
                      "type": "object",
                      "properties": {
                        "snapshotCreated": {
                          "type": "boolean"
                        },
                        "channelCommission": {
                          "type": "object",
                          "properties": {
                            "useAccountSettings": {
                              "type": "boolean"
                            },
                            "_id": {
                              "type": "string",
                              "description": "Unique Id",
                              "example": "563e0b6a08a2710e00057b82"
                            },
                            "manual": {
                              "type": "array"
                            }
                          }
                        },
                        "taxes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "appliedOnFees": {
                                "type": "string"
                              },
                              "appliedByDefaultOnChannels": {
                                "type": "array"
                              },
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "name": {
                                "type": "string"
                              },
                              "units": {
                                "type": "string"
                              },
                              "quantifier": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "appliedToAllFees": {
                                "type": "boolean"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "monthlyPriceFactor": {
                          "type": "number"
                        },
                        "weeklyPriceFactor": {
                          "type": "number"
                        },
                        "useAccountRevenueShare": {
                          "type": "boolean"
                        }
                      }
                    },
                    "flag": {
                      "type": "boolean"
                    },
                    "accountingEnabled": {
                      "type": "boolean"
                    },
                    "isBMApplied": {
                      "type": "boolean"
                    },
                    "confirmedPreBookings": {
                      "type": "array"
                    },
                    "pulledByDailySync": {
                      "type": "boolean"
                    },
                    "manuallyCreated": {
                      "type": "boolean"
                    },
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "status": {
                      "type": "string"
                    },
                    "checkIn": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "checkOut": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "nightsCount": {
                      "type": "number"
                    },
                    "guestsCount": {
                      "type": "number"
                    },
                    "money": {
                      "type": "object",
                      "properties": {
                        "altered": {
                          "type": "boolean"
                        },
                        "invoiceItems": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "title": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "isLocked": {
                                "type": "boolean"
                              },
                              "isTax": {
                                "type": "boolean"
                              },
                              "normalType": {
                                "type": "string"
                              },
                              "isAutoAdditionalFee": {
                                "type": "boolean"
                              },
                              "secondIdentifier": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "payments": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "authenticationRequiredData": {
                                "type": "object",
                                "properties": {
                                  "lastAuthMsgSentDate": {
                                    "type": "string",
                                    "example": "2021-08-16T08:38:20.280Z"
                                  },
                                  "authenticationUrl": {
                                    "type": "string"
                                  }
                                }
                              },
                              "paymentMethodStatus": {
                                "type": "string"
                              },
                              "isAuthorizationHold": {
                                "type": "boolean"
                              },
                              "status": {
                                "type": "string"
                              },
                              "refunds": {
                                "type": "array"
                              },
                              "authorizationHoldCaptures": {
                                "type": "array"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2021-08-16T08:38:20.280Z"
                              },
                              "attempts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "createdAt": {
                                      "type": "string",
                                      "example": "2021-08-16T08:38:20.280Z"
                                    },
                                    "_id": {
                                      "type": "string",
                                      "description": "Unique Id",
                                      "example": "563e0b6a08a2710e00057b82"
                                    },
                                    "status": {
                                      "type": "string"
                                    },
                                    "error": {
                                      "type": "string"
                                    },
                                    "payload": {
                                      "type": "object",
                                      "properties": {
                                        "charge": {
                                          "type": "string"
                                        },
                                        "code": {
                                          "type": "string"
                                        },
                                        "decline_code": {
                                          "type": "string"
                                        },
                                        "doc_url": {
                                          "type": "string"
                                        },
                                        "message": {
                                          "type": "string"
                                        },
                                        "payment_intent": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Unique Id",
                                              "example": "563e0b6a08a2710e00057b82"
                                            },
                                            "object": {
                                              "type": "string"
                                            },
                                            "amount": {
                                              "type": "number"
                                            },
                                            "amount_capturable": {
                                              "type": "number"
                                            },
                                            "amount_received": {
                                              "type": "number"
                                            },
                                            "application": {
                                              "type": "string"
                                            },
                                            "capture_method": {
                                              "type": "string"
                                            },
                                            "charges": {
                                              "type": "object",
                                              "properties": {
                                                "object": {
                                                  "type": "string"
                                                },
                                                "data": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "object": {
                                                        "type": "string"
                                                      },
                                                      "amount": {
                                                        "type": "number"
                                                      },
                                                      "amount_captured": {
                                                        "type": "number"
                                                      },
                                                      "amount_refunded": {
                                                        "type": "number"
                                                      },
                                                      "application": {
                                                        "type": "string"
                                                      },
                                                      "billing_details": {
                                                        "type": "object",
                                                        "properties": {
                                                          "address": {
                                                            "type": "object",
                                                            "properties": {
                                                              "city": {
                                                                "type": "string"
                                                              },
                                                              "country": {
                                                                "type": "string"
                                                              },
                                                              "line1": {
                                                                "type": "string"
                                                              },
                                                              "line2": {
                                                                "type": "string"
                                                              },
                                                              "postal_code": {
                                                                "type": "string"
                                                              },
                                                              "state": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "email": {
                                                            "type": "string"
                                                          },
                                                          "name": {
                                                            "type": "string"
                                                          },
                                                          "phone": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "calculated_statement_descriptor": {
                                                        "type": "string"
                                                      },
                                                      "captured": {
                                                        "type": "boolean"
                                                      },
                                                      "created": {
                                                        "type": "number"
                                                      },
                                                      "currency": {
                                                        "type": "string"
                                                      },
                                                      "customer": {
                                                        "type": "string"
                                                      },
                                                      "description": {
                                                        "type": "string"
                                                      },
                                                      "disputed": {
                                                        "type": "boolean"
                                                      },
                                                      "failure_code": {
                                                        "type": "string"
                                                      },
                                                      "failure_message": {
                                                        "type": "string"
                                                      },
                                                      "livemode": {
                                                        "type": "boolean"
                                                      },
                                                      "metadata": {
                                                        "type": "object",
                                                        "properties": {
                                                          "accountId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          },
                                                          "confirmationCode": {
                                                            "type": "string"
                                                          },
                                                          "reservationId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          },
                                                          "OTA": {
                                                            "type": "string"
                                                          },
                                                          "listingId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          }
                                                        }
                                                      },
                                                      "outcome": {
                                                        "type": "object",
                                                        "properties": {
                                                          "network_status": {
                                                            "type": "string"
                                                          },
                                                          "reason": {
                                                            "type": "string"
                                                          },
                                                          "risk_level": {
                                                            "type": "string"
                                                          },
                                                          "risk_score": {
                                                            "type": "number"
                                                          },
                                                          "seller_message": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "paid": {
                                                        "type": "boolean"
                                                      },
                                                      "payment_intent": {
                                                        "type": "string"
                                                      },
                                                      "payment_method": {
                                                        "type": "string"
                                                      },
                                                      "payment_method_details": {
                                                        "type": "object",
                                                        "properties": {
                                                          "card": {
                                                            "type": "object",
                                                            "properties": {
                                                              "brand": {
                                                                "type": "string"
                                                              },
                                                              "checks": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "cvc_check": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "country": {
                                                                "type": "string"
                                                              },
                                                              "exp_month": {
                                                                "type": "number"
                                                              },
                                                              "exp_year": {
                                                                "type": "number"
                                                              },
                                                              "fingerprint": {
                                                                "type": "string"
                                                              },
                                                              "funding": {
                                                                "type": "string"
                                                              },
                                                              "last4": {
                                                                "type": "string"
                                                              },
                                                              "network": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "refunded": {
                                                        "type": "boolean"
                                                      },
                                                      "refunds": {
                                                        "type": "object",
                                                        "properties": {
                                                          "object": {
                                                            "type": "string"
                                                          },
                                                          "data": {
                                                            "type": "array"
                                                          },
                                                          "has_more": {
                                                            "type": "boolean"
                                                          },
                                                          "total_count": {
                                                            "type": "number"
                                                          },
                                                          "url": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "statement_descriptor": {
                                                        "type": "string"
                                                      },
                                                      "status": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "has_more": {
                                                  "type": "boolean"
                                                },
                                                "total_count": {
                                                  "type": "number"
                                                },
                                                "url": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "client_secret": {
                                              "type": "string"
                                            },
                                            "confirmation_method": {
                                              "type": "string"
                                            },
                                            "created": {
                                              "type": "number"
                                            },
                                            "currency": {
                                              "type": "string"
                                            },
                                            "customer": {
                                              "type": "string"
                                            },
                                            "description": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "metadata": {
                                              "type": "object",
                                              "properties": {
                                                "accountId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                },
                                                "confirmationCode": {
                                                  "type": "string"
                                                },
                                                "reservationId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                },
                                                "OTA": {
                                                  "type": "string"
                                                },
                                                "listingId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                }
                                              }
                                            },
                                            "next_action": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string"
                                                },
                                                "use_stripe_sdk": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "merchant": {
                                                      "type": "string"
                                                    },
                                                    "three_d_secure_2_source": {
                                                      "type": "string"
                                                    },
                                                    "directory_server_name": {
                                                      "type": "string"
                                                    },
                                                    "server_transaction_id": {
                                                      "type": "string"
                                                    },
                                                    "three_ds_method_url": {
                                                      "type": "string"
                                                    },
                                                    "three_ds_optimizations": {
                                                      "type": "string"
                                                    },
                                                    "directory_server_encryption": {
                                                      "type": "object",
                                                      "properties": {
                                                        "directory_server_id": {
                                                          "type": "string"
                                                        },
                                                        "algorithm": {
                                                          "type": "string"
                                                        },
                                                        "certificate": {
                                                          "type": "string"
                                                        },
                                                        "root_certificate_authorities": {
                                                          "type": "array"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "payment_method": {
                                              "type": "string"
                                            },
                                            "payment_method_options": {
                                              "type": "object",
                                              "properties": {
                                                "card": {
                                                  "type": "object",
                                                  "properties": {
                                                    "request_three_d_secure": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "payment_method_types": {
                                              "type": "array"
                                            },
                                            "statement_descriptor": {
                                              "type": "string"
                                            },
                                            "status": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "payment_method": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "object": {
                                              "type": "string"
                                            },
                                            "billing_details": {
                                              "type": "object",
                                              "properties": {
                                                "address": {
                                                  "type": "object",
                                                  "properties": {
                                                    "city": {
                                                      "type": "string"
                                                    },
                                                    "country": {
                                                      "type": "string"
                                                    },
                                                    "line1": {
                                                      "type": "string"
                                                    },
                                                    "line2": {
                                                      "type": "string"
                                                    },
                                                    "postal_code": {
                                                      "type": "string"
                                                    },
                                                    "state": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "email": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "phone": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "card": {
                                              "type": "object",
                                              "properties": {
                                                "brand": {
                                                  "type": "string"
                                                },
                                                "checks": {
                                                  "type": "object",
                                                  "properties": {
                                                    "cvc_check": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "country": {
                                                  "type": "string"
                                                },
                                                "exp_month": {
                                                  "type": "number"
                                                },
                                                "exp_year": {
                                                  "type": "number"
                                                },
                                                "fingerprint": {
                                                  "type": "string"
                                                },
                                                "funding": {
                                                  "type": "string"
                                                },
                                                "last4": {
                                                  "type": "string"
                                                },
                                                "networks": {
                                                  "type": "object",
                                                  "properties": {
                                                    "available": {
                                                      "type": "array"
                                                    }
                                                  }
                                                },
                                                "three_d_secure_usage": {
                                                  "type": "object",
                                                  "properties": {
                                                    "supported": {
                                                      "type": "boolean"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "created": {
                                              "type": "number"
                                            },
                                            "customer": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": {
                                          "type": "string"
                                        },
                                        "statusCode": {
                                          "type": "number"
                                        },
                                        "requestId": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "receiptTargets": {
                                "type": "array"
                              },
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "shouldBePaidAt": {
                                "type": "string",
                                "example": "2021-08-16T08:38:20.280Z"
                              },
                              "paymentMethodId": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "guestId": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "currency": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "autoPaymentsPolicy": {
                          "type": "array"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "paymentProviderIds": {
                          "type": "array"
                        },
                        "fareAccommodationAdjustment": {
                          "type": "number"
                        },
                        "fareAccommodationDiscount": {
                          "type": "number"
                        },
                        "fareAccommodation": {
                          "type": "number"
                        },
                        "fareAccommodationAdjusted": {
                          "type": "number"
                        },
                        "fareCleaning": {
                          "type": "number"
                        },
                        "hostServiceFee": {
                          "type": "number"
                        },
                        "hostServiceFeeTax": {
                          "type": "number"
                        },
                        "hostServiceFeeIncTax": {
                          "type": "number"
                        },
                        "subTotalPrice": {
                          "type": "number"
                        },
                        "hostPayout": {
                          "type": "number"
                        },
                        "hostPayoutUsd": {
                          "type": "number"
                        },
                        "totalTaxes": {
                          "type": "number"
                        },
                        "totalRefunded": {
                          "type": "number"
                        },
                        "totalPaid": {
                          "type": "number"
                        },
                        "paymentsDue": {
                          "type": "number"
                        },
                        "balanceDue": {
                          "type": "number"
                        },
                        "isFullyPaid": {
                          "type": "boolean"
                        },
                        "useAccountRevenueShare": {
                          "type": "boolean"
                        },
                        "netIncomeFormula": {
                          "type": "string"
                        },
                        "netIncome": {
                          "type": "number"
                        },
                        "commissionFormula": {
                          "type": "string"
                        },
                        "commission": {
                          "type": "number"
                        },
                        "commissionTaxPercentage": {
                          "type": "number"
                        },
                        "commissionTax": {
                          "type": "number"
                        },
                        "commissionIncTax": {
                          "type": "number"
                        },
                        "ownerRevenueFormula": {
                          "type": "string"
                        },
                        "ownerRevenue": {
                          "type": "number"
                        },
                        "currencyConversionRateToAccount": {
                          "type": "number"
                        },
                        "isTouchedPayments": {
                          "type": "boolean"
                        }
                      }
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "checkInDateLocalized": {
                      "type": "string"
                    },
                    "checkOutDateLocalized": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "guestId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "source": {
                      "type": "string"
                    },
                    "confirmationCode": {
                      "type": "string"
                    },
                    "mtl": {
                      "type": "object",
                      "properties": {
                        "assigned": {
                          "type": "boolean"
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        }
                      }
                    },
                    "isReturningGuest": {
                      "type": "boolean"
                    },
                    "confirmedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "importedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "additionalFeesAtCreation": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "automationSources": {
                            "type": "array"
                          },
                          "_id": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "isPercentage": {
                            "type": "boolean"
                          },
                          "isAutomated": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "multiplier": {
                            "type": "string"
                          },
                          "targetFee": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "pendingTasks": {
                      "type": "array"
                    },
                    "customFields": {
                      "type": "array"
                    },
                    "lastUpdatedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "__v": {
                      "type": "number"
                    },
                    "conversationId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Check out date is required"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Reservation Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations/{id}/payments": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Add a payment to reservation",
        "description": "Use this request to create an immediate or future payment, and to add a record to payment history. \n\nAn immediate or future payment is charged using a credit card, where a rerocded payment indicates the funds were collected in other methods such as bank transfer, cash, e-check etc",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Payment parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentMethod": {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": [
                          "CASH",
                          "CREDIT",
                          "DEBIT",
                          "ECHECK",
                          "AIRBNB",
                          "BANK_TRANSFER",
                          "CREDIT_NOTE",
                          "VOUCHER",
                          "CHECK",
                          "STRIPE",
                          "AMARYLLIS",
                          "OTHER"
                        ],
                        "example": "CASH"
                      },
                      "saveForFutureUse": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string",
                        "example": "5fa02fa358d2db673e17bc2d",
                        "description": "Required only for payments processed using credit cards (i.e not cash, echeck etc). \n Please see 'List guest's payment methods' request for more info."
                      }
                    },
                    "required": [
                      "method, id"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "example": 10
                  },
                  "shouldBePaidAt": {
                    "type": "string",
                    "format": "date",
                    "description": "Expected charge date. \n Not passing this param at all or passing it with a past date, will immediately charge the payment.",
                    "example": "2023-05-30T12:00:00.000Z"
                  },
                  "paidAt": {
                    "type": "string",
                    "format": "date",
                    "description": "Used when adding a record to payment history - the actual charge date.",
                    "example": "2023-05-30T12:00:00.000Z"
                  },
                  "note": {
                    "type": "string",
                    "description": "Free text"
                  },
                  "isAuthorizationHold": {
                    "type": "boolean",
                    "example": false,
                    "description": "True in case of Authorization hold kind of payments"
                  }
                },
                "required": [
                  "paymentMethod",
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Retrieve the created payment for reservation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "paymentProviderId": {
                      "type": "string"
                    },
                    "paymentProvider": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "syncedAt": {
                          "type": "string",
                          "format": "date"
                        },
                        "lastPendingPaymentDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "pendingPaymentsCount": {
                          "type": "number"
                        },
                        "paymentMethodsCount": {
                          "type": "number"
                        },
                        "providerAccountId": {
                          "type": "string"
                        },
                        "isDefault": {
                          "type": "boolean"
                        },
                        "providerType": {
                          "type": "string"
                        },
                        "connectedBy": {
                          "type": "string"
                        },
                        "accountName": {
                          "type": "string"
                        },
                        "defaultCurrency": {
                          "type": "string"
                        },
                        "statsLastUpdated": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Method is required"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Reservation Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations/{id}/invoiceItems": {
      "post": {
        "deprecated": true,
        "tags": [
          "Reservations"
        ],
        "summary": "Create new Invoice item",
        "description": "For creating new invoice item use the <a href=\"https://open-api-docs.guesty.com/reference/invoiceitemscontroller_createinvoiceitem\">new API</a>",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "required": true,
            "example": "5e7abcde0000000A08011001",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Invoice parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the invoice item",
                    "example": "Accommodation fare"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Price to be charged for the invoice item",
                    "example": 98.52
                  },
                  "normalType": {
                    "type": "string",
                    "description": "Invoice item's type identifier",
                    "example": "AFE"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the invoice item",
                    "example": "Management fee description"
                  },
                  "secondIdentifier": {
                    "type": "string",
                    "description": "An additional optional identifier",
                    "example": "MANAGEMENT"
                  }
                },
                "required": [
                  "amount",
                  "title",
                  "normalType",
                  "secondIdentifier"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invoice created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "integration": {
                      "type": "object",
                      "properties": {
                        "limitations": {
                          "type": "object",
                          "properties": {
                            "availableStatuses": {
                              "type": "array"
                            }
                          }
                        },
                        "bookingCom": {
                          "type": "object",
                          "properties": {
                            "invalidCreditCards": {
                              "type": "array"
                            },
                            "reports": {
                              "type": "array"
                            }
                          }
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "platform": {
                          "type": "string"
                        }
                      }
                    },
                    "guestyFeeDetails": {
                      "type": "object",
                      "properties": {
                        "commission": {
                          "type": "number"
                        },
                        "feeMinimum": {
                          "type": "number"
                        },
                        "fee": {
                          "type": "number"
                        },
                        "feeUsd": {
                          "type": "number"
                        },
                        "isMinimumFee": {
                          "type": "boolean"
                        },
                        "isMaximumFee": {
                          "type": "boolean"
                        },
                        "planItems": {
                          "type": "array"
                        }
                      }
                    },
                    "review": {
                      "type": "object",
                      "properties": {
                        "shouldReview": {
                          "type": "boolean"
                        }
                      }
                    },
                    "atTimeOfConfirmation": {
                      "type": "object",
                      "properties": {
                        "snapshotCreated": {
                          "type": "boolean"
                        },
                        "channelCommission": {
                          "type": "object",
                          "properties": {
                            "useAccountSettings": {
                              "type": "boolean"
                            },
                            "_id": {
                              "type": "string",
                              "description": "Unique Id",
                              "example": "563e0b6a08a2710e00057b82"
                            },
                            "manual": {
                              "type": "array"
                            }
                          }
                        },
                        "taxes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "appliedOnFees": {
                                "type": "string"
                              },
                              "appliedByDefaultOnChannels": {
                                "type": "array"
                              },
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "name": {
                                "type": "string"
                              },
                              "units": {
                                "type": "string"
                              },
                              "quantifier": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "appliedToAllFees": {
                                "type": "boolean"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "monthlyPriceFactor": {
                          "type": "number"
                        },
                        "weeklyPriceFactor": {
                          "type": "number"
                        },
                        "useAccountRevenueShare": {
                          "type": "boolean"
                        }
                      }
                    },
                    "flag": {
                      "type": "boolean"
                    },
                    "accountingEnabled": {
                      "type": "boolean"
                    },
                    "isBMApplied": {
                      "type": "boolean"
                    },
                    "confirmedPreBookings": {
                      "type": "array"
                    },
                    "pulledByDailySync": {
                      "type": "boolean"
                    },
                    "manuallyCreated": {
                      "type": "boolean"
                    },
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "status": {
                      "type": "string"
                    },
                    "checkIn": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "checkOut": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "nightsCount": {
                      "type": "number"
                    },
                    "guestsCount": {
                      "type": "number"
                    },
                    "money": {
                      "type": "object",
                      "properties": {
                        "altered": {
                          "type": "boolean"
                        },
                        "invoiceItems": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "title": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "isLocked": {
                                "type": "boolean"
                              },
                              "isTax": {
                                "type": "boolean"
                              },
                              "normalType": {
                                "type": "string"
                              },
                              "isAutoAdditionalFee": {
                                "type": "boolean"
                              },
                              "secondIdentifier": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "payments": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "authenticationRequiredData": {
                                "type": "object",
                                "properties": {
                                  "lastAuthMsgSentDate": {
                                    "type": "string",
                                    "example": "2021-08-16T08:38:20.280Z"
                                  },
                                  "authenticationUrl": {
                                    "type": "string"
                                  }
                                }
                              },
                              "paymentMethodStatus": {
                                "type": "string"
                              },
                              "isAuthorizationHold": {
                                "type": "boolean"
                              },
                              "status": {
                                "type": "string"
                              },
                              "refunds": {
                                "type": "array"
                              },
                              "authorizationHoldCaptures": {
                                "type": "array"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2021-08-16T08:38:20.280Z"
                              },
                              "attempts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "createdAt": {
                                      "type": "string",
                                      "example": "2021-08-16T08:38:20.280Z"
                                    },
                                    "_id": {
                                      "type": "string",
                                      "description": "Unique Id",
                                      "example": "563e0b6a08a2710e00057b82"
                                    },
                                    "status": {
                                      "type": "string"
                                    },
                                    "error": {
                                      "type": "string"
                                    },
                                    "payload": {
                                      "type": "object",
                                      "properties": {
                                        "charge": {
                                          "type": "string"
                                        },
                                        "code": {
                                          "type": "string"
                                        },
                                        "decline_code": {
                                          "type": "string"
                                        },
                                        "doc_url": {
                                          "type": "string"
                                        },
                                        "message": {
                                          "type": "string"
                                        },
                                        "payment_intent": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Unique Id",
                                              "example": "563e0b6a08a2710e00057b82"
                                            },
                                            "object": {
                                              "type": "string"
                                            },
                                            "amount": {
                                              "type": "number"
                                            },
                                            "amount_capturable": {
                                              "type": "number"
                                            },
                                            "amount_received": {
                                              "type": "number"
                                            },
                                            "application": {
                                              "type": "string"
                                            },
                                            "capture_method": {
                                              "type": "string"
                                            },
                                            "charges": {
                                              "type": "object",
                                              "properties": {
                                                "object": {
                                                  "type": "string"
                                                },
                                                "data": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "id": {
                                                        "type": "string"
                                                      },
                                                      "object": {
                                                        "type": "string"
                                                      },
                                                      "amount": {
                                                        "type": "number"
                                                      },
                                                      "amount_captured": {
                                                        "type": "number"
                                                      },
                                                      "amount_refunded": {
                                                        "type": "number"
                                                      },
                                                      "application": {
                                                        "type": "string"
                                                      },
                                                      "billing_details": {
                                                        "type": "object",
                                                        "properties": {
                                                          "address": {
                                                            "type": "object",
                                                            "properties": {
                                                              "city": {
                                                                "type": "string"
                                                              },
                                                              "country": {
                                                                "type": "string"
                                                              },
                                                              "line1": {
                                                                "type": "string"
                                                              },
                                                              "line2": {
                                                                "type": "string"
                                                              },
                                                              "postal_code": {
                                                                "type": "string"
                                                              },
                                                              "state": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "email": {
                                                            "type": "string"
                                                          },
                                                          "name": {
                                                            "type": "string"
                                                          },
                                                          "phone": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "calculated_statement_descriptor": {
                                                        "type": "string"
                                                      },
                                                      "captured": {
                                                        "type": "boolean"
                                                      },
                                                      "created": {
                                                        "type": "number"
                                                      },
                                                      "currency": {
                                                        "type": "string"
                                                      },
                                                      "customer": {
                                                        "type": "string"
                                                      },
                                                      "description": {
                                                        "type": "string"
                                                      },
                                                      "disputed": {
                                                        "type": "boolean"
                                                      },
                                                      "failure_code": {
                                                        "type": "string"
                                                      },
                                                      "failure_message": {
                                                        "type": "string"
                                                      },
                                                      "livemode": {
                                                        "type": "boolean"
                                                      },
                                                      "metadata": {
                                                        "type": "object",
                                                        "properties": {
                                                          "accountId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          },
                                                          "confirmationCode": {
                                                            "type": "string"
                                                          },
                                                          "reservationId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          },
                                                          "OTA": {
                                                            "type": "string"
                                                          },
                                                          "listingId": {
                                                            "type": "string",
                                                            "description": "Unique Id",
                                                            "example": "563e0b6a08a2710e00057b82"
                                                          }
                                                        }
                                                      },
                                                      "outcome": {
                                                        "type": "object",
                                                        "properties": {
                                                          "network_status": {
                                                            "type": "string"
                                                          },
                                                          "reason": {
                                                            "type": "string"
                                                          },
                                                          "risk_level": {
                                                            "type": "string"
                                                          },
                                                          "risk_score": {
                                                            "type": "number"
                                                          },
                                                          "seller_message": {
                                                            "type": "string"
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "paid": {
                                                        "type": "boolean"
                                                      },
                                                      "payment_intent": {
                                                        "type": "string"
                                                      },
                                                      "payment_method": {
                                                        "type": "string"
                                                      },
                                                      "payment_method_details": {
                                                        "type": "object",
                                                        "properties": {
                                                          "card": {
                                                            "type": "object",
                                                            "properties": {
                                                              "brand": {
                                                                "type": "string"
                                                              },
                                                              "checks": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "cvc_check": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "country": {
                                                                "type": "string"
                                                              },
                                                              "exp_month": {
                                                                "type": "number"
                                                              },
                                                              "exp_year": {
                                                                "type": "number"
                                                              },
                                                              "fingerprint": {
                                                                "type": "string"
                                                              },
                                                              "funding": {
                                                                "type": "string"
                                                              },
                                                              "last4": {
                                                                "type": "string"
                                                              },
                                                              "network": {
                                                                "type": "string"
                                                              }
                                                            }
                                                          },
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "refunded": {
                                                        "type": "boolean"
                                                      },
                                                      "refunds": {
                                                        "type": "object",
                                                        "properties": {
                                                          "object": {
                                                            "type": "string"
                                                          },
                                                          "data": {
                                                            "type": "array"
                                                          },
                                                          "has_more": {
                                                            "type": "boolean"
                                                          },
                                                          "total_count": {
                                                            "type": "number"
                                                          },
                                                          "url": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "statement_descriptor": {
                                                        "type": "string"
                                                      },
                                                      "status": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "has_more": {
                                                  "type": "boolean"
                                                },
                                                "total_count": {
                                                  "type": "number"
                                                },
                                                "url": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "client_secret": {
                                              "type": "string"
                                            },
                                            "confirmation_method": {
                                              "type": "string"
                                            },
                                            "created": {
                                              "type": "number"
                                            },
                                            "currency": {
                                              "type": "string"
                                            },
                                            "customer": {
                                              "type": "string"
                                            },
                                            "description": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "metadata": {
                                              "type": "object",
                                              "properties": {
                                                "accountId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                },
                                                "confirmationCode": {
                                                  "type": "string"
                                                },
                                                "reservationId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                },
                                                "OTA": {
                                                  "type": "string"
                                                },
                                                "listingId": {
                                                  "type": "string",
                                                  "description": "Unique Id",
                                                  "example": "563e0b6a08a2710e00057b82"
                                                }
                                              }
                                            },
                                            "next_action": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string"
                                                },
                                                "use_stripe_sdk": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string"
                                                    },
                                                    "merchant": {
                                                      "type": "string"
                                                    },
                                                    "three_d_secure_2_source": {
                                                      "type": "string"
                                                    },
                                                    "directory_server_name": {
                                                      "type": "string"
                                                    },
                                                    "server_transaction_id": {
                                                      "type": "string"
                                                    },
                                                    "three_ds_method_url": {
                                                      "type": "string"
                                                    },
                                                    "three_ds_optimizations": {
                                                      "type": "string"
                                                    },
                                                    "directory_server_encryption": {
                                                      "type": "object",
                                                      "properties": {
                                                        "directory_server_id": {
                                                          "type": "string"
                                                        },
                                                        "algorithm": {
                                                          "type": "string"
                                                        },
                                                        "certificate": {
                                                          "type": "string"
                                                        },
                                                        "root_certificate_authorities": {
                                                          "type": "array"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "payment_method": {
                                              "type": "string"
                                            },
                                            "payment_method_options": {
                                              "type": "object",
                                              "properties": {
                                                "card": {
                                                  "type": "object",
                                                  "properties": {
                                                    "request_three_d_secure": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "payment_method_types": {
                                              "type": "array"
                                            },
                                            "statement_descriptor": {
                                              "type": "string"
                                            },
                                            "status": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "payment_method": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "object": {
                                              "type": "string"
                                            },
                                            "billing_details": {
                                              "type": "object",
                                              "properties": {
                                                "address": {
                                                  "type": "object",
                                                  "properties": {
                                                    "city": {
                                                      "type": "string"
                                                    },
                                                    "country": {
                                                      "type": "string"
                                                    },
                                                    "line1": {
                                                      "type": "string"
                                                    },
                                                    "line2": {
                                                      "type": "string"
                                                    },
                                                    "postal_code": {
                                                      "type": "string"
                                                    },
                                                    "state": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "email": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "phone": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "card": {
                                              "type": "object",
                                              "properties": {
                                                "brand": {
                                                  "type": "string"
                                                },
                                                "checks": {
                                                  "type": "object",
                                                  "properties": {
                                                    "cvc_check": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "country": {
                                                  "type": "string"
                                                },
                                                "exp_month": {
                                                  "type": "number"
                                                },
                                                "exp_year": {
                                                  "type": "number"
                                                },
                                                "fingerprint": {
                                                  "type": "string"
                                                },
                                                "funding": {
                                                  "type": "string"
                                                },
                                                "last4": {
                                                  "type": "string"
                                                },
                                                "networks": {
                                                  "type": "object",
                                                  "properties": {
                                                    "available": {
                                                      "type": "array"
                                                    }
                                                  }
                                                },
                                                "three_d_secure_usage": {
                                                  "type": "object",
                                                  "properties": {
                                                    "supported": {
                                                      "type": "boolean"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "created": {
                                              "type": "number"
                                            },
                                            "customer": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": {
                                          "type": "string"
                                        },
                                        "statusCode": {
                                          "type": "number"
                                        },
                                        "requestId": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "receiptTargets": {
                                "type": "array"
                              },
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "shouldBePaidAt": {
                                "type": "string",
                                "example": "2021-08-16T08:38:20.280Z"
                              },
                              "paymentMethodId": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "guestId": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "currency": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "autoPaymentsPolicy": {
                          "type": "array"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "paymentProviderIds": {
                          "type": "array"
                        },
                        "fareAccommodationAdjustment": {
                          "type": "number"
                        },
                        "fareAccommodationDiscount": {
                          "type": "number"
                        },
                        "fareAccommodation": {
                          "type": "number"
                        },
                        "fareAccommodationAdjusted": {
                          "type": "number"
                        },
                        "fareCleaning": {
                          "type": "number"
                        },
                        "hostServiceFee": {
                          "type": "number"
                        },
                        "hostServiceFeeTax": {
                          "type": "number"
                        },
                        "hostServiceFeeIncTax": {
                          "type": "number"
                        },
                        "subTotalPrice": {
                          "type": "number"
                        },
                        "hostPayout": {
                          "type": "number"
                        },
                        "hostPayoutUsd": {
                          "type": "number"
                        },
                        "totalTaxes": {
                          "type": "number"
                        },
                        "totalRefunded": {
                          "type": "number"
                        },
                        "totalPaid": {
                          "type": "number"
                        },
                        "paymentsDue": {
                          "type": "number"
                        },
                        "balanceDue": {
                          "type": "number"
                        },
                        "isFullyPaid": {
                          "type": "boolean"
                        },
                        "useAccountRevenueShare": {
                          "type": "boolean"
                        },
                        "netIncomeFormula": {
                          "type": "string"
                        },
                        "netIncome": {
                          "type": "number"
                        },
                        "commissionFormula": {
                          "type": "string"
                        },
                        "commission": {
                          "type": "number"
                        },
                        "commissionTaxPercentage": {
                          "type": "number"
                        },
                        "commissionTax": {
                          "type": "number"
                        },
                        "commissionIncTax": {
                          "type": "number"
                        },
                        "ownerRevenueFormula": {
                          "type": "string"
                        },
                        "ownerRevenue": {
                          "type": "number"
                        },
                        "currencyConversionRateToAccount": {
                          "type": "number"
                        },
                        "isTouchedPayments": {
                          "type": "boolean"
                        }
                      }
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "checkInDateLocalized": {
                      "type": "string"
                    },
                    "checkOutDateLocalized": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "guestId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "source": {
                      "type": "string"
                    },
                    "confirmationCode": {
                      "type": "string"
                    },
                    "mtl": {
                      "type": "object",
                      "properties": {
                        "assigned": {
                          "type": "boolean"
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        }
                      }
                    },
                    "isReturningGuest": {
                      "type": "boolean"
                    },
                    "confirmedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "importedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "additionalFeesAtCreation": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "automationSources": {
                            "type": "array"
                          },
                          "_id": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "isPercentage": {
                            "type": "boolean"
                          },
                          "isAutomated": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "accountId": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          },
                          "multiplier": {
                            "type": "string"
                          },
                          "targetFee": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "pendingTasks": {
                      "type": "array"
                    },
                    "customFields": {
                      "type": "array"
                    },
                    "lastUpdatedAt": {
                      "type": "string",
                      "example": "2021-08-17T07:00:00.000Z"
                    },
                    "__v": {
                      "type": "number"
                    },
                    "conversationId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Title is required"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Reservation Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations/{id}/payments/{paymentId}": {
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Update or cancel a payment for reservation",
        "description": "Use this request to update or cancel an upcoming payment. To cancel, set the the payment status to `CANCELLED`.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "paymentId",
            "description": "Payment ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Payment parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Payment status",
                    "enum": [
                      "PENDING",
                      "PENDING_AUTH",
                      "FAILED",
                      "SUCCEEDED",
                      "CANCELLED",
                      "AUTHORIZATION_HOLD_SUCCEEDED",
                      "FAILED_FULLY_PAID",
                      "PENDING_ACTIVATION"
                    ],
                    "example": "SUCCEEDED"
                  },
                  "paymentMethod": {
                    "type": "object",
                    "description": "Payment method object\n **\"Recorded\" cash payment method example**",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": [
                          "CASH",
                          "STRIPE",
                          "AMARYLLIS",
                          "CREDIT",
                          "DEBIT",
                          "ECHECK",
                          "AIRBNB",
                          "BANK_TRANSFER",
                          "CREDIT_NOTE",
                          "VOUCHER",
                          "CHECK",
                          "OTHER"
                        ],
                        "example": "CASH"
                      },
                      "saveForFutureUse": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string",
                        "example": "5fa02fa358d2db673e17bc2d"
                      }
                    },
                    "required": [
                      "method"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "example": 10
                  },
                  "shouldBePaidAt": {
                    "type": "string",
                    "format": "date",
                    "description": "Expected charge date. \n Not passing this param at all or passing it with a past date, will immediately charge the payment.",
                    "example": "2023-05-30T12:00:00.000Z"
                  },
                  "paidAt": {
                    "type": "string",
                    "format": "date",
                    "description": "Used when adding a record to payment history - the actual charge date.",
                    "example": "2023-05-30T12:00:00.000Z"
                  },
                  "note": {
                    "type": "string",
                    "example": "Free text"
                  },
                  "stripePaymentMethodToken": {
                    "type": "string",
                    "description": "Stripe pm_ token representing a credit card\n **tok_ kind of tokens are NOT supported**",
                    "example": "pm_stipetoken"
                  }
                },
                "required": [
                  "paymentId",
                  "paymentMethod"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retrieve the updated reservation payments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "paymentProviderId": {
                      "type": "string"
                    },
                    "paymentProvider": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "syncedAt": {
                          "type": "string",
                          "format": "date"
                        },
                        "lastPendingPaymentDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "pendingPaymentsCount": {
                          "type": "number"
                        },
                        "paymentMethodsCount": {
                          "type": "number"
                        },
                        "providerAccountId": {
                          "type": "string"
                        },
                        "isDefault": {
                          "type": "boolean"
                        },
                        "providerType": {
                          "type": "string"
                        },
                        "connectedBy": {
                          "type": "string"
                        },
                        "accountName": {
                          "type": "string"
                        },
                        "defaultCurrency": {
                          "type": "string"
                        },
                        "statsLastUpdated": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Method is required"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Reservation Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations/{id}/payments/{paymentId}/refund": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Refund an existing payment",
        "description": "Use this endpoint to refund a guest's payment charged on an existing reservation.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "paymentId",
            "description": "Payment ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Payment parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "example": 100
                  },
                  "note": {
                    "type": "string",
                    "example": "Free text"
                  }
                },
                "required": [
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Retrieve the updated reservation payments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "paymentProviderId": {
                      "type": "string"
                    },
                    "paymentProvider": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "syncedAt": {
                          "type": "string",
                          "format": "date"
                        },
                        "lastPendingPaymentDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "pendingPaymentsCount": {
                          "type": "number"
                        },
                        "paymentMethodsCount": {
                          "type": "number"
                        },
                        "providerAccountId": {
                          "type": "string"
                        },
                        "isDefault": {
                          "type": "boolean"
                        },
                        "providerType": {
                          "type": "string"
                        },
                        "connectedBy": {
                          "type": "string"
                        },
                        "accountName": {
                          "type": "string"
                        },
                        "defaultCurrency": {
                          "type": "string"
                        },
                        "statsLastUpdated": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Payment not found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations/{id}/payments/{paymentId}/cancel": {
      "patch": {
        "tags": [
          "Reservations"
        ],
        "summary": "Cancels a pending or recorded payment",
        "description": "Use this endpoint to cancel a pending or recorded payment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "paymentId",
            "description": "Payment ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Retrieve the updated reservation payments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Payment status",
                      "example": "CANCELLED"
                    },
                    "paymentMethod": {
                      "type": "object",
                      "description": "Payment method object\n **\"Recorded\" cash payment method example**",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": [
                            "RECORDED_CASH",
                            "STRIPE",
                            "AMARYLLIS",
                            "CREDIT",
                            "DEBIT",
                            "ECHECK",
                            "AIRBNB",
                            "BANK_TRANSFER",
                            "CREDIT_NOTE",
                            "VOUCHER",
                            "CHECK",
                            "OTHER"
                          ],
                          "example": "RECORDED_CASH"
                        },
                        "id": {
                          "type": "string",
                          "example": "5fa02fa358d2db673e17bc2d"
                        }
                      },
                      "required": [
                        "method"
                      ]
                    },
                    "amount": {
                      "type": "number",
                      "example": 10
                    },
                    "cancelledAt": {
                      "type": "string",
                      "format": "date",
                      "description": "Date of cancellation",
                      "example": "2023-05-30T12:00:00.000Z"
                    },
                    "note": {
                      "type": "string",
                      "example": "Free text"
                    }
                  },
                  "required": [
                    "paymentId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Payment not found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations.csv": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Export as CSV",
        "description": "Use this request to export a custom list of reservations as CSV file. Results are limited to 500 reservations per a request.",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "Subject of the filter",
                    "example": "checkIn"
                  },
                  "operator": {
                    "type": "string",
                    "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between\n\n **IMPORTANT NOTE:**\n In order to use the $between operator please check the syntax of the example below:\n `[{\"field\":\"checkIn\", \"operator\":\"$between\",\"from\":\"2023-03-02T00:00:00%2B01:00\",\"to\":\"2023-03-02T23:59:59%2B01:00\"}]`",
                    "example": "$gt"
                  },
                  "value": {
                    "type": "integer",
                    "description": "Value to filter by",
                    "example": 0
                  },
                  "context": {
                    "type": "string",
                    "description": "Optional preprocessing. Options are now, createdAt, confirmedAt, canceledAt, alteredAt. When given, the date in value is relative to the context.",
                    "default": null,
                    "example": "now"
                  }
                }
              },
              "required": [
                "field",
                "operator",
                "value"
              ]
            },
            "description": "Array of filters to query by"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Selection of fields, separated by space",
            "example": "checkIn checkOut confirmationCode guest.fullname listing.title"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting, default: `checkIn`",
            "example": "checkIn"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Limit for list of records. Default value: `250`, max: `500`",
            "example": "100"
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "type": "integer"
            },
            "example": "100",
            "description": "Skip number of records. In case nothing provided so nothing will be skipped"
          }
        ],
        "responses": {
          "200": {
            "description": "reservations csv",
            "content": {
              "text/csv": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations.email": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Send results in email",
        "description": "Use this request to export a custom list of reservations in an Email. Results are limited to 250 reservations per a request.",
        "requestBody": {
          "description": "Reservation new values",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "to": {
                    "type": "string",
                    "description": "Address of recipient"
                  }
                },
                "required": [
                  "to"
                ],
                "example": {
                  "to": "koby@guesty.com"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "Subject of the filter",
                    "example": "checkIn"
                  },
                  "operator": {
                    "type": "string",
                    "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between\n\n **IMPORTANT NOTE:**\n In order to use the $between operator please check the syntax of the example below:\n `[{\"field\":\"checkIn\", \"operator\":\"$between\",\"from\":\"2023-03-02T00:00:00%2B01:00\",\"to\":\"2023-03-02T23:59:59%2B01:00\"}]`",
                    "example": "$gt"
                  },
                  "value": {
                    "type": "integer",
                    "description": "Value to filter by",
                    "example": 0
                  },
                  "context": {
                    "type": "string",
                    "description": "Optional preprocessing. Options are now, createdAt, confirmedAt, canceledAt, alteredAt. When given, the date in value is relative to the context.",
                    "default": null,
                    "example": "now"
                  }
                }
              },
              "required": [
                "field",
                "operator",
                "value"
              ]
            },
            "description": "Array of filters to query by"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Selection of fields, separated by space",
            "example": "checkIn checkOut confirmationCode guest.fullname listing.title"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting, default: `checkIn`",
            "example": "checkIn"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Limit for list of records. Default value: `250`, max: `500`",
            "example": "100"
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "type": "integer"
            },
            "example": "100",
            "description": "Skip number of records. In case nothing provided so nothing will be skipped"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of reservations objects",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations/{id}/approve": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Approve a pending booking request",
        "description": "Use this call to accept a pending reservation request.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "example": "5fa02fa358d2db673e17bc2d",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reservation object - _id and status fields",
            "content": {
              "application/json": {
                "example": "{\n    \"_id\": \"5fa02fa358d2db673e17bc2d\",\n    \"status\": \"CONFIRMED\",\n}"
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Reservation status is approved - can't approve"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Reservation not found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations/{id}/decline": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Decline a pending booking request",
        "description": "Use this call to deny a pending reservation request.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "example": "5fa02fa358d2db673e17bc2d",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reservation object - _id and status fields",
            "content": {
              "application/json": {
                "example": "{\n    \"_id\": \"5fa02fa358d2db673e17bc2d\",\n    \"status\": \"DECLINED\",\n}"
              }
            }
          },
          "400": {
            "description": "Invalid Input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Reservation status is approved - can't decline"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Reservation not found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations/{id}/custom-fields": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Retrieve all populated custom fields on an existing reservation.",
        "description": "Retrieve all populated custom fields and boolean fields with change to their default state from an existing reservation.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "example": "5fa02fa358d2db673e17bc2d",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Custom fields of reservation",
            "content": {
              "application/json": {
                "example": "[\n    {\n      \"fieldId\": \"5dc03b42e28baf001e2b35d0\",\n        \"value\": \"Same day check-ins may not be eligible for early or late check-in/outs. Please be courteous and ask the Team if its possible.\"\n    },\n    {\n        \"fieldId\": \"5dc03b0f628338001fb6b13f\",\n        \"value\": \"NO DOGS ALLOWED\"\n    }\n]"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Reservation not found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Update reservation's Custom Fields",
        "description": "Edit the values of any custom fields on an existing reservation.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "example": "5fa02fa358d2db673e17bc2d",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Reservation custom fields new values",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customFields": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fieldId": {
                          "type": "string",
                          "example": "5f744b491af840002ca636a2"
                        },
                        "value": {
                          "type": "string",
                          "example": "wifipassword"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated object",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Reservation not found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations/{id}/custom-fields/{field_id}": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Get custom field - Reservations",
        "description": "Retrieve a specific custom field from and existing reservation.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "example": "5fa02fa358d2db673e17bc2d",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "field_id",
            "description": "Field ID",
            "example": "63c6bc609e4384007c620a95",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Custom fields of reservation",
            "content": {
              "application/json": {
                "example": "{\n    \"_id\": \"63c6bc609e4384007c620a95\",\n    \"fieldId\": \"5dc03b42e28baf001e2b35d0\",\n    \"value\": \"Same day check-ins may not be eligible for early or late check-in/outs. Please be courteous and ask the Team if its possible.\"\n}"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Not found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations/{reservation_id}/custom-fields/{field_id}": {
      "delete": {
        "tags": [
          "Reservations"
        ],
        "summary": "Delete reservation's custom fields",
        "description": "Delete specific custom fields from an existing reservation.",
        "parameters": [
          {
            "in": "path",
            "name": "reservation_id",
            "description": "Reservation ID",
            "example": "5fa02fa358d2db673e17bc2d",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "field_id",
            "description": "Field ID",
            "example": "63c6bd9a79e5950042d078d8",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Not found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reservations/{id}/request-cancellation-sync": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Request airbnb reservation cancellation on the platform",
        "description": "Use this call to request a new reservation cancellation from your guest.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "example": "6550033b5c3e4cff130c3564",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cancellationData": {
                    "type": "object",
                    "properties": {
                      "reason": {
                        "type": "string",
                        "enum": [
                          "DECLINE_REASON_HOST_DOUBLE",
                          "DECLINE_REASON_HOST_CHANGE",
                          "DECLINE_REASON_HOST_UNAUTHORIZED_PARTY",
                          "DECLINE_REASON_HOST_BEHAVIOR",
                          "DECLINE_REASON_HOST_OTHER",
                          "DECLINE_REASON_HOST_ASKED",
                          "DECLINE_REASON_COVID19_HOST",
                          "DECLINE_REASON_HOST_BAD_FIT",
                          "DECLINE_REASON_HOST_BAD_REVIEWS_SPARSE_PROFILE"
                        ],
                        "example": "DECLINE_REASON_HOST_DOUBLE"
                      },
                      "subReason": {
                        "type": "string",
                        "example": "DECLINE_REASON_HOST_HOST_UNAVAILABLE",
                        "enum": [
                          "DECLINE_REASON_HOST_EMERGENCY",
                          "DECLINE_REASON_HOST_HOST_UNAVAILABLE",
                          "DECLINE_REASON_HOST_DOUBLE_BOOKED",
                          "DECLINE_REASON_HOST_RESERVATION_LENGTH",
                          "DECLINE_REASON_HOST_DIFFERENT_PRICE",
                          "DECLINE_REASON_HOST_UNAUTHORIZED_PARTY",
                          "DECLINE_REASON_HOST_PARTY_REVIEWS",
                          "DECLINE_REASON_HOST_PARTY_INDICATION",
                          "DECLINE_REASON_HOST_BEHAVIOR_REVIEWS",
                          "DECLINE_REASON_HOST_BEHAVIOR_INDICATION",
                          "DECLINE_REASON_HOST_BEHAVIOR_OTHER",
                          "DECLINE_REASON_HOST_GUEST_PROFILE"
                        ]
                      },
                      "messageToAirbnb": {
                        "type": "string"
                      },
                      "messageToGuest": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Result of operation: true or false",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "details": {
                      "type": "object",
                      "properties": {
                        "reason": {
                          "type": "string",
                          "example": "DECLINE_REASON_HOST_DOUBLE"
                        },
                        "subReason": {
                          "type": "string",
                          "example": "DECLINE_REASON_HOST_HOST_UNAVAILABLE"
                        },
                        "messageToAirbnb": {
                          "type": "string"
                        },
                        "messageToGuest": {
                          "type": "string"
                        }
                      }
                    },
                    "isSuccessful": {
                      "type": "boolean",
                      "example": true
                    },
                    "cancelledAt": {
                      "type": "string",
                      "format": "date"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Reservation cancellation error message"
                        },
                        "cause": {
                          "type": "string",
                          "description": "Reservation cancellation sub error message"
                        },
                        "meta": {
                          "type": "object",
                          "description": "Error metadata",
                          "properties": {}
                        }
                      }
                    },
                    "isSuccessful": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Reservation cancellation error message"
                        },
                        "cause": {
                          "type": "string",
                          "description": "Reservation cancellation sub error message"
                        },
                        "meta": {
                          "type": "object",
                          "description": "Error metadata",
                          "properties": {}
                        }
                      }
                    },
                    "isSuccessful": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Reservation cancellation error message"
                        },
                        "cause": {
                          "type": "string",
                          "description": "Reservation cancellation sub error message"
                        },
                        "meta": {
                          "type": "object",
                          "description": "Error metadata",
                          "properties": {}
                        }
                      }
                    },
                    "isSuccessful": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Reservation cancellation error message"
                        },
                        "cause": {
                          "type": "string",
                          "description": "Reservation cancellation sub error message"
                        },
                        "meta": {
                          "type": "object",
                          "description": "Error metadata",
                          "properties": {}
                        }
                      }
                    },
                    "isSuccessful": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "Reservation cancellation error message"
                        },
                        "cause": {
                          "type": "string",
                          "description": "Reservation cancellation sub error message"
                        },
                        "meta": {
                          "type": "object",
                          "description": "Error metadata",
                          "properties": {}
                        }
                      }
                    },
                    "isSuccessful": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/availability-pricing/api/calendar/listings/{id}": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Retrieve the calendar for a single listing",
        "description": "Use this endpoint to retrieve daily calendar availability and pricing for a given listing ID and date range.\n\nIMPORTANT: Multi-unit calendar availability is determined by unit allotment, not its `status` field. To calculate if a multi-unit has availability, use the following formula:\n\n```\nconst isAvailable = _.isNumber(currentDay.allotment)?\ncurrentDay.allotment > 0 : currentDay.status === 'available';\n```",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Listing ID",
            "example": "5fa02fa358d2db673e17bc2d",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "First day to be returned (format: YYYY-MM-DD)",
            "example": "2023-01-01",
            "required": true,
            "schema": {
              "type": "string",
              "format": "YYYY-MM-DD"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "description": "Last day to be returned (format: YYYY-MM-DD)",
            "example": "2023-02-01",
            "required": true,
            "schema": {
              "type": "string",
              "format": "YYYY-MM-DD"
            }
          },
          {
            "in": "query",
            "name": "includeAllotment",
            "description": "Return day objects including allotment",
            "example": "false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "ignoreInactiveChildAllotment",
            "description": "Specify ignoreInactiveChildAllotment=true to exclude inactive sub-units from the allotment calculation. Default value is false.",
            "example": "false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "ignoreUnlistedChildAllotment",
            "description": "Specify ignoreUnlistedChildAllotment=true to exclude unlisted sub-units from the allotment calculation. Default value is false.",
            "example": "false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar with available/unavailable dates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "description": "Date with format YYYY-MM-DD"
                    },
                    "listingId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ad"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Listing's currency value."
                    },
                    "price": {
                      "type": "number",
                      "description": "Price in the listing's currency."
                    },
                    "isBasePrice": {
                      "type": "boolean",
                      "description": "Flag which shows whether listing is set to base price."
                    },
                    "minNights": {
                      "type": "number",
                      "description": "Min nights value."
                    },
                    "isBaseMinNights": {
                      "type": "boolean",
                      "description": "Flag which shows whether listing is set to base min night."
                    },
                    "status": {
                      "type": "string",
                      "description": "Status value, enum: available, unavailable, booked, reserved."
                    },
                    "allotment": {
                      "type": "number",
                      "description": "Allotment value for parent listing."
                    },
                    "blocks": {
                      "type": "object"
                    },
                    "blockRefs": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "5d6e7a7ebf8e3800207735ad"
                      }
                    },
                    "reservationId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ad"
                    },
                    "reservation": {
                      "type": "object",
                      "example": "5d6e7a7ebf8e3800207735ad"
                    },
                    "cta": {
                      "type": "boolean",
                      "description": "Closed To Arrival value"
                    },
                    "ctd": {
                      "type": "boolean",
                      "description": "Closed To Departure value"
                    }
                  },
                  "example": {
                    "date": "2021-01-01",
                    "listingId": "5988346d3c31bf0f00747eb6",
                    "currency": "EUR",
                    "price": 50,
                    "isBasePrice": true,
                    "minNights": 2,
                    "isBaseMinNights": true,
                    "status": "booked",
                    "allotment": 0,
                    "blocks": {
                      "m": false,
                      "r": false,
                      "b": true,
                      "bd": false,
                      "sr": false,
                      "abl": false,
                      "a": false,
                      "bw": false,
                      "o": false,
                      "pt": false
                    },
                    "blockRefs": [
                      {
                        "_id": "5fe9c819a141ab0026c901c7",
                        "reservation": {
                          "listing": {
                            "timezone": "Asia/Jerusalem",
                            "defaultCheckInTime": "15:00"
                          },
                          "money": {
                            "currency": "EUR",
                            "hostPayout": 367.55,
                            "totalPaid": 0,
                            "balanceDue": 367.55
                          },
                          "guest": {
                            "_id": "5fe9c81834209c002c8ecd80"
                          },
                          "integration": {
                            "platform": "manual"
                          },
                          "_id": "5fe9c81934209c002c8ecd8b",
                          "status": "confirmed",
                          "checkIn": "2020-12-30T13:00:00.000Z",
                          "checkOut": "2021-01-02T08:00:00.000Z",
                          "nightsCount": 3,
                          "guestsCount": 2,
                          "listingId": "5988346d3c31bf0f00747eb6",
                          "checkInDateLocalized": "2020-12-30",
                          "checkOutDateLocalized": "2021-01-02",
                          "accountId": "596f6fe706112710005d96ff",
                          "guestId": "5fe9c81834209c002c8ecd80",
                          "source": "Manual",
                          "confirmationCode": "J86mAAAM2"
                        },
                        "listingId": "5988346d3c31bf0f00747eb6",
                        "startDate": "2020-12-30T00:00:00.000Z",
                        "endDate": "2021-01-01T00:00:00.000Z",
                        "type": "b",
                        "reservationId": "5fe9c81934209c002c8ecd8b"
                      }
                    ],
                    "reservationId": "5fe9c81934209c002c8ecd8b",
                    "reservation": {
                      "listing": {
                        "timezone": "Asia/Jerusalem",
                        "defaultCheckInTime": "15:00"
                      },
                      "money": {
                        "currency": "EUR",
                        "hostPayout": 367.55,
                        "totalPaid": 0,
                        "balanceDue": 367.55
                      },
                      "guest": {
                        "_id": "5fe9c81834209c002c8ecd80"
                      },
                      "integration": {
                        "platform": "manual"
                      },
                      "_id": "5fe9c81934209c002c8ecd8b",
                      "status": "confirmed",
                      "checkIn": "2020-12-30T13:00:00.000Z",
                      "checkOut": "2021-01-02T08:00:00.000Z",
                      "nightsCount": 3,
                      "guestsCount": 2,
                      "listingId": "5988346d3c31bf0f00747eb6",
                      "checkInDateLocalized": "2020-12-30",
                      "checkOutDateLocalized": "2021-01-02",
                      "accountId": "596f6fe706112710005d96ff",
                      "guestId": "5fe9c81834209c002c8ecd80",
                      "source": "Manual",
                      "confirmationCode": "J86mAAAM2"
                    },
                    "cta": false,
                    "ctd": false
                  }
                }
              }
            }
          },
          "404": {
            "description": "Listing Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    },
                    "requestId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data",
                    "requestId"
                  ],
                  "example": {
                    "message": "Listing not found",
                    "code": "LISTING_NOT_FOUND",
                    "data": {
                      "listingId": "62e7c7a38200fa0031fc9e2e"
                    },
                    "requestId": "Root=1-63b68e3a-573cc83364fce31b0fd45abc"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "requestId"
                  ],
                  "example": {
                    "message": "child \"endDate\" fails because [\"endDate\" is required]",
                    "code": "ValidationError",
                    "details": [
                      {
                        "message": "\"endDate\" is required",
                        "path": [
                          "endDate"
                        ],
                        "type": "any.required",
                        "context": {
                          "key": "endDate",
                          "label": "endDate"
                        }
                      }
                    ],
                    "requestId": "Root=1-63b69790-624dc23b6c3abdaf7a0ce73d"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Calendar"
        ],
        "summary": "Update the calendar for a single listing",
        "description": "Set the nightly rate, minimum stay and availability of any calendar date per listing or use this endpoint to set availability and pricing for multiple dates or date ranges.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Listing ID",
            "example": "5d6e7a7ebf8e3800207735ad",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update calendar body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "startDate",
                  "endDate"
                ],
                "properties": {
                  "startDate": {
                    "description": "First day affected by changes (format: YYYY-MM-DD)",
                    "type": "string",
                    "format": "YYYY-MM-DD",
                    "example": "2023-01-01"
                  },
                  "endDate": {
                    "description": "Last date affected by changes (format: YYYY-MM-DD)",
                    "type": "string",
                    "format": "YYYY-MM-DD",
                    "example": "2023-02-01"
                  },
                  "status": {
                    "description": "New status, enum: available, unavailable.",
                    "type": "string",
                    "enum": [
                      "available",
                      "unavailable"
                    ],
                    "example": "available"
                  },
                  "price": {
                    "description": "New price, in the listing's currency.",
                    "type": "number",
                    "example": "100"
                  },
                  "isBasePrice": {
                    "description": "Whether to reset prices for the range to the listing's base price",
                    "type": "boolean",
                    "example": "false"
                  },
                  "minNights": {
                    "description": "New min nights value",
                    "type": "integer",
                    "example": "3"
                  },
                  "isBaseMinNights": {
                    "description": "Whether to reset min nights for the range to the listing's base min nights",
                    "type": "boolean",
                    "example": "false"
                  },
                  "note": {
                    "description": "Note to add to those dates.",
                    "type": "string",
                    "example": "this is a note"
                  },
                  "cta": {
                    "description": "Set Closed To Arrival for the date range.",
                    "type": "boolean",
                    "example": "false"
                  },
                  "ctd": {
                    "description": "Set Closed To Departure for the date range.",
                    "type": "boolean",
                    "example": "false"
                  },
                  "useChildValues": {
                    "description": "Accept changes to minNights on sub-unit",
                    "type": "boolean",
                    "example": "false"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns ok if the update successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "ok"
                }
              }
            }
          },
          "404": {
            "description": "Listing Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    },
                    "requestId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data",
                    "requestId"
                  ],
                  "example": {
                    "message": "Listing not found",
                    "code": "LISTING_NOT_FOUND",
                    "data": {
                      "listingId": "62e7c7a38200fa0031fc9e2e"
                    },
                    "requestId": "Root=1-63b68e3a-573cc83364fce31b0fd45abc"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "requestId"
                  ],
                  "example": {
                    "message": "child \"endDate\" fails because [\"endDate\" is required]",
                    "code": "ValidationError",
                    "details": [
                      {
                        "message": "\"endDate\" is required",
                        "path": [
                          "endDate"
                        ],
                        "type": "any.required",
                        "context": {
                          "key": "endDate",
                          "label": "endDate"
                        }
                      }
                    ],
                    "requestId": "Root=1-63b69790-624dc23b6c3abdaf7a0ce73d"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/availability-pricing/api/calendar/listings": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "summary": "Retrieve calendars for multiple listings",
        "description": "Use this endpoint to retrieve calendar availability and pricing for multiple listings according to a date range.",
        "parameters": [
          {
            "in": "query",
            "name": "listingIds",
            "description": "Listing IDs (comma separated)",
            "example": "5fa02fa358d2db673e17bc2d,5fa02fa358d2db673e17bc2e",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "startDate",
            "description": "First day to be returned (format: YYYY-MM-DD)",
            "example": "2023-01-01",
            "required": true,
            "schema": {
              "type": "string",
              "format": "YYYY-MM-DD"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "example": "2023-02-01",
            "description": "Last day to be returned (format: YYYY-MM-DD)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "YYYY-MM-DD"
            }
          },
          {
            "in": "query",
            "name": "includeAllotment",
            "description": "Return day objects including allotment",
            "example": "false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "ignoreInactiveChildAllotment",
            "description": "Specify ignoreInactiveChildAllotment=true to exclude inactive sub-units from the allotment calculation. Default value is false.",
            "example": "false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "ignoreUnlistedChildAllotment",
            "description": "Specify ignoreUnlistedChildAllotment=true to exclude unlisted sub-units from the allotment calculation. Default value is false.",
            "example": "false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Calendar with available/unavailable dates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "description": "Date with format YYYY-MM-DD"
                    },
                    "listingId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ad"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Listing's currency value."
                    },
                    "price": {
                      "type": "number",
                      "description": "Price in the listing's currency."
                    },
                    "isBasePrice": {
                      "type": "boolean",
                      "description": "Flag which shows whether listing is set to base price."
                    },
                    "minNights": {
                      "type": "number",
                      "description": "Min nights value."
                    },
                    "isBaseMinNights": {
                      "type": "boolean",
                      "description": "Flag which shows whether listing is set to base min night."
                    },
                    "status": {
                      "type": "string",
                      "description": "Status value, enum: available, unavailable, booked, reserved."
                    },
                    "allotment": {
                      "type": "number",
                      "description": "Allotment value for parent listing."
                    },
                    "blocks": {
                      "type": "object"
                    },
                    "blockRefs": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "5d6e7a7ebf8e3800207735ad"
                      }
                    },
                    "reservationId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ad"
                    },
                    "reservation": {
                      "type": "object",
                      "example": "5d6e7a7ebf8e3800207735ad"
                    },
                    "cta": {
                      "type": "boolean",
                      "description": "Closed To Arrival value"
                    },
                    "ctd": {
                      "type": "boolean",
                      "description": "Closed To Departure value"
                    }
                  },
                  "example": {
                    "date": "2021-01-01",
                    "listingId": "5988346d3c31bf0f00747eb6",
                    "currency": "EUR",
                    "price": 50,
                    "isBasePrice": true,
                    "minNights": 2,
                    "isBaseMinNights": true,
                    "status": "booked",
                    "allotment": 0,
                    "blocks": {
                      "m": false,
                      "r": false,
                      "b": true,
                      "bd": false,
                      "sr": false,
                      "abl": false,
                      "a": false,
                      "bw": false,
                      "o": false,
                      "pt": false
                    },
                    "blockRefs": [
                      {
                        "_id": "5fe9c819a141ab0026c901c7",
                        "reservation": {
                          "listing": {
                            "timezone": "Asia/Jerusalem",
                            "defaultCheckInTime": "15:00"
                          },
                          "money": {
                            "currency": "EUR",
                            "hostPayout": 367.55,
                            "totalPaid": 0,
                            "balanceDue": 367.55
                          },
                          "guest": {
                            "_id": "5fe9c81834209c002c8ecd80"
                          },
                          "integration": {
                            "platform": "manual"
                          },
                          "_id": "5fe9c81934209c002c8ecd8b",
                          "status": "confirmed",
                          "checkIn": "2020-12-30T13:00:00.000Z",
                          "checkOut": "2021-01-02T08:00:00.000Z",
                          "nightsCount": 3,
                          "guestsCount": 2,
                          "listingId": "5988346d3c31bf0f00747eb6",
                          "checkInDateLocalized": "2020-12-30",
                          "checkOutDateLocalized": "2021-01-02",
                          "accountId": "596f6fe706112710005d96ff",
                          "guestId": "5fe9c81834209c002c8ecd80",
                          "source": "Manual",
                          "confirmationCode": "J86mAAAM2"
                        },
                        "listingId": "5988346d3c31bf0f00747eb6",
                        "startDate": "2020-12-30T00:00:00.000Z",
                        "endDate": "2021-01-01T00:00:00.000Z",
                        "type": "b",
                        "reservationId": "5fe9c81934209c002c8ecd8b"
                      }
                    ],
                    "reservationId": "5fe9c81934209c002c8ecd8b",
                    "reservation": {
                      "listing": {
                        "timezone": "Asia/Jerusalem",
                        "defaultCheckInTime": "15:00"
                      },
                      "money": {
                        "currency": "EUR",
                        "hostPayout": 367.55,
                        "totalPaid": 0,
                        "balanceDue": 367.55
                      },
                      "guest": {
                        "_id": "5fe9c81834209c002c8ecd80"
                      },
                      "integration": {
                        "platform": "manual"
                      },
                      "_id": "5fe9c81934209c002c8ecd8b",
                      "status": "confirmed",
                      "checkIn": "2020-12-30T13:00:00.000Z",
                      "checkOut": "2021-01-02T08:00:00.000Z",
                      "nightsCount": 3,
                      "guestsCount": 2,
                      "listingId": "5988346d3c31bf0f00747eb6",
                      "checkInDateLocalized": "2020-12-30",
                      "checkOutDateLocalized": "2021-01-02",
                      "accountId": "596f6fe706112710005d96ff",
                      "guestId": "5fe9c81834209c002c8ecd80",
                      "source": "Manual",
                      "confirmationCode": "J86mAAAM2"
                    },
                    "cta": false,
                    "ctd": false
                  }
                }
              }
            }
          },
          "404": {
            "description": "Listing Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    },
                    "requestId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data",
                    "requestId"
                  ],
                  "example": {
                    "message": "Listing not found",
                    "code": "LISTING_NOT_FOUND",
                    "data": {
                      "listingId": "62e7c7a38200fa0031fc9e2e"
                    },
                    "requestId": "Root=1-63b68e3a-573cc83364fce31b0fd45abc"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "requestId"
                  ],
                  "example": {
                    "message": "child \"endDate\" fails because [\"endDate\" is required]",
                    "code": "ValidationError",
                    "details": [
                      {
                        "message": "\"endDate\" is required",
                        "path": [
                          "endDate"
                        ],
                        "type": "any.required",
                        "context": {
                          "key": "endDate",
                          "label": "endDate"
                        }
                      }
                    ],
                    "requestId": "Root=1-63b69790-624dc23b6c3abdaf7a0ce73d"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Calendar"
        ],
        "summary": "Update calendar for multiple listings",
        "description": "Use this endpoint to set availability and pricing for multiple listings across a range of dates.\n\nIMPORTANT:\n- It is strongly suggested updating a single unique listing ID in a single HTTP request, despite the fact the API does support receiving different listing IDs.\n- Max allowed days to be updated - 730 (~2 years)\n- Strongly suggested to not update the same listing ID in parallel.\n- To decrease response time, send fewer date periods.",
        "parameters": [],
        "requestBody": {
          "description": "Update calendar body",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "listingId",
                    "startDate",
                    "endDate"
                  ],
                  "properties": {
                    "listingId": {
                      "description": "The listing id to update",
                      "type": "string",
                      "example": "5fa02fa358d2db673e17bc2d"
                    },
                    "startDate": {
                      "description": "First day affected by changes (format: YYYY-MM-DD)",
                      "type": "string",
                      "format": "YYYY-MM-DD",
                      "example": "2023-01-01"
                    },
                    "endDate": {
                      "description": "Last date affected by changes (format: YYYY-MM-DD)",
                      "type": "string",
                      "format": "YYYY-MM-DD",
                      "example": "2023-01-01"
                    },
                    "status": {
                      "description": "New status, enum: available, unavailable.",
                      "type": "string",
                      "enum": [
                        "available",
                        "unavailable"
                      ],
                      "example": "available"
                    },
                    "price": {
                      "description": "New price, in the listing's currency.",
                      "type": "number",
                      "example": "100"
                    },
                    "isBasePrice": {
                      "description": "Whether to reset prices for the range to the listing's base price",
                      "type": "boolean",
                      "example": "false"
                    },
                    "minNights": {
                      "description": "New min nights value",
                      "type": "integer",
                      "example": "3"
                    },
                    "isBaseMinNights": {
                      "description": "Whether to reset min nights for the range to the listing's base min nights",
                      "type": "boolean",
                      "example": "false"
                    },
                    "note": {
                      "description": "Note to add to those dates.",
                      "type": "string",
                      "example": "this is a note"
                    },
                    "cta": {
                      "description": "Set Closed To Arrival for the date range.",
                      "type": "boolean",
                      "example": "false"
                    },
                    "ctd": {
                      "description": "Set Closed To Departure for the date range.",
                      "type": "boolean",
                      "example": "false"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns ok if the update successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "ok"
                }
              }
            }
          },
          "404": {
            "description": "Listing Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    },
                    "requestId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data",
                    "requestId"
                  ],
                  "example": {
                    "message": "Listing not found",
                    "code": "LISTING_NOT_FOUND",
                    "data": {
                      "listingId": "62e7c7a38200fa0031fc9e2e"
                    },
                    "requestId": "Root=1-63b68e3a-573cc83364fce31b0fd45abc"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "requestId"
                  ],
                  "example": {
                    "message": "child \"endDate\" fails because [\"endDate\" is required]",
                    "code": "ValidationError",
                    "details": [
                      {
                        "message": "\"endDate\" is required",
                        "path": [
                          "endDate"
                        ],
                        "type": "any.required",
                        "context": {
                          "key": "endDate",
                          "label": "endDate"
                        }
                      }
                    ],
                    "requestId": "Root=1-63b69790-624dc23b6c3abdaf7a0ce73d"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "example": {
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/guests/{id}/payment-methods": {
      "post": {
        "tags": [
          "Guests"
        ],
        "summary": "Create payment method",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Guest ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Payment method parameters. <br> If there's auto-payments with payment method CASH (no payment method defined in the UI), then they will be changed to the added payment method automatically.",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "description": "Create payment method with Stripe token from tokenization process.",
                    "properties": {
                      "stripeCardToken": {
                        "type": "string",
                        "description": "ID from Stripe payment method",
                        "example": "pm_..."
                      },
                      "skipSetupIntent": {
                        "type": "boolean",
                        "description": "TRUE if credit card was collected with setup_intent performed on the frontend",
                        "default": false,
                        "example": false
                      },
                      "paymentProviderId": {
                        "type": "string",
                        "description": "The payment processing account Id used in the tokenization process",
                        "default": null,
                        "example": "5fe4b21675087f01a3c5ab5b"
                      },
                      "reservationId": {
                        "type": "string",
                        "description": "Reservation ID",
                        "example": "563e0b6a08a2710e00057b82"
                      },
                      "reuse": {
                        "type": "boolean",
                        "description": "Allow this payment method for reusage in other guest's reservations",
                        "example": false,
                        "default": false
                      }
                    },
                    "required": [
                      "stripeCardToken"
                    ]
                  },
                  {
                    "description": "Create payment method using the _id received from Guesty's [credit card tokenization process](https://open-api-docs.guesty.com/docs/tokenizing-payment-methods)",
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "_id from tokenization process response",
                        "example": "6265d1b6a08a2710e00057b82"
                      },
                      "paymentProviderId": {
                        "type": "string",
                        "description": "The payment processing account Id used in the tokenization process",
                        "default": null,
                        "example": "5fe4b21675087f01a3c5ab5b"
                      },
                      "reservationId": {
                        "type": "string",
                        "description": "Reservation ID",
                        "example": "563e0b6a08a2710e00057b82"
                      },
                      "reuse": {
                        "type": "boolean",
                        "description": "Allow this payment method for reusage in other guest's reservations",
                        "example": false,
                        "default": false
                      }
                    },
                    "required": [
                      "_id"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment method created"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Guests"
        ],
        "summary": "List guest's payment methods",
        "description": "Retrieve payment method list by guest id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Guest ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reuse",
            "in": "query",
            "description": "Retrieve methods allowed for reusage in other guest's reservations",
            "required": false,
            "example": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of payment methods"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/guests-crud": {
      "post": {
        "operationId": "GuestsOpenApiController_createGuest",
        "summary": "Create guest",
        "tags": [
          "Guests"
        ],
        "description": "Create guest",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "hometown": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object"
                  },
                  "picture": {
                    "type": "object",
                    "description": "A link to guest’s picture in different sizes"
                  },
                  "email": {
                    "type": "string",
                    "description": "The main contact email of the guest"
                  },
                  "emails": {
                    "description": "List of additional emails of the guest",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "phone": {
                    "type": "string",
                    "description": "The main contact phone number"
                  },
                  "phones": {
                    "description": "List of additional phone numbers of the guest",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "notes": {
                    "type": "string",
                    "description": "Attention notes about the guest, describing important pieces of information about the guest, to review for all reservations (e.g. “Requires accessibility equipment”). Displayed as “Attention notes” in the user interface."
                  },
                  "contactType": {
                    "enum": [
                      "guest",
                      "owner"
                    ],
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "vip",
                        "friendsAndFamily",
                        "staff",
                        "management",
                        "blocklisted",
                        "loyaltyProgram"
                      ]
                    },
                    "description": "Tags for describing the guest at a glance + show the enum for the field to show the allowed options"
                  },
                  "goodToKnowNotes": {
                    "type": "string",
                    "description": "“Good to know” notes about the guest. Notes to help capture facts about the guest that will help the team to personalize the guest’s stays (e.g. “Big football fan”)"
                  },
                  "preferredLanguage": {
                    "enum": [
                      "en",
                      "es",
                      "fr",
                      "ma",
                      "aa",
                      "ab",
                      "ae",
                      "af",
                      "ak",
                      "am",
                      "an",
                      "ar",
                      "as",
                      "av",
                      "ay",
                      "az",
                      "ba",
                      "be",
                      "bg",
                      "bh",
                      "bi",
                      "bm",
                      "bn",
                      "bo",
                      "br",
                      "bs",
                      "ca",
                      "ce",
                      "ch",
                      "co",
                      "cr",
                      "cs",
                      "cu",
                      "cv",
                      "cy",
                      "da",
                      "de",
                      "dv",
                      "dz",
                      "ee",
                      "el",
                      "eo",
                      "et",
                      "eu",
                      "fa",
                      "ff",
                      "fi",
                      "fj",
                      "fo",
                      "fy",
                      "ga",
                      "gd",
                      "gl",
                      "gn",
                      "gu",
                      "gv",
                      "ha",
                      "he",
                      "hi",
                      "ho",
                      "hr",
                      "ht",
                      "hu",
                      "hy",
                      "hz",
                      "ia",
                      "id",
                      "ie",
                      "ig",
                      "ii",
                      "ik",
                      "io",
                      "is",
                      "it",
                      "iu",
                      "ja",
                      "jv",
                      "ka",
                      "kg",
                      "ki",
                      "kj",
                      "kk",
                      "kl",
                      "km",
                      "kn",
                      "ko",
                      "kr",
                      "ks",
                      "ku",
                      "kv",
                      "kw",
                      "ky",
                      "la",
                      "lb",
                      "lg",
                      "li",
                      "ln",
                      "lo",
                      "lt",
                      "lu",
                      "lv",
                      "mg",
                      "mh",
                      "mi",
                      "mk",
                      "ml",
                      "mn",
                      "mr",
                      "ms",
                      "mt",
                      "my",
                      "na",
                      "nb",
                      "nd",
                      "ne",
                      "ng",
                      "nl",
                      "nn",
                      "no",
                      "nr",
                      "nv",
                      "ny",
                      "oc",
                      "oj",
                      "om",
                      "or",
                      "os",
                      "pa",
                      "pi",
                      "pl",
                      "ps",
                      "pt",
                      "qu",
                      "rm",
                      "rn",
                      "ro",
                      "ru",
                      "rw",
                      "sa",
                      "sc",
                      "sd",
                      "se",
                      "sg",
                      "si",
                      "sk",
                      "sl",
                      "sm",
                      "sn",
                      "so",
                      "sq",
                      "sr",
                      "ss",
                      "st",
                      "su",
                      "sv",
                      "sw",
                      "ta",
                      "te",
                      "tg",
                      "th",
                      "ti",
                      "tk",
                      "tl",
                      "tn",
                      "to",
                      "tr",
                      "ts",
                      "tt",
                      "tw",
                      "ty",
                      "ug",
                      "uk",
                      "ur",
                      "uz",
                      "ve",
                      "vi",
                      "vo",
                      "wa",
                      "wo",
                      "xh",
                      "yi",
                      "yo",
                      "za",
                      "zh",
                      "zu"
                    ],
                    "type": "string"
                  },
                  "birthday": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "gender": {
                    "enum": [
                      "male",
                      "female",
                      "other"
                    ],
                    "type": "string"
                  },
                  "maritalStatus": {
                    "enum": [
                      "single",
                      "married",
                      "widowed",
                      "separated",
                      "divorced"
                    ],
                    "type": "string"
                  },
                  "dietaryPreferences": {
                    "description": "You can pick one of the predefined options, or create a new one for your account",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allergies": {
                    "description": "You can pick one of the predefined options, or create a new one for your account",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "interests": {
                    "description": "You can pick one of the predefined options, or create a new one for your account",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "pronouns": {
                    "enum": [
                      "he/him/his",
                      "she/her/hers",
                      "they/them/their",
                      "xe/xem/xyr"
                    ],
                    "type": "string"
                  },
                  "kids": {
                    "type": "number",
                    "minimum": 0
                  },
                  "passportNumber": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "identityNumber": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Identity Card Number"
                  },
                  "nationality": {
                    "enum": [
                      "af",
                      "ax",
                      "al",
                      "dz",
                      "as",
                      "ad",
                      "ao",
                      "ai",
                      "aq",
                      "ag",
                      "ar",
                      "am",
                      "aw",
                      "au",
                      "at",
                      "az",
                      "bs",
                      "bh",
                      "bd",
                      "bb",
                      "by",
                      "be",
                      "bz",
                      "bj",
                      "bm",
                      "bt",
                      "bo",
                      "bq",
                      "ba",
                      "bw",
                      "bv",
                      "br",
                      "io",
                      "bn",
                      "bg",
                      "bf",
                      "bi",
                      "kh",
                      "cm",
                      "ca",
                      "cv",
                      "ky",
                      "cf",
                      "td",
                      "cl",
                      "cn",
                      "cx",
                      "cc",
                      "co",
                      "km",
                      "cg",
                      "cd",
                      "ck",
                      "cr",
                      "ci",
                      "hr",
                      "cu",
                      "cw",
                      "cy",
                      "cz",
                      "dk",
                      "dj",
                      "dm",
                      "do",
                      "ec",
                      "eg",
                      "sv",
                      "gq",
                      "er",
                      "ee",
                      "et",
                      "fk",
                      "fo",
                      "fj",
                      "fi",
                      "fr",
                      "gf",
                      "pf",
                      "tf",
                      "ga",
                      "gm",
                      "ge",
                      "de",
                      "gh",
                      "gi",
                      "gr",
                      "gl",
                      "gd",
                      "gp",
                      "gu",
                      "gt",
                      "gg",
                      "gn",
                      "gw",
                      "gy",
                      "ht",
                      "hm",
                      "va",
                      "hn",
                      "hk",
                      "hu",
                      "is",
                      "in",
                      "id",
                      "ir",
                      "iq",
                      "ie",
                      "im",
                      "il",
                      "it",
                      "jm",
                      "jp",
                      "je",
                      "jo",
                      "kz",
                      "ke",
                      "ki",
                      "kp",
                      "kr",
                      "xk",
                      "kw",
                      "kg",
                      "la",
                      "lv",
                      "lb",
                      "ls",
                      "lr",
                      "ly",
                      "li",
                      "lt",
                      "lu",
                      "mo",
                      "mk",
                      "mg",
                      "mw",
                      "my",
                      "mv",
                      "ml",
                      "mt",
                      "mh",
                      "mq",
                      "mr",
                      "mu",
                      "yt",
                      "mx",
                      "fm",
                      "md",
                      "mc",
                      "mn",
                      "me",
                      "ms",
                      "ma",
                      "mz",
                      "mm",
                      "na",
                      "nr",
                      "np",
                      "nl",
                      "an",
                      "nc",
                      "nz",
                      "ni",
                      "ne",
                      "ng",
                      "nu",
                      "nf",
                      "mp",
                      "no",
                      "om",
                      "pk",
                      "pw",
                      "ps",
                      "pa",
                      "pg",
                      "py",
                      "pe",
                      "ph",
                      "pn",
                      "pl",
                      "pt",
                      "pr",
                      "qa",
                      "re",
                      "ro",
                      "ru",
                      "rw",
                      "bl",
                      "sh",
                      "kn",
                      "lc",
                      "mf",
                      "pm",
                      "vc",
                      "ws",
                      "sm",
                      "st",
                      "sa",
                      "sn",
                      "rs",
                      "cs",
                      "sc",
                      "sl",
                      "sg",
                      "sx",
                      "sk",
                      "si",
                      "sb",
                      "so",
                      "za",
                      "gs",
                      "ss",
                      "es",
                      "lk",
                      "sd",
                      "sr",
                      "sj",
                      "sz",
                      "se",
                      "ch",
                      "sy",
                      "tw",
                      "tj",
                      "tz",
                      "th",
                      "tl",
                      "tg",
                      "tk",
                      "to",
                      "tt",
                      "tn",
                      "tr",
                      "tm",
                      "tc",
                      "tv",
                      "ug",
                      "ua",
                      "ae",
                      "gb",
                      "us",
                      "um",
                      "uy",
                      "uz",
                      "vu",
                      "ve",
                      "vn",
                      "vg",
                      "vi",
                      "wf",
                      "eh",
                      "ye",
                      "zm",
                      "zw"
                    ],
                    "type": "string"
                  },
                  "otaLinks": {
                    "description": "A link to the guest’s profile on an OTA",
                    "example": [
                      {
                        "type": "airbnb",
                        "url": "https://www.airbnb.com"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "enum": [
                            "airbnb"
                          ],
                          "type": "string"
                        },
                        "url": {
                          "type": "string",
                          "enum": [
                            "https://www.airbnb.com"
                          ],
                          "description": "The url must include “https://” prefix"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "firstName",
                  "lastName"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The guest has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "5e17287629e111001f7d3f4d"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "Rick"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Sanchez"
                    },
                    "fullName": {
                      "type": "string",
                      "example": "Rick Sanchez"
                    },
                    "hometown": {
                      "type": "string",
                      "example": "New York"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2022-08-12T16:00:00.000+03:00"
                    },
                    "address": {
                      "type": "object",
                      "example": {
                        "street": "Eliezer Kaplan 2",
                        "city": "Tel Aviv",
                        "country": "Israel",
                        "countryCode": "il",
                        "zipCode": "583287342"
                      }
                    },
                    "picture": {
                      "type": "object",
                      "description": "A link to guest’s picture in different sizes",
                      "example": {
                        "thumbnail": "//guestybookings.s3.amazonaws.com/guests/thumbnail_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
                        "large": "//guestybookings.s3.amazonaws.com/guests/large_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
                        "regular": "//guestybookings.s3.amazonaws.com/guests/regular_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
                      }
                    },
                    "email": {
                      "type": "string",
                      "description": "The main contact email of the guest",
                      "example": "email@email.com"
                    },
                    "emails": {
                      "description": "List of additional emails of the guest",
                      "example": [
                        "email@email.com",
                        "email2@email.com"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "phone": {
                      "type": "string",
                      "description": "The main contact phone number",
                      "example": "972234567454"
                    },
                    "phones": {
                      "description": "List of additional phone numbers of the guest",
                      "example": [
                        "972234567454",
                        "972234567890"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "notes": {
                      "type": "string",
                      "description": "Attention notes about the guest, describing important pieces of information about the guest, to review for all reservations (e.g. “Requires accessibility equipment”)",
                      "example": "This guest is rich"
                    },
                    "tags": {
                      "description": "Tags for describing the guest at a glance + show the enum for the field to show the allowed options",
                      "example": [
                        "blocklisted",
                        "VIP"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "goodToKnowNotes": {
                      "type": "string",
                      "description": "“Good to know” notes about the guest. Notes to help capture facts about the guest that will help the team to personalize the guest’s stays (e.g. “Big football fan”)",
                      "example": "This guest is alleric to peanuts"
                    },
                    "preferredLanguage": {
                      "type": "string",
                      "example": [
                        "en",
                        "es",
                        "fr"
                      ]
                    },
                    "birthday": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2017-08-12T16:00:00.000+03:00"
                    },
                    "gender": {
                      "type": "string",
                      "example": "2017-08-12T16:00:00.000+03:00"
                    },
                    "maritalStatus": {
                      "type": "string",
                      "example": "single"
                    },
                    "dietaryPreferences": {
                      "description": "You can pick one of the predefined options, or create a new one for your account",
                      "example": [
                        "vegan",
                        "veggies"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allergies": {
                      "description": "You can pick one of the predefined options, or create a new one for your account",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "interests": {
                      "example": [
                        "sports"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "pronouns": {
                      "type": "string",
                      "example": "he/him/his"
                    },
                    "otaLinks": {
                      "description": "A link to the guest’s profile on an OTA",
                      "example": [
                        {
                          "type": "airbnb",
                          "url": "https://www.airbnb.com"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "airbnb"
                            ],
                            "type": "string"
                          },
                          "url": {
                            "type": "string",
                            "enum": [
                              "https://www.airbnb.com"
                            ],
                            "description": "The url must include “https://” prefix"
                          }
                        }
                      }
                    },
                    "kids": {
                      "type": "number",
                      "minimum": 0,
                      "example": 3
                    },
                    "passportNumber": {
                      "type": "string",
                      "maxLength": 50,
                      "example": "23424353"
                    },
                    "identityNumber": {
                      "type": "string",
                      "maxLength": 50,
                      "example": "324325121"
                    },
                    "nationality": {
                      "type": "string",
                      "example": "il"
                    },
                    "contactType": {
                      "type": "string",
                      "example": "guest"
                    },
                    "airbnb2": {
                      "type": "object",
                      "example": {
                        "index": "index",
                        "id": 4246064595217,
                        "url": "https://www.airbnb.com",
                        "firstName": "Rick"
                      }
                    },
                    "rentalsUnited": {
                      "type": "object",
                      "example": {
                        "firstName": "Rick",
                        "lastName": "Sanchez",
                        "fullName": "Rick Sanchez",
                        "failedPaymentMethod": "failed payment method"
                      }
                    },
                    "bookingCom": {
                      "type": "object",
                      "example": {
                        "firstName": "Rick",
                        "lastName": "Sanchez",
                        "fullName": "Rick Sanchez",
                        "url": "https://www.booking.com"
                      }
                    },
                    "homeAway": {
                      "type": "object",
                      "example": {
                        "title": "title",
                        "firstName": "Rick",
                        "lastName": "Sanchez",
                        "fullName": "Rick Sanchez",
                        "url": "https://www.homeaway.com"
                      }
                    },
                    "tripAdvisor": {
                      "type": "object",
                      "example": {
                        "title": "title",
                        "firstName": "Rick",
                        "lastName": "Sanchez",
                        "fullName": "Rick Sanchez",
                        "proxyEmail": "proxyemail@email.com",
                        "url": "https://www.tripadvisor.com"
                      }
                    },
                    "policy": {
                      "type": "object",
                      "example": {
                        "marketing": {
                          "isAccepted": false,
                          "dateOfAcceptance": null
                        },
                        "privacyObject": {
                          "isAccepted": false,
                          "dateOfAcceptance": null,
                          "versionNumber": "ffewfewgw"
                        }
                      }
                    },
                    "returningGuest": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "_id",
                    "firstName",
                    "lastName",
                    "returningGuest"
                  ]
                }
              }
            }
          },
          "201": {
            "description": ""
          },
          "401": {
            "description": "Can not create guest, unauthorized"
          }
        }
      },
      "get": {
        "operationId": "GuestsOpenApiController_getGuestsList",
        "summary": "Get guests list",
        "tags": [
          "Guests"
        ],
        "description": "Get guests list",
        "parameters": [
          {
            "name": "columns",
            "required": true,
            "in": "query",
            "example": "fullName guestEmail guestPhone address id",
            "description": "Selection of columns, separated by space",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "example": "{\"allergies\":{\"@in\":[\"feather\"]}}",
            "description": "Object of filters to query by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit guests results",
            "schema": {
              "minimum": 0,
              "default": 25,
              "type": "number"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "description": "Pagination skip",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The guests list has been successfully pulled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "object"
                    },
                    "total": {
                      "type": "number",
                      "minimum": 0
                    }
                  },
                  "required": [
                    "results",
                    "total"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Can not pull guests list, unauthorized"
          }
        }
      }
    },
    "/guests-crud/{guestId}": {
      "put": {
        "operationId": "GuestsOpenApiController_updateGuest",
        "summary": "Update guest",
        "tags": [
          "Guests"
        ],
        "description": "Update guest",
        "parameters": [
          {
            "name": "guestId",
            "required": true,
            "in": "path",
            "description": "Guest id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "hometown": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object"
                  },
                  "picture": {
                    "type": "object",
                    "description": "A link to guest’s picture in different sizes"
                  },
                  "email": {
                    "type": "string",
                    "description": "The main contact email of the guest"
                  },
                  "emails": {
                    "description": "List of additional emails of the guest",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "phone": {
                    "type": "string",
                    "description": "The main contact phone number"
                  },
                  "phones": {
                    "description": "List of additional phone numbers of the guest",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "notes": {
                    "type": "string",
                    "description": "Attention notes about the guest, describing important pieces of information about the guest, to review for all reservations (e.g. “Requires accessibility equipment”). Displayed as “Attention notes” in the user interface."
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "vip",
                        "friendsAndFamily",
                        "staff",
                        "management",
                        "blocklisted",
                        "loyaltyProgram"
                      ]
                    },
                    "description": "Tags for describing the guest at a glance + show the enum for the field to show the allowed options"
                  },
                  "goodToKnowNotes": {
                    "type": "string",
                    "description": "“Good to know” notes about the guest. Notes to help capture facts about the guest that will help the team to personalize the guest’s stays (e.g. “Big football fan”)"
                  },
                  "preferredLanguage": {
                    "enum": [
                      "en",
                      "es",
                      "fr",
                      "ma",
                      "aa",
                      "ab",
                      "ae",
                      "af",
                      "ak",
                      "am",
                      "an",
                      "ar",
                      "as",
                      "av",
                      "ay",
                      "az",
                      "ba",
                      "be",
                      "bg",
                      "bh",
                      "bi",
                      "bm",
                      "bn",
                      "bo",
                      "br",
                      "bs",
                      "ca",
                      "ce",
                      "ch",
                      "co",
                      "cr",
                      "cs",
                      "cu",
                      "cv",
                      "cy",
                      "da",
                      "de",
                      "dv",
                      "dz",
                      "ee",
                      "el",
                      "eo",
                      "et",
                      "eu",
                      "fa",
                      "ff",
                      "fi",
                      "fj",
                      "fo",
                      "fy",
                      "ga",
                      "gd",
                      "gl",
                      "gn",
                      "gu",
                      "gv",
                      "ha",
                      "he",
                      "hi",
                      "ho",
                      "hr",
                      "ht",
                      "hu",
                      "hy",
                      "hz",
                      "ia",
                      "id",
                      "ie",
                      "ig",
                      "ii",
                      "ik",
                      "io",
                      "is",
                      "it",
                      "iu",
                      "ja",
                      "jv",
                      "ka",
                      "kg",
                      "ki",
                      "kj",
                      "kk",
                      "kl",
                      "km",
                      "kn",
                      "ko",
                      "kr",
                      "ks",
                      "ku",
                      "kv",
                      "kw",
                      "ky",
                      "la",
                      "lb",
                      "lg",
                      "li",
                      "ln",
                      "lo",
                      "lt",
                      "lu",
                      "lv",
                      "mg",
                      "mh",
                      "mi",
                      "mk",
                      "ml",
                      "mn",
                      "mr",
                      "ms",
                      "mt",
                      "my",
                      "na",
                      "nb",
                      "nd",
                      "ne",
                      "ng",
                      "nl",
                      "nn",
                      "no",
                      "nr",
                      "nv",
                      "ny",
                      "oc",
                      "oj",
                      "om",
                      "or",
                      "os",
                      "pa",
                      "pi",
                      "pl",
                      "ps",
                      "pt",
                      "qu",
                      "rm",
                      "rn",
                      "ro",
                      "ru",
                      "rw",
                      "sa",
                      "sc",
                      "sd",
                      "se",
                      "sg",
                      "si",
                      "sk",
                      "sl",
                      "sm",
                      "sn",
                      "so",
                      "sq",
                      "sr",
                      "ss",
                      "st",
                      "su",
                      "sv",
                      "sw",
                      "ta",
                      "te",
                      "tg",
                      "th",
                      "ti",
                      "tk",
                      "tl",
                      "tn",
                      "to",
                      "tr",
                      "ts",
                      "tt",
                      "tw",
                      "ty",
                      "ug",
                      "uk",
                      "ur",
                      "uz",
                      "ve",
                      "vi",
                      "vo",
                      "wa",
                      "wo",
                      "xh",
                      "yi",
                      "yo",
                      "za",
                      "zh",
                      "zu"
                    ],
                    "type": "string"
                  },
                  "birthday": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "gender": {
                    "enum": [
                      "male",
                      "female",
                      "other"
                    ],
                    "type": "string"
                  },
                  "maritalStatus": {
                    "enum": [
                      "single",
                      "married",
                      "widowed",
                      "separated",
                      "divorced"
                    ],
                    "type": "string"
                  },
                  "dietaryPreferences": {
                    "description": "You can pick one of the predefined options, or create a new one for your account",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allergies": {
                    "description": "You can pick one of the predefined options, or create a new one for your account",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "interests": {
                    "description": "You can pick one of the predefined options, or create a new one for your account",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "pronouns": {
                    "enum": [
                      "he/him/his",
                      "she/her/hers",
                      "they/them/their",
                      "xe/xem/xyr"
                    ],
                    "type": "string"
                  },
                  "kids": {
                    "type": "number",
                    "minimum": 0
                  },
                  "passportNumber": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "identityNumber": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Identity Card Number"
                  },
                  "nationality": {
                    "enum": [
                      "af",
                      "ax",
                      "al",
                      "dz",
                      "as",
                      "ad",
                      "ao",
                      "ai",
                      "aq",
                      "ag",
                      "ar",
                      "am",
                      "aw",
                      "au",
                      "at",
                      "az",
                      "bs",
                      "bh",
                      "bd",
                      "bb",
                      "by",
                      "be",
                      "bz",
                      "bj",
                      "bm",
                      "bt",
                      "bo",
                      "bq",
                      "ba",
                      "bw",
                      "bv",
                      "br",
                      "io",
                      "bn",
                      "bg",
                      "bf",
                      "bi",
                      "kh",
                      "cm",
                      "ca",
                      "cv",
                      "ky",
                      "cf",
                      "td",
                      "cl",
                      "cn",
                      "cx",
                      "cc",
                      "co",
                      "km",
                      "cg",
                      "cd",
                      "ck",
                      "cr",
                      "ci",
                      "hr",
                      "cu",
                      "cw",
                      "cy",
                      "cz",
                      "dk",
                      "dj",
                      "dm",
                      "do",
                      "ec",
                      "eg",
                      "sv",
                      "gq",
                      "er",
                      "ee",
                      "et",
                      "fk",
                      "fo",
                      "fj",
                      "fi",
                      "fr",
                      "gf",
                      "pf",
                      "tf",
                      "ga",
                      "gm",
                      "ge",
                      "de",
                      "gh",
                      "gi",
                      "gr",
                      "gl",
                      "gd",
                      "gp",
                      "gu",
                      "gt",
                      "gg",
                      "gn",
                      "gw",
                      "gy",
                      "ht",
                      "hm",
                      "va",
                      "hn",
                      "hk",
                      "hu",
                      "is",
                      "in",
                      "id",
                      "ir",
                      "iq",
                      "ie",
                      "im",
                      "il",
                      "it",
                      "jm",
                      "jp",
                      "je",
                      "jo",
                      "kz",
                      "ke",
                      "ki",
                      "kp",
                      "kr",
                      "xk",
                      "kw",
                      "kg",
                      "la",
                      "lv",
                      "lb",
                      "ls",
                      "lr",
                      "ly",
                      "li",
                      "lt",
                      "lu",
                      "mo",
                      "mk",
                      "mg",
                      "mw",
                      "my",
                      "mv",
                      "ml",
                      "mt",
                      "mh",
                      "mq",
                      "mr",
                      "mu",
                      "yt",
                      "mx",
                      "fm",
                      "md",
                      "mc",
                      "mn",
                      "me",
                      "ms",
                      "ma",
                      "mz",
                      "mm",
                      "na",
                      "nr",
                      "np",
                      "nl",
                      "an",
                      "nc",
                      "nz",
                      "ni",
                      "ne",
                      "ng",
                      "nu",
                      "nf",
                      "mp",
                      "no",
                      "om",
                      "pk",
                      "pw",
                      "ps",
                      "pa",
                      "pg",
                      "py",
                      "pe",
                      "ph",
                      "pn",
                      "pl",
                      "pt",
                      "pr",
                      "qa",
                      "re",
                      "ro",
                      "ru",
                      "rw",
                      "bl",
                      "sh",
                      "kn",
                      "lc",
                      "mf",
                      "pm",
                      "vc",
                      "ws",
                      "sm",
                      "st",
                      "sa",
                      "sn",
                      "rs",
                      "cs",
                      "sc",
                      "sl",
                      "sg",
                      "sx",
                      "sk",
                      "si",
                      "sb",
                      "so",
                      "za",
                      "gs",
                      "ss",
                      "es",
                      "lk",
                      "sd",
                      "sr",
                      "sj",
                      "sz",
                      "se",
                      "ch",
                      "sy",
                      "tw",
                      "tj",
                      "tz",
                      "th",
                      "tl",
                      "tg",
                      "tk",
                      "to",
                      "tt",
                      "tn",
                      "tr",
                      "tm",
                      "tc",
                      "tv",
                      "ug",
                      "ua",
                      "ae",
                      "gb",
                      "us",
                      "um",
                      "uy",
                      "uz",
                      "vu",
                      "ve",
                      "vn",
                      "vg",
                      "vi",
                      "wf",
                      "eh",
                      "ye",
                      "zm",
                      "zw"
                    ],
                    "type": "string"
                  },
                  "otaLinks": {
                    "description": "A link to the guest’s profile on an OTA",
                    "example": [
                      {
                        "type": "airbnb",
                        "url": "https://www.airbnb.com"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "enum": [
                            "airbnb"
                          ],
                          "type": "string"
                        },
                        "url": {
                          "type": "string",
                          "enum": [
                            "https://www.airbnb.com"
                          ],
                          "description": "The url must include “https://” prefix"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "tags"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The guest has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "5e17287629e111001f7d3f4d"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "Rick"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Sanchez"
                    },
                    "fullName": {
                      "type": "string",
                      "example": "Rick Sanchez"
                    },
                    "hometown": {
                      "type": "string",
                      "example": "New York"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2022-08-12T16:00:00.000+03:00"
                    },
                    "address": {
                      "type": "object",
                      "example": {
                        "street": "Eliezer Kaplan 2",
                        "city": "Tel Aviv",
                        "country": "Israel",
                        "countryCode": "il",
                        "zipCode": "583287342"
                      }
                    },
                    "picture": {
                      "type": "object",
                      "description": "A link to guest’s picture in different sizes",
                      "example": {
                        "thumbnail": "//guestybookings.s3.amazonaws.com/guests/thumbnail_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
                        "large": "//guestybookings.s3.amazonaws.com/guests/large_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
                        "regular": "//guestybookings.s3.amazonaws.com/guests/regular_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
                      }
                    },
                    "email": {
                      "type": "string",
                      "description": "The main contact email of the guest",
                      "example": "email@email.com"
                    },
                    "emails": {
                      "description": "List of additional emails of the guest",
                      "example": [
                        "email@email.com",
                        "email2@email.com"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "phone": {
                      "type": "string",
                      "description": "The main contact phone number",
                      "example": "972234567454"
                    },
                    "phones": {
                      "description": "List of additional phone numbers of the guest",
                      "example": [
                        "972234567454",
                        "972234567890"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "notes": {
                      "type": "string",
                      "description": "Attention notes about the guest, describing important pieces of information about the guest, to review for all reservations (e.g. “Requires accessibility equipment”)",
                      "example": "This guest is rich"
                    },
                    "tags": {
                      "description": "Tags for describing the guest at a glance + show the enum for the field to show the allowed options",
                      "example": [
                        "blocklisted",
                        "VIP"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "goodToKnowNotes": {
                      "type": "string",
                      "description": "“Good to know” notes about the guest. Notes to help capture facts about the guest that will help the team to personalize the guest’s stays (e.g. “Big football fan”)",
                      "example": "This guest is alleric to peanuts"
                    },
                    "preferredLanguage": {
                      "type": "string",
                      "example": [
                        "en",
                        "es",
                        "fr"
                      ]
                    },
                    "birthday": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2017-08-12T16:00:00.000+03:00"
                    },
                    "gender": {
                      "type": "string",
                      "example": "2017-08-12T16:00:00.000+03:00"
                    },
                    "maritalStatus": {
                      "type": "string",
                      "example": "single"
                    },
                    "dietaryPreferences": {
                      "description": "You can pick one of the predefined options, or create a new one for your account",
                      "example": [
                        "vegan",
                        "veggies"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allergies": {
                      "description": "You can pick one of the predefined options, or create a new one for your account",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "interests": {
                      "example": [
                        "sports"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "pronouns": {
                      "type": "string",
                      "example": "he/him/his"
                    },
                    "otaLinks": {
                      "description": "A link to the guest’s profile on an OTA",
                      "example": [
                        {
                          "type": "airbnb",
                          "url": "https://www.airbnb.com"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "airbnb"
                            ],
                            "type": "string"
                          },
                          "url": {
                            "type": "string",
                            "enum": [
                              "https://www.airbnb.com"
                            ],
                            "description": "The url must include “https://” prefix"
                          }
                        }
                      }
                    },
                    "kids": {
                      "type": "number",
                      "minimum": 0,
                      "example": 3
                    },
                    "passportNumber": {
                      "type": "string",
                      "maxLength": 50,
                      "example": "23424353"
                    },
                    "identityNumber": {
                      "type": "string",
                      "maxLength": 50,
                      "example": "324325121"
                    },
                    "nationality": {
                      "type": "string",
                      "example": "il"
                    },
                    "contactType": {
                      "type": "string",
                      "example": "guest"
                    },
                    "airbnb2": {
                      "type": "object",
                      "example": {
                        "index": "index",
                        "id": 4246064595217,
                        "url": "https://www.airbnb.com",
                        "firstName": "Rick"
                      }
                    },
                    "rentalsUnited": {
                      "type": "object",
                      "example": {
                        "firstName": "Rick",
                        "lastName": "Sanchez",
                        "fullName": "Rick Sanchez",
                        "failedPaymentMethod": "failed payment method"
                      }
                    },
                    "bookingCom": {
                      "type": "object",
                      "example": {
                        "firstName": "Rick",
                        "lastName": "Sanchez",
                        "fullName": "Rick Sanchez",
                        "url": "https://www.booking.com"
                      }
                    },
                    "homeAway": {
                      "type": "object",
                      "example": {
                        "title": "title",
                        "firstName": "Rick",
                        "lastName": "Sanchez",
                        "fullName": "Rick Sanchez",
                        "url": "https://www.homeaway.com"
                      }
                    },
                    "tripAdvisor": {
                      "type": "object",
                      "example": {
                        "title": "title",
                        "firstName": "Rick",
                        "lastName": "Sanchez",
                        "fullName": "Rick Sanchez",
                        "proxyEmail": "proxyemail@email.com",
                        "url": "https://www.tripadvisor.com"
                      }
                    },
                    "policy": {
                      "type": "object",
                      "example": {
                        "marketing": {
                          "isAccepted": false,
                          "dateOfAcceptance": null
                        },
                        "privacyObject": {
                          "isAccepted": false,
                          "dateOfAcceptance": null,
                          "versionNumber": "ffewfewgw"
                        }
                      }
                    },
                    "returningGuest": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "_id",
                    "firstName",
                    "lastName",
                    "returningGuest"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Can not update guest, unauthorized"
          }
        }
      },
      "get": {
        "operationId": "GuestsOpenApiController_getGuest",
        "summary": "Get guest by id",
        "tags": [
          "Guests"
        ],
        "description": "Get guest by id",
        "parameters": [
          {
            "name": "guestId",
            "required": true,
            "in": "path",
            "description": "Guest id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "required": true,
            "in": "query",
            "description": "Fields",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The guest has been successfully pulled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "5e17287629e111001f7d3f4d"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "Rick"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Sanchez"
                    },
                    "fullName": {
                      "type": "string",
                      "example": "Rick Sanchez"
                    },
                    "hometown": {
                      "type": "string",
                      "example": "New York"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2022-08-12T16:00:00.000+03:00"
                    },
                    "address": {
                      "type": "object",
                      "example": {
                        "street": "Eliezer Kaplan 2",
                        "city": "Tel Aviv",
                        "country": "Israel",
                        "countryCode": "il",
                        "zipCode": "583287342"
                      }
                    },
                    "picture": {
                      "type": "object",
                      "description": "A link to guest’s picture in different sizes",
                      "example": {
                        "thumbnail": "//guestybookings.s3.amazonaws.com/guests/thumbnail_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
                        "large": "//guestybookings.s3.amazonaws.com/guests/large_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg",
                        "regular": "//guestybookings.s3.amazonaws.com/guests/regular_e2cb8a96-45a9-45cd-b28e-57e1ca1fc988.jpg"
                      }
                    },
                    "email": {
                      "type": "string",
                      "description": "The main contact email of the guest",
                      "example": "email@email.com"
                    },
                    "emails": {
                      "description": "List of additional emails of the guest",
                      "example": [
                        "email@email.com",
                        "email2@email.com"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "phone": {
                      "type": "string",
                      "description": "The main contact phone number",
                      "example": "972234567454"
                    },
                    "phones": {
                      "description": "List of additional phone numbers of the guest",
                      "example": [
                        "972234567454",
                        "972234567890"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "notes": {
                      "type": "string",
                      "description": "Attention notes about the guest, describing important pieces of information about the guest, to review for all reservations (e.g. “Requires accessibility equipment”)",
                      "example": "This guest is rich"
                    },
                    "tags": {
                      "description": "Tags for describing the guest at a glance + show the enum for the field to show the allowed options",
                      "example": [
                        "blocklisted",
                        "VIP"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "goodToKnowNotes": {
                      "type": "string",
                      "description": "“Good to know” notes about the guest. Notes to help capture facts about the guest that will help the team to personalize the guest’s stays (e.g. “Big football fan”)",
                      "example": "This guest is alleric to peanuts"
                    },
                    "preferredLanguage": {
                      "type": "string",
                      "example": [
                        "en",
                        "es",
                        "fr"
                      ]
                    },
                    "birthday": {
                      "format": "date-time",
                      "type": "string",
                      "example": "2017-08-12T16:00:00.000+03:00"
                    },
                    "gender": {
                      "type": "string",
                      "example": "2017-08-12T16:00:00.000+03:00"
                    },
                    "maritalStatus": {
                      "type": "string",
                      "example": "single"
                    },
                    "dietaryPreferences": {
                      "description": "You can pick one of the predefined options, or create a new one for your account",
                      "example": [
                        "vegan",
                        "veggies"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allergies": {
                      "description": "You can pick one of the predefined options, or create a new one for your account",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "interests": {
                      "example": [
                        "sports"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "pronouns": {
                      "type": "string",
                      "example": "he/him/his"
                    },
                    "otaLinks": {
                      "description": "A link to the guest’s profile on an OTA",
                      "example": [
                        {
                          "type": "airbnb",
                          "url": "https://www.airbnb.com"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "enum": [
                              "airbnb"
                            ],
                            "type": "string"
                          },
                          "url": {
                            "type": "string",
                            "enum": [
                              "https://www.airbnb.com"
                            ],
                            "description": "The url must include “https://” prefix"
                          }
                        }
                      }
                    },
                    "kids": {
                      "type": "number",
                      "minimum": 0,
                      "example": 3
                    },
                    "passportNumber": {
                      "type": "string",
                      "maxLength": 50,
                      "example": "23424353"
                    },
                    "identityNumber": {
                      "type": "string",
                      "maxLength": 50,
                      "example": "324325121"
                    },
                    "nationality": {
                      "type": "string",
                      "example": "il"
                    },
                    "contactType": {
                      "type": "string",
                      "example": "guest"
                    },
                    "airbnb2": {
                      "type": "object",
                      "example": {
                        "index": "index",
                        "id": 4246064595217,
                        "url": "https://www.airbnb.com",
                        "firstName": "Rick"
                      }
                    },
                    "rentalsUnited": {
                      "type": "object",
                      "example": {
                        "firstName": "Rick",
                        "lastName": "Sanchez",
                        "fullName": "Rick Sanchez",
                        "failedPaymentMethod": "failed payment method"
                      }
                    },
                    "bookingCom": {
                      "type": "object",
                      "example": {
                        "firstName": "Rick",
                        "lastName": "Sanchez",
                        "fullName": "Rick Sanchez",
                        "url": "https://www.booking.com"
                      }
                    },
                    "homeAway": {
                      "type": "object",
                      "example": {
                        "title": "title",
                        "firstName": "Rick",
                        "lastName": "Sanchez",
                        "fullName": "Rick Sanchez",
                        "url": "https://www.homeaway.com"
                      }
                    },
                    "tripAdvisor": {
                      "type": "object",
                      "example": {
                        "title": "title",
                        "firstName": "Rick",
                        "lastName": "Sanchez",
                        "fullName": "Rick Sanchez",
                        "proxyEmail": "proxyemail@email.com",
                        "url": "https://www.tripadvisor.com"
                      }
                    },
                    "policy": {
                      "type": "object",
                      "example": {
                        "marketing": {
                          "isAccepted": false,
                          "dateOfAcceptance": null
                        },
                        "privacyObject": {
                          "isAccepted": false,
                          "dateOfAcceptance": null,
                          "versionNumber": "ffewfewgw"
                        }
                      }
                    },
                    "returningGuest": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "_id",
                    "firstName",
                    "lastName",
                    "returningGuest"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Can not pull guest, unauthorized"
          },
          "404": {
            "description": "Guest not found"
          }
        }
      }
    },
    "/owners": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Get list of owners",
        "description": "Get list of owners",
        "parameters": [
          {
            "name": "pagination",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Use pagination response"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "description": "When use pagination, limit amount of docs per page"
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "description": "When use pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Ordered list of fields name to sort by, separated by spaces."
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Query against (fullName OR lastName OR firstName)"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Selection of fields, separated by space. If fields not be chosen response will be return with all fields.\n\n`fields`:\n> `_id` `ownersPortalSettings` `listings` `locale` `active` `allowReservations` `showReservationTooltips` `vatOrTaxId` `workingCapital` `firstName` `lastName` `fullName` `email` `address` `phone` `picture` `notes` `createdAt`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of owner",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "example": "563e0b6a08a2710e00057b82",
                                "description": "Unique Id"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "accountId": {
                                "type": "string",
                                "example": "563e0b6a08a2710e00057b82",
                                "description": "Unique Id"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "ownersPortalSettings": {
                                "type": "object",
                                "description": "The OPSettings object",
                                "properties": {
                                  "bookedNights": {
                                    "type": "boolean"
                                  },
                                  "revenue": {
                                    "type": "boolean"
                                  },
                                  "accommodationFare": {
                                    "type": "boolean"
                                  },
                                  "guestsReports": {
                                    "type": "boolean"
                                  },
                                  "occupancy": {
                                    "type": "boolean"
                                  },
                                  "avgNightlyRate": {
                                    "type": "boolean"
                                  },
                                  "revPal": {
                                    "type": "boolean"
                                  },
                                  "hostPayout": {
                                    "type": "boolean"
                                  }
                                },
                                "example": {
                                  "ownersPortalSettings": {
                                    "bookedNights": true,
                                    "revenue": true
                                  }
                                }
                              },
                              "listings": {
                                "type": "array",
                                "description": "Listings Id",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "5e32fc021690ba0026f6f778",
                                  "5e32fc021690d15417543012",
                                  "5e32fc021690d15417543013"
                                ]
                              },
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "locale": {
                                "type": "string",
                                "description": "Localization",
                                "example": "en-US"
                              },
                              "active": {
                                "type": "boolean",
                                "example": "false"
                              },
                              "allowReservations": {
                                "type": "boolean",
                                "example": "false"
                              },
                              "showReservationTooltips": {
                                "type": "boolean",
                                "example": "false"
                              },
                              "vatOrTaxId": {
                                "type": "string"
                              },
                              "workingCapital": {
                                "description": "Deprecated. Use new [API](/reference/ownerscontroller_update)",
                                "type": "number",
                                "example": 0
                              },
                              "firstName": {
                                "type": "string",
                                "example": "Elad"
                              },
                              "lastName": {
                                "type": "string",
                                "example": "Kremer"
                              },
                              "fullName": {
                                "type": "string",
                                "example": "Elad Kremer"
                              },
                              "email": {
                                "type": "string",
                                "example": "example@guesty.com",
                                "description": "Primary email address"
                              },
                              "address": {
                                "type": "string",
                                "example": "test address"
                              },
                              "phone": {
                                "type": "string",
                                "example": "15417543010",
                                "description": "Primary phone number"
                              },
                              "picture": {
                                "type": "object",
                                "properties": {
                                  "thumbnail": {
                                    "type": "string"
                                  },
                                  "regular": {
                                    "type": "string"
                                  },
                                  "large": {
                                    "type": "string"
                                  }
                                },
                                "example": {
                                  "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                                  "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                                }
                              },
                              "notes": {
                                "type": "string",
                                "example": "this is a note"
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "date ISO",
                                "example": "2020-03-13T12:17:06.758Z"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "number",
                      "example": 1
                    },
                    "limit": {
                      "type": "number",
                      "example": 25
                    },
                    "skip": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Owners"
        ],
        "summary": "Create an owner",
        "description": "Create an owner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "listings"
                ],
                "type": "object",
                "title": "title test",
                "description": "desctiption test",
                "properties": {
                  "ownersPortalSettings": {
                    "type": "object",
                    "description": "The OPSettings object",
                    "properties": {
                      "bookedNights": {
                        "type": "boolean"
                      },
                      "revenue": {
                        "type": "boolean"
                      },
                      "accommodationFare": {
                        "type": "boolean"
                      },
                      "guestsReports": {
                        "type": "boolean"
                      },
                      "occupancy": {
                        "type": "boolean"
                      },
                      "avgNightlyRate": {
                        "type": "boolean"
                      },
                      "revPal": {
                        "type": "boolean"
                      },
                      "hostPayout": {
                        "type": "boolean"
                      }
                    },
                    "example": {
                      "ownersPortalSettings": {
                        "bookedNights": true,
                        "revenue": true
                      }
                    }
                  },
                  "listings": {
                    "type": "array",
                    "description": "Listings Id",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    "example": [
                      {
                        "_id": "5e32fc021690ba0sds6f6f778"
                      },
                      {
                        "_id": "5e32fc021690ba002dsklf778"
                      }
                    ]
                  },
                  "locale": {
                    "type": "string",
                    "description": "Localization",
                    "example": "en-US"
                  },
                  "active": {
                    "type": "boolean",
                    "example": "false"
                  },
                  "allowReservations": {
                    "type": "boolean",
                    "example": "false"
                  },
                  "showReservationTooltips": {
                    "type": "boolean",
                    "example": "false"
                  },
                  "vatOrTaxId": {
                    "type": "string"
                  },
                  "workingCapital": {
                    "description": "Deprecated. Use new [API](/reference/ownerscontroller_retrieve)",
                    "type": "number",
                    "example": 0
                  },
                  "firstName": {
                    "type": "string",
                    "example": "Elad"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Kremer"
                  },
                  "fullName": {
                    "type": "string",
                    "example": "Elad Kremer"
                  },
                  "email": {
                    "type": "string",
                    "example": "example@guesty.com",
                    "description": "Primary email address"
                  },
                  "address": {
                    "type": "string",
                    "example": "test address"
                  },
                  "phone": {
                    "type": "string",
                    "example": "15417543010",
                    "description": "Primary phone number"
                  },
                  "picture": {
                    "type": "object",
                    "properties": {
                      "thumbnail": {
                        "type": "string"
                      },
                      "regular": {
                        "type": "string"
                      },
                      "large": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                      "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                    }
                  },
                  "notes": {
                    "type": "string",
                    "example": "this is a note"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "date ISO",
                    "example": "2020-03-13T12:17:06.758Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ownersPortalSettings": {
                      "type": "object",
                      "description": "The OPSettings object",
                      "properties": {
                        "bookedNights": {
                          "type": "boolean"
                        },
                        "revenue": {
                          "type": "boolean"
                        },
                        "accommodationFare": {
                          "type": "boolean"
                        },
                        "guestsReports": {
                          "type": "boolean"
                        },
                        "occupancy": {
                          "type": "boolean"
                        },
                        "avgNightlyRate": {
                          "type": "boolean"
                        },
                        "revPal": {
                          "type": "boolean"
                        },
                        "hostPayout": {
                          "type": "boolean"
                        }
                      },
                      "example": {
                        "ownersPortalSettings": {
                          "bookedNights": true,
                          "revenue": true
                        }
                      }
                    },
                    "listings": {
                      "type": "array",
                      "description": "Listings Id",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "5e32fc021690ba0026f6f778",
                        "5e32fc021690d15417543012",
                        "5e32fc021690d15417543013"
                      ]
                    },
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "locale": {
                      "type": "string",
                      "description": "Localization",
                      "example": "en-US"
                    },
                    "active": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "allowReservations": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "showReservationTooltips": {
                      "type": "boolean",
                      "example": "false"
                    },
                    "vatOrTaxId": {
                      "type": "string"
                    },
                    "workingCapital": {
                      "description": "Deprecated. Use new [API](/reference/ownerscontroller_update)",
                      "type": "number",
                      "example": 0
                    },
                    "firstName": {
                      "type": "string",
                      "example": "Elad"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Kremer"
                    },
                    "fullName": {
                      "type": "string",
                      "example": "Elad Kremer"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@guesty.com",
                      "description": "Primary email address"
                    },
                    "address": {
                      "type": "string",
                      "example": "test address"
                    },
                    "phone": {
                      "type": "string",
                      "example": "15417543010",
                      "description": "Primary phone number"
                    },
                    "picture": {
                      "type": "object",
                      "properties": {
                        "thumbnail": {
                          "type": "string"
                        },
                        "regular": {
                          "type": "string"
                        },
                        "large": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                        "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                      }
                    },
                    "notes": {
                      "type": "string",
                      "example": "this is a note"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "date ISO",
                      "example": "2020-03-13T12:17:06.758Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/owners/{id}": {
      "get": {
        "tags": [
          "Owners"
        ],
        "summary": "Get owner",
        "description": "Get owner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Owner's ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Selection of fields, separated by space. If fields not be chosen response will be return with all fields.\n\n`fields`:\n> `_id` `ownersPortalSettings` `listings` `locale` `active` `allowReservations` `showReservationTooltips` `vatOrTaxId` `workingCapital` `firstName` `lastName` `fullName` `email` `address` `phone` `picture` `notes` `createdAt`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Owner object",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "ownersPortalSettings": {
                          "type": "object",
                          "description": "The OPSettings object",
                          "properties": {
                            "bookedNights": {
                              "type": "boolean"
                            },
                            "revenue": {
                              "type": "boolean"
                            },
                            "accommodationFare": {
                              "type": "boolean"
                            },
                            "guestsReports": {
                              "type": "boolean"
                            },
                            "occupancy": {
                              "type": "boolean"
                            },
                            "avgNightlyRate": {
                              "type": "boolean"
                            },
                            "revPal": {
                              "type": "boolean"
                            },
                            "hostPayout": {
                              "type": "boolean"
                            }
                          },
                          "example": {
                            "ownersPortalSettings": {
                              "bookedNights": true,
                              "revenue": true
                            }
                          }
                        },
                        "listings": {
                          "type": "array",
                          "description": "Listings Id",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "5e32fc021690ba0026f6f778",
                            "5e32fc021690d15417543012",
                            "5e32fc021690d15417543013"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "locale": {
                          "type": "string",
                          "description": "Localization",
                          "example": "en-US"
                        },
                        "active": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "allowReservations": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "showReservationTooltips": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "vatOrTaxId": {
                          "type": "string"
                        },
                        "workingCapital": {
                          "description": "Deprecated. Use new [API](/reference/ownerscontroller_update)",
                          "type": "number",
                          "example": 0
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Elad"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Kremer"
                        },
                        "fullName": {
                          "type": "string",
                          "example": "Elad Kremer"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@guesty.com",
                          "description": "Primary email address"
                        },
                        "address": {
                          "type": "string",
                          "example": "test address"
                        },
                        "phone": {
                          "type": "string",
                          "example": "15417543010",
                          "description": "Primary phone number"
                        },
                        "picture": {
                          "type": "object",
                          "properties": {
                            "thumbnail": {
                              "type": "string"
                            },
                            "regular": {
                              "type": "string"
                            },
                            "large": {
                              "type": "string"
                            }
                          },
                          "example": {
                            "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                            "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "example": "this is a note"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "date ISO",
                          "example": "2020-03-13T12:17:06.758Z"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Owners"
        ],
        "summary": "Update owner",
        "description": "update owner, entered fields will be updated (support partial update)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Owner ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ownersPortalSettings": {
                    "type": "object",
                    "description": "The OPSettings object",
                    "properties": {
                      "bookedNights": {
                        "type": "boolean"
                      },
                      "revenue": {
                        "type": "boolean"
                      },
                      "accommodationFare": {
                        "type": "boolean"
                      },
                      "guestsReports": {
                        "type": "boolean"
                      },
                      "occupancy": {
                        "type": "boolean"
                      },
                      "avgNightlyRate": {
                        "type": "boolean"
                      },
                      "revPal": {
                        "type": "boolean"
                      },
                      "hostPayout": {
                        "type": "boolean"
                      }
                    },
                    "example": {
                      "ownersPortalSettings": {
                        "bookedNights": true,
                        "revenue": true
                      }
                    }
                  },
                  "listings": {
                    "type": "array",
                    "description": "Listings Id",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "5e32fc021690ba0026f6f778",
                      "5e32fc021690d15417543012",
                      "5e32fc021690d15417543013"
                    ]
                  },
                  "_id": {
                    "type": "string",
                    "description": "Unique Id",
                    "example": "563e0b6a08a2710e00057b82"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Localization",
                    "example": "en-US"
                  },
                  "active": {
                    "type": "boolean",
                    "example": "false"
                  },
                  "allowReservations": {
                    "type": "boolean",
                    "example": "false"
                  },
                  "showReservationTooltips": {
                    "type": "boolean",
                    "example": "false"
                  },
                  "vatOrTaxId": {
                    "type": "string"
                  },
                  "workingCapital": {
                    "description": "Deprecated. Use new [API](/reference/ownerscontroller_update)",
                    "type": "number",
                    "example": 0
                  },
                  "firstName": {
                    "type": "string",
                    "example": "Elad"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Kremer"
                  },
                  "fullName": {
                    "type": "string",
                    "example": "Elad Kremer"
                  },
                  "email": {
                    "type": "string",
                    "example": "example@guesty.com",
                    "description": "Primary email address"
                  },
                  "address": {
                    "type": "string",
                    "example": "test address"
                  },
                  "phone": {
                    "type": "string",
                    "example": "15417543010",
                    "description": "Primary phone number"
                  },
                  "picture": {
                    "type": "object",
                    "properties": {
                      "thumbnail": {
                        "type": "string"
                      },
                      "regular": {
                        "type": "string"
                      },
                      "large": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                      "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                    }
                  },
                  "notes": {
                    "type": "string",
                    "example": "this is a note"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "date ISO",
                    "example": "2020-03-13T12:17:06.758Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Owner object",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "ownersPortalSettings": {
                          "type": "object",
                          "description": "The OPSettings object",
                          "properties": {
                            "bookedNights": {
                              "type": "boolean"
                            },
                            "revenue": {
                              "type": "boolean"
                            },
                            "accommodationFare": {
                              "type": "boolean"
                            },
                            "guestsReports": {
                              "type": "boolean"
                            },
                            "occupancy": {
                              "type": "boolean"
                            },
                            "avgNightlyRate": {
                              "type": "boolean"
                            },
                            "revPal": {
                              "type": "boolean"
                            },
                            "hostPayout": {
                              "type": "boolean"
                            }
                          },
                          "example": {
                            "ownersPortalSettings": {
                              "bookedNights": true,
                              "revenue": true
                            }
                          }
                        },
                        "listings": {
                          "type": "array",
                          "description": "Listings Id",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "5e32fc021690ba0026f6f778",
                            "5e32fc021690d15417543012",
                            "5e32fc021690d15417543013"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "locale": {
                          "type": "string",
                          "description": "Localization",
                          "example": "en-US"
                        },
                        "active": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "allowReservations": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "showReservationTooltips": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "vatOrTaxId": {
                          "type": "string"
                        },
                        "workingCapital": {
                          "description": "Deprecated. Use new [API](/reference/ownerscontroller_update)",
                          "type": "number",
                          "example": 0
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Elad"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Kremer"
                        },
                        "fullName": {
                          "type": "string",
                          "example": "Elad Kremer"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@guesty.com",
                          "description": "Primary email address"
                        },
                        "address": {
                          "type": "string",
                          "example": "test address"
                        },
                        "phone": {
                          "type": "string",
                          "example": "15417543010",
                          "description": "Primary phone number"
                        },
                        "picture": {
                          "type": "object",
                          "properties": {
                            "thumbnail": {
                              "type": "string"
                            },
                            "regular": {
                              "type": "string"
                            },
                            "large": {
                              "type": "string"
                            }
                          },
                          "example": {
                            "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                            "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "example": "this is a note"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "date ISO",
                          "example": "2020-03-13T12:17:06.758Z"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Owners"
        ],
        "summary": "Delete owner",
        "description": "Delete owner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Owner's ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "(No Content)"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/saved-replies": {
      "get": {
        "tags": [
          "Saved Replies"
        ],
        "summary": "Get saved replies",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Pagination limit, max: 100",
            "example": "25"
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "How many results should be skipped to get to the current page",
            "example": "0"
          },
          {
            "name": "listingId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Limit results to a specific listing",
            "example": "531968414930a7f09b075800"
          },
          {
            "name": "accountId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Limit results to a specific account",
            "example": "531968414930a7f09b075800"
          },
          {
            "name": "returnDefault",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "To get Guesty defaults SRs",
            "example": "true"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Selection of fields, separated by space. See response schema to get list of fields",
            "example": "createdAt"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Field to sort by. Prepend - for DESC.",
            "example": "createdAt"
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query string. Searches in question and folder. Search is case-insensitive.",
            "example": "TV"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 13:34:49 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "447"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "Access-Control-Allow-Credentials": {
                "schema": {
                  "type": "boolean",
                  "example": "true"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "example": "*"
                }
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "integer",
                  "example": "7200"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string",
                  "example": "Authorization, Origin, Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name, g-aid-cs"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string",
                  "example": "POST, GET, PUT, DELETE, PATCH, OPTIONS"
                }
              },
              "uber-trace-id": {
                "schema": {
                  "type": "string",
                  "example": "4e62a2bb5c4017ea:4e62a2bb5c4017ea:0:1"
                }
              },
              "uberctx-accountid": {
                "schema": {
                  "type": "string",
                  "example": "5fb67280e39677002e6c2683"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "4e62a2bb5c4017ea"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"1bf-6o3yuS0pz3CMiVYMWq9EUDdNpu0\""
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number",
                      "example": 2
                    },
                    "limit": {
                      "type": "number",
                      "example": 25
                    },
                    "skip": {
                      "type": "number",
                      "example": 50
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "question": {
                                "type": "string",
                                "example": "TV"
                              },
                              "answer": {
                                "type": "string",
                                "example": "Hi {{user}},\n\nWe have a 42\" Samsung LED in the living room."
                              },
                              "applyWhenHasBooking": {
                                "type": "boolean"
                              },
                              "applyWhenNoBooking": {
                                "type": "boolean"
                              },
                              "isAbstract": {
                                "type": "boolean"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "user",
                                  "guest",
                                  "contact",
                                  "review"
                                ]
                              },
                              "language": {
                                "description": "Language of the saved reply.",
                                "type": "string",
                                "enum": [
                                  "en",
                                  "fr",
                                  "es",
                                  "it",
                                  "ru",
                                  "ja",
                                  "zh"
                                ],
                                "example": "en"
                              },
                              "excludeListingIds": {
                                "description": "Exclude saved reply from the specific listings",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Unique Id",
                                  "example": "563e0b6a08a2710e00057b82"
                                }
                              },
                              "listingsIds": {
                                "description": "Apply saved reply for the specific listings",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Unique Id",
                                  "example": "563e0b6a08a2710e00057b82"
                                }
                              },
                              "folder": {
                                "type": "string",
                                "example": "City"
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "filters": {
                                "description": "Apply saved reply to listings which match the filters",
                                "type": "object",
                                "properties": {
                                  "_id": {
                                    "type": "string",
                                    "description": "Unique Id",
                                    "example": "563e0b6a08a2710e00057b82"
                                  },
                                  "field": {
                                    "type": "string",
                                    "description": "Subject of the filter, e.g. listing.address.city"
                                  },
                                  "operator": {
                                    "type": "string",
                                    "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                                  },
                                  "value": {
                                    "type": "array",
                                    "description": "Values to filter by.",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "accountId": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "563e0b6a08a2710e00057b82"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "count": 2,
                  "limit": 25,
                  "skip": 0,
                  "results": [
                    {
                      "_id": "5dbf05cad78ae2001f57389e",
                      "applyWhenHasBooking": true,
                      "applyWhenNoBooking": true,
                      "isAbstract": false,
                      "type": "guest",
                      "language": "en",
                      "question": "TV",
                      "answer": "Hi {{user}},\n\nWe have a 42\" Samsung LED in the living room.\n\nRegards,\n{{host}}",
                      "accountId": null
                    },
                    {
                      "_id": "5dc96c0294079e001e53bf89",
                      "applyWhenHasBooking": true,
                      "applyWhenNoBooking": true,
                      "isAbstract": false,
                      "type": "guest",
                      "language": "en",
                      "question": "Luggage",
                      "answer": "You can leave your luggage in the lobby if you arrive early. Same thing if you will be checking-out and would like to roam around afterwards.",
                      "accountId": null
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have the permissions to use this endpoint",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden res"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Saved Replies"
        ],
        "summary": "Post saved reply",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "example": "TV"
                  },
                  "answer": {
                    "type": "string",
                    "example": "Hi {{user}},\n\nWe have a 42\" Samsung LED in the living room."
                  },
                  "applyWhenHasBooking": {
                    "type": "boolean"
                  },
                  "applyWhenNoBooking": {
                    "type": "boolean"
                  },
                  "isAbstract": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "user",
                      "guest",
                      "contact",
                      "review"
                    ]
                  },
                  "language": {
                    "description": "Language of the saved reply.",
                    "type": "string",
                    "enum": [
                      "en",
                      "fr",
                      "es",
                      "it",
                      "ru",
                      "ja",
                      "zh"
                    ],
                    "example": "en"
                  },
                  "excludeListingIds": {
                    "description": "Exclude saved reply from the specific listings",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    }
                  },
                  "listingsIds": {
                    "description": "Apply saved reply for the specific listings",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    }
                  },
                  "folder": {
                    "type": "string",
                    "example": "City"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "filters": {
                    "description": "Apply saved reply to listings which match the filters",
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Unique Id",
                        "example": "563e0b6a08a2710e00057b82"
                      },
                      "field": {
                        "type": "string",
                        "description": "Subject of the filter, e.g. listing.address.city"
                      },
                      "operator": {
                        "type": "string",
                        "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                      },
                      "value": {
                        "type": "array",
                        "description": "Values to filter by.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "question",
                  "answer"
                ],
                "example": {
                  "question": "Mirror, mirror, on the wall, Who in this land is fairest of all?",
                  "answer": "not you?"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 13:30:38 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "282"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "Access-Control-Allow-Credentials": {
                "schema": {
                  "type": "boolean",
                  "example": "true"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "example": "*"
                }
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "integer",
                  "example": "7200"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string",
                  "example": "Authorization, Origin, Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name, g-aid-cs"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string",
                  "example": "POST, GET, PUT, DELETE, PATCH, OPTIONS"
                }
              },
              "uber-trace-id": {
                "schema": {
                  "type": "string",
                  "example": "a402f30ce9ad9f6b:a402f30ce9ad9f6b:0:1"
                }
              },
              "uberctx-accountid": {
                "schema": {
                  "type": "string",
                  "example": "5fb67280e39677002e6c2683"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "a402f30ce9ad9f6b"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"11a-k5J0tmiFJWlKR2loIeAKvRl4oXU\""
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "question": {
                          "type": "string",
                          "example": "TV"
                        },
                        "answer": {
                          "type": "string",
                          "example": "Hi {{user}},\n\nWe have a 42\" Samsung LED in the living room."
                        },
                        "applyWhenHasBooking": {
                          "type": "boolean"
                        },
                        "applyWhenNoBooking": {
                          "type": "boolean"
                        },
                        "isAbstract": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user",
                            "guest",
                            "contact",
                            "review"
                          ]
                        },
                        "language": {
                          "description": "Language of the saved reply.",
                          "type": "string",
                          "enum": [
                            "en",
                            "fr",
                            "es",
                            "it",
                            "ru",
                            "ja",
                            "zh"
                          ],
                          "example": "en"
                        },
                        "excludeListingIds": {
                          "description": "Exclude saved reply from the specific listings",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          }
                        },
                        "listingsIds": {
                          "description": "Apply saved reply for the specific listings",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          }
                        },
                        "folder": {
                          "type": "string",
                          "example": "City"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "filters": {
                          "description": "Apply saved reply to listings which match the filters",
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "description": "Unique Id",
                              "example": "563e0b6a08a2710e00057b82"
                            },
                            "field": {
                              "type": "string",
                              "description": "Subject of the filter, e.g. listing.address.city"
                            },
                            "operator": {
                              "type": "string",
                              "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                            },
                            "value": {
                              "type": "array",
                              "description": "Values to filter by.",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "applyWhenHasBooking": true,
                  "applyWhenNoBooking": true,
                  "isAbstract": false,
                  "type": "guest",
                  "language": "en",
                  "_id": "61643c7e8eb305002d90151f",
                  "question": "Mirror, mirror, on the wall, Who in this land is fairest of all?",
                  "answer": "not you?",
                  "accountId": "5fb67280e39677002e6c2683"
                }
              }
            }
          },
          "500": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "CannedResponse validation failed: language: `de` is not a valid enum value for path `language`."
                }
              }
            }
          }
        }
      }
    },
    "/saved-replies/{replyId}": {
      "get": {
        "tags": [
          "Saved Replies"
        ],
        "summary": "Get saved reply by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "replyId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Saved reply Id",
            "example": "61643c7e8eb305002d90151f"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Selection of fields, separated by space. See response schema to get the list of fields.",
            "example": "question answer folder"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 13:52:34 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "345"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "Access-Control-Allow-Credentials": {
                "schema": {
                  "type": "boolean",
                  "example": "true"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "example": "*"
                }
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "integer",
                  "example": "7200"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string",
                  "example": "Authorization, Origin, Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name, g-aid-cs"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string",
                  "example": "POST, GET, PUT, DELETE, PATCH, OPTIONS"
                }
              },
              "uber-trace-id": {
                "schema": {
                  "type": "string",
                  "example": "929a0ede64be4275:929a0ede64be4275:0:1"
                }
              },
              "uberctx-accountid": {
                "schema": {
                  "type": "string",
                  "example": "5fb67280e39677002e6c2683"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "929a0ede64be4275"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"159-kVOXmOwipj6/j+5CCVtWbg49un4\""
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "question": {
                          "type": "string",
                          "example": "TV"
                        },
                        "answer": {
                          "type": "string",
                          "example": "Hi {{user}},\n\nWe have a 42\" Samsung LED in the living room."
                        },
                        "applyWhenHasBooking": {
                          "type": "boolean"
                        },
                        "applyWhenNoBooking": {
                          "type": "boolean"
                        },
                        "isAbstract": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user",
                            "guest",
                            "contact",
                            "review"
                          ]
                        },
                        "language": {
                          "description": "Language of the saved reply.",
                          "type": "string",
                          "enum": [
                            "en",
                            "fr",
                            "es",
                            "it",
                            "ru",
                            "ja",
                            "zh"
                          ],
                          "example": "en"
                        },
                        "excludeListingIds": {
                          "description": "Exclude saved reply from the specific listings",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          }
                        },
                        "listingsIds": {
                          "description": "Apply saved reply for the specific listings",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          }
                        },
                        "folder": {
                          "type": "string",
                          "example": "City"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "filters": {
                          "description": "Apply saved reply to listings which match the filters",
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "description": "Unique Id",
                              "example": "563e0b6a08a2710e00057b82"
                            },
                            "field": {
                              "type": "string",
                              "description": "Subject of the filter, e.g. listing.address.city"
                            },
                            "operator": {
                              "type": "string",
                              "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                            },
                            "value": {
                              "type": "array",
                              "description": "Values to filter by.",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "listingsIds": [],
                  "excludeListingIds": [],
                  "tags": [],
                  "applyWhenHasBooking": true,
                  "applyWhenNoBooking": true,
                  "isAbstract": false,
                  "type": "guest",
                  "language": "en",
                  "_id": "61643c7e8eb305002d90151f",
                  "question": "Mirror, mirror, on the wall, Who in this land is fairest of all?",
                  "answer": "not you?",
                  "accountId": "5fb67280e39677002e6c2683",
                  "__v": 0,
                  "filters": []
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Canned response not found"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Saved Replies"
        ],
        "summary": "Update saved reply by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string",
                    "example": "TV"
                  },
                  "answer": {
                    "type": "string",
                    "example": "Hi {{user}},\n\nWe have a 42\" Samsung LED in the living room."
                  },
                  "applyWhenHasBooking": {
                    "type": "boolean"
                  },
                  "applyWhenNoBooking": {
                    "type": "boolean"
                  },
                  "isAbstract": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "user",
                      "guest",
                      "contact",
                      "review"
                    ]
                  },
                  "language": {
                    "description": "Language of the saved reply.",
                    "type": "string",
                    "enum": [
                      "en",
                      "fr",
                      "es",
                      "it",
                      "ru",
                      "ja",
                      "zh"
                    ],
                    "example": "en"
                  },
                  "excludeListingIds": {
                    "description": "Exclude saved reply from the specific listings",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    }
                  },
                  "listingsIds": {
                    "description": "Apply saved reply for the specific listings",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    }
                  },
                  "folder": {
                    "type": "string",
                    "example": "City"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "filters": {
                    "description": "Apply saved reply to listings which match the filters",
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Unique Id",
                        "example": "563e0b6a08a2710e00057b82"
                      },
                      "field": {
                        "type": "string",
                        "description": "Subject of the filter, e.g. listing.address.city"
                      },
                      "operator": {
                        "type": "string",
                        "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                      },
                      "value": {
                        "type": "array",
                        "description": "Values to filter by.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "question": "Mirror, mirror, on the wall, Who in this land is fairest of all?",
                  "answer": "Dammit, its 3am Jenny, go to sleep"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "replyId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Saved Reply Id",
            "example": "61643c7e8eb305002d90151f"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 13:54:45 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "164"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "Access-Control-Allow-Credentials": {
                "schema": {
                  "type": "boolean",
                  "example": "true"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "example": "*"
                }
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "integer",
                  "example": "7200"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string",
                  "example": "Authorization, Origin, Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name, g-aid-cs"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string",
                  "example": "POST, GET, PUT, DELETE, PATCH, OPTIONS"
                }
              },
              "uber-trace-id": {
                "schema": {
                  "type": "string",
                  "example": "5ccb11db52d20cf:5ccb11db52d20cf:0:1"
                }
              },
              "uberctx-accountid": {
                "schema": {
                  "type": "string",
                  "example": "5fb67280e39677002e6c2683"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "5ccb11db52d20cf"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"a4-ozMtsYbT8yQ99ndceMVTRAOfTHM\""
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "question": {
                          "type": "string",
                          "example": "TV"
                        },
                        "answer": {
                          "type": "string",
                          "example": "Hi {{user}},\n\nWe have a 42\" Samsung LED in the living room."
                        },
                        "applyWhenHasBooking": {
                          "type": "boolean"
                        },
                        "applyWhenNoBooking": {
                          "type": "boolean"
                        },
                        "isAbstract": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user",
                            "guest",
                            "contact",
                            "review"
                          ]
                        },
                        "language": {
                          "description": "Language of the saved reply.",
                          "type": "string",
                          "enum": [
                            "en",
                            "fr",
                            "es",
                            "it",
                            "ru",
                            "ja",
                            "zh"
                          ],
                          "example": "en"
                        },
                        "excludeListingIds": {
                          "description": "Exclude saved reply from the specific listings",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          }
                        },
                        "listingsIds": {
                          "description": "Apply saved reply for the specific listings",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          }
                        },
                        "folder": {
                          "type": "string",
                          "example": "City"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "filters": {
                          "description": "Apply saved reply to listings which match the filters",
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "description": "Unique Id",
                              "example": "563e0b6a08a2710e00057b82"
                            },
                            "field": {
                              "type": "string",
                              "description": "Subject of the filter, e.g. listing.address.city"
                            },
                            "operator": {
                              "type": "string",
                              "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                            },
                            "value": {
                              "type": "array",
                              "description": "Values to filter by.",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "question": "Mirror, mirror, on the wall, Who in this land is fairest of all?",
                  "answer": "Dammit, its 3am Jenny, go to sleep",
                  "accountId": "5fb67280e39677002e6c2683"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Canned response not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Saved Replies"
        ],
        "summary": "Delete saved reply by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "replyId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Saved Reply Id",
            "example": "61642b0c8eb305002d9014a8"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "ok"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Canned response not found"
                }
              }
            }
          }
        }
      }
    },
    "/saved-replies/listing/{listingId}": {
      "get": {
        "tags": [
          "Saved Replies"
        ],
        "summary": "Get saved replies by listing id",
        "description": "Returns saved replies filtered by the listing id. By default only ids are returned.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "listingId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "Limit results to a specific listing",
            "example": "531968414930a7f09b075800",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Pagination limit, max: 100",
            "example": "25"
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "How many results should be skipped to get to the current page",
            "example": "0"
          },
          {
            "name": "accountId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Limit results to a specific account",
            "example": "531968414930a7f09b075800"
          },
          {
            "name": "returnDefault",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "To get Guesty defaults SRs",
            "example": "true"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Selection of fields, separated by space. See response schema to get list of fields",
            "example": "createdAt"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Field to sort by. Prepend - for DESC.",
            "example": "createdAt"
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query string. Searches in question and folder. Search is case-insensitive.",
            "example": "TV"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 13:33:49 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "78"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "Access-Control-Allow-Credentials": {
                "schema": {
                  "type": "boolean",
                  "example": "true"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "example": "*"
                }
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "integer",
                  "example": "7200"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string",
                  "example": "Authorization, Origin, Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name, g-aid-cs"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string",
                  "example": "POST, GET, PUT, DELETE, PATCH, OPTIONS"
                }
              },
              "uber-trace-id": {
                "schema": {
                  "type": "string",
                  "example": "2f170776993a2559:2f170776993a2559:0:1"
                }
              },
              "uberctx-accountid": {
                "schema": {
                  "type": "string",
                  "example": "5fb67280e39677002e6c2683"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "2f170776993a2559"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"4e-ZaYG7exdFucE1EsB+gZPrwJ7mv4\""
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "question": {
                          "type": "string",
                          "example": "TV"
                        },
                        "answer": {
                          "type": "string",
                          "example": "Hi {{user}},\n\nWe have a 42\" Samsung LED in the living room."
                        },
                        "applyWhenHasBooking": {
                          "type": "boolean"
                        },
                        "applyWhenNoBooking": {
                          "type": "boolean"
                        },
                        "isAbstract": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "user",
                            "guest",
                            "contact",
                            "review"
                          ]
                        },
                        "language": {
                          "description": "Language of the saved reply.",
                          "type": "string",
                          "enum": [
                            "en",
                            "fr",
                            "es",
                            "it",
                            "ru",
                            "ja",
                            "zh"
                          ],
                          "example": "en"
                        },
                        "excludeListingIds": {
                          "description": "Exclude saved reply from the specific listings",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          }
                        },
                        "listingsIds": {
                          "description": "Apply saved reply for the specific listings",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Unique Id",
                            "example": "563e0b6a08a2710e00057b82"
                          }
                        },
                        "folder": {
                          "type": "string",
                          "example": "City"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "filters": {
                          "description": "Apply saved reply to listings which match the filters",
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "description": "Unique Id",
                              "example": "563e0b6a08a2710e00057b82"
                            },
                            "field": {
                              "type": "string",
                              "description": "Subject of the filter, e.g. listing.address.city"
                            },
                            "operator": {
                              "type": "string",
                              "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                            },
                            "value": {
                              "type": "array",
                              "description": "Values to filter by.",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "count": 1,
                  "limit": 25,
                  "skip": 0,
                  "results": [
                    {
                      "_id": "61643c7e8eb305002d90151f"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "User does not have the permissions to use this endpoint",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden res"
                }
              }
            }
          }
        }
      }
    },
    "/tasks-open-api/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get tasks list",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Object of filters to query by",
            "example": "{'status':{'@nin':['completed']},'scheduledFor':{'@today':true}}"
          },
          {
            "name": "columns",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Selection of columns, separated by space",
            "example": "status taskTitle listing reservation scheduledFor endTime canStartAfter mustFinishBefore assignee id",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "example": "25",
            "description": "Pagination"
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "example": 0,
            "description": "Indication of number of results to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "object",
                        "description": "The status of the task.",
                        "properties": {
                          "children": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "confirmed",
                              "in progress",
                              "completed",
                              "canceled"
                            ]
                          }
                        }
                      },
                      "taskTitle": {
                        "type": "object",
                        "description": "The name of the task.",
                        "properties": {
                          "children": {
                            "type": "string"
                          }
                        }
                      },
                      "type": {
                        "type": "string",
                        "description": "Task types help you with better identification and reporting.",
                        "properties": {
                          "children": {
                            "type": "string"
                          }
                        }
                      },
                      "shortTaskId": {
                        "type": "array",
                        "description": "A short task ID for quick reference.",
                        "properties": {
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "listing": {
                        "type": "object",
                        "description": "The property to which the task is assigned.",
                        "properties": {
                          "listingId": {
                            "type": "string"
                          },
                          "img": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        }
                      },
                      "reservation": {
                        "type": "object",
                        "description": "The reservation to which the task is assigned."
                      },
                      "scheduledFor": {
                        "type": "object",
                        "properties": {
                          "startTime": {
                            "type": "string",
                            "description": "The date and time the task must begin."
                          },
                          "canStartAfter": {
                            "type": "string",
                            "description": "The date and the time after which the task can begin."
                          },
                          "mustFinishBefore": {
                            "type": "string",
                            "description": "The date and time before which the task must be completed."
                          }
                        }
                      },
                      "endTime": {
                        "type": "object",
                        "format": "date-time",
                        "description": "The date and time the task was completed.",
                        "properties": {
                          "date": {
                            "type": "string"
                          }
                        }
                      },
                      "canStartAfter": {
                        "type": "object",
                        "format": "date-time",
                        "description": "The date and the time after which the task can begin.",
                        "properties": {
                          "date": {
                            "type": "string"
                          }
                        }
                      },
                      "mustFinishBefore": {
                        "type": "object",
                        "format": "date-time",
                        "description": "The date and time before which the task must be completed.",
                        "properties": {
                          "date": {
                            "type": "string"
                          }
                        }
                      },
                      "assignee": {
                        "type": "object",
                        "properties": {
                          "taskId": {
                            "type": "string",
                            "description": "The unique identifier of the task."
                          },
                          "assigneeId": {
                            "type": "string",
                            "description": "The unique identifier of the person assigned to the task."
                          },
                          "picture": {
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks-open-api/create-single-task": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a new task",
        "requestBody": {
          "description": "Create task body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The name you call the task"
                  },
                  "description": {
                    "type": "string",
                    "description": "Add any additional information needed to define the task."
                  },
                  "priority": {
                    "type": "string",
                    "description": "Priority value",
                    "enum": [
                      "medium",
                      "high",
                      "low"
                    ],
                    "default": "medium"
                  },
                  "type": {
                    "type": "string",
                    "description": "Task types help you with better identification and reporting.",
                    "enum": [
                      "cleaning",
                      "maintenance",
                      "inspection",
                      "mid-stay",
                      "runner",
                      "sanitation",
                      "check-in",
                      "issue",
                      "inventory",
                      "administration"
                    ]
                  },
                  "assigneeGroup": {
                    "type": "array",
                    "description": "The team the assignees are part of. This is a tag.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "assigneeId": {
                    "description": "The unique identifier of the person assigned to the task.",
                    "type": "string"
                  },
                  "supervisorId": {
                    "type": "string",
                    "description": "The uniqueID of the person assigned to supervise the task."
                  },
                  "checklist": {
                    "type": "array",
                    "description": "A list of action items that help define the task.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "attachments": {
                    "type": "array",
                    "description": "The place to attach external files needed for the task.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "URL location of the attached file."
                        },
                        "title": {
                          "type": "string",
                          "description": "Title name of the attached file."
                        },
                        "mimetype": {
                          "type": "string",
                          "description": "State the kind of file attached"
                        },
                        "size": {
                          "type": "number",
                          "description": "The storage size of the attachment"
                        },
                        "client": {
                          "type": "string",
                          "description": "Add any additional information needed to define the task.",
                          "default": "cbt"
                        }
                      }
                    }
                  },
                  "expenses": {
                    "type": "array",
                    "maxItems": 20,
                    "description": "The list of expenses that will be created in Accounting automatically either upon completion of the task or at the date provided (only available for accounting add-on users). Max items: 20.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "category",
                        "vendorId",
                        "amount",
                        "vendorName",
                        "expenseShare"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Expense name.",
                          "example": "Maintenance expense"
                        },
                        "category": {
                          "type": "string",
                          "enum": [
                            "advertising",
                            "cleaning",
                            "electricity",
                            "furniture_appliances",
                            "gas",
                            "internet",
                            "lock_automation",
                            "management",
                            "mortgage",
                            "pest_control",
                            "pool_cleaning",
                            "property_taxes",
                            "repairs_maintenance",
                            "supplies_purchases",
                            "other_misc",
                            "taxes_paid",
                            "telephone",
                            "television",
                            "trash",
                            "water_septic",
                            "guest_cleaning",
                            "owner_cleaning",
                            "channel_commission",
                            "payment_charge",
                            "pet_fee",
                            "startup_fee",
                            "fotoshoot",
                            "vat"
                          ],
                          "description": "Expense category"
                        },
                        "description": {
                          "type": "string",
                          "description": "Expense description",
                          "example": "Bulb replacement"
                        },
                        "amount": {
                          "type": "number",
                          "description": "Amount value",
                          "example": 20.45
                        },
                        "recognitionDate": {
                          "type": "string",
                          "format": "date",
                          "description": "Expense recognition date. ISO 8601 Date format (year-month-day). If no date provided, will be used date of task creation.",
                          "example": "2023-10-27"
                        },
                        "vendorId": {
                          "type": "string",
                          "description": "You can get your vendor ID [here](/reference/vendorscontroller_getall)",
                          "example": "5f4f6e1c1c6e4e001f7e8b4e"
                        },
                        "shareSplit": {
                          "type": "number",
                          "description": "A share split is a floating point number that represents the percentage. For example, \n      - \\`0.5\\` means that the share is 50% between PMC and Owner.\n      - \\`0.1\\` means that the share is 10% Owner and 90% PMC.\n      - \\`0\\` means that the charge covered 100% by PMC.",
                          "example": 0.5
                        },
                        "attachments": {
                          "type": "object",
                          "description": "Add attachments to expense.",
                          "required": [
                            "url",
                            "extension",
                            "fileName"
                          ],
                          "properties": {
                            "url": {
                              "type": "string",
                              "description": "URL to CDN where attachment is stored. Max length is 2048 characters",
                              "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                            },
                            "extension": {
                              "type": "string",
                              "description": "Attachment file extension. Max length is 10 characters",
                              "example": "png"
                            },
                            "fileName": {
                              "type": "string",
                              "description": "Attachment file name. Max length is 256 characters",
                              "example": "Invoice copy"
                            }
                          }
                        }
                      }
                    }
                  },
                  "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time the task must begin (specific task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                  },
                  "canStartAfter": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and the time after which the task can begin (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                  },
                  "mustFinishBefore": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time before which the task must be completed (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                  },
                  "listingId": {
                    "type": "string",
                    "description": "The object ID of the listing the task is attached to"
                  },
                  "reservationId": {
                    "type": "string",
                    "description": "The reservation ID of the listing the task is attached to"
                  },
                  "comments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string",
                          "description": "Textual comment"
                        },
                        "attachments": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "plannedDuration": {
                    "type": "number",
                    "description": "The amount of time budgeted for the task (hours)."
                  }
                },
                "example": {
                  "title": "Post Stay Clean",
                  "description": "A regular clean between guest stays.",
                  "priority": 2,
                  "type": "cleaning",
                  "assigneeGroup": [
                    "Cleaners A",
                    "Cleaners B"
                  ],
                  "assigneeId": "69gvymvx55zwf5nn2ubng97cm",
                  "supervisorId": "eg2x3iyeqnttngcn4mhzrzawr",
                  "checklist": [
                    "Clean floors",
                    "Clean bathroom with bleach.",
                    "Change the linen"
                  ],
                  "attachments": [
                    {
                      "title": "Clean Room 7",
                      "url": "attachment.png",
                      "mimetyoe": "image/png",
                      "size": 4401630,
                      "client": "cbt"
                    }
                  ],
                  "startTime": "2021-05-10T11:30:00-04:00",
                  "plannedDuration": 2,
                  "canStartAfter": "2021-05-10T11:30:00-04:00",
                  "mustFinishBefore": "2021-05-10T14:00:00-04:00",
                  "listingId": "5803ca18e48f450300c76173",
                  "reservationId": "5803ca18e48f450300c76173",
                  "comments": [
                    {
                      "text": "This is a cool comment",
                      "attachments": []
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "The unique identifier of the task."
                    },
                    "shortTaskId": {
                      "type": "array",
                      "description": "A short task ID for quick reference.",
                      "properties": {
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "assigneeGroup": {
                      "type": "array",
                      "description": "The team the assignees is part of. This is a tag",
                      "items": {
                        "type": "string"
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Task types help you with better identification and reporting."
                    },
                    "checklistFinished": {
                      "type": "array",
                      "description": "A list of finished action items that help define the task.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "checklist": {
                      "type": "array",
                      "description": "A list of action items that help define the task.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "checklistAggregated": {
                      "type": "array",
                      "description": "A list of action items."
                    },
                    "tags": {
                      "type": "array",
                      "description": "List of tags the task is related to",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the task, being one of the following enumerators: pending,confirmed, in progress,completed,canceled."
                    },
                    "comment": {
                      "type": "object",
                      "description": "Notes added to the task by the assignee and supervisor. Contains the text, user ID and date the comment was published.",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "The unique identifier of the comment."
                        },
                        "text": {
                          "type": "string",
                          "description": "The comment text."
                        },
                        "by": {
                          "type": "string",
                          "description": "The unique identifier of the user who made the comment."
                        },
                        "date": {
                          "type": "string",
                          "description": "The date and time the comment was posted."
                        }
                      }
                    },
                    "accountId": {
                      "type": "string",
                      "description": "The ID of the account the task is attached to"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The ID of the user who created the task."
                    },
                    "title": {
                      "type": "string",
                      "description": "The name you call the task"
                    },
                    "description": {
                      "type": "string",
                      "description": "Add any additional information needed to define the task."
                    },
                    "priority": {
                      "type": "string",
                      "description": "Assign the level of importance to the task in enumerators - High,Medium,Low",
                      "enum": [
                        "medium",
                        "high",
                        "low"
                      ]
                    },
                    "assigneeId": {
                      "type": "string",
                      "description": "The unique identifier of the person assigned to the task."
                    },
                    "supervisorId": {
                      "type": "string",
                      "description": "The uniqueID of the person assigned to supervise the task."
                    },
                    "timezone": {
                      "type": "string",
                      "description": ""
                    },
                    "afterEffects": {
                      "type": "object",
                      "description": "Actions to be triggered upon the completion of the task.",
                      "properties": {
                        "action": {
                          "type": "string",
                          "description": "The action to be performed."
                        },
                        "_id": {
                          "type": "string",
                          "description": "The unique identifier of the action."
                        },
                        "payload": {
                          "type": "object",
                          "description": "The information or data to be included within the action.",
                          "properties": {
                            "target": {
                              "type": "string",
                              "description": "The intended recipient.",
                              "enum": [
                                "user",
                                "contact",
                                "guest",
                                "supervisor"
                              ]
                            },
                            "targetId": {
                              "type": "string",
                              "description": "The unique identifier of the target."
                            },
                            "message": {
                              "type": "object",
                              "description": "The message object.",
                              "properties": {
                                "subject": {
                                  "type": "string",
                                  "description": "States topic of the message."
                                },
                                "body": {
                                  "type": "string",
                                  "description": "Contains the message string."
                                },
                                "attachments": {
                                  "type": "object",
                                  "description": "Contains and describes an attached file.",
                                  "properties": {
                                    "_id": {
                                      "type": "string",
                                      "description": "Unique identifier of the attachment object."
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "URL location of the attached file."
                                    },
                                    "title": {
                                      "type": "string",
                                      "description": "Name of the file attachment."
                                    },
                                    "mimetype": {
                                      "type": "string",
                                      "description": "State the kind of file attached."
                                    },
                                    "size": {
                                      "type": "string",
                                      "description": "The storage size of the attachment."
                                    },
                                    "client": {
                                      "type": "string",
                                      "description": ""
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "attachments": {
                      "type": "object",
                      "description": "The place to attach external files needed for the task.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Title name of the attached file."
                        },
                        "url": {
                          "type": "string",
                          "description": "URL location of the attached file."
                        },
                        "mimetype": {
                          "type": "string",
                          "description": "State the kind of file attached."
                        },
                        "size": {
                          "type": "number",
                          "description": "The storage size of the attachment."
                        },
                        "client": {
                          "type": "string",
                          "description": "Add any additional information needed to define the task."
                        }
                      }
                    },
                    "timing": {
                      "type": "object",
                      "description": "",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "none",
                            "specific",
                            "flexible",
                            "legacy"
                          ]
                        },
                        "startTime": {
                          "type": "string",
                          "description": "The date and time the task must begin (fixed task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                        },
                        "canStartAfter": {
                          "type": "string",
                          "description": "The date and the time after which the task can begin (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                        },
                        "mustFinishBefore": {
                          "type": "string",
                          "description": "The date and time before which the task must be completed (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                        }
                      }
                    },
                    "apply": {
                      "type": "object",
                      "description": "",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "listing",
                            "reservation",
                            "owner-reservation"
                          ]
                        },
                        "listingId": {
                          "type": "string",
                          "description": "The object ID of the listing the task is attached to. Only when reservationId don't exist"
                        },
                        "reservationId": {
                          "type": "string",
                          "description": "The reservation ID of the listing the task is attached to. Only when listingId don't exist"
                        },
                        "ownerReservationId": {
                          "type": "string",
                          "description": "The owner reservation ID of the listing the task is attached to. Only when owner reservation "
                        }
                      }
                    },
                    "plannedDuration": {
                      "type": "number",
                      "description": "The amount of time budgeted for the task (hours)."
                    },
                    "pendingExpenses": {
                      "description": "The list of expenses that will be created upon task completion",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Expense id",
                            "example": "66851bfe7ac4c20e71804f08"
                          },
                          "name": {
                            "type": "string",
                            "description": "Expense name",
                            "example": "Cleaning"
                          },
                          "description": {
                            "type": "string",
                            "description": "Expense description",
                            "example": "Expense details"
                          },
                          "shareSplit": {
                            "type": "number",
                            "description": "Expense split coefficient",
                            "example": "0.3"
                          },
                          "shareType": {
                            "enum": [
                              "percent"
                            ],
                            "description": "Share split type will be always `percent`",
                            "example": "percent"
                          },
                          "accounting": {
                            "type": "object",
                            "description": "Not available for Pending expenses",
                            "properties": {
                              "charges": {
                                "type": "array",
                                "items": {
                                  "type": "number",
                                  "description": "Charge ids"
                                }
                              }
                            }
                          },
                          "category": {
                            "type": "object",
                            "description": "Expense category",
                            "enum": [
                              "advertising",
                              "cleaning",
                              "electricity",
                              "furniture_appliances",
                              "gas",
                              "internet",
                              "lock_automation",
                              "management",
                              "mortgage",
                              "pest_control",
                              "pool_cleaning",
                              "property_taxes",
                              "repairs_maintenance",
                              "supplies_purchases",
                              "other_misc",
                              "taxes_paid",
                              "telephone",
                              "television",
                              "trash",
                              "water_septic",
                              "guest_cleaning",
                              "owner_cleaning",
                              "channel_commission",
                              "payment_charge",
                              "pet_fee",
                              "startup_fee",
                              "fotoshoot",
                              "vat"
                            ],
                            "example": "pool_cleaning"
                          },
                          "chargeable": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number",
                                "example": 25
                              }
                            }
                          },
                          "payTo": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "664c6a01b6d00de42dbda741",
                                "description": "Vendor id"
                              }
                            }
                          },
                          "attachments": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "Url for cdc where attachment is uploaded"
                              },
                              "originalExtension": {
                                "type": "string",
                                "description": "Attachment extension"
                              },
                              "originalFilename": {
                                "type": "string",
                                "description": "Attachment file name"
                              },
                              "uploadedAt": {
                                "type": "string",
                                "description": "Date of attachment uploading"
                              },
                              "uploadedBy": {
                                "type": "string",
                                "example": "66851bfe7ac4c20e71804f08",
                                "description": "User id who upload attachment"
                              }
                            }
                          }
                        }
                      }
                    },
                    "postedExpenses": {
                      "type": "array",
                      "description": "The list of recognized expenses",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "Expense id",
                            "example": "66851bfe7ac4c20e71804f08"
                          },
                          "name": {
                            "type": "string",
                            "description": "Expense name",
                            "example": "Cleaning"
                          },
                          "description": {
                            "type": "string",
                            "description": "Expense description",
                            "example": "Expense details"
                          },
                          "shareSplit": {
                            "type": "number",
                            "description": "Expense split coefficient",
                            "example": "0.3"
                          },
                          "shareType": {
                            "enum": [
                              "percent"
                            ],
                            "description": "Share split type will be always `percent`",
                            "example": "percent"
                          },
                          "accounting": {
                            "type": "object",
                            "description": "Expense accounting data",
                            "properties": {
                              "charges": {
                                "type": "array",
                                "items": {
                                  "type": "number",
                                  "description": "Charge ids"
                                }
                              },
                              "failureCode": {
                                "type": "number",
                                "example": 10001,
                                "description": "Charge creation Error code"
                              },
                              "requestId": {
                                "type": "string",
                                "example": "456dd47bdb3862d2",
                                "description": "Request id for debugging"
                              }
                            }
                          },
                          "category": {
                            "type": "object",
                            "description": "Expense category",
                            "enum": [
                              "advertising",
                              "cleaning",
                              "electricity",
                              "furniture_appliances",
                              "gas",
                              "internet",
                              "lock_automation",
                              "management",
                              "mortgage",
                              "pest_control",
                              "pool_cleaning",
                              "property_taxes",
                              "repairs_maintenance",
                              "supplies_purchases",
                              "other_misc",
                              "taxes_paid",
                              "telephone",
                              "television",
                              "trash",
                              "water_septic",
                              "guest_cleaning",
                              "owner_cleaning",
                              "channel_commission",
                              "payment_charge",
                              "pet_fee",
                              "startup_fee",
                              "fotoshoot",
                              "vat"
                            ],
                            "example": "pool_cleaning"
                          },
                          "chargeable": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number",
                                "example": 25
                              }
                            }
                          },
                          "payTo": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "664c6a01b6d00de42dbda741",
                                "description": "Vendor id"
                              }
                            }
                          },
                          "attachments": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "description": "Url for cdc where attachment is uploaded"
                              },
                              "originalExtension": {
                                "type": "string",
                                "description": "Attachment extension"
                              },
                              "originalFilename": {
                                "type": "string",
                                "description": "Attachment file name"
                              },
                              "uploadedAt": {
                                "type": "string",
                                "description": "Date of attachment uploading"
                              },
                              "uploadedBy": {
                                "type": "string",
                                "example": "66851bfe7ac4c20e71804f08",
                                "description": "User id who upload attachment"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "_id": "5fc628f3d6391a00363234d",
                    "assigneeGroup": [
                      "cleaners"
                    ],
                    "checklistFinished": [
                      "Clean room A",
                      "Clean room B"
                    ],
                    "checklist": [
                      "Clean room A",
                      "Clean room B"
                    ],
                    "tags": [],
                    "status": "confirmed",
                    "accountId": "Q5fb67280e396Q77002e6c2683",
                    "createdBy": "Q5fb67280e39Q677002e6c268c",
                    "title": "Post Stay Clean",
                    "checklistAggregated": [
                      {
                        "name": "Clean room A",
                        "finished": "true",
                        "at": "2024-01-06T21:08:53.990Z",
                        "by": ""
                      },
                      {
                        "name": "Clean room B",
                        "finished": "False"
                      }
                    ],
                    "attachments": [
                      {
                        "_id": "6599c15c1d103f000e6464de",
                        "mimetype": "image/png",
                        "size": 31356,
                        "client": "cbt",
                        "title": "",
                        "url": ""
                      }
                    ],
                    "comments": [],
                    "createdAt": "2020-12-01T11:28:51.968Z",
                    "updatedAt": "2024-01-06T21:08:55.193Z",
                    "assigneeId": null,
                    "priority": "high",
                    "supervisorId": "64a6b8cfa08e0446a6f4b840",
                    "plannedDuration": 0.08,
                    "description": "A regular clean between guest stays.",
                    "startedAt": "2020-12-02T07:35:24.333Z",
                    "enumeratedStatus": 1,
                    "timezone": "Australia/Sydney",
                    "afterEffects": [],
                    "endTime": "2024-01-10T21:04:48.000Z",
                    "timing": {
                      "type": "specific",
                      "startTime": "2024-01-10T21:00:00.000Z"
                    },
                    "apply": {
                      "type": "reservation",
                      "listingId": "5fba2d97d8e638002d76d842",
                      "reservationId": "9fba3d97d8e62500Gd7f6d842"
                    },
                    "assignedToMyGroup": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks-open-api/{taskId}": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update a task",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update task body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The name you call the task"
                  },
                  "description": {
                    "type": "string",
                    "description": "Add any additional information needed to define the task."
                  },
                  "priority": {
                    "type": "string",
                    "description": "Priority value",
                    "enum": [
                      "medium",
                      "high",
                      "low"
                    ],
                    "default": "medium"
                  },
                  "type": {
                    "type": "string",
                    "description": "Task types help you with better identification and reporting.",
                    "enum": [
                      "cleaning",
                      "maintenance",
                      "inspection",
                      "mid-stay",
                      "runner",
                      "sanitation",
                      "check-in",
                      "issue",
                      "inventory",
                      "administration"
                    ]
                  },
                  "assigneeGroup": {
                    "type": "array",
                    "description": "The team the assignees are part of. This is a tag.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "assigneeId": {
                    "description": "The unique identifier of the person assigned to the task.",
                    "type": "string"
                  },
                  "supervisorId": {
                    "type": "string",
                    "description": "The uniqueID of the person assigned to supervise the task."
                  },
                  "checklist": {
                    "type": "array",
                    "description": "A list of action items that help define the task.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "attachments": {
                    "type": "array",
                    "description": "The place to attach external files needed for the task.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "URL location of the attached file."
                        },
                        "title": {
                          "type": "string",
                          "description": "Title name of the attached file."
                        },
                        "mimetype": {
                          "type": "string",
                          "description": "State the kind of file attached"
                        },
                        "size": {
                          "type": "number",
                          "description": "The storage size of the attachment"
                        },
                        "client": {
                          "type": "string",
                          "description": "Add any additional information needed to define the task.",
                          "default": "cbt"
                        }
                      }
                    }
                  },
                  "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time the task must begin (specific task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                  },
                  "canStartAfter": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and the time after which the task can begin (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                  },
                  "mustFinishBefore": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time before which the task must be completed (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                  },
                  "listingId": {
                    "type": "string",
                    "description": "The object ID of the listing the task is attached to"
                  },
                  "reservationId": {
                    "type": "string",
                    "description": "The reservation ID of the listing the task is attached to"
                  },
                  "comments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Comment identifier for update specific comment",
                          "example": "5803ca18e48f450300c76173"
                        },
                        "text": {
                          "type": "string",
                          "description": "Textual comment"
                        },
                        "attachments": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "confirmed",
                      "in progress",
                      "completed",
                      "canceled"
                    ]
                  },
                  "plannedDuration": {
                    "type": "number",
                    "description": "The amount of time budgeted for the task (hours)."
                  }
                },
                "example": {
                  "title": "Post Stay Clean",
                  "description": "A regular clean between guest stays.",
                  "priority": 2,
                  "type": "cleaning",
                  "assigneeGroup": [
                    "Cleaners A",
                    "Cleaners B"
                  ],
                  "assigneeId": "69gvymvx55zwf5nn2ubng97cm",
                  "supervisorId": "eg2x3iyeqnttngcn4mhzrzawr",
                  "checklist": [
                    "Clean floors",
                    "Clean bathroom with bleach.",
                    "Change the linen"
                  ],
                  "attachments": [
                    {
                      "title": "Clean Room 7",
                      "url": "attachment.png",
                      "mimetyoe": "image/png",
                      "size": 4401630,
                      "client": "cbt"
                    }
                  ],
                  "startTime": "2021-05-10T11:30:00-04:00",
                  "plannedDuration": 2,
                  "canStartAfter": "2021-05-10T11:30:00-04:00",
                  "mustFinishBefore": "2021-05-10T14:00:00-04:00",
                  "listingId": "5803ca18e48f450300c76173",
                  "reservationId": "5803ca18e48f450300c76173",
                  "comments": [
                    {
                      "text": "This is a cool comment",
                      "attachments": []
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json;": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "The unique identifier of the task."
                    },
                    "shortTaskId": {
                      "type": "array",
                      "description": "A short task ID for quick reference.",
                      "properties": {
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "assigneeGroup": {
                      "type": "array",
                      "description": "The team the assignees is part of. This is a tag",
                      "items": {
                        "type": "string"
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Task types help you with better identification and reporting."
                    },
                    "checklistFinished": {
                      "type": "array",
                      "description": "A list of finished action items that help define the task.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "checklist": {
                      "type": "array",
                      "description": "A list of action items that help define the task.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "checklistAggregated": {
                      "type": "array",
                      "description": "A list of action items."
                    },
                    "tags": {
                      "type": "array",
                      "description": "List of tags the task is related to",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the task, being one of the following enumerators: pending,confirmed, in progress,completed,canceled."
                    },
                    "comment": {
                      "type": "object",
                      "description": "Notes added to the task by the assignee and supervisor. Contains the text, user ID and date the comment was published.",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "The unique identifier of the comment."
                        },
                        "text": {
                          "type": "string",
                          "description": "The comment text."
                        },
                        "by": {
                          "type": "string",
                          "description": "The unique identifier of the user who made the comment."
                        },
                        "date": {
                          "type": "string",
                          "description": "The date and time the comment was posted."
                        }
                      }
                    },
                    "accountId": {
                      "type": "string",
                      "description": "The ID of the account the task is attached to"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The ID of the user who created the task."
                    },
                    "title": {
                      "type": "string",
                      "description": "The name you call the task"
                    },
                    "description": {
                      "type": "string",
                      "description": "Add any additional information needed to define the task."
                    },
                    "priority": {
                      "type": "string",
                      "description": "Assign the level of importance to the task in enumerators - High,Medium,Low",
                      "enum": [
                        "medium",
                        "high",
                        "low"
                      ]
                    },
                    "assigneeId": {
                      "type": "string",
                      "description": "The unique identifier of the person assigned to the task."
                    },
                    "supervisorId": {
                      "type": "string",
                      "description": "The uniqueID of the person assigned to supervise the task."
                    },
                    "timezone": {
                      "type": "string",
                      "description": ""
                    },
                    "afterEffects": {
                      "type": "object",
                      "description": "Actions to be triggered upon the completion of the task.",
                      "properties": {
                        "action": {
                          "type": "string",
                          "description": "The action to be performed."
                        },
                        "_id": {
                          "type": "string",
                          "description": "The unique identifier of the action."
                        },
                        "payload": {
                          "type": "object",
                          "description": "The information or data to be included within the action.",
                          "properties": {
                            "target": {
                              "type": "string",
                              "description": "The intended recipient.",
                              "enum": [
                                "user",
                                "contact",
                                "guest",
                                "supervisor"
                              ]
                            },
                            "targetId": {
                              "type": "string",
                              "description": "The unique identifier of the target."
                            },
                            "message": {
                              "type": "object",
                              "description": "The message object.",
                              "properties": {
                                "subject": {
                                  "type": "string",
                                  "description": "States topic of the message."
                                },
                                "body": {
                                  "type": "string",
                                  "description": "Contains the message string."
                                },
                                "attachments": {
                                  "type": "object",
                                  "description": "Contains and describes an attached file.",
                                  "properties": {
                                    "_id": {
                                      "type": "string",
                                      "description": "Unique identifier of the attachment object."
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "URL location of the attached file."
                                    },
                                    "title": {
                                      "type": "string",
                                      "description": "Name of the file attachment."
                                    },
                                    "mimetype": {
                                      "type": "string",
                                      "description": "State the kind of file attached."
                                    },
                                    "size": {
                                      "type": "string",
                                      "description": "The storage size of the attachment."
                                    },
                                    "client": {
                                      "type": "string",
                                      "description": ""
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "attachments": {
                      "type": "object",
                      "description": "The place to attach external files needed for the task.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Title name of the attached file."
                        },
                        "url": {
                          "type": "string",
                          "description": "URL location of the attached file."
                        },
                        "mimetype": {
                          "type": "string",
                          "description": "State the kind of file attached."
                        },
                        "size": {
                          "type": "number",
                          "description": "The storage size of the attachment."
                        },
                        "client": {
                          "type": "string",
                          "description": "Add any additional information needed to define the task."
                        }
                      }
                    },
                    "timing": {
                      "type": "object",
                      "description": "",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "none",
                            "specific",
                            "flexible",
                            "legacy"
                          ]
                        },
                        "startTime": {
                          "type": "string",
                          "description": "The date and time the task must begin (fixed task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                        },
                        "canStartAfter": {
                          "type": "string",
                          "description": "The date and the time after which the task can begin (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                        },
                        "mustFinishBefore": {
                          "type": "string",
                          "description": "The date and time before which the task must be completed (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                        }
                      }
                    },
                    "apply": {
                      "type": "object",
                      "description": "",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "listing",
                            "reservation",
                            "owner-reservation"
                          ]
                        },
                        "listingId": {
                          "type": "string",
                          "description": "The object ID of the listing the task is attached to. Only when reservationId don't exist"
                        },
                        "reservationId": {
                          "type": "string",
                          "description": "The reservation ID of the listing the task is attached to. Only when listingId don't exist"
                        },
                        "ownerReservationId": {
                          "type": "string",
                          "description": "The owner reservation ID of the listing the task is attached to. Only when owner reservation "
                        }
                      }
                    },
                    "plannedDuration": {
                      "type": "number",
                      "description": "The amount of time budgeted for the task (hours)."
                    }
                  },
                  "example": {
                    "_id": "5fc628f3d6391a00363234d",
                    "assigneeGroup": [
                      "cleaners"
                    ],
                    "checklistFinished": [
                      "Clean room A",
                      "Clean room B"
                    ],
                    "checklist": [
                      "Clean room A",
                      "Clean room B"
                    ],
                    "tags": [],
                    "status": "confirmed",
                    "accountId": "Q5fb67280e396Q77002e6c2683",
                    "createdBy": "Q5fb67280e39Q677002e6c268c",
                    "title": "Post Stay Clean",
                    "checklistAggregated": [
                      {
                        "name": "Clean room A",
                        "finished": "true",
                        "at": "2024-01-06T21:08:53.990Z",
                        "by": ""
                      },
                      {
                        "name": "Clean room B",
                        "finished": "False"
                      }
                    ],
                    "attachments": [
                      {
                        "_id": "6599c15c1d103f000e6464de",
                        "mimetype": "image/png",
                        "size": 31356,
                        "client": "cbt",
                        "title": "",
                        "url": ""
                      }
                    ],
                    "comments": [],
                    "createdAt": "2020-12-01T11:28:51.968Z",
                    "updatedAt": "2024-01-06T21:08:55.193Z",
                    "assigneeId": null,
                    "priority": "high",
                    "supervisorId": "64a6b8cfa08e0446a6f4b840",
                    "plannedDuration": 0.08,
                    "description": "A regular clean between guest stays.",
                    "startedAt": "2020-12-02T07:35:24.333Z",
                    "enumeratedStatus": 1,
                    "timezone": "Australia/Sydney",
                    "afterEffects": [],
                    "endTime": "2024-01-10T21:04:48.000Z",
                    "timing": {
                      "type": "specific",
                      "startTime": "2024-01-10T21:00:00.000Z"
                    },
                    "apply": {
                      "type": "reservation",
                      "listingId": "5fba2d97d8e638002d76d842",
                      "reservationId": "9fba3d97d8e62500Gd7f6d842"
                    },
                    "assignedToMyGroup": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get a specific task",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "The unique identifier of the task."
                    },
                    "shortTaskId": {
                      "type": "array",
                      "description": "A short task ID for quick reference.",
                      "properties": {
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "assigneeGroup": {
                      "type": "array",
                      "description": "The team the assignees is part of. This is a tag",
                      "items": {
                        "type": "string"
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Task types help you with better identification and reporting."
                    },
                    "checklistFinished": {
                      "type": "array",
                      "description": "A list of finished action items that help define the task.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "checklist": {
                      "type": "array",
                      "description": "A list of action items that help define the task.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "checklistAggregated": {
                      "type": "array",
                      "description": "A list of action items."
                    },
                    "tags": {
                      "type": "array",
                      "description": "List of tags the task is related to",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the task, being one of the following enumerators: pending,confirmed, in progress,completed,canceled."
                    },
                    "comment": {
                      "type": "object",
                      "description": "Notes added to the task by the assignee and supervisor. Contains the text, user ID and date the comment was published.",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "The unique identifier of the comment."
                        },
                        "text": {
                          "type": "string",
                          "description": "The comment text."
                        },
                        "by": {
                          "type": "string",
                          "description": "The unique identifier of the user who made the comment."
                        },
                        "date": {
                          "type": "string",
                          "description": "The date and time the comment was posted."
                        }
                      }
                    },
                    "accountId": {
                      "type": "string",
                      "description": "The ID of the account the task is attached to"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The ID of the user who created the task."
                    },
                    "title": {
                      "type": "string",
                      "description": "The name you call the task"
                    },
                    "description": {
                      "type": "string",
                      "description": "Add any additional information needed to define the task."
                    },
                    "priority": {
                      "type": "string",
                      "description": "Assign the level of importance to the task in enumerators - High,Medium,Low",
                      "enum": [
                        "medium",
                        "high",
                        "low"
                      ]
                    },
                    "assigneeId": {
                      "type": "string",
                      "description": "The unique identifier of the person assigned to the task."
                    },
                    "supervisorId": {
                      "type": "string",
                      "description": "The uniqueID of the person assigned to supervise the task."
                    },
                    "timezone": {
                      "type": "string",
                      "description": ""
                    },
                    "afterEffects": {
                      "type": "object",
                      "description": "Actions to be triggered upon the completion of the task.",
                      "properties": {
                        "action": {
                          "type": "string",
                          "description": "The action to be performed."
                        },
                        "_id": {
                          "type": "string",
                          "description": "The unique identifier of the action."
                        },
                        "payload": {
                          "type": "object",
                          "description": "The information or data to be included within the action.",
                          "properties": {
                            "target": {
                              "type": "string",
                              "description": "The intended recipient.",
                              "enum": [
                                "user",
                                "contact",
                                "guest",
                                "supervisor"
                              ]
                            },
                            "targetId": {
                              "type": "string",
                              "description": "The unique identifier of the target."
                            },
                            "message": {
                              "type": "object",
                              "description": "The message object.",
                              "properties": {
                                "subject": {
                                  "type": "string",
                                  "description": "States topic of the message."
                                },
                                "body": {
                                  "type": "string",
                                  "description": "Contains the message string."
                                },
                                "attachments": {
                                  "type": "object",
                                  "description": "Contains and describes an attached file.",
                                  "properties": {
                                    "_id": {
                                      "type": "string",
                                      "description": "Unique identifier of the attachment object."
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "URL location of the attached file."
                                    },
                                    "title": {
                                      "type": "string",
                                      "description": "Name of the file attachment."
                                    },
                                    "mimetype": {
                                      "type": "string",
                                      "description": "State the kind of file attached."
                                    },
                                    "size": {
                                      "type": "string",
                                      "description": "The storage size of the attachment."
                                    },
                                    "client": {
                                      "type": "string",
                                      "description": ""
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "attachments": {
                      "type": "object",
                      "description": "The place to attach external files needed for the task.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Title name of the attached file."
                        },
                        "url": {
                          "type": "string",
                          "description": "URL location of the attached file."
                        },
                        "mimetype": {
                          "type": "string",
                          "description": "State the kind of file attached."
                        },
                        "size": {
                          "type": "number",
                          "description": "The storage size of the attachment."
                        },
                        "client": {
                          "type": "string",
                          "description": "Add any additional information needed to define the task."
                        }
                      }
                    },
                    "timing": {
                      "type": "object",
                      "description": "",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "none",
                            "specific",
                            "flexible",
                            "legacy"
                          ]
                        },
                        "startTime": {
                          "type": "string",
                          "description": "The date and time the task must begin (fixed task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                        },
                        "canStartAfter": {
                          "type": "string",
                          "description": "The date and the time after which the task can begin (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                        },
                        "mustFinishBefore": {
                          "type": "string",
                          "description": "The date and time before which the task must be completed (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                        }
                      }
                    },
                    "apply": {
                      "type": "object",
                      "description": "",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "listing",
                            "reservation",
                            "owner-reservation"
                          ]
                        },
                        "listingId": {
                          "type": "string",
                          "description": "The object ID of the listing the task is attached to. Only when reservationId don't exist"
                        },
                        "reservationId": {
                          "type": "string",
                          "description": "The reservation ID of the listing the task is attached to. Only when listingId don't exist"
                        },
                        "ownerReservationId": {
                          "type": "string",
                          "description": "The owner reservation ID of the listing the task is attached to. Only when owner reservation "
                        }
                      }
                    },
                    "plannedDuration": {
                      "type": "number",
                      "description": "The amount of time budgeted for the task (hours)."
                    }
                  },
                  "example": {
                    "_id": "5fc628f3d6391a00363234d",
                    "assigneeGroup": [
                      "cleaners"
                    ],
                    "checklistFinished": [
                      "Clean room A",
                      "Clean room B"
                    ],
                    "checklist": [
                      "Clean room A",
                      "Clean room B"
                    ],
                    "tags": [],
                    "status": "confirmed",
                    "accountId": "Q5fb67280e396Q77002e6c2683",
                    "createdBy": "Q5fb67280e39Q677002e6c268c",
                    "title": "Post Stay Clean",
                    "checklistAggregated": [
                      {
                        "name": "Clean room A",
                        "finished": "true",
                        "at": "2024-01-06T21:08:53.990Z",
                        "by": ""
                      },
                      {
                        "name": "Clean room B",
                        "finished": "False"
                      }
                    ],
                    "attachments": [
                      {
                        "_id": "6599c15c1d103f000e6464de",
                        "mimetype": "image/png",
                        "size": 31356,
                        "client": "cbt",
                        "title": "",
                        "url": ""
                      }
                    ],
                    "comments": [],
                    "createdAt": "2020-12-01T11:28:51.968Z",
                    "updatedAt": "2024-01-06T21:08:55.193Z",
                    "assigneeId": null,
                    "priority": "high",
                    "supervisorId": "64a6b8cfa08e0446a6f4b840",
                    "plannedDuration": 0.08,
                    "description": "A regular clean between guest stays.",
                    "startedAt": "2020-12-02T07:35:24.333Z",
                    "enumeratedStatus": 1,
                    "timezone": "Australia/Sydney",
                    "afterEffects": [],
                    "endTime": "2024-01-10T21:04:48.000Z",
                    "timing": {
                      "type": "specific",
                      "startTime": "2024-01-10T21:00:00.000Z"
                    },
                    "apply": {
                      "type": "reservation",
                      "listingId": "5fba2d97d8e638002d76d842",
                      "reservationId": "9fba3d97d8e62500Gd7f6d842"
                    },
                    "assignedToMyGroup": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete a task",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "The unique identifier of the task."
                    },
                    "shortTaskId": {
                      "type": "array",
                      "description": "A short task ID for quick reference.",
                      "properties": {
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "assigneeGroup": {
                      "type": "array",
                      "description": "The team the assignees is part of. This is a tag",
                      "items": {
                        "type": "string"
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Task types help you with better identification and reporting."
                    },
                    "checklistFinished": {
                      "type": "array",
                      "description": "A list of finished action items that help define the task.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "checklist": {
                      "type": "array",
                      "description": "A list of action items that help define the task.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "checklistAggregated": {
                      "type": "array",
                      "description": "A list of action items."
                    },
                    "tags": {
                      "type": "array",
                      "description": "List of tags the task is related to",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the task, being one of the following enumerators: pending,confirmed, in progress,completed,canceled."
                    },
                    "comment": {
                      "type": "object",
                      "description": "Notes added to the task by the assignee and supervisor. Contains the text, user ID and date the comment was published.",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "The unique identifier of the comment."
                        },
                        "text": {
                          "type": "string",
                          "description": "The comment text."
                        },
                        "by": {
                          "type": "string",
                          "description": "The unique identifier of the user who made the comment."
                        },
                        "date": {
                          "type": "string",
                          "description": "The date and time the comment was posted."
                        }
                      }
                    },
                    "accountId": {
                      "type": "string",
                      "description": "The ID of the account the task is attached to"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The ID of the user who created the task."
                    },
                    "title": {
                      "type": "string",
                      "description": "The name you call the task"
                    },
                    "description": {
                      "type": "string",
                      "description": "Add any additional information needed to define the task."
                    },
                    "priority": {
                      "type": "string",
                      "description": "Assign the level of importance to the task in enumerators - High,Medium,Low",
                      "enum": [
                        "medium",
                        "high",
                        "low"
                      ]
                    },
                    "assigneeId": {
                      "type": "string",
                      "description": "The unique identifier of the person assigned to the task."
                    },
                    "supervisorId": {
                      "type": "string",
                      "description": "The uniqueID of the person assigned to supervise the task."
                    },
                    "timezone": {
                      "type": "string",
                      "description": ""
                    },
                    "afterEffects": {
                      "type": "object",
                      "description": "Actions to be triggered upon the completion of the task.",
                      "properties": {
                        "action": {
                          "type": "string",
                          "description": "The action to be performed."
                        },
                        "_id": {
                          "type": "string",
                          "description": "The unique identifier of the action."
                        },
                        "payload": {
                          "type": "object",
                          "description": "The information or data to be included within the action.",
                          "properties": {
                            "target": {
                              "type": "string",
                              "description": "The intended recipient.",
                              "enum": [
                                "user",
                                "contact",
                                "guest",
                                "supervisor"
                              ]
                            },
                            "targetId": {
                              "type": "string",
                              "description": "The unique identifier of the target."
                            },
                            "message": {
                              "type": "object",
                              "description": "The message object.",
                              "properties": {
                                "subject": {
                                  "type": "string",
                                  "description": "States topic of the message."
                                },
                                "body": {
                                  "type": "string",
                                  "description": "Contains the message string."
                                },
                                "attachments": {
                                  "type": "object",
                                  "description": "Contains and describes an attached file.",
                                  "properties": {
                                    "_id": {
                                      "type": "string",
                                      "description": "Unique identifier of the attachment object."
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "URL location of the attached file."
                                    },
                                    "title": {
                                      "type": "string",
                                      "description": "Name of the file attachment."
                                    },
                                    "mimetype": {
                                      "type": "string",
                                      "description": "State the kind of file attached."
                                    },
                                    "size": {
                                      "type": "string",
                                      "description": "The storage size of the attachment."
                                    },
                                    "client": {
                                      "type": "string",
                                      "description": ""
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "attachments": {
                      "type": "object",
                      "description": "The place to attach external files needed for the task.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Title name of the attached file."
                        },
                        "url": {
                          "type": "string",
                          "description": "URL location of the attached file."
                        },
                        "mimetype": {
                          "type": "string",
                          "description": "State the kind of file attached."
                        },
                        "size": {
                          "type": "number",
                          "description": "The storage size of the attachment."
                        },
                        "client": {
                          "type": "string",
                          "description": "Add any additional information needed to define the task."
                        }
                      }
                    },
                    "timing": {
                      "type": "object",
                      "description": "",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "none",
                            "specific",
                            "flexible",
                            "legacy"
                          ]
                        },
                        "startTime": {
                          "type": "string",
                          "description": "The date and time the task must begin (fixed task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                        },
                        "canStartAfter": {
                          "type": "string",
                          "description": "The date and the time after which the task can begin (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                        },
                        "mustFinishBefore": {
                          "type": "string",
                          "description": "The date and time before which the task must be completed (flexible task). Each task scheduling should be set for fixed or flexible time. If “startTime” has value, leave “canStartFrom” and “mustFinishBefore” blank, and vice versa"
                        }
                      }
                    },
                    "apply": {
                      "type": "object",
                      "description": "",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "listing",
                            "reservation",
                            "owner-reservation"
                          ]
                        },
                        "listingId": {
                          "type": "string",
                          "description": "The object ID of the listing the task is attached to. Only when reservationId don't exist"
                        },
                        "reservationId": {
                          "type": "string",
                          "description": "The reservation ID of the listing the task is attached to. Only when listingId don't exist"
                        },
                        "ownerReservationId": {
                          "type": "string",
                          "description": "The owner reservation ID of the listing the task is attached to. Only when owner reservation "
                        }
                      }
                    },
                    "plannedDuration": {
                      "type": "number",
                      "description": "The amount of time budgeted for the task (hours)."
                    }
                  },
                  "example": {
                    "_id": "5fc628f3d6391a00363234d",
                    "assigneeGroup": [
                      "cleaners"
                    ],
                    "checklistFinished": [
                      "Clean room A",
                      "Clean room B"
                    ],
                    "checklist": [
                      "Clean room A",
                      "Clean room B"
                    ],
                    "tags": [],
                    "status": "confirmed",
                    "accountId": "Q5fb67280e396Q77002e6c2683",
                    "createdBy": "Q5fb67280e39Q677002e6c268c",
                    "title": "Post Stay Clean",
                    "checklistAggregated": [
                      {
                        "name": "Clean room A",
                        "finished": "true",
                        "at": "2024-01-06T21:08:53.990Z",
                        "by": ""
                      },
                      {
                        "name": "Clean room B",
                        "finished": "False"
                      }
                    ],
                    "attachments": [
                      {
                        "_id": "6599c15c1d103f000e6464de",
                        "mimetype": "image/png",
                        "size": 31356,
                        "client": "cbt",
                        "title": "",
                        "url": ""
                      }
                    ],
                    "comments": [],
                    "createdAt": "2020-12-01T11:28:51.968Z",
                    "updatedAt": "2024-01-06T21:08:55.193Z",
                    "assigneeId": null,
                    "priority": "high",
                    "supervisorId": "64a6b8cfa08e0446a6f4b840",
                    "plannedDuration": 0.08,
                    "description": "A regular clean between guest stays.",
                    "startedAt": "2020-12-02T07:35:24.333Z",
                    "enumeratedStatus": 1,
                    "timezone": "Australia/Sydney",
                    "afterEffects": [],
                    "endTime": "2024-01-10T21:04:48.000Z",
                    "timing": {
                      "type": "specific",
                      "startTime": "2024-01-10T21:00:00.000Z"
                    },
                    "apply": {
                      "type": "reservation",
                      "listingId": "5fba2d97d8e638002d76d842",
                      "reservationId": "9fba3d97d8e62500Gd7f6d842"
                    },
                    "assignedToMyGroup": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hooks": {
      "get": {
        "tags": [
          "Hooks"
        ],
        "summary": "Get hooks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Pagination, max: 100",
            "example": "25"
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Pagination",
            "example": "0"
          },
          {
            "name": "listingId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Limit to a specific listing",
            "example": "531968414930a7f09b075800"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Selection of fields, separated by space",
            "example": "createdAt"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Field to sort by. Prepend - for DESC.",
            "example": "createdAt"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 13:56:30 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "441"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "Access-Control-Allow-Credentials": {
                "schema": {
                  "type": "boolean",
                  "example": "true"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "example": "*"
                }
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "integer",
                  "example": "7200"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string",
                  "example": "Authorization, Origin, Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name, g-aid-cs"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string",
                  "example": "POST, GET, PUT, DELETE, PATCH, OPTIONS"
                }
              },
              "uber-trace-id": {
                "schema": {
                  "type": "string",
                  "example": "8bacb7faf3cbf041:8bacb7faf3cbf041:0:1"
                }
              },
              "uberctx-accountid": {
                "schema": {
                  "type": "string",
                  "example": "5fb67280e39677002e6c2683"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "8bacb7faf3cbf041"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"1b9-H2/+2vHaukqgzRz1TDCKiXeBeSY\""
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "limit": 25,
                  "skip": 0,
                  "results": [
                    {
                      "_id": "607ff08602baa7002efb0b81",
                      "accountId": "5fb67280e39677002e6c2683",
                      "enabled": true,
                      "action": "send email",
                      "target": "guest",
                      "when": "1 days",
                      "useNoReply": false,
                      "createdBy": "Guesty",
                      "createdAt": "2021-04-21T09:29:42.291Z",
                      "updatedAt": "2021-04-21T09:29:42.293Z",
                      "trigger": "check out",
                      "humanRepresentation": "Send email to guest 1 day after check out",
                      "name": "test",
                      "email": {
                        "subject": "",
                        "body": "<p>test</p>"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hooks"
        ],
        "summary": "Post hook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "action": "send sms",
                  "email": {},
                  "enabled": true,
                  "excludeListingIds": [],
                  "listingIds": [
                    "5d14d253765308001fcb596c"
                  ],
                  "name": "Confirmation Hook 1",
                  "sms": {
                    "body": "Hi! Will be a pleasure to host you!"
                  },
                  "target": "user",
                  "to": {
                    "userId": "5d48a21cdda60600237e0647"
                  },
                  "trigger": "reservation confirmed",
                  "when": 0,
                  "whenUnit": "days",
                  "whenValue": 1
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 13:57:30 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "501"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "Access-Control-Allow-Credentials": {
                "schema": {
                  "type": "boolean",
                  "example": "true"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "example": "*"
                }
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "integer",
                  "example": "7200"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string",
                  "example": "Authorization, Origin, Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name, g-aid-cs"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string",
                  "example": "POST, GET, PUT, DELETE, PATCH, OPTIONS"
                }
              },
              "uber-trace-id": {
                "schema": {
                  "type": "string",
                  "example": "d55e3f5952701812:d55e3f5952701812:0:1"
                }
              },
              "uberctx-accountid": {
                "schema": {
                  "type": "string",
                  "example": "5fb67280e39677002e6c2683"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "d55e3f5952701812"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"1f5-u2hN66cZdANOSE5bkorNvxPM77E\""
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "_id": "616442ca8eb305002d901545",
                  "accountId": "5fb67280e39677002e6c2683",
                  "listingIds": [
                    "5d14d253765308001fcb596c"
                  ],
                  "enabled": true,
                  "action": "send sms",
                  "target": "user",
                  "when": 0,
                  "useNoReply": false,
                  "createdAt": "2021-10-11T13:57:30.241Z",
                  "updatedAt": "2021-10-11T13:57:30.247Z",
                  "trigger": "reservation confirmed",
                  "humanRepresentation": "Send sms to 1a1a 1a1a on booking confirmation",
                  "name": "Confirmation Hook 1",
                  "to": {
                    "userId": "5d48a21cdda60600237e0647"
                  },
                  "sms": {
                    "body": "Hi! Will be a pleasure to host you!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hooks/{hookId}": {
      "get": {
        "tags": [
          "Hooks"
        ],
        "summary": "Get hook by id",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Selection of fields, separated by space"
          },
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Saved Hook Id",
            "example": "616442ca8eb305002d901545"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 13:58:08 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "537"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "Access-Control-Allow-Credentials": {
                "schema": {
                  "type": "boolean",
                  "example": "true"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "example": "*"
                }
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "integer",
                  "example": "7200"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string",
                  "example": "Authorization, Origin, Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name, g-aid-cs"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string",
                  "example": "POST, GET, PUT, DELETE, PATCH, OPTIONS"
                }
              },
              "uber-trace-id": {
                "schema": {
                  "type": "string",
                  "example": "c6baa3103e669ea5:c6baa3103e669ea5:0:1"
                }
              },
              "uberctx-accountid": {
                "schema": {
                  "type": "string",
                  "example": "5fb67280e39677002e6c2683"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "c6baa3103e669ea5"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"219-5TnLhPO9f1TeyvZy438IvXje+Y8\""
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "_id": "616442ca8eb305002d901545",
                  "accountId": "5fb67280e39677002e6c2683",
                  "listingIds": [
                    "5d14d253765308001fcb596c"
                  ],
                  "excludeListingIds": [],
                  "enabled": true,
                  "filters": [],
                  "action": "send sms",
                  "target": "user",
                  "when": 0,
                  "useNoReply": false,
                  "createdAt": "2021-10-11T13:57:30.241Z",
                  "updatedAt": "2021-10-11T13:57:30.247Z",
                  "trigger": "reservation confirmed",
                  "humanRepresentation": "Send sms to 1a1a 1a1a on booking confirmation",
                  "name": "Confirmation Hook 1",
                  "to": {
                    "userId": "5d48a21cdda60600237e0647"
                  },
                  "sms": {
                    "body": "Hi! Will be a pleasure to host you!"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Hooks"
        ],
        "summary": "Update hook by id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "action": "send sms",
                  "email": {},
                  "enabled": true,
                  "excludeListingIds": [],
                  "listingIds": [
                    "5d14d253765308001fcb596c"
                  ],
                  "name": "Confirmation Hook 1",
                  "sms": {
                    "body": "Oh, welcome back my friend!"
                  },
                  "target": "user",
                  "to": {
                    "userId": "5d48a21cdda60600237e0647"
                  },
                  "trigger": "reservation confirmed",
                  "when": 0,
                  "whenUnit": "days",
                  "whenValue": 1
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Saved Hook Id",
            "example": "616442ca8eb305002d901545"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 13:58:58 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "529"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "Access-Control-Allow-Credentials": {
                "schema": {
                  "type": "boolean",
                  "example": "true"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "example": "*"
                }
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "integer",
                  "example": "7200"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string",
                  "example": "Authorization, Origin, Content-Type, X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Date, X-Api-Version, X-File-Name, g-aid-cs"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string",
                  "example": "POST, GET, PUT, DELETE, PATCH, OPTIONS"
                }
              },
              "uber-trace-id": {
                "schema": {
                  "type": "string",
                  "example": "7909dff5f1ebba4d:7909dff5f1ebba4d:0:1"
                }
              },
              "uberctx-accountid": {
                "schema": {
                  "type": "string",
                  "example": "5fb67280e39677002e6c2683"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "7909dff5f1ebba4d"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"211-j4M8D7zaoDwcqg5yZQon6r6rRCA\""
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "_id": "616442ca8eb305002d901545",
                  "accountId": "5fb67280e39677002e6c2683",
                  "listingIds": [
                    "5d14d253765308001fcb596c"
                  ],
                  "excludeListingIds": [],
                  "enabled": true,
                  "filters": [],
                  "action": "send sms",
                  "target": "user",
                  "when": 0,
                  "useNoReply": false,
                  "createdAt": "2021-10-11T13:57:30.241Z",
                  "updatedAt": "2021-10-11T13:57:30.247Z",
                  "trigger": "reservation confirmed",
                  "humanRepresentation": "Send sms to 1a1a 1a1a on booking confirmation",
                  "name": "Confirmation Hook 1",
                  "to": {
                    "userId": "5d48a21cdda60600237e0647"
                  },
                  "sms": {
                    "body": "Oh, welcome back my friend!"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Hooks"
        ],
        "summary": "Delete hook by id",
        "parameters": [
          {
            "name": "hookId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Saved Hook Id",
            "example": "61642d518eb305002d9014e1"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List all webhooks",
        "description": "List all webhooks",
        "responses": {
          "200": {
            "description": "Array of requested webhooks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "accountId": {
                            "type": "string",
                            "example": "563e0b6a08a2710e00057b82",
                            "description": "Unique Id"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "563e0b6a08a2710e00057b82",
                            "description": "Unique Id"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "example": "https://www.hookurl.com"
                          },
                          "events": {
                            "type": "array",
                            "description": "add list of event to register for the provided url",
                            "enum": [
                              "guest.created",
                              "guest.deleted",
                              "guest.updated",
                              "listing.new",
                              "listing.updated",
                              "listing.removed",
                              "listing.calendar.updated",
                              "payments.failed",
                              "reservation.messageReceived",
                              "reservation.new",
                              "reservation.updated",
                              "reservation.messageSent",
                              "task.created",
                              "task.deleted",
                              "task.updated",
                              "reservation_update_shortlist",
                              "payments.method.received"
                            ],
                            "items": {
                              "type": "string",
                              "enum": [
                                "guest.created",
                                "guest.deleted",
                                "guest.updated",
                                "listing.new",
                                "listing.updated",
                                "listing.removed",
                                "listing.calendar.updated",
                                "payments.failed",
                                "reservation.messageReceived",
                                "reservation.new",
                                "reservation.updated",
                                "reservation.messageSent",
                                "task.created",
                                "task.deleted",
                                "task.updated",
                                "reservation_update_shortlist",
                                "payments.method.received"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create a Webhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "example": "https://www.hookurl.com"
                  },
                  "events": {
                    "type": "array",
                    "description": "add list of event to register for the provided url",
                    "enum": [
                      "guest.created",
                      "guest.deleted",
                      "guest.updated",
                      "listing.new",
                      "listing.updated",
                      "listing.removed",
                      "listing.calendar.updated",
                      "payments.failed",
                      "reservation.messageReceived",
                      "reservation.new",
                      "reservation.updated",
                      "reservation.messageSent",
                      "task.created",
                      "task.deleted",
                      "task.updated",
                      "reservation_update_shortlist",
                      "payments.method.received"
                    ],
                    "items": {
                      "type": "string",
                      "enum": [
                        "guest.created",
                        "guest.deleted",
                        "guest.updated",
                        "listing.new",
                        "listing.updated",
                        "listing.removed",
                        "listing.calendar.updated",
                        "payments.failed",
                        "reservation.messageReceived",
                        "reservation.new",
                        "reservation.updated",
                        "reservation.messageSent",
                        "task.created",
                        "task.deleted",
                        "task.updated",
                        "reservation_update_shortlist",
                        "payments.method.received"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created webhook",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://www.hookurl.com"
                        },
                        "events": {
                          "type": "array",
                          "description": "add list of event to register for the provided url",
                          "enum": [
                            "guest.created",
                            "guest.deleted",
                            "guest.updated",
                            "listing.new",
                            "listing.updated",
                            "listing.removed",
                            "listing.calendar.updated",
                            "payments.failed",
                            "reservation.messageReceived",
                            "reservation.new",
                            "reservation.updated",
                            "reservation.messageSent",
                            "task.created",
                            "task.deleted",
                            "task.updated",
                            "reservation_update_shortlist",
                            "payments.method.received"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "guest.created",
                              "guest.deleted",
                              "guest.updated",
                              "listing.new",
                              "listing.updated",
                              "listing.removed",
                              "listing.calendar.updated",
                              "payments.failed",
                              "reservation.messageReceived",
                              "reservation.new",
                              "reservation.updated",
                              "reservation.messageSent",
                              "task.created",
                              "task.deleted",
                              "task.updated",
                              "reservation_update_shortlist",
                              "payments.method.received"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/webhooks/{id}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Retrieve a Webhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Webhook unique Id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook object",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://www.hookurl.com"
                        },
                        "events": {
                          "type": "array",
                          "description": "add list of event to register for the provided url",
                          "enum": [
                            "guest.created",
                            "guest.deleted",
                            "guest.updated",
                            "listing.new",
                            "listing.updated",
                            "listing.removed",
                            "listing.calendar.updated",
                            "payments.failed",
                            "reservation.messageReceived",
                            "reservation.new",
                            "reservation.updated",
                            "reservation.messageSent",
                            "task.created",
                            "task.deleted",
                            "task.updated",
                            "reservation_update_shortlist",
                            "payments.method.received"
                          ],
                          "items": {
                            "type": "string",
                            "enum": [
                              "guest.created",
                              "guest.deleted",
                              "guest.updated",
                              "listing.new",
                              "listing.updated",
                              "listing.removed",
                              "listing.calendar.updated",
                              "payments.failed",
                              "reservation.messageReceived",
                              "reservation.new",
                              "reservation.updated",
                              "reservation.messageSent",
                              "task.created",
                              "task.deleted",
                              "task.updated",
                              "reservation_update_shortlist",
                              "payments.method.received"
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update webhook",
        "description": "Update a webhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Webhook ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "example": "https://www.hookurl.com"
                  },
                  "events": {
                    "type": "array",
                    "description": "add list of event to register for the provided url",
                    "enum": [
                      "guest.created",
                      "guest.deleted",
                      "guest.updated",
                      "listing.new",
                      "listing.updated",
                      "listing.removed",
                      "listing.calendar.updated",
                      "payments.failed",
                      "reservation.messageReceived",
                      "reservation.new",
                      "reservation.updated",
                      "reservation.messageSent",
                      "task.created",
                      "task.deleted",
                      "task.updated",
                      "reservation_update_shortlist",
                      "payments.method.received"
                    ],
                    "items": {
                      "type": "string",
                      "enum": [
                        "guest.created",
                        "guest.deleted",
                        "guest.updated",
                        "listing.new",
                        "listing.updated",
                        "listing.removed",
                        "listing.calendar.updated",
                        "payments.failed",
                        "reservation.messageReceived",
                        "reservation.new",
                        "reservation.updated",
                        "reservation.messageSent",
                        "task.created",
                        "task.deleted",
                        "task.updated",
                        "reservation_update_shortlist",
                        "payments.method.received"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated webhook object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "accountId": {
                            "type": "string",
                            "example": "563e0b6a08a2710e00057b82",
                            "description": "Unique Id"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "563e0b6a08a2710e00057b82",
                            "description": "Unique Id"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "example": "https://www.hookurl.com"
                          },
                          "events": {
                            "type": "array",
                            "description": "add list of event to register for the provided url",
                            "enum": [
                              "guest.created",
                              "guest.deleted",
                              "guest.updated",
                              "listing.new",
                              "listing.updated",
                              "listing.removed",
                              "listing.calendar.updated",
                              "payments.failed",
                              "reservation.messageReceived",
                              "reservation.new",
                              "reservation.updated",
                              "reservation.messageSent",
                              "task.created",
                              "task.deleted",
                              "task.updated",
                              "reservation_update_shortlist",
                              "payments.method.received"
                            ],
                            "items": {
                              "type": "string",
                              "enum": [
                                "guest.created",
                                "guest.deleted",
                                "guest.updated",
                                "listing.new",
                                "listing.updated",
                                "listing.removed",
                                "listing.calendar.updated",
                                "payments.failed",
                                "reservation.messageReceived",
                                "reservation.new",
                                "reservation.updated",
                                "reservation.messageSent",
                                "task.created",
                                "task.deleted",
                                "task.updated",
                                "reservation_update_shortlist",
                                "payments.method.received"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete webhook",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Webhook ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/webhooks-v2/secret": {
      "get": {
        "operationId": "SvixSecretApiController_getSecret",
        "summary": "Get webhook secret",
        "description": "Get the secret for a webhook endpoint",
        "parameters": [
          {
            "name": "url",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/payment-providers/{id}/assign-listings": {
      "post": {
        "tags": [
          "Payment providers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Stripe payment provider"
          }
        ],
        "summary": "Assign listings to Stripe account",
        "requestBody": {
          "description": "Array of listing Ids to assign",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listingIds": {
                    "type": "array",
                    "description": "Array of listing ids to assign",
                    "items": {
                      "type": "string",
                      "example": "5df48488228c7b0073a5e0b9"
                    }
                  }
                },
                "required": [
                  "listingIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment provider with listings assigned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "syncedAt": {
                      "type": "string",
                      "format": "date"
                    },
                    "lastPendingPaymentDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "listings": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "pendingPaymentsCount": {
                      "type": "number"
                    },
                    "paymentMethodsCount": {
                      "type": "number"
                    },
                    "providerAccountId": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "providerType": {
                      "type": "string"
                    },
                    "connectedBy": {
                      "type": "string"
                    },
                    "accountName": {
                      "type": "string"
                    },
                    "defaultCurrency": {
                      "type": "string"
                    },
                    "statsLastUpdated": {
                      "type": "string",
                      "format": "date"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/views": {
      "get": {
        "tags": [
          "Views"
        ],
        "summary": "Retrieve all views",
        "parameters": [
          {
            "in": "query",
            "name": "section",
            "required": true,
            "description": "One of listings, reservations",
            "schema": {
              "type": "string",
              "example": "listings"
            }
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Selection of fields, separated by space. When null retrieves all object.",
            "schema": {
              "type": "string",
              "default": null,
              "example": "\"title\""
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Pagination",
            "schema": {
              "type": "number",
              "default": 25,
              "example": 25
            }
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Pagination",
            "schema": {
              "type": "number",
              "default": 0,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Views Array",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Unique id"
                      },
                      "accountId": {
                        "type": "string",
                        "description": "Id of the user owning this view"
                      },
                      "title": {
                        "type": "string",
                        "description": "Title for the view"
                      },
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "description": "Subject of the filter"
                            },
                            "operator": {
                              "type": "string",
                              "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                            },
                            "value": {
                              "type": "string",
                              "description": "Value to filter by."
                            },
                            "context": {
                              "type": "string",
                              "default": null,
                              "description": "Optional preprocessing. Options are now, createdAt, confirmedAt, canceledAt, alteredAt. When given, the date in value is relative to the context."
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "fields": {
                        "type": "string",
                        "description": "Selection of fields, separated by space"
                      },
                      "sort": {
                        "type": "string",
                        "description": "ascending sort , use - to descending sort"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "scheduledEmails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "days": {
                              "type": "array",
                              "description": "Array of numbers 0-6, number per day",
                              "example": "4 (send on Thursday)"
                            },
                            "recipient": {
                              "type": "string",
                              "description": "Emails separated by comma"
                            },
                            "hour": {
                              "type": "number",
                              "description": "when the report should be sent"
                            }
                          },
                          "required": [
                            "hour"
                          ]
                        }
                      },
                      "shares": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contactId": {
                              "type": "string",
                              "description": "Required Contact ID to share with",
                              "example": "5926bdfb1bfe871000d0a745"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Views"
        ],
        "summary": "Create a view",
        "requestBody": {
          "description": "Any full address will do, we advise using the full property (the data will be parsed to the rest of the fields). PMS is automatically ON for this listing.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Example Listing"
                  },
                  "section": {
                    "type": "string",
                    "example": "listings",
                    "description": "listings, reservation"
                  }
                },
                "required": [
                  "title",
                  "section"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "View",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Unique id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Id of the user owning this view"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title for the view"
                    },
                    "filters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "description": "Subject of the filter"
                          },
                          "operator": {
                            "type": "string",
                            "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value to filter by."
                          },
                          "context": {
                            "type": "string",
                            "default": null,
                            "description": "Optional preprocessing. Options are now, createdAt, confirmedAt, canceledAt, alteredAt. When given, the date in value is relative to the context."
                          }
                        },
                        "required": [
                          "field",
                          "operator",
                          "value"
                        ]
                      }
                    },
                    "fields": {
                      "type": "string",
                      "description": "Selection of fields, separated by space"
                    },
                    "sort": {
                      "type": "string",
                      "description": "ascending sort , use - to descending sort"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "scheduledEmails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "days": {
                            "type": "array",
                            "description": "Array of numbers 0-6, number per day",
                            "example": "4 (send on Thursday)"
                          },
                          "recipient": {
                            "type": "string",
                            "description": "Emails separated by comma"
                          },
                          "hour": {
                            "type": "number",
                            "description": "when the report should be sent"
                          }
                        },
                        "required": [
                          "hour"
                        ]
                      }
                    },
                    "shares": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contactId": {
                            "type": "string",
                            "description": "Required Contact ID to share with",
                            "example": "5926bdfb1bfe871000d0a745"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/views/{id}": {
      "get": {
        "tags": [
          "Views"
        ],
        "summary": "Retrieve a view",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "View ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Selection of fields, separated by space",
            "required": false,
            "example": "title address",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "View object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Unique id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Id of the user owning this view"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title for the view"
                    },
                    "filters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "description": "Subject of the filter"
                          },
                          "operator": {
                            "type": "string",
                            "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value to filter by."
                          },
                          "context": {
                            "type": "string",
                            "default": null,
                            "description": "Optional preprocessing. Options are now, createdAt, confirmedAt, canceledAt, alteredAt. When given, the date in value is relative to the context."
                          }
                        },
                        "required": [
                          "field",
                          "operator",
                          "value"
                        ]
                      }
                    },
                    "fields": {
                      "type": "string",
                      "description": "Selection of fields, separated by space"
                    },
                    "sort": {
                      "type": "string",
                      "description": "ascending sort , use - to descending sort"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "scheduledEmails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "days": {
                            "type": "array",
                            "description": "Array of numbers 0-6, number per day",
                            "example": "4 (send on Thursday)"
                          },
                          "recipient": {
                            "type": "string",
                            "description": "Emails separated by comma"
                          },
                          "hour": {
                            "type": "number",
                            "description": "when the report should be sent"
                          }
                        },
                        "required": [
                          "hour"
                        ]
                      }
                    },
                    "shares": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contactId": {
                            "type": "string",
                            "description": "Required Contact ID to share with",
                            "example": "5926bdfb1bfe871000d0a745"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Views"
        ],
        "summary": "Update a view",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "View ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Views new values",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Unique id"
                  },
                  "accountId": {
                    "type": "string",
                    "description": "Id of the user owning this view"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title for the view"
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "description": "Subject of the filter"
                        },
                        "operator": {
                          "type": "string",
                          "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value to filter by."
                        },
                        "context": {
                          "type": "string",
                          "default": null,
                          "description": "Optional preprocessing. Options are now, createdAt, confirmedAt, canceledAt, alteredAt. When given, the date in value is relative to the context."
                        }
                      },
                      "required": [
                        "field",
                        "operator",
                        "value"
                      ]
                    }
                  },
                  "fields": {
                    "type": "string",
                    "description": "Selection of fields, separated by space"
                  },
                  "sort": {
                    "type": "string",
                    "description": "ascending sort , use - to descending sort"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "updatedAt": {
                    "type": "string"
                  },
                  "scheduledEmails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "days": {
                          "type": "array",
                          "description": "Array of numbers 0-6, number per day",
                          "example": "4 (send on Thursday)"
                        },
                        "recipient": {
                          "type": "string",
                          "description": "Emails separated by comma"
                        },
                        "hour": {
                          "type": "number",
                          "description": "when the report should be sent"
                        }
                      },
                      "required": [
                        "hour"
                      ]
                    }
                  },
                  "shares": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "contactId": {
                          "type": "string",
                          "description": "Required Contact ID to share with",
                          "example": "5926bdfb1bfe871000d0a745"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retrieve the updated listing, selection of fields that were sent in body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Unique id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Id of the user owning this view"
                    },
                    "title": {
                      "type": "string",
                      "description": "Title for the view"
                    },
                    "filters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "description": "Subject of the filter"
                          },
                          "operator": {
                            "type": "string",
                            "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, $notcontains, $gt, $lt, $between"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value to filter by."
                          },
                          "context": {
                            "type": "string",
                            "default": null,
                            "description": "Optional preprocessing. Options are now, createdAt, confirmedAt, canceledAt, alteredAt. When given, the date in value is relative to the context."
                          }
                        },
                        "required": [
                          "field",
                          "operator",
                          "value"
                        ]
                      }
                    },
                    "fields": {
                      "type": "string",
                      "description": "Selection of fields, separated by space"
                    },
                    "sort": {
                      "type": "string",
                      "description": "ascending sort , use - to descending sort"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "scheduledEmails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "days": {
                            "type": "array",
                            "description": "Array of numbers 0-6, number per day",
                            "example": "4 (send on Thursday)"
                          },
                          "recipient": {
                            "type": "string",
                            "description": "Emails separated by comma"
                          },
                          "hour": {
                            "type": "number",
                            "description": "when the report should be sent"
                          }
                        },
                        "required": [
                          "hour"
                        ]
                      }
                    },
                    "shares": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contactId": {
                            "type": "string",
                            "description": "Required Contact ID to share with",
                            "example": "5926bdfb1bfe871000d0a745"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Views"
        ],
        "summary": "Delete a view",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "View ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/owners/{ownerId}/documents": {
      "get": {
        "tags": [
          "Owners Documents"
        ],
        "summary": "Get list of owner documents",
        "description": "Get list of owner documents",
        "parameters": [
          {
            "name": "ownerId",
            "required": true,
            "in": "path",
            "description": "Owner id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "description": "Pagination start index",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit amount of results per page",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Ordered list of field names to sort by, separated by spaces",
            "example": "fullName",
            "schema": {
              "default": "-_id",
              "type": "string"
            }
          },
          {
            "name": "includeDeleted",
            "required": false,
            "in": "query",
            "description": "Include deleted documents, true/false",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of owner documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "number",
                      "description": "Pagination start index"
                    },
                    "limit": {
                      "type": "number",
                      "description": "Pagination limit per page"
                    },
                    "count": {
                      "type": "number",
                      "description": "Pagination results count after filtering"
                    },
                    "totalCount": {
                      "type": "number",
                      "description": "Pagination results count without filtering"
                    },
                    "sort": {
                      "type": "string",
                      "description": "Pagination sort field"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "accountId": {
                            "type": "string"
                          },
                          "ownerId": {
                            "type": "string"
                          },
                          "originalFileName": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "type": {
                            "enum": [
                              "DOCUMENT",
                              "CONTRACT"
                            ],
                            "type": "string",
                            "example": "DOCUMENT"
                          },
                          "isShared": {
                            "type": "boolean",
                            "description": "Document is visible to owner in Owners Portal"
                          },
                          "startDate": {
                            "type": "string",
                            "description": "Document effective date in YYYY-MM-DD format"
                          },
                          "endDate": {
                            "type": "string",
                            "description": "Document expiration date in YYYY-MM-DD format"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedAt": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "_id",
                          "accountId",
                          "ownerId",
                          "originalFileName",
                          "name",
                          "type",
                          "isShared",
                          "createdAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "skip",
                    "limit",
                    "count",
                    "totalCount",
                    "sort",
                    "results"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Owners Documents"
        ],
        "summary": "Create an owner document",
        "description": "Create an owner document",
        "parameters": [
          {
            "name": "ownerId",
            "required": true,
            "in": "path",
            "description": "Owner id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Document in pdf format, maximum size 5 MB",
                    "format": "binary"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "default": "DOCUMENT",
                    "description": "Type of the document, defaults to DOCUMENT",
                    "enum": [
                      "DOCUMENT",
                      "CONTRACT"
                    ]
                  },
                  "isShared": {
                    "type": "boolean"
                  },
                  "startDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Date in YYYY-MM-DD format"
                  },
                  "endDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Date in YYYY-MM-DD format"
                  }
                },
                "required": [
                  "file",
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created owner document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "originalFileName": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "DOCUMENT",
                        "CONTRACT"
                      ],
                      "type": "string",
                      "example": "DOCUMENT"
                    },
                    "isShared": {
                      "type": "boolean",
                      "description": "Document is visible to owner in Owners Portal"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "Document effective date in YYYY-MM-DD format"
                    },
                    "endDate": {
                      "type": "string",
                      "description": "Document expiration date in YYYY-MM-DD format"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "accountId",
                    "ownerId",
                    "originalFileName",
                    "name",
                    "type",
                    "isShared",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          },
          "413": {
            "description": ""
          },
          "415": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/owners/{ownerId}/documents/{documentId}": {
      "get": {
        "tags": [
          "Owners Documents"
        ],
        "summary": "Get owner document",
        "description": "Get owner document",
        "parameters": [
          {
            "name": "ownerId",
            "required": true,
            "in": "path",
            "description": "Owner id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "required": true,
            "in": "path",
            "description": "Document id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Owner document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "originalFileName": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "DOCUMENT",
                        "CONTRACT"
                      ],
                      "type": "string",
                      "example": "DOCUMENT"
                    },
                    "isShared": {
                      "type": "boolean",
                      "description": "Document is visible to owner in Owners Portal"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "Document effective date in YYYY-MM-DD format"
                    },
                    "endDate": {
                      "type": "string",
                      "description": "Document expiration date in YYYY-MM-DD format"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "accountId",
                    "ownerId",
                    "originalFileName",
                    "name",
                    "type",
                    "isShared",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Not found"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Owners Documents"
        ],
        "summary": "Update owner document",
        "description": "Update owner document (supports partial update)",
        "parameters": [
          {
            "name": "ownerId",
            "required": true,
            "in": "path",
            "description": "Owner id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "required": true,
            "in": "path",
            "description": "Document id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "DOCUMENT",
                      "CONTRACT"
                    ]
                  },
                  "isShared": {
                    "type": "boolean"
                  },
                  "startDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Date in YYYY-MM-DD format"
                  },
                  "endDate": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Date in YYYY-MM-DD format"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "originalFileName": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "DOCUMENT",
                        "CONTRACT"
                      ],
                      "type": "string",
                      "example": "DOCUMENT"
                    },
                    "isShared": {
                      "type": "boolean",
                      "description": "Document is visible to owner in Owners Portal"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "Document effective date in YYYY-MM-DD format"
                    },
                    "endDate": {
                      "type": "string",
                      "description": "Document expiration date in YYYY-MM-DD format"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "accountId",
                    "ownerId",
                    "originalFileName",
                    "name",
                    "type",
                    "isShared",
                    "createdAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Owners Documents"
        ],
        "summary": "Delete owner document",
        "description": "Delete owner document",
        "parameters": [
          {
            "name": "ownerId",
            "required": true,
            "in": "path",
            "description": "Owner id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "required": true,
            "in": "path",
            "description": "Document id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          }
        }
      }
    },
    "/owners/{ownerId}/documents/{documentId}/download": {
      "get": {
        "tags": [
          "Owners Documents"
        ],
        "summary": "Download owner document",
        "description": "Download owner document",
        "parameters": [
          {
            "name": "ownerId",
            "required": true,
            "in": "path",
            "description": "Owner id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "required": true,
            "in": "path",
            "description": "Document id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Owner document",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Not found"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/owners-reservations": {
      "get": {
        "tags": [
          "Owners Reservations"
        ],
        "summary": "List owners reservations",
        "description": "Retrieve a list of all owner reservations. This endpoint is filterable.",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "Subject of the filter",
                    "properties": {
                      "confirmedAt": {
                        "type": "string",
                        "description": "YYYY-MM-DD"
                      },
                      "checkIn": {
                        "type": "string",
                        "description": "YYYY-MM-DD"
                      },
                      "checkOut": {
                        "type": "string",
                        "description": "YYYY-MM-DD"
                      },
                      "customFields": {
                        "type": "string",
                        "description": "customFields.fieldName"
                      },
                      "owner": {
                        "type": "string",
                        "description": "owner.fieldName",
                        "example": "owner._id"
                      },
                      "listing": {
                        "type": "string",
                        "description": "listing.fieldName",
                        "example": "listing.nickname"
                      }
                    }
                  },
                  "operator": {
                    "type": "string",
                    "description": "Enhanced MongoDB comparison operator: $eq, $not, $contains, etc",
                    "example": "$gt"
                  },
                  "value": {
                    "type": "integer",
                    "description": "Value to filter by",
                    "example": 0
                  }
                }
              },
              "required": [
                "field",
                "operator",
                "value"
              ]
            },
            "description": "Array of filters to query by"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "String of fields, separated by space. \n\n  Allowed fields are \"account\", \"listing\" and \"owner\" fields with its according subkeys \n\n Please note: Allowed list of keys depend on user role and permissions",
            "example": "checkIn checkOut owner.fullName listing.title"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "ascending sort, use - to descending sort. Default: `_id`",
            "example": "checkIn"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Limit for list of records. Default value: `25`, max: `100`",
            "example": "25"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "Skip number of records. In case nothing provided so nothing will be skipped",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reservation object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "status": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "checkIn": {
                      "type": "string"
                    },
                    "checkOut": {
                      "type": "string"
                    },
                    "note": {
                      "type": "string"
                    },
                    "__v": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "checkInDateLocalized": {
                      "type": "string"
                    },
                    "checkOutDateLocalized": {
                      "type": "string"
                    },
                    "plannedDeparture": {
                      "type": "string"
                    },
                    "plannedArrival": {
                      "type": "string"
                    },
                    "lastUpdatedAt": {
                      "type": "string"
                    },
                    "listing": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "String (ObjectId)",
                          "example": "59ac245d27cb310f0017afe3"
                        },
                        "accountId": {
                          "type": "string",
                          "description": "String (ObjectId)",
                          "example": "59ac245d27cb310f0017afe3"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2017-09-03T15:48:45.070Z"
                        },
                        "integrations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "5958c7e5884e961000817799"
                              },
                              "airbnb2": {
                                "type": "object",
                                "properties": {
                                  "credentials": {
                                    "type": "object",
                                    "properties": {
                                      "code": {
                                        "type": "string"
                                      },
                                      "expiresAt": {
                                        "type": "integer"
                                      },
                                      "accessToken": {
                                        "type": "string"
                                      },
                                      "refreshToken": {
                                        "type": "string"
                                      },
                                      "lastForceRefresh": {
                                        "type": "string",
                                        "description": "date"
                                      }
                                    }
                                  },
                                  "forwardEmails": {
                                    "type": "object",
                                    "properties": {
                                      "all": {
                                        "type": "boolean",
                                        "default": true
                                      },
                                      "emails": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "description": "date"
                                  }
                                },
                                "description": "Only if platform is airbnb",
                                "example": {
                                  "ignored": {
                                    "reservations": [],
                                    "listings": []
                                  },
                                  "emailsFromSupport": []
                                }
                              },
                              "forwardEmails": {
                                "type": "object",
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                    "default": true
                                  },
                                  "emails": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "active": {
                                "type": "boolean",
                                "description": "Status of connection"
                              },
                              "platform": {
                                "type": "string"
                              },
                              "listings": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Listing details"
                                }
                              },
                              "complexes": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Complex details"
                                }
                              },
                              "nickname": {
                                "type": "string",
                                "example": "naama"
                              },
                              "channelId": {
                                "type": "string"
                              },
                              "activatedAt": {
                                "type": "string",
                                "description": "Date"
                              },
                              "disconnectedAt": {
                                "type": "string",
                                "description": "Date"
                              },
                              "proxyEmail": {
                                "type": "string"
                              },
                              "incomingEmail": {
                                "type": "string"
                              },
                              "externalAccountId": {
                                "type": "string"
                              },
                              "id": {
                                "type": "integer",
                                "example": "naama@user.guesty.com",
                                "description": "External ID"
                              },
                              "companyName": {
                                "type": "string"
                              },
                              "fetchRequests": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "fetchAllListings": {
                                      "type": "boolean"
                                    },
                                    "externalListingIds": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "NOT_STARTED",
                                        "IN_PROGRESS",
                                        "COMPLETED",
                                        "FAILED",
                                        "TIMEOUT"
                                      ]
                                    },
                                    "createTime": {
                                      "type": "string",
                                      "description": "Date"
                                    },
                                    "updateTime": {
                                      "type": "string",
                                      "description": "Date"
                                    },
                                    "finishedTime": {
                                      "type": "string",
                                      "description": "Date"
                                    }
                                  }
                                }
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "NOT_CONNECTED",
                                  "CONNECTING",
                                  "CONNECTED",
                                  "FAILED",
                                  "TIMEOUT",
                                  "DISCONNECTED",
                                  "PENDING"
                                ]
                              },
                              "migration": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "IN_PROGRESS",
                                      "COMPLETED",
                                      "FAILED"
                                    ]
                                  },
                                  "createTime": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "updateTime": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "finishedTime": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "steps": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Step details"
                                    }
                                  },
                                  "discrepancyStepExecuted": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "discrepancyResolution": {
                                    "type": "string",
                                    "enum": [
                                      "GUESTY",
                                      "AIRBNB"
                                    ]
                                  },
                                  "listingQuantityDiscrepancyStepExecuted": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "error": {
                                    "type": "object",
                                    "properties": {
                                      "at": {
                                        "type": "string",
                                        "description": "Date"
                                      },
                                      "code": {
                                        "type": "string"
                                      },
                                      "message": {
                                        "type": "string"
                                      },
                                      "raw": {
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "notes": {
                                    "type": "string"
                                  },
                                  "isRollingBack": {
                                    "type": "boolean",
                                    "default": false
                                  }
                                }
                              },
                              "userId": {
                                "type": "string",
                                "example": "563e0b6a08a2710e00057b85"
                              },
                              "accountId": {
                                "type": "string",
                                "description": "Owner",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "tripAdvisor": {
                                "type": "object",
                                "description": "TripAdvisor details"
                              },
                              "homeaway2": {
                                "type": "object",
                                "description": "Homeaway details"
                              },
                              "bookingCom": {
                                "type": "object",
                                "properties": {
                                  "legalEntityId": {
                                    "type": "string"
                                  }
                                },
                                "description": "BookingCom details"
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "Date"
                              },
                              "missingStep": {
                                "type": "string"
                              },
                              "steps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "COMPLETED",
                                        "IN_PROGRESS"
                                      ]
                                    },
                                    "createTime": {
                                      "type": "string",
                                      "description": "Date"
                                    },
                                    "updateTime": {
                                      "type": "string",
                                      "description": "Date"
                                    }
                                  }
                                }
                              },
                              "newIntegrationBackup": {
                                "type": "object"
                              },
                              "threadIdsMigrated": {
                                "type": "boolean"
                              },
                              "isDeleted": {
                                "type": "boolean"
                              },
                              "deletedAt": {
                                "type": "string",
                                "description": "Date"
                              }
                            }
                          }
                        },
                        "isVirtual": {
                          "type": "boolean"
                        },
                        "nickname": {
                          "type": "string"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isListed": {
                          "type": "boolean"
                        },
                        "title": {
                          "type": "string"
                        },
                        "propertyType": {
                          "type": "string"
                        },
                        "roomType": {
                          "type": "string"
                        },
                        "bedType": {
                          "type": "string"
                        },
                        "accommodates": {
                          "type": "number"
                        },
                        "bedrooms": {
                          "type": "number"
                        },
                        "areaSquareFeet": {
                          "type": "number"
                        },
                        "address": {
                          "type": "object",
                          "properties": {
                            "full": {
                              "type": "string",
                              "description": "full address",
                              "example": "Kaplan St 2, Ramat Gan, Israel"
                            },
                            "lng": {
                              "type": "number",
                              "example": 34.8202173
                            },
                            "lat": {
                              "type": "number",
                              "example": 32.0695525
                            },
                            "street": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        },
                        "publishedAddress": {
                          "type": "object",
                          "properties": {
                            "full": {
                              "type": "string",
                              "description": "full address",
                              "example": "Kaplan St 2, Ramat Gan, Israel"
                            },
                            "lng": {
                              "type": "number",
                              "example": 34.8202173
                            },
                            "lat": {
                              "type": "number",
                              "example": 32.0695525
                            },
                            "street": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        },
                        "timezone": {
                          "type": "string"
                        },
                        "defaultCheckInTime": {
                          "type": "string"
                        },
                        "defaultCheckOutTime": {
                          "type": "string"
                        },
                        "cleaning": {
                          "type": "object",
                          "properties": {
                            "defaultCleaningTime": {
                              "type": "string"
                            },
                            "instructions": {
                              "type": "string"
                            }
                          }
                        },
                        "cleaningStatus": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "enum": [
                                "clean",
                                "waitingForInspection",
                                "dirty",
                                "unknown"
                              ]
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2019-08-24T14:15:22Z"
                            }
                          }
                        },
                        "picture": {
                          "type": "object",
                          "properties": {
                            "regular": {
                              "type": "string"
                            },
                            "thumbnail": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                            },
                            "large": {
                              "type": "string"
                            },
                            "caption": {
                              "type": "string"
                            },
                            "height": {
                              "type": "number",
                              "example": 756
                            },
                            "original": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                            },
                            "size": {
                              "type": "number",
                              "example": 39516
                            },
                            "width": {
                              "type": "number",
                              "example": 756
                            }
                          }
                        },
                        "pictures": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "regular": {
                                "type": "string"
                              },
                              "thumbnail": {
                                "type": "string",
                                "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                              },
                              "large": {
                                "type": "string"
                              },
                              "caption": {
                                "type": "string"
                              },
                              "height": {
                                "type": "number",
                                "example": 756
                              },
                              "original": {
                                "type": "string",
                                "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                              },
                              "size": {
                                "type": "number",
                                "example": 39516
                              },
                              "width": {
                                "type": "number",
                                "example": 756
                              }
                            }
                          }
                        },
                        "amenities": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "amenitiesNotIncluded": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "terms": {
                          "type": "object",
                          "properties": {
                            "minNights": {
                              "type": "number"
                            },
                            "maxNights": {
                              "type": "number"
                            },
                            "cancellation": {
                              "type": "string"
                            }
                          }
                        },
                        "prices": {
                          "type": "object",
                          "properties": {
                            "guestsIncludedInRegularFee": {
                              "type": "number"
                            },
                            "extraPersonFee": {
                              "type": "number"
                            },
                            "basePrice": {
                              "type": "number"
                            },
                            "basePriceUSD": {
                              "type": "number"
                            },
                            "monthlyPriceFactor": {
                              "type": "number"
                            },
                            "weeklyPriceFactor": {
                              "type": "number"
                            },
                            "weekendBasePrice": {
                              "type": "number"
                            },
                            "securityDepositFee": {
                              "type": "number"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "cleaningFee": {
                              "type": "number"
                            }
                          }
                        },
                        "netIncomeFormula": {
                          "type": "string"
                        },
                        "commissionFormula": {
                          "type": "string"
                        },
                        "commissionTaxPrecentage": {
                          "type": "string"
                        },
                        "pms": {
                          "type": "object",
                          "properties": {
                            "active": {
                              "type": "boolean"
                            },
                            "automation": {
                              "type": "object",
                              "properties": {
                                "autoList": {
                                  "type": "object",
                                  "properties": {
                                    "active": {
                                      "type": "boolean"
                                    },
                                    "config": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "inbox": {
                              "type": "object",
                              "properties": {
                                "customSignature": {
                                  "type": "string"
                                }
                              }
                            },
                            "cleaningStatus": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "enum": [
                                    "clean",
                                    "waitingForInspection",
                                    "dirty",
                                    "unknown"
                                  ]
                                },
                                "updatedAt": {
                                  "type": "string",
                                  "example": "2019-08-24T14:15:22Z"
                                }
                              }
                            },
                            "paymentProcessing": {
                              "type": "object",
                              "properties": {
                                "active": {
                                  "type": "boolean"
                                },
                                "paymentProviders": {
                                  "type": "object",
                                  "properties": {
                                    "stripe": {
                                      "type": "object",
                                      "properties": {
                                        "active": {
                                          "type": "boolean"
                                        },
                                        "status": {
                                          "type": "string"
                                        },
                                        "accountName": {
                                          "type": "string"
                                        },
                                        "defaultCurrency": {
                                          "type": "string"
                                        },
                                        "syncedAt": {
                                          "type": "string",
                                          "format": "date"
                                        },
                                        "payload": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "token_type": {
                                              "type": "string"
                                            },
                                            "stripe_publishable_key": {
                                              "type": "string"
                                            },
                                            "stripe_user_id": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "autoPayments": {
                              "type": "object",
                              "properties": {
                                "policy": {
                                  "type": "array"
                                }
                              }
                            }
                          }
                        },
                        "receptionistsService": {
                          "title": "object",
                          "properties": {
                            "receptionDesk": {
                              "type": "object",
                              "properties": {
                                "ittt": {
                                  "type": "array",
                                  "items": {}
                                }
                              }
                            },
                            "screening": {
                              "type": "object",
                              "properties": {
                                "checklist": {
                                  "type": "array",
                                  "items": {}
                                }
                              }
                            },
                            "contactPersonUserId": {
                              "type": "string"
                            }
                          }
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "customFields": {
                          "type": "object"
                        },
                        "calendarRules": {
                          "type": "object"
                        },
                        "publicDescription": {
                          "type": "object"
                        },
                        "privateDescription": {
                          "type": "object"
                        },
                        "markups": {
                          "type": "object"
                        }
                      }
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "ownersPortalSettings": {
                          "type": "object",
                          "description": "The OPSettings object",
                          "properties": {
                            "bookedNights": {
                              "type": "boolean"
                            },
                            "revenue": {
                              "type": "boolean"
                            },
                            "accommodationFare": {
                              "type": "boolean"
                            },
                            "guestsReports": {
                              "type": "boolean"
                            },
                            "occupancy": {
                              "type": "boolean"
                            },
                            "avgNightlyRate": {
                              "type": "boolean"
                            },
                            "revPal": {
                              "type": "boolean"
                            },
                            "hostPayout": {
                              "type": "boolean"
                            }
                          },
                          "example": {
                            "ownersPortalSettings": {
                              "bookedNights": true,
                              "revenue": true
                            }
                          }
                        },
                        "listings": {
                          "type": "array",
                          "description": "Listings Id",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "5e32fc021690ba0026f6f778",
                            "5e32fc021690d15417543012",
                            "5e32fc021690d15417543013"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "locale": {
                          "type": "string",
                          "description": "Localization",
                          "example": "en-US"
                        },
                        "active": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "allowReservations": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "showReservationTooltips": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "vatOrTaxId": {
                          "type": "string"
                        },
                        "workingCapital": {
                          "description": "Deprecated. Use new [API](/reference/ownerscontroller_update)",
                          "type": "number",
                          "example": 0
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Elad"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Kremer"
                        },
                        "fullName": {
                          "type": "string",
                          "example": "Elad Kremer"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@guesty.com",
                          "description": "Primary email address"
                        },
                        "address": {
                          "type": "string",
                          "example": "test address"
                        },
                        "phone": {
                          "type": "string",
                          "example": "15417543010",
                          "description": "Primary phone number"
                        },
                        "picture": {
                          "type": "object",
                          "properties": {
                            "thumbnail": {
                              "type": "string"
                            },
                            "regular": {
                              "type": "string"
                            },
                            "large": {
                              "type": "string"
                            }
                          },
                          "example": {
                            "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                            "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "example": "this is a note"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "date ISO",
                          "example": "2020-03-13T12:17:06.758Z"
                        }
                      }
                    },
                    "nightsCount": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/owners-reservations/{id}": {
      "get": {
        "tags": [
          "Owners Reservations"
        ],
        "summary": "Retrieve an owner reservation",
        "description": "This allows you to obtain details about a specific owner's reservation.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation Id",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reservation response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "status": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "checkIn": {
                      "type": "string"
                    },
                    "checkOut": {
                      "type": "string"
                    },
                    "note": {
                      "type": "string"
                    },
                    "__v": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "checkInDateLocalized": {
                      "type": "string"
                    },
                    "checkOutDateLocalized": {
                      "type": "string"
                    },
                    "plannedDeparture": {
                      "type": "string"
                    },
                    "plannedArrival": {
                      "type": "string"
                    },
                    "lastUpdatedAt": {
                      "type": "string"
                    },
                    "listing": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "String (ObjectId)",
                          "example": "59ac245d27cb310f0017afe3"
                        },
                        "accountId": {
                          "type": "string",
                          "description": "String (ObjectId)",
                          "example": "59ac245d27cb310f0017afe3"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2017-09-03T15:48:45.070Z"
                        },
                        "integrations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "5958c7e5884e961000817799"
                              },
                              "airbnb2": {
                                "type": "object",
                                "properties": {
                                  "credentials": {
                                    "type": "object",
                                    "properties": {
                                      "code": {
                                        "type": "string"
                                      },
                                      "expiresAt": {
                                        "type": "integer"
                                      },
                                      "accessToken": {
                                        "type": "string"
                                      },
                                      "refreshToken": {
                                        "type": "string"
                                      },
                                      "lastForceRefresh": {
                                        "type": "string",
                                        "description": "date"
                                      }
                                    }
                                  },
                                  "forwardEmails": {
                                    "type": "object",
                                    "properties": {
                                      "all": {
                                        "type": "boolean",
                                        "default": true
                                      },
                                      "emails": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "description": "date"
                                  }
                                },
                                "description": "Only if platform is airbnb",
                                "example": {
                                  "ignored": {
                                    "reservations": [],
                                    "listings": []
                                  },
                                  "emailsFromSupport": []
                                }
                              },
                              "forwardEmails": {
                                "type": "object",
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                    "default": true
                                  },
                                  "emails": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "active": {
                                "type": "boolean",
                                "description": "Status of connection"
                              },
                              "platform": {
                                "type": "string"
                              },
                              "listings": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Listing details"
                                }
                              },
                              "complexes": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Complex details"
                                }
                              },
                              "nickname": {
                                "type": "string",
                                "example": "naama"
                              },
                              "channelId": {
                                "type": "string"
                              },
                              "activatedAt": {
                                "type": "string",
                                "description": "Date"
                              },
                              "disconnectedAt": {
                                "type": "string",
                                "description": "Date"
                              },
                              "proxyEmail": {
                                "type": "string"
                              },
                              "incomingEmail": {
                                "type": "string"
                              },
                              "externalAccountId": {
                                "type": "string"
                              },
                              "id": {
                                "type": "integer",
                                "example": "naama@user.guesty.com",
                                "description": "External ID"
                              },
                              "companyName": {
                                "type": "string"
                              },
                              "fetchRequests": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "fetchAllListings": {
                                      "type": "boolean"
                                    },
                                    "externalListingIds": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "NOT_STARTED",
                                        "IN_PROGRESS",
                                        "COMPLETED",
                                        "FAILED",
                                        "TIMEOUT"
                                      ]
                                    },
                                    "createTime": {
                                      "type": "string",
                                      "description": "Date"
                                    },
                                    "updateTime": {
                                      "type": "string",
                                      "description": "Date"
                                    },
                                    "finishedTime": {
                                      "type": "string",
                                      "description": "Date"
                                    }
                                  }
                                }
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "NOT_CONNECTED",
                                  "CONNECTING",
                                  "CONNECTED",
                                  "FAILED",
                                  "TIMEOUT",
                                  "DISCONNECTED",
                                  "PENDING"
                                ]
                              },
                              "migration": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "IN_PROGRESS",
                                      "COMPLETED",
                                      "FAILED"
                                    ]
                                  },
                                  "createTime": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "updateTime": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "finishedTime": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "steps": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Step details"
                                    }
                                  },
                                  "discrepancyStepExecuted": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "discrepancyResolution": {
                                    "type": "string",
                                    "enum": [
                                      "GUESTY",
                                      "AIRBNB"
                                    ]
                                  },
                                  "listingQuantityDiscrepancyStepExecuted": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "error": {
                                    "type": "object",
                                    "properties": {
                                      "at": {
                                        "type": "string",
                                        "description": "Date"
                                      },
                                      "code": {
                                        "type": "string"
                                      },
                                      "message": {
                                        "type": "string"
                                      },
                                      "raw": {
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "notes": {
                                    "type": "string"
                                  },
                                  "isRollingBack": {
                                    "type": "boolean",
                                    "default": false
                                  }
                                }
                              },
                              "userId": {
                                "type": "string",
                                "example": "563e0b6a08a2710e00057b85"
                              },
                              "accountId": {
                                "type": "string",
                                "description": "Owner",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "tripAdvisor": {
                                "type": "object",
                                "description": "TripAdvisor details"
                              },
                              "homeaway2": {
                                "type": "object",
                                "description": "Homeaway details"
                              },
                              "bookingCom": {
                                "type": "object",
                                "properties": {
                                  "legalEntityId": {
                                    "type": "string"
                                  }
                                },
                                "description": "BookingCom details"
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "Date"
                              },
                              "missingStep": {
                                "type": "string"
                              },
                              "steps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "COMPLETED",
                                        "IN_PROGRESS"
                                      ]
                                    },
                                    "createTime": {
                                      "type": "string",
                                      "description": "Date"
                                    },
                                    "updateTime": {
                                      "type": "string",
                                      "description": "Date"
                                    }
                                  }
                                }
                              },
                              "newIntegrationBackup": {
                                "type": "object"
                              },
                              "threadIdsMigrated": {
                                "type": "boolean"
                              },
                              "isDeleted": {
                                "type": "boolean"
                              },
                              "deletedAt": {
                                "type": "string",
                                "description": "Date"
                              }
                            }
                          }
                        },
                        "isVirtual": {
                          "type": "boolean"
                        },
                        "nickname": {
                          "type": "string"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isListed": {
                          "type": "boolean"
                        },
                        "title": {
                          "type": "string"
                        },
                        "propertyType": {
                          "type": "string"
                        },
                        "roomType": {
                          "type": "string"
                        },
                        "bedType": {
                          "type": "string"
                        },
                        "accommodates": {
                          "type": "number"
                        },
                        "bedrooms": {
                          "type": "number"
                        },
                        "areaSquareFeet": {
                          "type": "number"
                        },
                        "address": {
                          "type": "object",
                          "properties": {
                            "full": {
                              "type": "string",
                              "description": "full address",
                              "example": "Kaplan St 2, Ramat Gan, Israel"
                            },
                            "lng": {
                              "type": "number",
                              "example": 34.8202173
                            },
                            "lat": {
                              "type": "number",
                              "example": 32.0695525
                            },
                            "street": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        },
                        "publishedAddress": {
                          "type": "object",
                          "properties": {
                            "full": {
                              "type": "string",
                              "description": "full address",
                              "example": "Kaplan St 2, Ramat Gan, Israel"
                            },
                            "lng": {
                              "type": "number",
                              "example": 34.8202173
                            },
                            "lat": {
                              "type": "number",
                              "example": 32.0695525
                            },
                            "street": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        },
                        "timezone": {
                          "type": "string"
                        },
                        "defaultCheckInTime": {
                          "type": "string"
                        },
                        "defaultCheckOutTime": {
                          "type": "string"
                        },
                        "cleaning": {
                          "type": "object",
                          "properties": {
                            "defaultCleaningTime": {
                              "type": "string"
                            },
                            "instructions": {
                              "type": "string"
                            }
                          }
                        },
                        "cleaningStatus": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "enum": [
                                "clean",
                                "waitingForInspection",
                                "dirty",
                                "unknown"
                              ]
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2019-08-24T14:15:22Z"
                            }
                          }
                        },
                        "picture": {
                          "type": "object",
                          "properties": {
                            "regular": {
                              "type": "string"
                            },
                            "thumbnail": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                            },
                            "large": {
                              "type": "string"
                            },
                            "caption": {
                              "type": "string"
                            },
                            "height": {
                              "type": "number",
                              "example": 756
                            },
                            "original": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                            },
                            "size": {
                              "type": "number",
                              "example": 39516
                            },
                            "width": {
                              "type": "number",
                              "example": 756
                            }
                          }
                        },
                        "pictures": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "regular": {
                                "type": "string"
                              },
                              "thumbnail": {
                                "type": "string",
                                "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                              },
                              "large": {
                                "type": "string"
                              },
                              "caption": {
                                "type": "string"
                              },
                              "height": {
                                "type": "number",
                                "example": 756
                              },
                              "original": {
                                "type": "string",
                                "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                              },
                              "size": {
                                "type": "number",
                                "example": 39516
                              },
                              "width": {
                                "type": "number",
                                "example": 756
                              }
                            }
                          }
                        },
                        "amenities": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "amenitiesNotIncluded": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "terms": {
                          "type": "object",
                          "properties": {
                            "minNights": {
                              "type": "number"
                            },
                            "maxNights": {
                              "type": "number"
                            },
                            "cancellation": {
                              "type": "string"
                            }
                          }
                        },
                        "prices": {
                          "type": "object",
                          "properties": {
                            "guestsIncludedInRegularFee": {
                              "type": "number"
                            },
                            "extraPersonFee": {
                              "type": "number"
                            },
                            "basePrice": {
                              "type": "number"
                            },
                            "basePriceUSD": {
                              "type": "number"
                            },
                            "monthlyPriceFactor": {
                              "type": "number"
                            },
                            "weeklyPriceFactor": {
                              "type": "number"
                            },
                            "weekendBasePrice": {
                              "type": "number"
                            },
                            "securityDepositFee": {
                              "type": "number"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "cleaningFee": {
                              "type": "number"
                            }
                          }
                        },
                        "netIncomeFormula": {
                          "type": "string"
                        },
                        "commissionFormula": {
                          "type": "string"
                        },
                        "commissionTaxPrecentage": {
                          "type": "string"
                        },
                        "pms": {
                          "type": "object",
                          "properties": {
                            "active": {
                              "type": "boolean"
                            },
                            "automation": {
                              "type": "object",
                              "properties": {
                                "autoList": {
                                  "type": "object",
                                  "properties": {
                                    "active": {
                                      "type": "boolean"
                                    },
                                    "config": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "inbox": {
                              "type": "object",
                              "properties": {
                                "customSignature": {
                                  "type": "string"
                                }
                              }
                            },
                            "cleaningStatus": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "enum": [
                                    "clean",
                                    "waitingForInspection",
                                    "dirty",
                                    "unknown"
                                  ]
                                },
                                "updatedAt": {
                                  "type": "string",
                                  "example": "2019-08-24T14:15:22Z"
                                }
                              }
                            },
                            "paymentProcessing": {
                              "type": "object",
                              "properties": {
                                "active": {
                                  "type": "boolean"
                                },
                                "paymentProviders": {
                                  "type": "object",
                                  "properties": {
                                    "stripe": {
                                      "type": "object",
                                      "properties": {
                                        "active": {
                                          "type": "boolean"
                                        },
                                        "status": {
                                          "type": "string"
                                        },
                                        "accountName": {
                                          "type": "string"
                                        },
                                        "defaultCurrency": {
                                          "type": "string"
                                        },
                                        "syncedAt": {
                                          "type": "string",
                                          "format": "date"
                                        },
                                        "payload": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "token_type": {
                                              "type": "string"
                                            },
                                            "stripe_publishable_key": {
                                              "type": "string"
                                            },
                                            "stripe_user_id": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "autoPayments": {
                              "type": "object",
                              "properties": {
                                "policy": {
                                  "type": "array"
                                }
                              }
                            }
                          }
                        },
                        "receptionistsService": {
                          "title": "object",
                          "properties": {
                            "receptionDesk": {
                              "type": "object",
                              "properties": {
                                "ittt": {
                                  "type": "array",
                                  "items": {}
                                }
                              }
                            },
                            "screening": {
                              "type": "object",
                              "properties": {
                                "checklist": {
                                  "type": "array",
                                  "items": {}
                                }
                              }
                            },
                            "contactPersonUserId": {
                              "type": "string"
                            }
                          }
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "customFields": {
                          "type": "object"
                        },
                        "calendarRules": {
                          "type": "object"
                        },
                        "publicDescription": {
                          "type": "object"
                        },
                        "privateDescription": {
                          "type": "object"
                        },
                        "markups": {
                          "type": "object"
                        }
                      }
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "ownersPortalSettings": {
                          "type": "object",
                          "description": "The OPSettings object",
                          "properties": {
                            "bookedNights": {
                              "type": "boolean"
                            },
                            "revenue": {
                              "type": "boolean"
                            },
                            "accommodationFare": {
                              "type": "boolean"
                            },
                            "guestsReports": {
                              "type": "boolean"
                            },
                            "occupancy": {
                              "type": "boolean"
                            },
                            "avgNightlyRate": {
                              "type": "boolean"
                            },
                            "revPal": {
                              "type": "boolean"
                            },
                            "hostPayout": {
                              "type": "boolean"
                            }
                          },
                          "example": {
                            "ownersPortalSettings": {
                              "bookedNights": true,
                              "revenue": true
                            }
                          }
                        },
                        "listings": {
                          "type": "array",
                          "description": "Listings Id",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "5e32fc021690ba0026f6f778",
                            "5e32fc021690d15417543012",
                            "5e32fc021690d15417543013"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "locale": {
                          "type": "string",
                          "description": "Localization",
                          "example": "en-US"
                        },
                        "active": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "allowReservations": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "showReservationTooltips": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "vatOrTaxId": {
                          "type": "string"
                        },
                        "workingCapital": {
                          "description": "Deprecated. Use new [API](/reference/ownerscontroller_update)",
                          "type": "number",
                          "example": 0
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Elad"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Kremer"
                        },
                        "fullName": {
                          "type": "string",
                          "example": "Elad Kremer"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@guesty.com",
                          "description": "Primary email address"
                        },
                        "address": {
                          "type": "string",
                          "example": "test address"
                        },
                        "phone": {
                          "type": "string",
                          "example": "15417543010",
                          "description": "Primary phone number"
                        },
                        "picture": {
                          "type": "object",
                          "properties": {
                            "thumbnail": {
                              "type": "string"
                            },
                            "regular": {
                              "type": "string"
                            },
                            "large": {
                              "type": "string"
                            }
                          },
                          "example": {
                            "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                            "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "example": "this is a note"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "date ISO",
                          "example": "2020-03-13T12:17:06.758Z"
                        }
                      }
                    },
                    "nightsCount": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Owner reservation Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Owners Reservations"
        ],
        "summary": "Update an owner reservation",
        "description": "Use this request to alter an owner's reservation.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Reservation ID",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkIn": {
                    "type": "string",
                    "description": "Check in with format YYYY-MM-DD HH:mm:ss",
                    "example": "2020-03-19 15:00:00"
                  },
                  "checkOut": {
                    "type": "string",
                    "description": "Check out with format YYYY-MM-DD HH:mm:ss",
                    "example": "2020-03-20 10:00:00"
                  },
                  "note": {
                    "type": "string",
                    "example": "Free text"
                  }
                },
                "required": [
                  "checkIn",
                  "checkOut"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated owner reservation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "status": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Unique Id",
                      "example": "563e0b6a08a2710e00057b82"
                    },
                    "checkIn": {
                      "type": "string"
                    },
                    "checkOut": {
                      "type": "string"
                    },
                    "note": {
                      "type": "string"
                    },
                    "__v": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "checkInDateLocalized": {
                      "type": "string"
                    },
                    "checkOutDateLocalized": {
                      "type": "string"
                    },
                    "plannedDeparture": {
                      "type": "string"
                    },
                    "plannedArrival": {
                      "type": "string"
                    },
                    "lastUpdatedAt": {
                      "type": "string"
                    },
                    "listing": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "String (ObjectId)",
                          "example": "59ac245d27cb310f0017afe3"
                        },
                        "accountId": {
                          "type": "string",
                          "description": "String (ObjectId)",
                          "example": "59ac245d27cb310f0017afe3"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2017-09-03T15:48:45.070Z"
                        },
                        "integrations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Unique Id",
                                "example": "5958c7e5884e961000817799"
                              },
                              "airbnb2": {
                                "type": "object",
                                "properties": {
                                  "credentials": {
                                    "type": "object",
                                    "properties": {
                                      "code": {
                                        "type": "string"
                                      },
                                      "expiresAt": {
                                        "type": "integer"
                                      },
                                      "accessToken": {
                                        "type": "string"
                                      },
                                      "refreshToken": {
                                        "type": "string"
                                      },
                                      "lastForceRefresh": {
                                        "type": "string",
                                        "description": "date"
                                      }
                                    }
                                  },
                                  "forwardEmails": {
                                    "type": "object",
                                    "properties": {
                                      "all": {
                                        "type": "boolean",
                                        "default": true
                                      },
                                      "emails": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "description": "date"
                                  }
                                },
                                "description": "Only if platform is airbnb",
                                "example": {
                                  "ignored": {
                                    "reservations": [],
                                    "listings": []
                                  },
                                  "emailsFromSupport": []
                                }
                              },
                              "forwardEmails": {
                                "type": "object",
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                    "default": true
                                  },
                                  "emails": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "active": {
                                "type": "boolean",
                                "description": "Status of connection"
                              },
                              "platform": {
                                "type": "string"
                              },
                              "listings": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Listing details"
                                }
                              },
                              "complexes": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Complex details"
                                }
                              },
                              "nickname": {
                                "type": "string",
                                "example": "naama"
                              },
                              "channelId": {
                                "type": "string"
                              },
                              "activatedAt": {
                                "type": "string",
                                "description": "Date"
                              },
                              "disconnectedAt": {
                                "type": "string",
                                "description": "Date"
                              },
                              "proxyEmail": {
                                "type": "string"
                              },
                              "incomingEmail": {
                                "type": "string"
                              },
                              "externalAccountId": {
                                "type": "string"
                              },
                              "id": {
                                "type": "integer",
                                "example": "naama@user.guesty.com",
                                "description": "External ID"
                              },
                              "companyName": {
                                "type": "string"
                              },
                              "fetchRequests": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "fetchAllListings": {
                                      "type": "boolean"
                                    },
                                    "externalListingIds": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "NOT_STARTED",
                                        "IN_PROGRESS",
                                        "COMPLETED",
                                        "FAILED",
                                        "TIMEOUT"
                                      ]
                                    },
                                    "createTime": {
                                      "type": "string",
                                      "description": "Date"
                                    },
                                    "updateTime": {
                                      "type": "string",
                                      "description": "Date"
                                    },
                                    "finishedTime": {
                                      "type": "string",
                                      "description": "Date"
                                    }
                                  }
                                }
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "NOT_CONNECTED",
                                  "CONNECTING",
                                  "CONNECTED",
                                  "FAILED",
                                  "TIMEOUT",
                                  "DISCONNECTED",
                                  "PENDING"
                                ]
                              },
                              "migration": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "IN_PROGRESS",
                                      "COMPLETED",
                                      "FAILED"
                                    ]
                                  },
                                  "createTime": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "updateTime": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "finishedTime": {
                                    "type": "string",
                                    "description": "Date"
                                  },
                                  "steps": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Step details"
                                    }
                                  },
                                  "discrepancyStepExecuted": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "discrepancyResolution": {
                                    "type": "string",
                                    "enum": [
                                      "GUESTY",
                                      "AIRBNB"
                                    ]
                                  },
                                  "listingQuantityDiscrepancyStepExecuted": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "error": {
                                    "type": "object",
                                    "properties": {
                                      "at": {
                                        "type": "string",
                                        "description": "Date"
                                      },
                                      "code": {
                                        "type": "string"
                                      },
                                      "message": {
                                        "type": "string"
                                      },
                                      "raw": {
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "notes": {
                                    "type": "string"
                                  },
                                  "isRollingBack": {
                                    "type": "boolean",
                                    "default": false
                                  }
                                }
                              },
                              "userId": {
                                "type": "string",
                                "example": "563e0b6a08a2710e00057b85"
                              },
                              "accountId": {
                                "type": "string",
                                "description": "Owner",
                                "example": "563e0b6a08a2710e00057b82"
                              },
                              "tripAdvisor": {
                                "type": "object",
                                "description": "TripAdvisor details"
                              },
                              "homeaway2": {
                                "type": "object",
                                "description": "Homeaway details"
                              },
                              "bookingCom": {
                                "type": "object",
                                "properties": {
                                  "legalEntityId": {
                                    "type": "string"
                                  }
                                },
                                "description": "BookingCom details"
                              },
                              "createdAt": {
                                "type": "string",
                                "description": "Date"
                              },
                              "missingStep": {
                                "type": "string"
                              },
                              "steps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "COMPLETED",
                                        "IN_PROGRESS"
                                      ]
                                    },
                                    "createTime": {
                                      "type": "string",
                                      "description": "Date"
                                    },
                                    "updateTime": {
                                      "type": "string",
                                      "description": "Date"
                                    }
                                  }
                                }
                              },
                              "newIntegrationBackup": {
                                "type": "object"
                              },
                              "threadIdsMigrated": {
                                "type": "boolean"
                              },
                              "isDeleted": {
                                "type": "boolean"
                              },
                              "deletedAt": {
                                "type": "string",
                                "description": "Date"
                              }
                            }
                          }
                        },
                        "isVirtual": {
                          "type": "boolean"
                        },
                        "nickname": {
                          "type": "string"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "isListed": {
                          "type": "boolean"
                        },
                        "title": {
                          "type": "string"
                        },
                        "propertyType": {
                          "type": "string"
                        },
                        "roomType": {
                          "type": "string"
                        },
                        "bedType": {
                          "type": "string"
                        },
                        "accommodates": {
                          "type": "number"
                        },
                        "bedrooms": {
                          "type": "number"
                        },
                        "areaSquareFeet": {
                          "type": "number"
                        },
                        "address": {
                          "type": "object",
                          "properties": {
                            "full": {
                              "type": "string",
                              "description": "full address",
                              "example": "Kaplan St 2, Ramat Gan, Israel"
                            },
                            "lng": {
                              "type": "number",
                              "example": 34.8202173
                            },
                            "lat": {
                              "type": "number",
                              "example": 32.0695525
                            },
                            "street": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        },
                        "publishedAddress": {
                          "type": "object",
                          "properties": {
                            "full": {
                              "type": "string",
                              "description": "full address",
                              "example": "Kaplan St 2, Ramat Gan, Israel"
                            },
                            "lng": {
                              "type": "number",
                              "example": 34.8202173
                            },
                            "lat": {
                              "type": "number",
                              "example": 32.0695525
                            },
                            "street": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        },
                        "timezone": {
                          "type": "string"
                        },
                        "defaultCheckInTime": {
                          "type": "string"
                        },
                        "defaultCheckOutTime": {
                          "type": "string"
                        },
                        "cleaning": {
                          "type": "object",
                          "properties": {
                            "defaultCleaningTime": {
                              "type": "string"
                            },
                            "instructions": {
                              "type": "string"
                            }
                          }
                        },
                        "cleaningStatus": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "enum": [
                                "clean",
                                "waitingForInspection",
                                "dirty",
                                "unknown"
                              ]
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2019-08-24T14:15:22Z"
                            }
                          }
                        },
                        "picture": {
                          "type": "object",
                          "properties": {
                            "regular": {
                              "type": "string"
                            },
                            "thumbnail": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                            },
                            "large": {
                              "type": "string"
                            },
                            "caption": {
                              "type": "string"
                            },
                            "height": {
                              "type": "number",
                              "example": 756
                            },
                            "original": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                            },
                            "size": {
                              "type": "number",
                              "example": 39516
                            },
                            "width": {
                              "type": "number",
                              "example": 756
                            }
                          }
                        },
                        "pictures": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "regular": {
                                "type": "string"
                              },
                              "thumbnail": {
                                "type": "string",
                                "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                              },
                              "large": {
                                "type": "string"
                              },
                              "caption": {
                                "type": "string"
                              },
                              "height": {
                                "type": "number",
                                "example": 756
                              },
                              "original": {
                                "type": "string",
                                "example": "https://res.cloudinary.com/guesty/image/upload/v1659982852/staging6/5213a2d206112710005d96ff/gglflnes8vodgkmtm08c.jpg"
                              },
                              "size": {
                                "type": "number",
                                "example": 39516
                              },
                              "width": {
                                "type": "number",
                                "example": 756
                              }
                            }
                          }
                        },
                        "amenities": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "amenitiesNotIncluded": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "terms": {
                          "type": "object",
                          "properties": {
                            "minNights": {
                              "type": "number"
                            },
                            "maxNights": {
                              "type": "number"
                            },
                            "cancellation": {
                              "type": "string"
                            }
                          }
                        },
                        "prices": {
                          "type": "object",
                          "properties": {
                            "guestsIncludedInRegularFee": {
                              "type": "number"
                            },
                            "extraPersonFee": {
                              "type": "number"
                            },
                            "basePrice": {
                              "type": "number"
                            },
                            "basePriceUSD": {
                              "type": "number"
                            },
                            "monthlyPriceFactor": {
                              "type": "number"
                            },
                            "weeklyPriceFactor": {
                              "type": "number"
                            },
                            "weekendBasePrice": {
                              "type": "number"
                            },
                            "securityDepositFee": {
                              "type": "number"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "cleaningFee": {
                              "type": "number"
                            }
                          }
                        },
                        "netIncomeFormula": {
                          "type": "string"
                        },
                        "commissionFormula": {
                          "type": "string"
                        },
                        "commissionTaxPrecentage": {
                          "type": "string"
                        },
                        "pms": {
                          "type": "object",
                          "properties": {
                            "active": {
                              "type": "boolean"
                            },
                            "automation": {
                              "type": "object",
                              "properties": {
                                "autoList": {
                                  "type": "object",
                                  "properties": {
                                    "active": {
                                      "type": "boolean"
                                    },
                                    "config": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "inbox": {
                              "type": "object",
                              "properties": {
                                "customSignature": {
                                  "type": "string"
                                }
                              }
                            },
                            "cleaningStatus": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "enum": [
                                    "clean",
                                    "waitingForInspection",
                                    "dirty",
                                    "unknown"
                                  ]
                                },
                                "updatedAt": {
                                  "type": "string",
                                  "example": "2019-08-24T14:15:22Z"
                                }
                              }
                            },
                            "paymentProcessing": {
                              "type": "object",
                              "properties": {
                                "active": {
                                  "type": "boolean"
                                },
                                "paymentProviders": {
                                  "type": "object",
                                  "properties": {
                                    "stripe": {
                                      "type": "object",
                                      "properties": {
                                        "active": {
                                          "type": "boolean"
                                        },
                                        "status": {
                                          "type": "string"
                                        },
                                        "accountName": {
                                          "type": "string"
                                        },
                                        "defaultCurrency": {
                                          "type": "string"
                                        },
                                        "syncedAt": {
                                          "type": "string",
                                          "format": "date"
                                        },
                                        "payload": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "livemode": {
                                              "type": "boolean"
                                            },
                                            "token_type": {
                                              "type": "string"
                                            },
                                            "stripe_publishable_key": {
                                              "type": "string"
                                            },
                                            "stripe_user_id": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "autoPayments": {
                              "type": "object",
                              "properties": {
                                "policy": {
                                  "type": "array"
                                }
                              }
                            }
                          }
                        },
                        "receptionistsService": {
                          "title": "object",
                          "properties": {
                            "receptionDesk": {
                              "type": "object",
                              "properties": {
                                "ittt": {
                                  "type": "array",
                                  "items": {}
                                }
                              }
                            },
                            "screening": {
                              "type": "object",
                              "properties": {
                                "checklist": {
                                  "type": "array",
                                  "items": {}
                                }
                              }
                            },
                            "contactPersonUserId": {
                              "type": "string"
                            }
                          }
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "customFields": {
                          "type": "object"
                        },
                        "calendarRules": {
                          "type": "object"
                        },
                        "publicDescription": {
                          "type": "object"
                        },
                        "privateDescription": {
                          "type": "object"
                        },
                        "markups": {
                          "type": "object"
                        }
                      }
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "ownersPortalSettings": {
                          "type": "object",
                          "description": "The OPSettings object",
                          "properties": {
                            "bookedNights": {
                              "type": "boolean"
                            },
                            "revenue": {
                              "type": "boolean"
                            },
                            "accommodationFare": {
                              "type": "boolean"
                            },
                            "guestsReports": {
                              "type": "boolean"
                            },
                            "occupancy": {
                              "type": "boolean"
                            },
                            "avgNightlyRate": {
                              "type": "boolean"
                            },
                            "revPal": {
                              "type": "boolean"
                            },
                            "hostPayout": {
                              "type": "boolean"
                            }
                          },
                          "example": {
                            "ownersPortalSettings": {
                              "bookedNights": true,
                              "revenue": true
                            }
                          }
                        },
                        "listings": {
                          "type": "array",
                          "description": "Listings Id",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "5e32fc021690ba0026f6f778",
                            "5e32fc021690d15417543012",
                            "5e32fc021690d15417543013"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "description": "Unique Id",
                          "example": "563e0b6a08a2710e00057b82"
                        },
                        "locale": {
                          "type": "string",
                          "description": "Localization",
                          "example": "en-US"
                        },
                        "active": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "allowReservations": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "showReservationTooltips": {
                          "type": "boolean",
                          "example": "false"
                        },
                        "vatOrTaxId": {
                          "type": "string"
                        },
                        "workingCapital": {
                          "description": "Deprecated. Use new [API](/reference/ownerscontroller_update)",
                          "type": "number",
                          "example": 0
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Elad"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Kremer"
                        },
                        "fullName": {
                          "type": "string",
                          "example": "Elad Kremer"
                        },
                        "email": {
                          "type": "string",
                          "example": "example@guesty.com",
                          "description": "Primary email address"
                        },
                        "address": {
                          "type": "string",
                          "example": "test address"
                        },
                        "phone": {
                          "type": "string",
                          "example": "15417543010",
                          "description": "Primary phone number"
                        },
                        "picture": {
                          "type": "object",
                          "properties": {
                            "thumbnail": {
                              "type": "string"
                            },
                            "regular": {
                              "type": "string"
                            },
                            "large": {
                              "type": "string"
                            }
                          },
                          "example": {
                            "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                            "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "example": "this is a note"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "date ISO",
                          "example": "2020-03-13T12:17:06.758Z"
                        }
                      }
                    },
                    "nightsCount": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "example": {
                    "error": {
                      "code": "UNAUTHORIZED",
                      "message": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Phone Book Entries"
        ],
        "summary": "List all phone book entries",
        "description": "List all phone book entries",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query string. Searches in fullName, emails, phones"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Selection of fields, separated by space. If fields not be chosen response will be return with all fields. The selected fields from the users table will be returned inside the response"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Limit results to these ids, comma separated string",
            "schema": {
              "type": "string",
              "example": "3847fh87hs78n79f3,fj78fh78fbw7yyhdfyb"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "description": "Pagination limit, max: 100"
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "description": "Pagination skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of requested entries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "example": "563e0b6a08a2710e00057b82",
                                "description": "Unique Id"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "firstName": {
                                "type": "string",
                                "example": "Elad"
                              },
                              "lastName": {
                                "type": "string",
                                "example": "Kremer"
                              },
                              "fullName": {
                                "type": "string",
                                "example": "Elad Kremer"
                              },
                              "nickName": {
                                "type": "string",
                                "example": "My Nickname"
                              },
                              "title": {
                                "type": "string",
                                "example": "My Title"
                              },
                              "company": {
                                "type": "string",
                                "example": "My Company"
                              },
                              "picture": {
                                "type": "object",
                                "properties": {
                                  "thumbnail": {
                                    "type": "string"
                                  },
                                  "regular": {
                                    "type": "string"
                                  },
                                  "large": {
                                    "type": "string"
                                  }
                                },
                                "example": {
                                  "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                                  "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                                  "regular": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                                }
                              },
                              "emails": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": "['aaaa@darkforest.com']"
                              },
                              "phones": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": "['+97777777777777']"
                              },
                              "preferredContactMethod": {
                                "type": "string",
                                "enum": [
                                  "email",
                                  "sms",
                                  "call"
                                ],
                                "example": "email"
                              },
                              "email": {
                                "type": "string",
                                "description": "Primary email for the contact",
                                "example": "asdasdasdasd@darkforest.com"
                              },
                              "phone": {
                                "type": "string",
                                "description": "Primary phone for the contact",
                                "example": "+97777777777777"
                              },
                              "notes": {
                                "type": "string",
                                "description": "Notes about the user",
                                "example": "Some notes"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "count": {
                      "type": "number",
                      "example": 1
                    },
                    "fields": {
                      "type": "string",
                      "example": ""
                    },
                    "limit": {
                      "type": "number",
                      "example": 25
                    },
                    "skip": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Phone Book Entries"
        ],
        "summary": "Create a phone book entry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "Elad"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Kremer"
                  },
                  "fullName": {
                    "type": "string",
                    "example": "Elad Kremer"
                  },
                  "nickName": {
                    "type": "string",
                    "example": "My Nickname"
                  },
                  "title": {
                    "type": "string",
                    "example": "My Title"
                  },
                  "company": {
                    "type": "string",
                    "example": "My Company"
                  },
                  "picture": {
                    "type": "object",
                    "properties": {
                      "thumbnail": {
                        "type": "string"
                      },
                      "regular": {
                        "type": "string"
                      },
                      "large": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                      "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                      "regular": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                    }
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": "['aaaa@darkforest.com']"
                  },
                  "phones": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": "['+97777777777777']"
                  },
                  "preferredContactMethod": {
                    "type": "string",
                    "enum": [
                      "email",
                      "sms",
                      "call"
                    ],
                    "example": "email"
                  },
                  "email": {
                    "type": "string",
                    "description": "Primary email for the contact",
                    "example": "asdasdasdasd@darkforest.com"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Primary phone for the contact",
                    "example": "+97777777777777"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Notes about the user",
                    "example": "Some notes"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created entry",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "example": "Elad"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Kremer"
                        },
                        "fullName": {
                          "type": "string",
                          "example": "Elad Kremer"
                        },
                        "nickName": {
                          "type": "string",
                          "example": "My Nickname"
                        },
                        "title": {
                          "type": "string",
                          "example": "My Title"
                        },
                        "company": {
                          "type": "string",
                          "example": "My Company"
                        },
                        "picture": {
                          "type": "object",
                          "properties": {
                            "thumbnail": {
                              "type": "string"
                            },
                            "regular": {
                              "type": "string"
                            },
                            "large": {
                              "type": "string"
                            }
                          },
                          "example": {
                            "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                            "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                            "regular": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                          }
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": "['aaaa@darkforest.com']"
                        },
                        "phones": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": "['+97777777777777']"
                        },
                        "preferredContactMethod": {
                          "type": "string",
                          "enum": [
                            "email",
                            "sms",
                            "call"
                          ],
                          "example": "email"
                        },
                        "email": {
                          "type": "string",
                          "description": "Primary email for the contact",
                          "example": "asdasdasdasd@darkforest.com"
                        },
                        "phone": {
                          "type": "string",
                          "description": "Primary phone for the contact",
                          "example": "+97777777777777"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Notes about the user",
                          "example": "Some notes"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Phone Book Entries"
        ],
        "summary": "Get a specific phone book entry",
        "description": "Get a specific phone book entry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry ID",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Selection of fields, separated by space. If fields not be chosen response will be return with all fields. The selected fields from the users table will be returned inside the response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Phone Book Entries list",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "example": "Elad"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Kremer"
                        },
                        "fullName": {
                          "type": "string",
                          "example": "Elad Kremer"
                        },
                        "nickName": {
                          "type": "string",
                          "example": "My Nickname"
                        },
                        "title": {
                          "type": "string",
                          "example": "My Title"
                        },
                        "company": {
                          "type": "string",
                          "example": "My Company"
                        },
                        "picture": {
                          "type": "object",
                          "properties": {
                            "thumbnail": {
                              "type": "string"
                            },
                            "regular": {
                              "type": "string"
                            },
                            "large": {
                              "type": "string"
                            }
                          },
                          "example": {
                            "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                            "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                            "regular": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                          }
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": "['aaaa@darkforest.com']"
                        },
                        "phones": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": "['+97777777777777']"
                        },
                        "preferredContactMethod": {
                          "type": "string",
                          "enum": [
                            "email",
                            "sms",
                            "call"
                          ],
                          "example": "email"
                        },
                        "email": {
                          "type": "string",
                          "description": "Primary email for the contact",
                          "example": "asdasdasdasd@darkforest.com"
                        },
                        "phone": {
                          "type": "string",
                          "description": "Primary phone for the contact",
                          "example": "+97777777777777"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Notes about the user",
                          "example": "Some notes"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Phone Book Entries"
        ],
        "summary": "Delete a phone book entry",
        "description": "Delete a phone book entry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Phone Book Entries"
        ],
        "summary": "Update a phone book entry",
        "description": "Retrieve the updated entry, selection of fields that were sent in body.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Entry ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "563e0b6a08a2710e00057b82",
                        "description": "Unique Id"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "example": "Elad"
                      },
                      "lastName": {
                        "type": "string",
                        "example": "Kremer"
                      },
                      "fullName": {
                        "type": "string",
                        "example": "Elad Kremer"
                      },
                      "nickName": {
                        "type": "string",
                        "example": "My Nickname"
                      },
                      "title": {
                        "type": "string",
                        "example": "My Title"
                      },
                      "company": {
                        "type": "string",
                        "example": "My Company"
                      },
                      "picture": {
                        "type": "object",
                        "properties": {
                          "thumbnail": {
                            "type": "string"
                          },
                          "regular": {
                            "type": "string"
                          },
                          "large": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                          "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                          "regular": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                        }
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": "['aaaa@darkforest.com']"
                      },
                      "phones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": "['+97777777777777']"
                      },
                      "preferredContactMethod": {
                        "type": "string",
                        "enum": [
                          "email",
                          "sms",
                          "call"
                        ],
                        "example": "email"
                      },
                      "email": {
                        "type": "string",
                        "description": "Primary email for the contact",
                        "example": "asdasdasdasd@darkforest.com"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Primary phone for the contact",
                        "example": "+97777777777777"
                      },
                      "notes": {
                        "type": "string",
                        "description": "Notes about the user",
                        "example": "Some notes"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entry object",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "563e0b6a08a2710e00057b82",
                          "description": "Unique Id"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "example": "Elad"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Kremer"
                        },
                        "fullName": {
                          "type": "string",
                          "example": "Elad Kremer"
                        },
                        "nickName": {
                          "type": "string",
                          "example": "My Nickname"
                        },
                        "title": {
                          "type": "string",
                          "example": "My Title"
                        },
                        "company": {
                          "type": "string",
                          "example": "My Company"
                        },
                        "picture": {
                          "type": "object",
                          "properties": {
                            "thumbnail": {
                              "type": "string"
                            },
                            "regular": {
                              "type": "string"
                            },
                            "large": {
                              "type": "string"
                            }
                          },
                          "example": {
                            "thumbnail": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                            "large": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx",
                            "regular": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                          }
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": "['aaaa@darkforest.com']"
                        },
                        "phones": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": "['+97777777777777']"
                        },
                        "preferredContactMethod": {
                          "type": "string",
                          "enum": [
                            "email",
                            "sms",
                            "call"
                          ],
                          "example": "email"
                        },
                        "email": {
                          "type": "string",
                          "description": "Primary email for the contact",
                          "example": "asdasdasdasd@darkforest.com"
                        },
                        "phone": {
                          "type": "string",
                          "description": "Primary phone for the contact",
                          "example": "+97777777777777"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Notes about the user",
                          "example": "Some notes"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/airbnb-resolutions-center/reservations/{guestyReservationId}/resolutions": {
      "get": {
        "operationId": "AirbnbResolutionsController_listResolutions",
        "summary": "List closed airbnb resolutions for reservation",
        "description": "List closed airbnb resolutions for reservation.",
        "parameters": [
          {
            "name": "from",
            "required": true,
            "in": "query",
            "example": "2023-11-27T12:00:00Z",
            "description": "Created at from",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "example": "2023-11-27T15:00:00Z",
            "description": "Created at to",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "guestyReservationId",
            "required": true,
            "in": "path",
            "example": "6525198fd60018000e7d6602",
            "description": "Reservation id in Guesty",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Closed resolutions and amounts summaries"
          },
          "400": {
            "description": "The params provided are invalid."
          }
        },
        "tags": [
          "Airbnb Resolution Center"
        ]
      }
    },
    "/accounting-api/reservations/{id}/balance": {
      "get": {
        "operationId": "ReservationsController_folioBalances",
        "summary": "Get folio balances",
        "description": "\n        Get folio balances by reservation ID.\n        For each reservation get the accounting folio balances per ledger.\n        Balances represent current and future entries.\n      ",
        "tags": [
          "Accounting (only available for accounting add-on users)"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "5d6e7a7ebf8e3800207735ae",
            "description": "Reservation ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folio balances response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "balance": {
                      "type": "number"
                    },
                    "ledgers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "balance": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "name",
                          "balance"
                        ]
                      }
                    }
                  },
                  "required": [
                    "currency",
                    "balance",
                    "ledgers"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "You do not have sufficient permissions to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Missing account_id error message"
                        },
                        "status": {
                          "type": "number",
                          "example": 403
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Can't find reservation, by provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Can't find reservation with ID {reservation_id}"
                        },
                        "status": {
                          "type": "number",
                          "example": 404
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Something went wrong"
                        },
                        "status": {
                          "type": "number",
                          "example": 500
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounting-api/journal-entries": {
      "get": {
        "operationId": "JournalEntriesController_list",
        "summary": "Get journal entries",
        "tags": [
          "Accounting (only available for accounting add-on users)"
        ],
        "description": "Get journal entries",
        "parameters": [
          {
            "required": true,
            "description": "Comparison operator. Filter by date using url encoded json object. \nIf you use JS you can encode it for this way: 'encodeURI(JSON.stringify(obj))'\nFilter object example:\nIf we have {\"operator\": \"@in_past_days\", \"value\": 90} filter\nurl encoded should looks like: \n- %7B%22operator%22%3A%20%22%40in_past_days%22%2C%20%22value%22%3A90%7D\n\nso final query param will be \n- transactionDate=%7B%22operator%22%3A%20%22%40in_past_days%22%2C%20%22value%22%3A90%7D",
            "name": "operator",
            "in": "query",
            "schema": {
              "enum": [
                "@in_future",
                "@in_past",
                "@in_next_days",
                "@is_after_days",
                "@in_past_days",
                "@is_before_days",
                "@on",
                "@between",
                "@lt",
                "@today"
              ],
              "type": "string"
            }
          },
          {
            "required": true,
            "description": "Example of expected date operators values:\n  - '@in_future' - boolean value,\n  Example: '{ \"operator\": \"@in_future\", \"value\": true }'\n- '@in_past' - boolean value,\n  Example: '{ \"operator\": \"@in_past\", \"value\": true }'\n- '@in_next_days' - numeric value,\n  Example: '{ \"operator\": \"@in_next_days\", \"value\": 2 }'\n- '@is_after_days' - numeric value,\n  Example: '{ \"operator\": \"@is_after_days\", \"value\": 2 }'\n- '@in_past_days' - numeric value,\n  Example: '{ \"operator\": \"@in_past_days\", \"value\": 2 }'\n- '@is_before_days' - numeric value,\n  Example: '{ \"operator\": \"@is_before_days\", \"value\": 2 }'\n- '@on' - Date string value,\n  Example: '{ \"operator\": \"@on\", \"value\": '2022-07-03T12:00:00+03:00' }'\n- '@between' - array of two Date string values,\n  Example: '{ \"operator\": \"@between\", \"value\": ['2022-07-03T12:00:00+03:00', '2022-07-08T12:00:00+03:00'] }'\n- '@lt' - Date string value,\n  Example: '{ \"operator\": \"@lt\", \"value\": \"2022-07-03T12:00:00+03:00\" }}'\n- '@gte' - Date string value,\n  Example: '{ \"operator\": \"@gte\", \"value\": \"2022-07-03T12:00:00+03:00\" }}'\n- '@today' - boolean value,\n  Example: '{ \"operator\": \"@today\", \"value\":true }'",
            "name": "value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filter list by journal entries name, it will search by matching strings from filter input",
            "example": "LOCAL_TAX",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "description": "Filter list by journal entries description, it will search by matching strings from filter input",
            "example": "Deducted commission",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationConfirmationCodes",
            "required": false,
            "in": "query",
            "description": "Filter by reservation confirmation codes",
            "example": [
              "GY-pzNAXYcq",
              "GY-ndGzwrgF"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ledger",
            "required": false,
            "in": "query",
            "description": "\n    Filter by ledger type.\n    Available ledgers: \n     - AD  (Advanced deposit),\n     - AP  ('Accounts payable'),\n     - C   ('Cash'),\n     - O   ('Owners'),\n     - DO  ('Due to/from operating'),\n     - WC  ('Working capital'),\n    ",
            "example": [
              "C"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "AD",
                  "AP",
                  "C",
                  "O",
                  "POA",
                  "DO",
                  "WC"
                ]
              }
            }
          },
          {
            "name": "guests",
            "required": false,
            "in": "query",
            "description": "Show journal entries for selected guests ID",
            "example": [
              "5cfe6449b03278001ee67e03",
              "5f6b5faa6d5ccd28943d0408"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "vendors",
            "required": false,
            "in": "query",
            "description": "Show journal entries for selected vendors ID",
            "example": [
              "62a764a2cecc57003492db6a",
              "airbnb",
              "airbnb2"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "owners",
            "required": false,
            "in": "query",
            "description": "Show journal entries for selected owners ID",
            "example": [
              "62c57651f2e43e00397ca67f",
              "62c2eb8d999ea20033fdac1b"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "listings",
            "required": false,
            "in": "query",
            "description": "Show journal entries for selected listings ID",
            "example": [
              "62c57651f2e43e00397ca67f",
              "62c2eb8d999ea20033fdac1b"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "chargeCode",
            "required": false,
            "in": "query",
            "description": "Show journal entries for selected transaction codes",
            "example": [
              "PCM",
              "COT"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "AF",
                  "AFO",
                  "CF",
                  "PCM",
                  "CM",
                  "LT",
                  "CT",
                  "TT",
                  "GST",
                  "LGT",
                  "OT",
                  "VAT",
                  "VATOC",
                  "VATOCA",
                  "TAX",
                  "AFE",
                  "CCP",
                  "PR",
                  "RF",
                  "CHB",
                  "CHBRV",
                  "CMS",
                  "OC",
                  "PFO",
                  "OCR",
                  "ODB",
                  "PO",
                  "PV",
                  "FT",
                  "PE",
                  "PI",
                  "CFE",
                  "EXNRI",
                  "CCNRI",
                  "ST",
                  "COT",
                  "OCT",
                  "TOT",
                  "HSHAT",
                  "HST",
                  "MAT",
                  "TRT",
                  "PP",
                  "RCA",
                  "WOCAP",
                  "OCWC",
                  "TAF",
                  "GPC",
                  "SDC",
                  "SDCP",
                  "AFD",
                  "AFA",
                  "LOSD",
                  "GCD",
                  "AFWD",
                  "AFMD",
                  "EPF",
                  "MAR",
                  "MARD",
                  "CO",
                  "PRO",
                  "ARC"
                ]
              }
            }
          },
          {
            "name": "triggers",
            "required": false,
            "in": "query",
            "description": "Show journal entries for selected triggers. \n      Available triggers: \n        - PAYMENT\n        - MANUAL\n        - PERIODIC\n        - RESERVATION_CANCELLED\n        - RESERVATION_CREATED\n        - RESERVATION_UPDATED\n        - DISBURSEMENT\n        - RECONCILIATION_CASH_ADJUSTMENT\n        ",
            "example": [
              "PAYMENT",
              "MANUAL"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "MANUAL",
                  "PAYMENT",
                  "PERIODIC",
                  "RESERVATION_CREATED",
                  "RESERVATION_UPDATED",
                  "RESERVATION_CANCELLED",
                  "DISBURSEMENT",
                  "RECONCILIATION_CASH_ADJUSTMENT",
                  "COMMISSION_ADJUSTMENT"
                ]
              }
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "description": "Pagination skip value",
            "example": 5,
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Pagination limit value",
            "example": 10,
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "sortByDate",
            "required": false,
            "in": "query",
            "description": "Sort by date. For ascending order use 'ASC' value, for descending - 'DESC'",
            "example": "ASC",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Journal entries response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "number",
                      "example": 0
                    },
                    "limit": {
                      "type": "number",
                      "example": 25
                    },
                    "current": {
                      "type": "number",
                      "example": 25
                    },
                    "total": {
                      "type": "number",
                      "example": 478
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 149304
                          },
                          "transactionId": {
                            "type": "number",
                            "example": 74691
                          },
                          "date": {
                            "type": "string",
                            "example": "2022-07-13"
                          },
                          "description": {
                            "type": "string",
                            "example": "Payment - CASH"
                          },
                          "ledger": {
                            "type": "string",
                            "example": "Advanced deposit"
                          },
                          "guest": {
                            "example": {
                              "id": "62ce5bd737f7d900320e4a47",
                              "name": "Guest Xxx"
                            },
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            ]
                          },
                          "vendor": {
                            "example": {
                              "id": "62ce5bd737f7d900320e4a47",
                              "name": "Vendor Xxx"
                            },
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            ]
                          },
                          "owner": {
                            "example": {
                              "id": "62ce5bd737f7d900320e4a47",
                              "name": "Owner Xxx"
                            },
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            ]
                          },
                          "amount": {
                            "example": {
                              "value": -95,
                              "currency": "USD"
                            },
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "number"
                                  },
                                  "currency": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "value",
                                  "currency"
                                ]
                              }
                            ]
                          },
                          "name": {
                            "type": "string",
                            "example": "Payment - CASH"
                          },
                          "listing": {
                            "example": {
                              "href": "/listings/6259630d9e23bc0034c86238",
                              "title": "Dmytro's fancy house",
                              "target": "_blank"
                            },
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  },
                                  "target": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "href",
                                  "title",
                                  "target"
                                ]
                              }
                            ]
                          },
                          "chargeType": {
                            "type": "string",
                            "example": "Payment Recording"
                          },
                          "reservationConfirmationCode": {
                            "example": {
                              "href": "/reservations/62ce5bdb37f7d900320e4a69/summary",
                              "title": "Y7MB8NGmA",
                              "target": "_blank"
                            },
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "type": "string"
                                  },
                                  "target": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "href",
                                  "title",
                                  "target"
                                ]
                              }
                            ]
                          },
                          "paymentConfirmationCode": {
                            "type": "string",
                            "example": "SAS432"
                          },
                          "chargeCode": {
                            "type": "string",
                            "example": "PR"
                          },
                          "trigger": {
                            "type": "string",
                            "example": "Payment"
                          },
                          "attachments": {
                            "example": {
                              "id": 392,
                              "url": "https://res.cloudinary.com/guesty/image/upload/v1664382837/folder/5213a2d206112710005d96ff/accounting/axcrdnwz7ermpaox1eun.pdf",
                              "urlThumbnail": "https://res.cloudinary.com/guesty/image/upload/h_300/v1664382837/folder/5213a2d206112710005d96ff/accounting/axcrdnwz7ermpaox1eun.jpg",
                              "uploadedBy": "5d64dbdbfc4aae0021bffc1c",
                              "uploadedAt": 1664382837000,
                              "originalFilename": "simple",
                              "originalExtension": "pdf"
                            },
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "url": {
                                  "type": "string"
                                },
                                "urlThumbnail": {
                                  "type": "string"
                                },
                                "uploadedBy": {
                                  "type": "string"
                                },
                                "uploadedAt": {
                                  "type": "number"
                                },
                                "originalFilename": {
                                  "type": "string"
                                },
                                "originalExtension": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "url",
                                "urlThumbnail",
                                "uploadedBy",
                                "uploadedAt",
                                "originalFilename",
                                "originalExtension"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "transactionId",
                          "date",
                          "description",
                          "ledger",
                          "guest",
                          "vendor",
                          "owner",
                          "amount",
                          "name",
                          "listing",
                          "chargeType",
                          "reservationConfirmationCode",
                          "paymentConfirmationCode",
                          "chargeCode",
                          "trigger",
                          "attachments"
                        ]
                      }
                    }
                  },
                  "required": [
                    "skip",
                    "limit",
                    "current",
                    "total",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Payload validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_FAILED"
                        },
                        "status": {
                          "type": "number",
                          "example": 400
                        },
                        "data": {
                          "example": [
                            "title must be longer than or equal to 3 characters",
                            "entries.0.amount should not be empty",
                            "entries.0.destination.type must be a valid enum value"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "message",
                        "code",
                        "status",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Accounting feature flow disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Missing account_id error message"
                        },
                        "status": {
                          "type": "number",
                          "example": 403
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Something went wrong"
                        },
                        "status": {
                          "type": "number",
                          "example": 500
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accounting-api/owners/{id}/working-capital": {
      "get": {
        "operationId": "OwnersController_retrieve",
        "summary": "Get owner working capital",
        "description": "\n        Get latest owner working capital by owner ID.\n      ",
        "tags": [
          "Accounting (only available for accounting add-on users)"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "5d6e7a7ebf8e3800207735ae",
            "description": "Owner ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Owner working capital response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workingCapital": {
                      "type": "number",
                      "description": "Current owner's working capital amount",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have sufficient permissions to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Missing account_id error message"
                        },
                        "status": {
                          "type": "number",
                          "example": 403
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Can't find owner, by provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Can't find reservation with ID {reservation_id}"
                        },
                        "status": {
                          "type": "number",
                          "example": 404
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Something went wrong"
                        },
                        "status": {
                          "type": "number",
                          "example": 500
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "OwnersController_update",
        "summary": "Update owner working capital",
        "description": "\n        Update owner working capital by owner ID.\n      ",
        "tags": [
          "Accounting (only available for accounting add-on users)"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "5d6e7a7ebf8e3800207735ae",
            "description": "Owner ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workingCapital": {
                    "type": "number",
                    "description": "New working capital amount"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Owner working capital updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workingCapital": {
                      "type": "number",
                      "description": "Current owner's working capital amount",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Input data is not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_FAILED"
                        },
                        "status": {
                          "type": "number",
                          "example": 400
                        },
                        "data": {
                          "example": [
                            "each value in listingIds must be a string",
                            "listingIds must be an array",
                            "listingIds should not be empty"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "message",
                        "code",
                        "status",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "You do not have sufficient permissions to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Missing account_id error message"
                        },
                        "status": {
                          "type": "number",
                          "example": 403
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Something went wrong"
                        },
                        "status": {
                          "type": "number",
                          "example": 500
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/business-models-api/assignment/{businessModelId}": {
      "put": {
        "operationId": "AssignListingController_update",
        "summary": "Assign listings to Business Models",
        "description": "Assign provided listings to appropriate Business model",
        "tags": [
          "Accounting (only available for accounting add-on users)"
        ],
        "parameters": [
          {
            "name": "businessModelId",
            "required": true,
            "in": "path",
            "example": "12233344445555566666777",
            "description": "Business Model ID that provided listings will be assigned to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fromDate": {
                    "type": "string",
                    "description": "Optional, date that the Business Model will reprocess reservations from. Not filling this field will update the Business Model from now on without reprocess",
                    "example": "2022-10-20"
                  },
                  "listingIds": {
                    "description": "List of listingIds that should be assigned exactly to 1 owner",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "listingIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assign listings response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Input data is not valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_FAILED"
                        },
                        "status": {
                          "type": "number",
                          "example": 400
                        },
                        "data": {
                          "example": [
                            "each value in listingIds must be a string",
                            "listingIds must be an array",
                            "listingIds should not be empty"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "message",
                        "code",
                        "status",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "You do not have sufficient permissions to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Missing account_id error message"
                        },
                        "status": {
                          "type": "number",
                          "example": 403
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Can't find business model, by provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Can't find business-model with ID {business_model_id}"
                        },
                        "status": {
                          "type": "number",
                          "example": 404
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Something went wrong"
                        },
                        "status": {
                          "type": "number",
                          "example": 500
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/business-models-api/light-business-models": {
      "get": {
        "operationId": "BusinessModelsOAController_index",
        "summary": "Get Business Models",
        "description": "Get list of Business Models by accountId",
        "tags": [
          "Accounting (only available for accounting add-on users)"
        ],
        "parameters": [
          {
            "example": 5,
            "required": false,
            "description": "Skip number of records. In case nothing provided so nothing will be skipped",
            "name": "skip",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "example": 10,
            "required": false,
            "description": "Limit for list of records. In case nothing provided all the records will be returned",
            "name": "limit",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Latest versions of business models response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "skip": {
                      "type": "number"
                    },
                    "limit": {
                      "type": "number"
                    },
                    "count": {
                      "type": "number"
                    },
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "listingsCount": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "modifier": {
                            "type": "string"
                          },
                          "activationDate": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "listingsCount",
                          "name",
                          "modifier",
                          "activationDate",
                          "createdAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "skip",
                    "limit",
                    "count",
                    "list"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Input data is not valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_FAILED"
                        },
                        "status": {
                          "type": "number",
                          "example": 400
                        },
                        "data": {
                          "example": [
                            "each value in listingIds must be a string",
                            "listingIds must be an array",
                            "listingIds should not be empty"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "message",
                        "code",
                        "status",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "You do not have sufficient permissions to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Missing account_id error message"
                        },
                        "status": {
                          "type": "number",
                          "example": 403
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Can't find business model, by provided accountId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Can't find business-model with ID {business_model_id}"
                        },
                        "status": {
                          "type": "number",
                          "example": 404
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Something went wrong"
                        },
                        "status": {
                          "type": "number",
                          "example": 500
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/business-models-api/transactions/owner-charges": {
      "post": {
        "operationId": "TransactionsController_createCharge",
        "summary": "Create owner charge",
        "description": "Create charge for provided owner. This endpoint is still in beta.",
        "tags": [
          "Accounting (only available for accounting add-on users)"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Charge name",
                    "example": "Furniture repairment"
                  },
                  "category": {
                    "type": "string",
                    "description": "Charge category",
                    "enum": [
                      "advertising",
                      "cleaning",
                      "electricity",
                      "furniture_appliances",
                      "gas",
                      "internet",
                      "lock_automation",
                      "management",
                      "mortgage",
                      "pest_control",
                      "pool_cleaning",
                      "property_taxes",
                      "repairs_maintenance",
                      "supplies_purchases",
                      "other_misc",
                      "taxes_paid",
                      "telephone",
                      "television",
                      "trash",
                      "water_septic",
                      "guest_cleaning",
                      "owner_cleaning",
                      "channel_commission",
                      "payment_charge",
                      "pet_fee",
                      "startup_fee",
                      "fotoshoot",
                      "vat",
                      "insurance",
                      "monitoring_surveillance",
                      "garden_maintenance",
                      "jacuzzi_maintenance",
                      "sauna_maintenance",
                      "photoshoot",
                      "bank_fees",
                      "sta_licensing",
                      "security",
                      "laundry",
                      "gardening",
                      "guest_compensation",
                      "home_improvement",
                      "other_expenses",
                      "other_income",
                      "other_services_ops_assistants",
                      "painting",
                      "plumbing",
                      "refund",
                      "refund_security_deposit",
                      "rubbish_removal_service",
                      "set_up_fee",
                      "strata_rates",
                      "security_deposit"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Charge description. Max length is 256 characters",
                    "example": "Furniture repair"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Charge amount, account currency will be used",
                    "example": 100
                  },
                  "recognitionDate": {
                    "type": "string",
                    "description": "Charge recognition date. ISO 8601 Date format (year-month-day)",
                    "example": "2023-10-27"
                  },
                  "ownerId": {
                    "type": "string",
                    "description": "You can get your owner ID [here](/reference/get_owners)",
                    "example": "448f9f83-27ca-4484-81b6-946e2e1c5490"
                  },
                  "listingId": {
                    "type": "string",
                    "description": "You can get your listing ID [here](/reference/get_listings)",
                    "example": "3b610a47-f0f9-4fd5-a8ba-818ad3e5f8a8"
                  },
                  "revenueShare": {
                    "description": "If revenue share is not defined, the default split will be 100% attributed to the PMC",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "shareSplit": {
                            "type": "number",
                            "description": "A share split is a floating point number that represents the percentage. For example, \n      - `0.5` means that the share is 50% between PMC and Vendor\n      - `0.1` means that the share is 10% Vendor and 90% PMC\n      - `0` means that the revenue goes 100% PMC",
                            "example": 0.5
                          },
                          "vendorId": {
                            "type": "string",
                            "description": "You can get your vendor ID [here](/reference/vendorscontroller_getall)",
                            "example": "96ac7041-0615-496f-8c54-e8c1fa668cc0"
                          }
                        },
                        "required": [
                          "shareSplit",
                          "vendorId"
                        ]
                      }
                    ]
                  },
                  "vatOCConfig": {
                    "description": "Charge VAT configuration",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "VAT name",
                            "example": "VAT"
                          },
                          "description": {
                            "type": "string",
                            "description": "VAT description",
                            "example": "VAT"
                          },
                          "percent": {
                            "type": "number",
                            "description": "VAT percentage. Example: 0.01 is 1%",
                            "example": 0.01
                          }
                        },
                        "required": [
                          "name",
                          "description",
                          "percent"
                        ]
                      }
                    ]
                  },
                  "attachments": {
                    "description": "Add attachments to charge",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "URL to CDN where attachment is stored. Max length is 2048 characters",
                          "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                        },
                        "urlThumbnail": {
                          "type": "string",
                          "description": "URL to CDN where attachment thumbnail is stored. Max length is 2048 characters",
                          "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                        },
                        "extension": {
                          "type": "string",
                          "description": "Attachment file extension. Max length is 10 characters",
                          "example": "png"
                        },
                        "fileName": {
                          "type": "string",
                          "description": "Attachment file name. Max length is 256 characters",
                          "example": "Invoice copy"
                        }
                      },
                      "required": [
                        "url",
                        "urlThumbnail",
                        "extension",
                        "fileName"
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "category",
                  "description",
                  "amount",
                  "recognitionDate"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Owner charge created"
          },
          "400": {
            "description": "Input data is not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_FAILED"
                        },
                        "status": {
                          "type": "number",
                          "example": 400
                        },
                        "data": {
                          "example": [
                            "each value in listingIds must be a string",
                            "listingIds must be an array",
                            "listingIds should not be empty"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "message",
                        "code",
                        "status",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Accounting feature flow disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Missing account_id error message"
                        },
                        "status": {
                          "type": "number",
                          "example": 403
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Something went wrong"
                        },
                        "status": {
                          "type": "number",
                          "example": 500
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/business-models-api/transactions/expenses": {
      "post": {
        "operationId": "TransactionsController_createExpense",
        "summary": "Create expense",
        "description": "Create expense for provided vendor. This endpoint is still in beta.",
        "tags": [
          "Accounting (only available for accounting add-on users)"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Expense name",
                    "example": "Maintenance expense"
                  },
                  "category": {
                    "type": "string",
                    "description": "Expense category",
                    "enum": [
                      "advertising",
                      "cleaning",
                      "electricity",
                      "furniture_appliances",
                      "gas",
                      "internet",
                      "lock_automation",
                      "management",
                      "mortgage",
                      "pest_control",
                      "pool_cleaning",
                      "property_taxes",
                      "repairs_maintenance",
                      "supplies_purchases",
                      "other_misc",
                      "taxes_paid",
                      "telephone",
                      "television",
                      "trash",
                      "water_septic",
                      "guest_cleaning",
                      "owner_cleaning",
                      "channel_commission",
                      "payment_charge",
                      "pet_fee",
                      "startup_fee",
                      "fotoshoot",
                      "vat",
                      "insurance",
                      "monitoring_surveillance",
                      "garden_maintenance",
                      "jacuzzi_maintenance",
                      "sauna_maintenance",
                      "photoshoot",
                      "bank_fees",
                      "sta_licensing",
                      "security",
                      "laundry",
                      "gardening",
                      "guest_compensation",
                      "home_improvement",
                      "other_expenses",
                      "other_income",
                      "other_services_ops_assistants",
                      "painting",
                      "plumbing",
                      "refund",
                      "refund_security_deposit",
                      "rubbish_removal_service",
                      "set_up_fee",
                      "strata_rates",
                      "security_deposit"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Expense description. Max length is 256 characters",
                    "example": "Bulb replacement"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Expense amount, account currency will be used",
                    "example": 5
                  },
                  "recognitionDate": {
                    "type": "string",
                    "description": "Expense recognition date. ISO 8601 Date format (year-month-day)",
                    "example": "2023-10-27"
                  },
                  "vendorId": {
                    "type": "string",
                    "description": "You can get your vendor ID [here](/reference/vendorscontroller_getall)",
                    "example": "5f4f6e1c1c6e4e001f7e8b4e"
                  },
                  "expenseShare": {
                    "description": "Share expense between PMC and Owner, by default 100% is going to PMC",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "shareSplit": {
                            "type": "number",
                            "description": "A share split is a floating point number that represents the percentage. For example, \n      - `0.5` means that the share is 50% between PMC and Owner.\n      - `0.1` means that the share is 10% Owner and 90% PMC.\n      - `0` means that the charge covered 100% by PMC.",
                            "example": 0.5
                          },
                          "ownerId": {
                            "type": "string",
                            "description": "You can get your owner ID [here](/reference/get_owners)",
                            "example": "7af22b68-c05e-4fa0-80be-43ebac0672c0"
                          },
                          "listingId": {
                            "type": "string",
                            "description": "You can get your listing ID [here](/reference/get_listings)",
                            "example": "4ca95c56-f71c-4940-85cd-2aa56f61f052"
                          }
                        },
                        "required": [
                          "shareSplit",
                          "ownerId"
                        ]
                      }
                    ]
                  },
                  "attachments": {
                    "description": "Add attachments to expense",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "URL to CDN where attachment is stored. Max length is 2048 characters",
                          "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                        },
                        "urlThumbnail": {
                          "type": "string",
                          "description": "URL to CDN where attachment thumbnail is stored. Max length is 2048 characters",
                          "example": "https://cdn.filepicker.io/api/file/bBnKEk8TlmJAUHcLApRx"
                        },
                        "extension": {
                          "type": "string",
                          "description": "Attachment file extension. Max length is 10 characters",
                          "example": "png"
                        },
                        "fileName": {
                          "type": "string",
                          "description": "Attachment file name. Max length is 256 characters",
                          "example": "Invoice copy"
                        }
                      },
                      "required": [
                        "url",
                        "urlThumbnail",
                        "extension",
                        "fileName"
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "category",
                  "description",
                  "amount",
                  "recognitionDate",
                  "vendorId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Expense created"
          },
          "400": {
            "description": "Input data is not valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_FAILED"
                        },
                        "status": {
                          "type": "number",
                          "example": 400
                        },
                        "data": {
                          "example": [
                            "each value in listingIds must be a string",
                            "listingIds must be an array",
                            "listingIds should not be empty"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "message",
                        "code",
                        "status",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Accounting feature flow disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Missing account_id error message"
                        },
                        "status": {
                          "type": "number",
                          "example": 403
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Something went wrong"
                        },
                        "status": {
                          "type": "number",
                          "example": 500
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/communication/conversations": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Inbox Conversations"
        ],
        "summary": "Get conversations",
        "description": "Get conversations",
        "parameters": [
          {
            "name": "filters",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Array of filters to query by. \n\n **field**: Subject of the filter: `status`, `type`, `guest._id`, `owner._id`, `reservation._id`, `reservation.status`, `read`, `assignee._id`, `listing._id` \n\n **operator**: Enhanced MongoDB comparison operator: `$eq`, `$exists`, `$not`, `$contains`, `$notcontains`, `$gt`, `$lt`, `$between`, `$in`, `$nin` \n\n **value**: Value to filter by",
            "example": "[{\"field\":\"status\", \"operator\":\"$eq\", \"value\": \"OPEN\"}]"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Selection of fields, separated by space",
            "example": "guest reservation status assignee priority createdAt"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting, default: `-createdAt`",
            "example": "-modifiedAt"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Pagination, max: 100, default is: `25`",
            "example": "25"
          },
          {
            "name": "cursorAfter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination cursor, default:`''`,\n\n `cursorAfter` and `cursorBefore` are not allowed to be used at the same time in one request.\n\n First request will require only limit parameter and in response you will get cursor object. \n\n Use `cursor.after` to send in query params `cursorAfter` parameter in order to move forward. \n\n Use `cursor.before` to send in query params `cursorBefore` parameter in order to move backwards. \n\n An empty string in after or before cursor in response will indicate that there is no more documents in this direction. \n\n If you sort buy something different than `createdAt`, please make sure include this parameter in fields, or you will get empty cursor. \n\n `cursorAfter` and `cursorBefore` are not allowed to be used at the same time in one request.",
            "example": "MjAyMC0wNy0wOVQxMDowMzozOS43ODBaXzVmMDZlYjdiYzVkODk4MDAyYWMwNTM2Nw=="
          },
          {
            "name": "cursorBefore",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination cursor, default:`null`",
            "example": "MjAyMC0wNy0wOVQxMDowMzozOS43ODBaXzVmMDZlYjdiYzVkODk4MDAyYWMwNTM2Nw=="
          },
          {
            "name": "conversation types",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The conversations API currently supports requests for guest conversations and owners conversations.\n\nThe filter field `type`(guest/ owner, guest by default) is required in order to determine the type of the returned conversations. (in contrast to the guest conversation, owner's contains owner's info)\n\nOwners conversations do not support `airbnb2` module type, messages that sent with `platform` module type will be sent through Email. ",
            "example": "owner"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 13:59:38 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Transfer-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "chunked"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "Root=1-61644349-7dc42c2a02aa8f645ba8c342"
                }
              },
              "x-transit-id": {
                "schema": {
                  "type": "string",
                  "example": "78fce5a0-2a9b-11ec-9e88-e1ecf83deceb"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"5d70-OevskQL1SGVbdHKtiJqpAemTdYw\""
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              },
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 30
                        },
                        "countUnread": {
                          "type": "number",
                          "example": 2
                        },
                        "fields": {
                          "type": "string",
                          "example": "guest reservation status assignee priority createdAt"
                        },
                        "limit": {
                          "type": "number",
                          "example": 25
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "after": {
                              "type": "string",
                              "example": ""
                            },
                            "before": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        },
                        "conversations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "example": "6134a49cd450d300307794cb"
                              },
                              "assignee": {
                                "type": "object",
                                "properties": {
                                  "_id": {
                                    "type": "string",
                                    "example": null
                                  }
                                }
                              },
                              "priority": {
                                "type": "number",
                                "example": 10
                              },
                              "meta": {
                                "type": "object",
                                "properties": {
                                  "reservations": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "_id": {
                                          "type": "string",
                                          "example": "61347d71d450d300307792a4"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "inquiry"
                                        },
                                        "checkIn": {
                                          "type": "string",
                                          "example": "2021-09-04T21:00:00.000Z"
                                        },
                                        "checkOut": {
                                          "type": "string",
                                          "example": "2021-09-05T20:00:00.000Z"
                                        },
                                        "customFields": {
                                          "type": "array",
                                          "items": {}
                                        },
                                        "listing": {
                                          "type": "object",
                                          "properties": {
                                            "tags": {
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "example": "Pool"
                                              }
                                            },
                                            "active": {
                                              "type": "boolean"
                                            },
                                            "_id": {
                                              "type": "string",
                                              "example": "5fba2d97d8e638002d76d842"
                                            },
                                            "picture": {
                                              "type": "object",
                                              "properties": {
                                                "_id": {
                                                  "type": "string",
                                                  "example": "615c0214cdf3370028883d3a"
                                                },
                                                "thumbnail": {
                                                  "type": "string",
                                                  "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                                                }
                                              }
                                            },
                                            "address": {
                                              "type": "object",
                                              "properties": {
                                                "full": {
                                                  "type": "string",
                                                  "example": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico"
                                                },
                                                "city": {
                                                  "type": "string",
                                                  "example": "Guadalajara"
                                                },
                                                "country": {
                                                  "type": "string",
                                                  "example": "Mexico"
                                                },
                                                "state": {
                                                  "type": "string",
                                                  "example": "Jalisco"
                                                }
                                              }
                                            },
                                            "nickname": {
                                              "type": "string",
                                              "example": "OPS-Listing"
                                            },
                                            "title": {
                                              "type": "string",
                                              "example": "TEST"
                                            },
                                            "customFields": {
                                              "type": "array",
                                              "items": {}
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "guest": {
                                    "type": "object",
                                    "properties": {
                                      "_id": {
                                        "type": "string",
                                        "example": "61347d70d450d300307792a3"
                                      },
                                      "email": {
                                        "type": "string",
                                        "example": "asdasd@assadsa.com"
                                      },
                                      "isReturning": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              },
                              "accountId": {
                                "type": "string",
                                "example": "5fb67280e39677002e6c2683"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2021-09-05T11:06:05.388Z"
                              },
                              "state": {
                                "type": "object",
                                "properties": {
                                  "read": {
                                    "type": "boolean"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "OPEN"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "count": 30,
                    "countUnread": 2,
                    "fields": "guest reservation status assignee priority createdAt",
                    "limit": 25,
                    "cursor": {
                      "after": "",
                      "before": ""
                    },
                    "conversations": [
                      {
                        "_id": "6134a49cd450d300307794cb",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "61347d71d450d300307792a4",
                              "status": "inquiry",
                              "checkIn": "2021-09-04T21:00:00.000Z",
                              "checkOut": "2021-09-05T20:00:00.000Z",
                              "customFields": [],
                              "listing": {
                                "tags": [
                                  "Pool",
                                  "Resort",
                                  "Another random tag",
                                  "abs",
                                  "San Fransico"
                                ],
                                "active": true,
                                "_id": "5fba2d97d8e638002d76d842",
                                "picture": {
                                  "_id": "615c0214cdf3370028883d3a",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                                },
                                "address": {
                                  "full": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico",
                                  "city": "Guadalajara",
                                  "country": "Mexico",
                                  "state": "Jalisco"
                                },
                                "nickname": "OPS-Listing",
                                "title": "TEST",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "61347d70d450d300307792a3",
                            "email": "asdasd@assadsa.com",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-09-05T11:06:05.388Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "60b337646b754a002f4a1a76",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "60b337636b754a002f4a1a4f",
                              "status": "confirmed",
                              "checkIn": "2022-02-16T04:00:00.000Z",
                              "checkOut": "2022-02-18T23:00:00.000Z",
                              "confirmationCode": "MZQn2A6pm",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "5fba2d4cd8e638002d76d7b5",
                                "picture": {
                                  "_id": "615c12f6cdf3370028883d42",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036796/preprod/5fb67280e39677002e6c2683/chuupwehryq36cd43avq.jpg"
                                },
                                "address": {
                                  "full": "150 Las Vegas Blvd N, Las Vegas, NV 89101, USA",
                                  "city": "Las Vegas",
                                  "country": "United States",
                                  "state": "Nevada"
                                },
                                "nickname": "Listing Test1",
                                "title": "Listing Test1",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "60b337616b754a002f4a1a37",
                            "fullName": "Gal Levy",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-05-30T06:57:40.575Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "6023bb96151857002f7173de",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "6023bb96151857002f7173da",
                              "status": "confirmed",
                              "checkIn": "2021-02-24T20:00:00.000Z",
                              "checkOut": "2021-02-26T19:00:00.000Z",
                              "customFields": [],
                              "listing": {
                                "tags": [
                                  "Pool",
                                  "Resort",
                                  "Another random tag",
                                  "abs",
                                  "San Fransico"
                                ],
                                "active": true,
                                "_id": "5fba2d97d8e638002d76d842",
                                "picture": {
                                  "_id": "615c0214cdf3370028883d3a",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                                },
                                "address": {
                                  "full": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico",
                                  "city": "Guadalajara",
                                  "country": "Mexico",
                                  "state": "Jalisco"
                                },
                                "nickname": "OPS-Listing",
                                "title": "TEST",
                                "customFields": []
                              },
                              "confirmationCode": "796O7R0Ny"
                            }
                          ],
                          "guest": {
                            "_id": "6023bb96151857002f7173c4",
                            "fullName": "GuestName GuestLastName",
                            "email": "sadsa.sad@gmail.com",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-02-10T10:55:18.922Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "61222fca0b308800307fd92d",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "61222fca0b308800307fd8b1",
                              "status": "confirmed",
                              "checkIn": "2021-08-26T21:00:00.000Z",
                              "checkOut": "2021-08-28T16:00:00.000Z",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "61222fb10b308800307fd7c2",
                                "picture": {
                                  "_id": "612b276119a046002822f87f",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1629630380/preprod/5fb67280e39677002e6c2683/itaivtuofjq9fwv0g2ve.jpg"
                                },
                                "address": {
                                  "full": "Rickard Coulee, Stanford, MT 59479, USA",
                                  "city": "Stanford",
                                  "country": "United States",
                                  "state": "Montana"
                                },
                                "nickname": "GaL test 3503",
                                "title": "GaL test 3503",
                                "customFields": []
                              },
                              "confirmationCode": "nRxW923OR"
                            }
                          ],
                          "guest": {
                            "_id": "61222fc80b308800307fd897",
                            "fullName": "gal 3503",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-08-22T11:06:50.516Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "6110d84fb0e971002d5f1ca0",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "6110d84eb0e971002d5f1c70",
                              "status": "confirmed",
                              "checkIn": "2022-08-18T05:00:00.000Z",
                              "checkOut": "2022-08-19T00:00:00.000Z",
                              "confirmationCode": "MZwgzlN3Q",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "5fba2d4cd8e638002d76d7b5",
                                "picture": {
                                  "_id": "615c12f6cdf3370028883d42",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036796/preprod/5fb67280e39677002e6c2683/chuupwehryq36cd43avq.jpg"
                                },
                                "address": {
                                  "full": "150 Las Vegas Blvd N, Las Vegas, NV 89101, USA",
                                  "city": "Las Vegas",
                                  "country": "United States",
                                  "state": "Nevada"
                                },
                                "nickname": "Listing Test1",
                                "title": "Listing Test1",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "6110d84db0e971002d5f1c5a",
                            "fullName": "yoyo",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-08-09T07:25:03.869Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "6110d78fb0e971002d5f1c1d",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "6110d78eb0e971002d5f1c18",
                              "status": "confirmed",
                              "checkIn": "2022-09-06T05:00:00.000Z",
                              "checkOut": "2022-09-08T00:00:00.000Z",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "5fba2d4cd8e638002d76d7b5",
                                "picture": {
                                  "_id": "615c12f6cdf3370028883d42",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036796/preprod/5fb67280e39677002e6c2683/chuupwehryq36cd43avq.jpg"
                                },
                                "address": {
                                  "full": "150 Las Vegas Blvd N, Las Vegas, NV 89101, USA",
                                  "city": "Las Vegas",
                                  "country": "United States",
                                  "state": "Nevada"
                                },
                                "nickname": "Listing Test1",
                                "title": "Listing Test1",
                                "customFields": []
                              },
                              "confirmationCode": "6WXyJw9Jz"
                            }
                          ],
                          "guest": {
                            "_id": "6110d78db0e971002d5f1c00",
                            "fullName": "Gal Test",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-08-09T07:21:51.166Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "610a558cde8bc1002ecd0a28",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "610a558cde8bc1002ecd0a23",
                              "status": "inquiry",
                              "checkIn": "2022-04-01T04:00:00.000Z",
                              "checkOut": "2022-04-01T23:00:00.000Z",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "5fba2d4cd8e638002d76d7b5",
                                "picture": {
                                  "_id": "615c12f6cdf3370028883d42",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036796/preprod/5fb67280e39677002e6c2683/chuupwehryq36cd43avq.jpg"
                                },
                                "address": {
                                  "full": "150 Las Vegas Blvd N, Las Vegas, NV 89101, USA",
                                  "city": "Las Vegas",
                                  "country": "United States",
                                  "state": "Nevada"
                                },
                                "nickname": "Listing Test1",
                                "title": "Listing Test1",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "610a558bde8bc1002ecd0a0d",
                            "fullName": "gga",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-08-04T08:53:32.344Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "610a4847de8bc1002ecd09f0",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "610a4847de8bc1002ecd09eb",
                              "status": "inquiry",
                              "checkIn": "2022-03-01T04:00:00.000Z",
                              "checkOut": "2022-03-01T23:00:00.000Z",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "5fba2d4cd8e638002d76d7b5",
                                "picture": {
                                  "_id": "615c12f6cdf3370028883d42",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036796/preprod/5fb67280e39677002e6c2683/chuupwehryq36cd43avq.jpg"
                                },
                                "address": {
                                  "full": "150 Las Vegas Blvd N, Las Vegas, NV 89101, USA",
                                  "city": "Las Vegas",
                                  "country": "United States",
                                  "state": "Nevada"
                                },
                                "nickname": "Listing Test1",
                                "title": "Listing Test1",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "610a4846de8bc1002ecd09d5",
                            "fullName": "New res",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-08-04T07:56:55.125Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "60f3db61870dff002dd5322f",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "60f3db60870dff002dd531f4",
                              "status": "confirmed",
                              "checkIn": "2021-07-17T21:00:00.000Z",
                              "checkOut": "2021-07-18T20:00:00.000Z",
                              "confirmationCode": "oZVyjLPJL",
                              "customFields": [],
                              "listing": {
                                "tags": [
                                  "Pool",
                                  "Resort",
                                  "Another random tag",
                                  "abs",
                                  "San Fransico"
                                ],
                                "active": true,
                                "_id": "5fba2d97d8e638002d76d842",
                                "picture": {
                                  "_id": "615c0214cdf3370028883d3a",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                                },
                                "address": {
                                  "full": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico",
                                  "city": "Guadalajara",
                                  "country": "Mexico",
                                  "state": "Jalisco"
                                },
                                "nickname": "OPS-Listing",
                                "title": "TEST",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "60f3db5e870dff002dd531de",
                            "fullName": "ggal ggg",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-07-18T07:42:25.130Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "60efdae1d0dcb200322891c3",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "60efdae1d0dcb20032289195",
                              "status": "confirmed",
                              "checkIn": "2021-07-14T21:00:00.000Z",
                              "checkOut": "2021-07-15T20:00:00.000Z",
                              "confirmationCode": "w0V0qJNJg",
                              "customFields": [],
                              "listing": {
                                "tags": [
                                  "Pool",
                                  "Resort",
                                  "Another random tag",
                                  "abs",
                                  "San Fransico"
                                ],
                                "active": true,
                                "_id": "5fba2d97d8e638002d76d842",
                                "picture": {
                                  "_id": "615c0214cdf3370028883d3a",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                                },
                                "address": {
                                  "full": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico",
                                  "city": "Guadalajara",
                                  "country": "Mexico",
                                  "state": "Jalisco"
                                },
                                "nickname": "OPS-Listing",
                                "title": "TEST",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "60efdae0d0dcb20032289194",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-07-15T06:51:13.850Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "60ec9326fd82e0002df75fbb",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "60ec9326fd82e0002df75f8b",
                              "status": "confirmed",
                              "checkIn": "2021-07-12T21:00:00.000Z",
                              "checkOut": "2021-07-13T20:00:00.000Z",
                              "confirmationCode": "r288MvZV2",
                              "customFields": [],
                              "listing": {
                                "tags": [
                                  "Pool",
                                  "Resort",
                                  "Another random tag",
                                  "abs",
                                  "San Fransico"
                                ],
                                "active": true,
                                "_id": "5fba2d97d8e638002d76d842",
                                "picture": {
                                  "_id": "615c0214cdf3370028883d3a",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                                },
                                "address": {
                                  "full": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico",
                                  "city": "Guadalajara",
                                  "country": "Mexico",
                                  "state": "Jalisco"
                                },
                                "nickname": "OPS-Listing",
                                "title": "TEST",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "60ec9325fd82e0002df75f8a",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-07-12T19:08:22.715Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "60ec925efd82e0002df75f53",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "60ec925dfd82e0002df75f32",
                              "status": "confirmed",
                              "checkIn": "2021-07-13T06:00:00.000Z",
                              "checkOut": "2021-07-14T05:00:00.000Z",
                              "confirmationCode": "K8115GjvR",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "60eadc10407d16002e6690a3",
                                "picture": {
                                  "_id": "615bfacccdf3370028883d36",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1626004479/preprod/5fb67280e39677002e6c2683/o5exahtjadjvdpzcwa6q.jpg"
                                },
                                "address": {
                                  "full": "Eliezer Kaplan St, Tel Aviv-Yafo, Israel",
                                  "city": "Tel Aviv-Yafo",
                                  "country": "Israel",
                                  "state": "Tel Aviv District"
                                },
                                "nickname": "Maxtst",
                                "title": "maxtst",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "60ec925cfd82e0002df75f31",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-07-12T19:05:02.838Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "60eae4f8407d16002e6691bf",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "60eae4f7407d16002e66919e",
                              "status": "confirmed",
                              "checkIn": "2021-07-12T09:00:00.000Z",
                              "checkOut": "2021-07-13T09:00:00.000Z",
                              "confirmationCode": "pZ8QDQz62",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "60eadc10407d16002e6690a3",
                                "picture": {
                                  "_id": "615bfacccdf3370028883d36",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1626004479/preprod/5fb67280e39677002e6c2683/o5exahtjadjvdpzcwa6q.jpg"
                                },
                                "address": {
                                  "full": "Eliezer Kaplan St, Tel Aviv-Yafo, Israel",
                                  "city": "Tel Aviv-Yafo",
                                  "country": "Israel",
                                  "state": "Tel Aviv District"
                                },
                                "nickname": "Maxtst",
                                "title": "maxtst",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "60eae4f6407d16002e66919d",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-07-11T12:32:56.334Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "60eae3af407d16002e669190",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "60eae3ae407d16002e669172",
                              "status": "confirmed",
                              "checkIn": "2021-07-11T14:30:00.000Z",
                              "checkOut": "2021-07-12T09:00:00.000Z",
                              "confirmationCode": "6WXRpLK1Q",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "60eadc10407d16002e6690a3",
                                "picture": {
                                  "_id": "615bfacccdf3370028883d36",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1626004479/preprod/5fb67280e39677002e6c2683/o5exahtjadjvdpzcwa6q.jpg"
                                },
                                "address": {
                                  "full": "Eliezer Kaplan St, Tel Aviv-Yafo, Israel",
                                  "city": "Tel Aviv-Yafo",
                                  "country": "Israel",
                                  "state": "Tel Aviv District"
                                },
                                "nickname": "Maxtst",
                                "title": "maxtst",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "60eae3ad407d16002e669171",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-07-11T12:27:27.618Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "60d18683af6c23002f8ce82e",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "60d18682af6c23002f8ce82a",
                              "status": "confirmed",
                              "checkIn": "2021-07-05T05:00:00.000Z",
                              "checkOut": "2021-07-08T00:00:00.000Z",
                              "customFields": [],
                              "listing": {
                                "tags": [
                                  "Pool",
                                  "Resort",
                                  "Another random tag",
                                  "abs",
                                  "San Fransico"
                                ],
                                "active": true,
                                "_id": "5fba2d97d8e638002d76d842",
                                "picture": {
                                  "_id": "615c0214cdf3370028883d3a",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                                },
                                "address": {
                                  "full": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico",
                                  "city": "Guadalajara",
                                  "country": "Mexico",
                                  "state": "Jalisco"
                                },
                                "nickname": "OPS-Listing",
                                "title": "TEST",
                                "customFields": []
                              },
                              "confirmationCode": "mqQDgWJA3"
                            }
                          ],
                          "guest": {
                            "_id": "60d18681af6c23002f8ce814",
                            "fullName": "gal res gal res",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-06-22T06:43:15.266Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "60cb0240689042002fa44c07",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "60cb0240689042002fa44c02",
                              "status": "confirmed",
                              "checkIn": "2021-06-20T05:00:00.000Z",
                              "checkOut": "2021-06-22T00:00:00.000Z",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "5fba2d4cd8e638002d76d7b5",
                                "picture": {
                                  "_id": "615c12f6cdf3370028883d42",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036796/preprod/5fb67280e39677002e6c2683/chuupwehryq36cd43avq.jpg"
                                },
                                "address": {
                                  "full": "150 Las Vegas Blvd N, Las Vegas, NV 89101, USA",
                                  "city": "Las Vegas",
                                  "country": "United States",
                                  "state": "Nevada"
                                },
                                "nickname": "Listing Test1",
                                "title": "Listing Test1",
                                "customFields": []
                              },
                              "confirmationCode": "46RX5yWBk"
                            }
                          ],
                          "guest": {
                            "_id": "60cb023f689042002fa44bea",
                            "fullName": "Gal test",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-06-17T08:05:20.811Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "60a392f79b9414002e586bff",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "60a392f79b9414002e586bfa",
                              "status": "inquiry",
                              "checkIn": "2021-05-18T05:00:00.000Z",
                              "checkOut": "2021-05-19T00:00:00.000Z",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "5fba2d4cd8e638002d76d7b5",
                                "picture": {
                                  "_id": "615c12f6cdf3370028883d42",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036796/preprod/5fb67280e39677002e6c2683/chuupwehryq36cd43avq.jpg"
                                },
                                "address": {
                                  "full": "150 Las Vegas Blvd N, Las Vegas, NV 89101, USA",
                                  "city": "Las Vegas",
                                  "country": "United States",
                                  "state": "Nevada"
                                },
                                "nickname": "Listing Test1",
                                "title": "Listing Test1",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "60a392f79b9414002e586be2",
                            "fullName": "aa2 bbb",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-05-18T10:12:07.799Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "607ff12402baa7002efb0bca",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "607ff12402baa7002efb0ba4",
                              "status": "confirmed",
                              "checkIn": "2021-04-21T05:00:00.000Z",
                              "checkOut": "2021-04-22T00:00:00.000Z",
                              "confirmationCode": "w0m0mM1Xg",
                              "customFields": [],
                              "listing": {
                                "tags": [
                                  "Pool",
                                  "Resort",
                                  "Another random tag",
                                  "abs",
                                  "San Fransico"
                                ],
                                "active": true,
                                "_id": "5fba2d97d8e638002d76d842",
                                "picture": {
                                  "_id": "615c0214cdf3370028883d3a",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                                },
                                "address": {
                                  "full": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico",
                                  "city": "Guadalajara",
                                  "country": "Mexico",
                                  "state": "Jalisco"
                                },
                                "nickname": "OPS-Listing",
                                "title": "TEST",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "607ff12302baa7002efb0ba3",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-04-21T09:32:20.969Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "606b1b9ef704f7002d7d0775",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "606b1b9df704f7002d7d0755",
                              "status": "confirmed",
                              "checkIn": "2021-04-05T05:00:00.000Z",
                              "checkOut": "2021-04-06T00:00:00.000Z",
                              "confirmationCode": "gp5rm0Zn9",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "5fba2d4cd8e638002d76d7b5",
                                "picture": {
                                  "_id": "615c12f6cdf3370028883d42",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036796/preprod/5fb67280e39677002e6c2683/chuupwehryq36cd43avq.jpg"
                                },
                                "address": {
                                  "full": "150 Las Vegas Blvd N, Las Vegas, NV 89101, USA",
                                  "city": "Las Vegas",
                                  "country": "United States",
                                  "state": "Nevada"
                                },
                                "nickname": "Listing Test1",
                                "title": "Listing Test1",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "606b1b9cf704f7002d7d0731",
                            "fullName": "Alon Eini",
                            "phone": "972503000330",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2021-04-05T14:15:58.319Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "5fbe1a3937fc62002f1d76a2",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "5fbe1a3837fc62002f1d769e",
                              "status": "inquiry",
                              "checkIn": "2020-12-03T15:00:00.000Z",
                              "checkOut": "2020-12-04T10:00:00.000Z",
                              "customFields": [],
                              "listing": {
                                "tags": [
                                  "Pool",
                                  "Resort",
                                  "Another random tag",
                                  "abs",
                                  "San Fransico"
                                ],
                                "active": true,
                                "_id": "5fba2d97d8e638002d76d842",
                                "picture": {
                                  "_id": "615c0214cdf3370028883d3a",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                                },
                                "address": {
                                  "full": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico",
                                  "city": "Guadalajara",
                                  "country": "Mexico",
                                  "state": "Jalisco"
                                },
                                "nickname": "OPS-Listing",
                                "title": "TEST",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "5fbe1a3737fc62002f1d769d",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2020-11-25T08:47:53.289Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "5fbcfdab2715db002c2824a5",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "5fbcfdaa2715db002c28247e",
                              "status": "confirmed",
                              "checkIn": "2021-01-25T15:00:00.000Z",
                              "checkOut": "2021-01-26T10:00:00.000Z",
                              "confirmationCode": "vQ2JymER5",
                              "customFields": [],
                              "listing": {
                                "tags": [
                                  "Pool",
                                  "Resort",
                                  "Another random tag",
                                  "abs",
                                  "San Fransico"
                                ],
                                "active": true,
                                "_id": "5fba2d97d8e638002d76d842",
                                "picture": {
                                  "_id": "615c0214cdf3370028883d3a",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                                },
                                "address": {
                                  "full": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico",
                                  "city": "Guadalajara",
                                  "country": "Mexico",
                                  "state": "Jalisco"
                                },
                                "nickname": "OPS-Listing",
                                "title": "TEST",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "5fbcfda92715db002c282462",
                            "email": "yoni+gdcxbsgs@guesty.com",
                            "fullName": "yoni test",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2020-11-24T12:33:47.447Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "5fba2e6dd8e638002d76d997",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "5fba2e6dd8e638002d76d985",
                              "status": "confirmed",
                              "checkIn": "2020-11-18T15:00:00.000Z",
                              "checkOut": "2020-11-25T10:00:00.000Z",
                              "confirmationCode": "ywP2xw2MV",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "5fba2d4cd8e638002d76d7b5",
                                "picture": {
                                  "_id": "615c12f6cdf3370028883d42",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036796/preprod/5fb67280e39677002e6c2683/chuupwehryq36cd43avq.jpg"
                                },
                                "address": {
                                  "full": "150 Las Vegas Blvd N, Las Vegas, NV 89101, USA",
                                  "city": "Las Vegas",
                                  "country": "United States",
                                  "state": "Nevada"
                                },
                                "nickname": "Listing Test1",
                                "title": "Listing Test1",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "5fba2e6cd8e638002d76d984",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2020-11-22T09:25:02.014Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "5fba2e2cd8e638002d76d983",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "5fba2e2cd8e638002d76d97a",
                              "status": "reserved",
                              "checkIn": "2020-12-03T15:00:00.000Z",
                              "checkOut": "2020-12-04T10:00:00.000Z",
                              "confirmationCode": "qQxLm7kGD",
                              "customFields": [],
                              "listing": {
                                "tags": [],
                                "active": true,
                                "_id": "5fba2d4cd8e638002d76d7b5",
                                "picture": {
                                  "_id": "615c12f6cdf3370028883d42",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036796/preprod/5fb67280e39677002e6c2683/chuupwehryq36cd43avq.jpg"
                                },
                                "address": {
                                  "full": "150 Las Vegas Blvd N, Las Vegas, NV 89101, USA",
                                  "city": "Las Vegas",
                                  "country": "United States",
                                  "state": "Nevada"
                                },
                                "nickname": "Listing Test1",
                                "title": "Listing Test1",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "5fba2e2cd8e638002d76d964",
                            "fullName": "ESF gdsgs",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2020-11-22T09:23:56.834Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "5fba2db8d8e638002d76d91a",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "5fba2db8d8e638002d76d8f9",
                              "status": "confirmed",
                              "checkIn": "2020-11-22T15:00:00.000Z",
                              "checkOut": "2020-11-23T10:00:00.000Z",
                              "confirmationCode": "jYR6Nqn3B",
                              "customFields": [],
                              "listing": {
                                "tags": [
                                  "Pool",
                                  "Resort",
                                  "Another random tag",
                                  "abs",
                                  "San Fransico"
                                ],
                                "active": true,
                                "_id": "5fba2d97d8e638002d76d842",
                                "picture": {
                                  "_id": "615c0214cdf3370028883d3a",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                                },
                                "address": {
                                  "full": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico",
                                  "city": "Guadalajara",
                                  "country": "Mexico",
                                  "state": "Jalisco"
                                },
                                "nickname": "OPS-Listing",
                                "title": "TEST",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "5fba2db7d8e638002d76d8f8",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2020-11-22T09:22:00.409Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      },
                      {
                        "_id": "5fba2da6d8e638002d76d8f7",
                        "assignee": {
                          "_id": null
                        },
                        "priority": 10,
                        "meta": {
                          "reservations": [
                            {
                              "_id": "5fba2da5d8e638002d76d8d1",
                              "status": "confirmed",
                              "checkIn": "2020-12-03T15:00:00.000Z",
                              "checkOut": "2020-12-04T10:00:00.000Z",
                              "confirmationCode": "pZYLlgr7N",
                              "customFields": [],
                              "listing": {
                                "tags": [
                                  "Pool",
                                  "Resort",
                                  "Another random tag",
                                  "abs",
                                  "San Fransico"
                                ],
                                "active": true,
                                "_id": "5fba2d97d8e638002d76d842",
                                "picture": {
                                  "_id": "615c0214cdf3370028883d3a",
                                  "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                                },
                                "address": {
                                  "full": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico",
                                  "city": "Guadalajara",
                                  "country": "Mexico",
                                  "state": "Jalisco"
                                },
                                "nickname": "OPS-Listing",
                                "title": "TEST",
                                "customFields": []
                              }
                            }
                          ],
                          "guest": {
                            "_id": "5fba2da5d8e638002d76d8d0",
                            "isReturning": false
                          }
                        },
                        "accountId": "5fb67280e39677002e6c2683",
                        "createdAt": "2020-11-22T09:21:42.240Z",
                        "state": {
                          "read": false,
                          "status": "OPEN"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Conversations not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/communication/conversations/{conversationId}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Inbox Conversations"
        ],
        "summary": "Get conversation by id",
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Saved Conversation Id",
            "example": "615997c2e74f61003015ab02"
          },
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Selection of fields, separated by space. \n\n When `null` retrieve the main properties of the object. \n\nWe recommend always specifying the specific fields you'd like to receive to ensure that you get them. Please see the full list above.",
            "example": "status"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 14:00:12 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Transfer-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "chunked"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "Root=1-6164436c-155e3fee33187a827636deb6"
                }
              },
              "x-transit-id": {
                "schema": {
                  "type": "string",
                  "example": "8d9f0830-2a9b-11ec-9e88-e1ecf83deceb"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"5d1-vPvU6Ky+VpjzmI1rNK9jtVPyCm4\""
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              },
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "6134a49cd450d300307794cb"
                        },
                        "assignee": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": null
                            }
                          }
                        },
                        "priority": {
                          "type": "number",
                          "example": 10
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "reservations": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "_id": {
                                    "type": "string",
                                    "example": "61347d71d450d300307792a4"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "inquiry"
                                  },
                                  "checkIn": {
                                    "type": "string",
                                    "example": "2021-09-04T21:00:00.000Z"
                                  },
                                  "checkOut": {
                                    "type": "string",
                                    "example": "2021-09-05T20:00:00.000Z"
                                  },
                                  "customFields": {
                                    "type": "array",
                                    "items": {}
                                  },
                                  "listing": {
                                    "type": "object",
                                    "properties": {
                                      "tags": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": "Pool"
                                        }
                                      },
                                      "active": {
                                        "type": "boolean"
                                      },
                                      "_id": {
                                        "type": "string",
                                        "example": "5fba2d97d8e638002d76d842"
                                      },
                                      "picture": {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "string",
                                            "example": "615c0214cdf3370028883d3a"
                                          },
                                          "thumbnail": {
                                            "type": "string",
                                            "example": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                                          }
                                        }
                                      },
                                      "address": {
                                        "type": "object",
                                        "properties": {
                                          "full": {
                                            "type": "string",
                                            "example": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico"
                                          },
                                          "city": {
                                            "type": "string",
                                            "example": "Guadalajara"
                                          },
                                          "country": {
                                            "type": "string",
                                            "example": "Mexico"
                                          },
                                          "state": {
                                            "type": "string",
                                            "example": "Jalisco"
                                          }
                                        }
                                      },
                                      "nickname": {
                                        "type": "string",
                                        "example": "OPS-Listing"
                                      },
                                      "title": {
                                        "type": "string",
                                        "example": "TEST"
                                      },
                                      "customFields": {
                                        "type": "array",
                                        "items": {}
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "guest": {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "type": "string",
                                  "example": "61347d70d450d300307792a3"
                                },
                                "email": {
                                  "type": "string",
                                  "example": "asdasd@assadsa.com"
                                },
                                "isReturning": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "accountId": {
                          "type": "string",
                          "example": "5fb67280e39677002e6c2683"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2021-09-05T11:06:05.388Z"
                        },
                        "state": {
                          "type": "object",
                          "properties": {
                            "read": {
                              "type": "boolean"
                            },
                            "status": {
                              "type": "string",
                              "example": "OPEN"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "_id": "615997c2e74f61003015ab02",
                    "lastMessageFrom": {
                      "user": "2021-10-11T12:40:16.566Z",
                      "nonUser": "2021-10-03T11:45:19.244Z"
                    },
                    "assignee": {
                      "_id": null
                    },
                    "internal": {
                      "language": "en"
                    },
                    "priority": 10,
                    "isFromMigration": false,
                    "meta": {
                      "_id": "615997c2732aba0030d9de56",
                      "reservations": [
                        {
                          "_id": "615997c2e74f61003015aafe",
                          "status": "confirmed",
                          "checkIn": "2021-10-05T20:00:00.000Z",
                          "checkOut": "2021-10-11T19:00:00.000Z",
                          "customFields": [],
                          "listing": {
                            "tags": [
                              "Pool",
                              "Resort",
                              "Another random tag",
                              "abs",
                              "San Fransico"
                            ],
                            "active": true,
                            "_id": "5fba2d97d8e638002d76d842",
                            "picture": {
                              "_id": "615c0214cdf3370028883d3a",
                              "thumbnail": "https://res.cloudinary.com/guesty/image/upload/c_fit,h_200/v1606036872/preprod/5fb67280e39677002e6c2683/ephepadfvgopafgykxrc.jpg"
                            },
                            "address": {
                              "full": "Loma Mazamitla Sur, La Aurora, 44790 Guadalajara, Jal., Mexico",
                              "city": "Guadalajara",
                              "country": "Mexico",
                              "state": "Jalisco"
                            },
                            "nickname": "OPS-Listing",
                            "title": "TEST",
                            "customFields": []
                          },
                          "confirmationCode": "VvvPzxBjv"
                        }
                      ],
                      "integration": {
                        "_id": "5fba2d9cd8e638002d76d8cf",
                        "platform": "manual"
                      },
                      "guest": {
                        "_id": "615997c2e74f61003015aafd",
                        "isReturning": false
                      }
                    },
                    "accountId": "5fb67280e39677002e6c2683",
                    "type": "guest",
                    "state": {
                      "_id": "615997c2732aba0030d9de57",
                      "lastMessage": {
                        "body": "This is new note(COM postman)",
                        "date": "2021-10-11T12:40:16.566Z"
                      }
                    },
                    "createdAt": "2021-10-03T11:45:06.874Z",
                    "modifiedAt": "2021-10-11T12:40:16.566Z",
                    "pendingTasks": [],
                    "__v": 0,
                    "updatedAt": "2021-10-11T12:40:16.566Z",
                    "firstReceptionist": "COM - postman"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Conversation not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/communication/conversations/{conversationId}/posts": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Inbox Conversations"
        ],
        "summary": "Get posts (by conversation id)",
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Saved Conversation Id",
            "example": "615997c2e74f61003015ab02"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Sorting, default: `-createdAt` ",
            "example": "-createdAt"
          },
          {
            "name": "cursorAfter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination cursor, default:`''`.\n\n First request will require only limit parameter and in response you will get cursor object. \n\n Use `cursor.after` to send in query params `cursorAfter` parameter in order to move forward. \n\n Use `cursor.before` to send in query params `cursorBefore` parameter in order to move backwards. \n\n An empty string in after or before cursor in response will indicate that there is no more documents in this direction. \n\n If you sort buy something different than `createdAt`, please make sure include this parameter in fields, or you will get empty cursor. \n\n `cursorAfter` and `cursorBefore` are not allowed to be used at the same time in one request.",
            "example": "MjAyMC0wNy0wOVQxMDowMzozOS43ODBaXzVmMDZlYjdiYzVkODk4MDAyYWMwNTM2Nw=="
          },
          {
            "name": "cursorBefore",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Pagination cursor, default:`null`.",
            "example": "MjAyMC0wNy0xMFQxMDoyMToxMy4yODNaXzVmMDg0MTE5MjhlZjlmMDAyODJjMTVhYg=="
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 14:00:40 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Transfer-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "chunked"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "Root=1-61644388-68f72b617a99ec1c6d876cb7"
                }
              },
              "x-transit-id": {
                "schema": {
                  "type": "string",
                  "example": "9e2539e0-2a9b-11ec-9e88-e1ecf83deceb"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"59b-gx4X//ESubtbbLuxNWPIlx2VkcM\""
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              },
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 1
                        },
                        "limit": {
                          "type": "number",
                          "example": 25
                        },
                        "sort": {
                          "type": "string",
                          "example": "-createdAt"
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "after": {
                              "type": "string",
                              "example": ""
                            },
                            "before": {
                              "type": "string",
                              "example": ""
                            }
                          }
                        },
                        "posts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "module": {
                                "type": "object",
                                "properties": {
                                  "to": {
                                    "type": "array",
                                    "items": {}
                                  },
                                  "cc": {
                                    "type": "array",
                                    "items": {}
                                  },
                                  "bcc": {
                                    "type": "array",
                                    "items": {}
                                  },
                                  "templateValues": {
                                    "type": "array",
                                    "items": {}
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "note"
                                  }
                                }
                              },
                              "from": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "user"
                                  },
                                  "fullName": {
                                    "type": "string",
                                    "example": "COM - postman"
                                  }
                                }
                              },
                              "isFromMigration": {
                                "type": "boolean"
                              },
                              "_id": {
                                "type": "string",
                                "example": "61643413c9cf7a002d929325"
                              },
                              "body": {
                                "type": "string",
                                "example": "This is new message(COM postman)"
                              },
                              "attachments": {
                                "type": "array",
                                "items": {}
                              },
                              "conversationId": {
                                "type": "string",
                                "example": "615997c2e74f61003015ab02"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2021-10-11T12:54:43.248Z"
                              },
                              "__v": {
                                "type": "number",
                                "example": 0
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "posts": [
                      {
                        "module": {
                          "to": [],
                          "cc": [],
                          "bcc": [],
                          "templateValues": [],
                          "type": "note"
                        },
                        "from": {
                          "type": "user",
                          "fullName": "COM - postman"
                        },
                        "isFromMigration": false,
                        "_id": "61643413c9cf7a002d929325",
                        "body": "This is new message(COM postman)",
                        "attachments": [],
                        "conversationId": "615997c2e74f61003015ab02",
                        "createdAt": "2021-10-11T12:54:43.248Z",
                        "__v": 0
                      },
                      {
                        "module": {
                          "to": [],
                          "cc": [],
                          "bcc": [],
                          "templateValues": [],
                          "type": "note"
                        },
                        "from": {
                          "type": "user",
                          "fullName": "COM - postman"
                        },
                        "isFromMigration": false,
                        "_id": "616430b0c9cf7a002d92931f",
                        "body": "This is new note(COM postman)",
                        "sentBy": "host",
                        "conversationId": "615997c2e74f61003015ab02",
                        "createdAt": "2021-10-11T12:40:16.566Z",
                        "attachments": [],
                        "__v": 0
                      },
                      {
                        "module": {
                          "to": [],
                          "cc": [],
                          "bcc": [],
                          "templateValues": [],
                          "type": "log"
                        },
                        "isFromMigration": false,
                        "_id": "615997cf732aba0030d9de6a",
                        "sentBy": "log",
                        "body": "Reservation VvvPzxBjv status changed to confirmed",
                        "conversationId": "615997c2e74f61003015ab02",
                        "createdAt": "2021-10-03T11:45:19.244Z",
                        "attachments": [],
                        "__v": 0
                      },
                      {
                        "module": {
                          "to": [],
                          "cc": [],
                          "bcc": [],
                          "templateValues": [],
                          "type": "log"
                        },
                        "isFromMigration": false,
                        "_id": "615997c3732aba0030d9de5e",
                        "sentBy": "log",
                        "body": "New guest inquiry",
                        "conversationId": "615997c2e74f61003015ab02",
                        "createdAt": "2021-10-03T11:45:07.029Z",
                        "attachments": [],
                        "__v": 0
                      }
                    ],
                    "count": 4,
                    "limit": 25,
                    "sort": "-createdAt",
                    "cursor": {
                      "after": "MjAyMS0xMC0wM1QxMTo0NTowNy4wMjlaXzYxNTk5N2MzNzMyYWJhMDAzMGQ5ZGU1ZQ==",
                      "before": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Posts not found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Inbox Conversations"
        ],
        "summary": "Post msg to conversation without sending it",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "module": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "`sms`, `email`, `note`, `log`, `whatsapp`, `airbnb2`",
                        "example": "note"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "body": {
                    "type": "string",
                    "description": "The message itself",
                    "example": "This is a new note"
                  },
                  "sentBy": {
                    "type": "string",
                    "description": "`host`, `guest`, default: `host`",
                    "example": "host"
                  }
                },
                "required": [
                  "module",
                  "body"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Saved Conversation Id",
            "example": "615997c2e74f61003015ab02"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 14:01:17 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "365"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "Root=1-616443ad-7e935a504eac925554f074e6"
                }
              },
              "x-transit-id": {
                "schema": {
                  "type": "string",
                  "example": "b41b2ca0-2a9b-11ec-9e88-e1ecf83deceb"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"16d-BpheYP4VHyvr0/fF2v/9lou3LvM\""
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "module": {
                            "type": "object",
                            "properties": {
                              "to": {
                                "type": "array",
                                "items": {}
                              },
                              "cc": {
                                "type": "array",
                                "items": {}
                              },
                              "bcc": {
                                "type": "array",
                                "items": {}
                              },
                              "templateValues": {
                                "type": "array",
                                "items": {}
                              },
                              "type": {
                                "type": "string",
                                "example": "note"
                              }
                            }
                          },
                          "from": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "user"
                              },
                              "fullName": {
                                "type": "string",
                                "example": "COM - postman"
                              }
                            }
                          },
                          "isFromMigration": {
                            "type": "boolean"
                          },
                          "_id": {
                            "type": "string",
                            "example": "61643413c9cf7a002d929325"
                          },
                          "body": {
                            "type": "string",
                            "example": "This is new message(COM postman)"
                          },
                          "attachments": {
                            "type": "array",
                            "items": {}
                          },
                          "conversationId": {
                            "type": "string",
                            "example": "615997c2e74f61003015ab02"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2021-10-11T12:54:43.248Z"
                          },
                          "__v": {
                            "type": "number",
                            "example": 0
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": [
                    {
                      "module": {
                        "to": [],
                        "cc": [],
                        "bcc": [],
                        "templateValues": [],
                        "type": "note"
                      },
                      "isFromMigration": false,
                      "_id": "616443adc9cf7a002d92933a",
                      "body": "This is new note(COM postman)",
                      "sentBy": "host",
                      "from": {
                        "type": "user",
                        "fullName": "COM - postman"
                      },
                      "conversationId": "615997c2e74f61003015ab02",
                      "createdAt": "2021-10-11T14:01:17.207Z",
                      "attachments": [],
                      "__v": 0
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/communication/conversations/{conversationId}/send-message": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "Inbox Conversations"
        ],
        "summary": "Post msg(Send new msg)",
        "description": "Owners conversations do not support airbnb2 module type, messages that sent with platform module type will be sent through Email.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "module": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "`sms`, `email`, `note`, `log`, `whatsapp`, `airbnb2`",
                        "example": "email"
                      },
                      "to": {
                        "type": "array",
                        "items": {},
                        "example": "[example@gmail.com]"
                      },
                      "cc": {
                        "type": "array",
                        "items": {},
                        "example": "[example@gmail.com]"
                      },
                      "bcc": {
                        "type": "array",
                        "items": {},
                        "example": "[example@gmail.com]"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "body": {
                    "type": "string",
                    "description": "The message itself",
                    "example": "This is a new message"
                  }
                },
                "required": [
                  "module",
                  "body"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Saved Conversation Id",
            "example": "615997c2e74f61003015ab02"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Mon, 11 Oct 2021 14:01:33 GMT"
                }
              },
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "example": "application/json; charset=utf-8"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "integer",
                  "example": "350"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "example": "keep-alive"
                }
              },
              "x-request-id": {
                "schema": {
                  "type": "string",
                  "example": "Root=1-616443bd-73428b9677363b9d40b367a8"
                }
              },
              "x-transit-id": {
                "schema": {
                  "type": "string",
                  "example": "bda83e20-2a9b-11ec-9e88-e1ecf83deceb"
                }
              },
              "X-DNS-Prefetch-Control": {
                "schema": {
                  "type": "string",
                  "example": "off"
                }
              },
              "X-Frame-Options": {
                "schema": {
                  "type": "string",
                  "example": "deny"
                }
              },
              "Strict-Transport-Security": {
                "schema": {
                  "type": "string",
                  "example": "max-age=31536000;includesubdomains"
                }
              },
              "X-Download-Options": {
                "schema": {
                  "type": "string",
                  "example": "noopen"
                }
              },
              "X-Content-Type-Options": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "X-XSS-Protection": {
                "schema": {
                  "type": "string",
                  "example": "1;mode=block"
                }
              },
              "ETag": {
                "schema": {
                  "type": "string",
                  "example": "W/\"15e-aRsLA9BzM2LmANsgn72f5jzwuls\""
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              },
              "x-content-type": {
                "schema": {
                  "type": "string",
                  "example": "nosniff"
                }
              },
              "x-permitted-cross-domain-policies": {
                "schema": {
                  "type": "string",
                  "example": "none"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "module": {
                          "type": "object",
                          "properties": {
                            "to": {
                              "type": "array",
                              "items": {}
                            },
                            "cc": {
                              "type": "array",
                              "items": {}
                            },
                            "bcc": {
                              "type": "array",
                              "items": {}
                            },
                            "templateValues": {
                              "type": "array",
                              "items": {}
                            },
                            "type": {
                              "type": "string",
                              "example": "note"
                            }
                          }
                        },
                        "from": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "user"
                            },
                            "fullName": {
                              "type": "string",
                              "example": "COM - postman"
                            }
                          }
                        },
                        "isFromMigration": {
                          "type": "boolean"
                        },
                        "_id": {
                          "type": "string",
                          "example": "61643413c9cf7a002d929325"
                        },
                        "body": {
                          "type": "string",
                          "example": "This is new message(COM postman)"
                        },
                        "attachments": {
                          "type": "array",
                          "items": {}
                        },
                        "conversationId": {
                          "type": "string",
                          "example": "615997c2e74f61003015ab02"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2021-10-11T12:54:43.248Z"
                        },
                        "__v": {
                          "type": "number",
                          "example": 0
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "data": {
                    "module": {
                      "to": [],
                      "cc": [],
                      "bcc": [],
                      "templateValues": [],
                      "type": "note"
                    },
                    "isFromMigration": false,
                    "_id": "616443bdc9cf7a002d92933e",
                    "body": "This is new message(COM postman)",
                    "attachments": [],
                    "from": {
                      "type": "user",
                      "fullName": "COM - postman"
                    },
                    "conversationId": "615997c2e74f61003015ab02",
                    "createdAt": "2021-10-11T14:01:33.224Z",
                    "__v": 0
                  }
                }
              }
            }
          }
        }
      }
    },
    "/additional-fees/account": {
      "post": {
        "tags": [
          "AdditionalFees"
        ],
        "summary": "Create additional fee on account level",
        "requestBody": {
          "description": "request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "when configuring the platform and sources fields, user discretion should be taken to choose platforms or sources that are integrated to the account/listing",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "define an internal name for your additional fee"
                  },
                  "type": {
                    "description": "Additional fee type.\n !!! Not all additional fee types can be synced with channels. If you select the additional fee type which cannot be synced with channels, and 'isSyncToSupportedChannelsEnabled' is [true] you will receive a validation error",
                    "type": "string",
                    "enum": [
                      "ADDITIONAL_BED",
                      "AIR_CONDITIONING",
                      "EARLY_CHECK_IN",
                      "LATE_CHECK_IN",
                      "BABY_BED",
                      "CLEANING",
                      "CLUB_CARD",
                      "CONCIERGE",
                      "EARLY_CHECKOUT",
                      "LATE_CHECKOUT",
                      "DEPOSIT",
                      "ELECTRICITY",
                      "FOOD",
                      "HEATING",
                      "INTERNET",
                      "LAUNDRY",
                      "LINENS",
                      "TOWELS",
                      "MANAGEMENT",
                      "OIL",
                      "PARKING",
                      "PET",
                      "POOL",
                      "POOL_HEATING",
                      "RESORT",
                      "SERVICE",
                      "TOILETRIES",
                      "TOUR",
                      "TRANSPORTATION",
                      "CAR_RENTAL",
                      "WATER",
                      "WOOD",
                      "TRANSFER",
                      "HOUSEKEEPING",
                      "INSURANCE",
                      "COMMUNITY",
                      "CREDIT_CARD_PROCESSING_FEE",
                      "DAMAGE_WAIVER",
                      "VIP_SERVICES",
                      "PAYMENT_FEE",
                      "ADDITIONAL_CHARGE",
                      "MISCELLANEOUS",
                      "SHIPPING",
                      "VALET",
                      "ACTIVITIES",
                      "FLIGHTS",
                      "GIFT_BASKET",
                      "SPA",
                      "CHEF",
                      "MEET_AND_GREET",
                      "DOCK_FEE",
                      "UTILITY_FEE",
                      "HOT_TUB",
                      "BOOKING_FEE",
                      "BREAKFAST",
                      "BEVERAGE",
                      "MEAL",
                      "WELLNESS",
                      "MINIBAR",
                      "BUSINESS_CENTER",
                      "WIFI",
                      "GUEST_SERVICE",
                      "COMMISSION_CHARGE",
                      "EQUIPMENT_RENTAL",
                      "RESERVATION_FEE",
                      "DAMAGE_CHARGE",
                      "HOMEOWNERS_ASSOCIATION",
                      "GOLF_CART_RENTAL"
                    ]
                  },
                  "value": {
                    "description": "1. must be bigger then 0,\n2. when 'isPercentage' is 'true' then must be also smaller or equal to 100",
                    "type": "integer"
                  },
                  "isPercentage": {
                    "description": "sets wether 'value' should be used as a fixed amount or percentage",
                    "type": "boolean"
                  },
                  "targetFee": {
                    "description": "1. the fee to use for the additional fee amount calculation when 'isPercentage' is 'true',\n2. required when 'isPercentage' is 'true'",
                    "type": "string",
                    "enum": [
                      "PAYOUT",
                      "CLEANING_FEE",
                      "ACCOMMODATION_FARE"
                    ]
                  },
                  "multiplier": {
                    "description": "1. sets the factor by which the 'value' will be multiplied in the additional fee amount calculation when 'isPercentage' is 'false',\n2. required when 'isPercentage' is 'false'",
                    "type": "string",
                    "enum": [
                      "PER_NIGHT",
                      "PER_GUEST",
                      "PER_GUEST_PER_NIGHT",
                      "PER_STAY"
                    ]
                  },
                  "isSyncToSupportedChannelsEnabled": {
                    "type": "boolean",
                    "description": "1. Sync fee to account or listing settings and all future reservations for supported booking channels. \n !!! Not all additional fee types can be synced with channels. If you select the additional fee type which cannot be synced with channels, and 'isSyncToSupportedChannelsEnabled' is [true] you will receive a validation error"
                  },
                  "isAutomated": {
                    "type": "boolean",
                    "description": "1. indicates if there are booking channels in which the additional fee should be added automatically to reservations once the reservation arrives in Guesty,\n2. if set to 'true', you must configure at least one of 'allSources', 'automationSources', 'allPlatforms', 'automationPlatforms', 'allRUSources', 'RUSources'"
                  },
                  "allPlatforms": {
                    "type": "boolean",
                    "description": "1. if 'true' then the additional fee will be added to all future reservations in Guesty for all booking channels,\n2. can not be 'true' when 'isAutomated' is 'false',\n3. can not be 'true' when 'automationPlatforms' is not empty"
                  },
                  "automationPlatforms": {
                    "type": "array",
                    "description": "1. additional fee will be added to future reservations in Guesty for specified booking channels,\n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allPlatforms' is 'true'",
                    "items": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "airbnb",
                        "airbnb2",
                        "rentalsUnited",
                        "bookingCom",
                        "expedia",
                        "homeAway",
                        "agoda",
                        "tripAdvisor",
                        "homeaway2",
                        "siteMinder",
                        "bookingPal"
                      ]
                    }
                  },
                  "allSources": {
                    "type": "boolean",
                    "description": "1. if 'true' then the additional fee will be added to all future reservations for all manual sources,\n2. can not be 'true' when 'isAutomated' is 'false',\n3. can not be 'true' when 'automationSources' is not empty"
                  },
                  "automationSources": {
                    "type": "array",
                    "description": "1. additional fee will be added to future reservations in Guesty for specified manual sources,\n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allSources' is 'true'",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allRUSources": {
                    "type": "boolean",
                    "description": "1. if 'true' then the additional fee will be added to all future rentals united reservations in Guesty for all rentals united booking channels,\n2. can not be 'true' when 'isAutomated' is 'false'\n3. can not be 'true' when 'RUSources' is not empty,\n4. when 'true' then 'rentalsUnited' must be included in 'automationPlatforms' or 'allPlatforms' must be 'true'"
                  },
                  "RUSources": {
                    "type": "array",
                    "description": "1. additional fee will be added to future rentals united reservations in Guesty for specified rentals united booking channels, \n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allRUSources' is 'true',\n4. when not empty then 'rentalsUnited' must be included in 'automationPlatforms' or 'allPlatforms' must be 'true'",
                    "items": {
                      "type": "string",
                      "enum": [
                        "agoda",
                        "bookingCom",
                        "despegar",
                        "expedia",
                        "hostelworld",
                        "homeAway"
                      ]
                    }
                  },
                  "isDeducted": {
                    "type": "boolean",
                    "description": "isDeducted must be [false] without isBundled being [true] when either isSyncToSupportedChannelsEnabled, isAutomated are [true]."
                  }
                },
                "required": [
                  "name",
                  "type",
                  "value",
                  "isPercentage"
                ]
              },
              "example": {
                "name": "AB",
                "type": "FOOD",
                "value": 5,
                "isPercentage": false,
                "multiplier": "PER_GUEST"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created additional fee item in account level",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ADDITIONAL_BED",
                        "AIR_CONDITIONING",
                        "EARLY_CHECK_IN",
                        "LATE_CHECK_IN",
                        "BABY_BED",
                        "CLEANING",
                        "CLUB_CARD",
                        "CONCIERGE",
                        "EARLY_CHECKOUT",
                        "LATE_CHECKOUT",
                        "DEPOSIT",
                        "ELECTRICITY",
                        "FOOD",
                        "HEATING",
                        "INTERNET",
                        "LAUNDRY",
                        "LINENS",
                        "TOWELS",
                        "MANAGEMENT",
                        "OIL",
                        "PARKING",
                        "PET",
                        "POOL",
                        "POOL_HEATING",
                        "RESORT",
                        "SERVICE",
                        "TOILETRIES",
                        "TOUR",
                        "TRANSPORTATION",
                        "CAR_RENTAL",
                        "WATER",
                        "WOOD",
                        "TRANSFER",
                        "HOUSEKEEPING",
                        "INSURANCE",
                        "COMMUNITY",
                        "CREDIT_CARD_PROCESSING_FEE",
                        "DAMAGE_WAIVER",
                        "VIP_SERVICES",
                        "PAYMENT_FEE",
                        "ADDITIONAL_CHARGE",
                        "MISCELLANEOUS",
                        "SHIPPING",
                        "VALET",
                        "ACTIVITIES",
                        "FLIGHTS",
                        "GIFT_BASKET",
                        "SPA",
                        "CHEF",
                        "MEET_AND_GREET",
                        "DOCK_FEE",
                        "UTILITY_FEE",
                        "HOT_TUB",
                        "BOOKING_FEE",
                        "BREAKFAST",
                        "BEVERAGE",
                        "MEAL",
                        "WELLNESS",
                        "MINIBAR",
                        "BUSINESS_CENTER",
                        "WIFI",
                        "GUEST_SERVICE",
                        "COMMISSION_CHARGE",
                        "EQUIPMENT_RENTAL",
                        "RESERVATION_FEE",
                        "DAMAGE_CHARGE",
                        "HOMEOWNERS_ASSOCIATION",
                        "GOLF_CART_RENTAL"
                      ]
                    },
                    "value": {
                      "type": "integer"
                    },
                    "targetFee": {
                      "type": "string",
                      "enum": [
                        "PAYOUT",
                        "CLEANING_FEE",
                        "ACCOMMODATION_FARE"
                      ]
                    },
                    "automationSources": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "automationPlatforms": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "manual",
                          "airbnb",
                          "airbnb2",
                          "rentalsUnited",
                          "bookingCom",
                          "expedia",
                          "homeAway",
                          "agoda",
                          "tripAdvisor",
                          "homeaway2",
                          "siteMinder",
                          "bookingPal"
                        ]
                      }
                    },
                    "RUSources": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "agoda",
                          "bookingCom",
                          "despegar",
                          "expedia",
                          "hostelworld",
                          "homeAway"
                        ]
                      }
                    },
                    "allSources": {
                      "type": "boolean"
                    },
                    "isDeducted": {
                      "type": "boolean"
                    },
                    "isBundled": {
                      "type": "boolean"
                    },
                    "allPlatforms": {
                      "type": "boolean"
                    },
                    "allRUSources": {
                      "type": "boolean"
                    },
                    "isAutomated": {
                      "type": "boolean"
                    },
                    "isPercentage": {
                      "type": "boolean"
                    },
                    "multiplier": {
                      "type": "string",
                      "enum": [
                        "PER_NIGHT",
                        "PER_GUEST",
                        "PER_GUEST_PER_NIGHT",
                        "PER_STAY"
                      ]
                    },
                    "isSyncToSupportedChannelsEnabled": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "Created additional fee": {
                    "description": "additional fee example",
                    "value": {
                      "_id": "5fa02fa358d2db673e17bc2d",
                      "isPercentage": false,
                      "automationSources": [],
                      "automationPlatforms": [],
                      "RUSources": [],
                      "isAutomated": false,
                      "allPlatforms": false,
                      "allRUSources": false,
                      "allSources": false,
                      "name": "AB",
                      "type": "FOOD",
                      "value": 5,
                      "accountId": "596f6fe706112710005d96ff",
                      "isSyncToSupportedChannelsEnabled": false,
                      "__v": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "AdditionalFees"
        ],
        "summary": "Get list of additional fees for account",
        "responses": {
          "200": {
            "description": "List of additional fees configured on account level",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "accountId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "ADDITIONAL_BED",
                          "AIR_CONDITIONING",
                          "EARLY_CHECK_IN",
                          "LATE_CHECK_IN",
                          "BABY_BED",
                          "CLEANING",
                          "CLUB_CARD",
                          "CONCIERGE",
                          "EARLY_CHECKOUT",
                          "LATE_CHECKOUT",
                          "DEPOSIT",
                          "ELECTRICITY",
                          "FOOD",
                          "HEATING",
                          "INTERNET",
                          "LAUNDRY",
                          "LINENS",
                          "TOWELS",
                          "MANAGEMENT",
                          "OIL",
                          "PARKING",
                          "PET",
                          "POOL",
                          "POOL_HEATING",
                          "RESORT",
                          "SERVICE",
                          "TOILETRIES",
                          "TOUR",
                          "TRANSPORTATION",
                          "CAR_RENTAL",
                          "WATER",
                          "WOOD",
                          "TRANSFER",
                          "HOUSEKEEPING",
                          "INSURANCE",
                          "COMMUNITY",
                          "CREDIT_CARD_PROCESSING_FEE",
                          "DAMAGE_WAIVER",
                          "VIP_SERVICES",
                          "PAYMENT_FEE",
                          "ADDITIONAL_CHARGE",
                          "MISCELLANEOUS",
                          "SHIPPING",
                          "VALET",
                          "ACTIVITIES",
                          "FLIGHTS",
                          "GIFT_BASKET",
                          "SPA",
                          "CHEF",
                          "MEET_AND_GREET",
                          "DOCK_FEE",
                          "UTILITY_FEE",
                          "HOT_TUB",
                          "BOOKING_FEE",
                          "BREAKFAST",
                          "BEVERAGE",
                          "MEAL",
                          "WELLNESS",
                          "MINIBAR",
                          "BUSINESS_CENTER",
                          "WIFI",
                          "GUEST_SERVICE",
                          "COMMISSION_CHARGE",
                          "EQUIPMENT_RENTAL",
                          "RESERVATION_FEE",
                          "DAMAGE_CHARGE",
                          "HOMEOWNERS_ASSOCIATION",
                          "GOLF_CART_RENTAL"
                        ]
                      },
                      "value": {
                        "type": "integer"
                      },
                      "targetFee": {
                        "type": "string",
                        "enum": [
                          "PAYOUT",
                          "CLEANING_FEE",
                          "ACCOMMODATION_FARE"
                        ]
                      },
                      "automationSources": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "automationPlatforms": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "manual",
                            "airbnb",
                            "airbnb2",
                            "rentalsUnited",
                            "bookingCom",
                            "expedia",
                            "homeAway",
                            "agoda",
                            "tripAdvisor",
                            "homeaway2",
                            "siteMinder",
                            "bookingPal"
                          ]
                        }
                      },
                      "RUSources": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "agoda",
                            "bookingCom",
                            "despegar",
                            "expedia",
                            "hostelworld",
                            "homeAway"
                          ]
                        }
                      },
                      "allSources": {
                        "type": "boolean"
                      },
                      "isDeducted": {
                        "type": "boolean"
                      },
                      "isBundled": {
                        "type": "boolean"
                      },
                      "allPlatforms": {
                        "type": "boolean"
                      },
                      "allRUSources": {
                        "type": "boolean"
                      },
                      "isAutomated": {
                        "type": "boolean"
                      },
                      "isPercentage": {
                        "type": "boolean"
                      },
                      "multiplier": {
                        "type": "string",
                        "enum": [
                          "PER_NIGHT",
                          "PER_GUEST",
                          "PER_GUEST_PER_NIGHT",
                          "PER_STAY"
                        ]
                      },
                      "isSyncToSupportedChannelsEnabled": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "examples": {
                  "Fees list": {
                    "description": "list of additional fees",
                    "value": [
                      {
                        "_id": "5fa02fa358d2db673e17bc2d",
                        "isPercentage": false,
                        "automationSources": [],
                        "automationPlatforms": [],
                        "RUSources": [],
                        "isAutomated": false,
                        "allPlatforms": false,
                        "allRUSources": false,
                        "allSources": false,
                        "name": "AB",
                        "type": "EARLY_CHECK_IN",
                        "value": 5,
                        "accountId": "596f6fe706112710005d96ff",
                        "isSyncToSupportedChannelsEnabled": false,
                        "multiplier": "PER_GUEST",
                        "__v": 0
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/additional-fees/listing/{listingId}": {
      "post": {
        "tags": [
          "AdditionalFees"
        ],
        "summary": "Create additional fee on listing level",
        "parameters": [
          {
            "in": "path",
            "name": "listingId",
            "required": true,
            "example": "5c2cc4be46cb1e00226a5b6e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "request payload",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "when configuring the platform and sources fields, user discretion should be taken to choose platforms or sources that are integrated to the account/listing",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "define an internal name for your additional fee"
                  },
                  "type": {
                    "description": "Additional fee type.\n !!! Not all additional fee types can be synced with channels. If you select the additional fee type which cannot be synced with channels, and 'isSyncToSupportedChannelsEnabled' is [true] you will receive a validation error",
                    "type": "string",
                    "enum": [
                      "ADDITIONAL_BED",
                      "AIR_CONDITIONING",
                      "EARLY_CHECK_IN",
                      "LATE_CHECK_IN",
                      "BABY_BED",
                      "CLEANING",
                      "CLUB_CARD",
                      "CONCIERGE",
                      "EARLY_CHECKOUT",
                      "LATE_CHECKOUT",
                      "DEPOSIT",
                      "ELECTRICITY",
                      "FOOD",
                      "HEATING",
                      "INTERNET",
                      "LAUNDRY",
                      "LINENS",
                      "TOWELS",
                      "MANAGEMENT",
                      "OIL",
                      "PARKING",
                      "PET",
                      "POOL",
                      "POOL_HEATING",
                      "RESORT",
                      "SERVICE",
                      "TOILETRIES",
                      "TOUR",
                      "TRANSPORTATION",
                      "CAR_RENTAL",
                      "WATER",
                      "WOOD",
                      "TRANSFER",
                      "HOUSEKEEPING",
                      "INSURANCE",
                      "COMMUNITY",
                      "CREDIT_CARD_PROCESSING_FEE",
                      "DAMAGE_WAIVER",
                      "VIP_SERVICES",
                      "PAYMENT_FEE",
                      "ADDITIONAL_CHARGE",
                      "MISCELLANEOUS",
                      "SHIPPING",
                      "VALET",
                      "ACTIVITIES",
                      "FLIGHTS",
                      "GIFT_BASKET",
                      "SPA",
                      "CHEF",
                      "MEET_AND_GREET",
                      "DOCK_FEE",
                      "UTILITY_FEE",
                      "HOT_TUB",
                      "BOOKING_FEE",
                      "BREAKFAST",
                      "BEVERAGE",
                      "MEAL",
                      "WELLNESS",
                      "MINIBAR",
                      "BUSINESS_CENTER",
                      "WIFI",
                      "GUEST_SERVICE",
                      "COMMISSION_CHARGE",
                      "EQUIPMENT_RENTAL",
                      "RESERVATION_FEE",
                      "DAMAGE_CHARGE",
                      "HOMEOWNERS_ASSOCIATION",
                      "GOLF_CART_RENTAL"
                    ]
                  },
                  "value": {
                    "description": "1. must be bigger then 0,\n2. when 'isPercentage' is 'true' then must be also smaller or equal to 100",
                    "type": "integer"
                  },
                  "isPercentage": {
                    "description": "sets wether 'value' should be used as a fixed amount or percentage",
                    "type": "boolean"
                  },
                  "targetFee": {
                    "description": "1. the fee to use for the additional fee amount calculation when 'isPercentage' is 'true',\n2. required when 'isPercentage' is 'true'",
                    "type": "string",
                    "enum": [
                      "PAYOUT",
                      "CLEANING_FEE",
                      "ACCOMMODATION_FARE"
                    ]
                  },
                  "multiplier": {
                    "description": "1. sets the factor by which the 'value' will be multiplied in the additional fee amount calculation when 'isPercentage' is 'false',\n2. required when 'isPercentage' is 'false'",
                    "type": "string",
                    "enum": [
                      "PER_NIGHT",
                      "PER_GUEST",
                      "PER_GUEST_PER_NIGHT",
                      "PER_STAY"
                    ]
                  },
                  "isSyncToSupportedChannelsEnabled": {
                    "type": "boolean",
                    "description": "1. Sync fee to account or listing settings and all future reservations for supported booking channels. \n !!! Not all additional fee types can be synced with channels. If you select the additional fee type which cannot be synced with channels, and 'isSyncToSupportedChannelsEnabled' is [true] you will receive a validation error"
                  },
                  "isAutomated": {
                    "type": "boolean",
                    "description": "1. indicates if there are booking channels in which the additional fee should be added automatically to reservations once the reservation arrives in Guesty,\n2. if set to 'true', you must configure at least one of 'allSources', 'automationSources', 'allPlatforms', 'automationPlatforms', 'allRUSources', 'RUSources'"
                  },
                  "allPlatforms": {
                    "type": "boolean",
                    "description": "1. if 'true' then the additional fee will be added to all future reservations in Guesty for all booking channels,\n2. can not be 'true' when 'isAutomated' is 'false',\n3. can not be 'true' when 'automationPlatforms' is not empty"
                  },
                  "automationPlatforms": {
                    "type": "array",
                    "description": "1. additional fee will be added to future reservations in Guesty for specified booking channels,\n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allPlatforms' is 'true'",
                    "items": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "airbnb",
                        "airbnb2",
                        "rentalsUnited",
                        "bookingCom",
                        "expedia",
                        "homeAway",
                        "agoda",
                        "tripAdvisor",
                        "homeaway2",
                        "siteMinder",
                        "bookingPal"
                      ]
                    }
                  },
                  "allSources": {
                    "type": "boolean",
                    "description": "1. if 'true' then the additional fee will be added to all future reservations for all manual sources,\n2. can not be 'true' when 'isAutomated' is 'false',\n3. can not be 'true' when 'automationSources' is not empty"
                  },
                  "automationSources": {
                    "type": "array",
                    "description": "1. additional fee will be added to future reservations in Guesty for specified manual sources,\n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allSources' is 'true'",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allRUSources": {
                    "type": "boolean",
                    "description": "1. if 'true' then the additional fee will be added to all future rentals united reservations in Guesty for all rentals united booking channels,\n2. can not be 'true' when 'isAutomated' is 'false'\n3. can not be 'true' when 'RUSources' is not empty,\n4. when 'true' then 'rentalsUnited' must be included in 'automationPlatforms' or 'allPlatforms' must be 'true'"
                  },
                  "RUSources": {
                    "type": "array",
                    "description": "1. additional fee will be added to future rentals united reservations in Guesty for specified rentals united booking channels, \n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allRUSources' is 'true',\n4. when not empty then 'rentalsUnited' must be included in 'automationPlatforms' or 'allPlatforms' must be 'true'",
                    "items": {
                      "type": "string",
                      "enum": [
                        "agoda",
                        "bookingCom",
                        "despegar",
                        "expedia",
                        "hostelworld",
                        "homeAway"
                      ]
                    }
                  },
                  "isDeducted": {
                    "type": "boolean",
                    "description": "isDeducted must be [false] without isBundled being [true] when either isSyncToSupportedChannelsEnabled, isAutomated are [true]."
                  }
                },
                "required": [
                  "name",
                  "type",
                  "value",
                  "isPercentage"
                ]
              },
              "example": {
                "name": "AB",
                "type": "EARLY_CHECK_IN",
                "value": 5,
                "isPercentage": false,
                "multiplier": "PER_GUEST"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "created additional fee item in account level",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ADDITIONAL_BED",
                        "AIR_CONDITIONING",
                        "EARLY_CHECK_IN",
                        "LATE_CHECK_IN",
                        "BABY_BED",
                        "CLEANING",
                        "CLUB_CARD",
                        "CONCIERGE",
                        "EARLY_CHECKOUT",
                        "LATE_CHECKOUT",
                        "DEPOSIT",
                        "ELECTRICITY",
                        "FOOD",
                        "HEATING",
                        "INTERNET",
                        "LAUNDRY",
                        "LINENS",
                        "TOWELS",
                        "MANAGEMENT",
                        "OIL",
                        "PARKING",
                        "PET",
                        "POOL",
                        "POOL_HEATING",
                        "RESORT",
                        "SERVICE",
                        "TOILETRIES",
                        "TOUR",
                        "TRANSPORTATION",
                        "CAR_RENTAL",
                        "WATER",
                        "WOOD",
                        "TRANSFER",
                        "HOUSEKEEPING",
                        "INSURANCE",
                        "COMMUNITY",
                        "CREDIT_CARD_PROCESSING_FEE",
                        "DAMAGE_WAIVER",
                        "VIP_SERVICES",
                        "PAYMENT_FEE",
                        "ADDITIONAL_CHARGE",
                        "MISCELLANEOUS",
                        "SHIPPING",
                        "VALET",
                        "ACTIVITIES",
                        "FLIGHTS",
                        "GIFT_BASKET",
                        "SPA",
                        "CHEF",
                        "MEET_AND_GREET",
                        "DOCK_FEE",
                        "UTILITY_FEE",
                        "HOT_TUB",
                        "BOOKING_FEE",
                        "BREAKFAST",
                        "BEVERAGE",
                        "MEAL",
                        "WELLNESS",
                        "MINIBAR",
                        "BUSINESS_CENTER",
                        "WIFI",
                        "GUEST_SERVICE",
                        "COMMISSION_CHARGE",
                        "EQUIPMENT_RENTAL",
                        "RESERVATION_FEE",
                        "DAMAGE_CHARGE",
                        "HOMEOWNERS_ASSOCIATION",
                        "GOLF_CART_RENTAL"
                      ]
                    },
                    "value": {
                      "type": "integer"
                    },
                    "listingId": {
                      "type": "string"
                    },
                    "targetFee": {
                      "type": "string",
                      "enum": [
                        "PAYOUT",
                        "CLEANING_FEE",
                        "ACCOMMODATION_FARE"
                      ]
                    },
                    "automationSources": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "automationPlatforms": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "manual",
                          "airbnb",
                          "airbnb2",
                          "rentalsUnited",
                          "bookingCom",
                          "expedia",
                          "homeAway",
                          "agoda",
                          "tripAdvisor",
                          "homeaway2",
                          "siteMinder",
                          "bookingPal"
                        ]
                      }
                    },
                    "RUSources": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "agoda",
                          "bookingCom",
                          "despegar",
                          "expedia",
                          "hostelworld",
                          "homeAway"
                        ]
                      }
                    },
                    "allSources": {
                      "type": "boolean"
                    },
                    "allPlatforms": {
                      "type": "boolean"
                    },
                    "allRUSources": {
                      "type": "boolean"
                    },
                    "isAutomated": {
                      "type": "boolean"
                    },
                    "isPercentage": {
                      "type": "boolean"
                    },
                    "multiplier": {
                      "type": "string",
                      "enum": [
                        "PER_NIGHT",
                        "PER_GUEST",
                        "PER_GUEST_PER_NIGHT",
                        "PER_STAY"
                      ]
                    },
                    "isSyncToSupportedChannelsEnabled": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "Created additional fee": {
                    "description": "additional fee example",
                    "value": {
                      "_id": "5fa02fa358d2db673e17bc2d",
                      "isPercentage": false,
                      "automationSources": [],
                      "automationPlatforms": [],
                      "RUSources": [],
                      "listingId": "5c2cc4be46cb1e00226a5b6e",
                      "isAutomated": false,
                      "allPlatforms": false,
                      "allRUSources": false,
                      "allSources": false,
                      "name": "AB",
                      "type": "FOOD",
                      "value": 5,
                      "accountId": "596f6fe706112710005d96ff",
                      "isSyncToSupportedChannelsEnabled": false,
                      "__v": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "AdditionalFees"
        ],
        "summary": "Get list of additional fees for listing",
        "parameters": [
          {
            "in": "path",
            "name": "listingId",
            "required": true,
            "example": "5c2cc4be46cb1e00226a5b6e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of additional fees of listing",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "accountId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "ADDITIONAL_BED",
                          "AIR_CONDITIONING",
                          "EARLY_CHECK_IN",
                          "LATE_CHECK_IN",
                          "BABY_BED",
                          "CLEANING",
                          "CLUB_CARD",
                          "CONCIERGE",
                          "EARLY_CHECKOUT",
                          "LATE_CHECKOUT",
                          "DEPOSIT",
                          "ELECTRICITY",
                          "FOOD",
                          "HEATING",
                          "INTERNET",
                          "LAUNDRY",
                          "LINENS",
                          "TOWELS",
                          "MANAGEMENT",
                          "OIL",
                          "PARKING",
                          "PET",
                          "POOL",
                          "POOL_HEATING",
                          "RESORT",
                          "SERVICE",
                          "TOILETRIES",
                          "TOUR",
                          "TRANSPORTATION",
                          "CAR_RENTAL",
                          "WATER",
                          "WOOD",
                          "TRANSFER",
                          "HOUSEKEEPING",
                          "INSURANCE",
                          "COMMUNITY",
                          "CREDIT_CARD_PROCESSING_FEE",
                          "DAMAGE_WAIVER",
                          "VIP_SERVICES",
                          "PAYMENT_FEE",
                          "ADDITIONAL_CHARGE",
                          "MISCELLANEOUS",
                          "SHIPPING",
                          "VALET",
                          "ACTIVITIES",
                          "FLIGHTS",
                          "GIFT_BASKET",
                          "SPA",
                          "CHEF",
                          "MEET_AND_GREET",
                          "DOCK_FEE",
                          "UTILITY_FEE",
                          "HOT_TUB",
                          "BOOKING_FEE",
                          "BREAKFAST",
                          "BEVERAGE",
                          "MEAL",
                          "WELLNESS",
                          "MINIBAR",
                          "BUSINESS_CENTER",
                          "WIFI",
                          "GUEST_SERVICE",
                          "COMMISSION_CHARGE",
                          "EQUIPMENT_RENTAL",
                          "RESERVATION_FEE",
                          "DAMAGE_CHARGE",
                          "HOMEOWNERS_ASSOCIATION",
                          "GOLF_CART_RENTAL"
                        ]
                      },
                      "value": {
                        "type": "integer"
                      },
                      "listingId": {
                        "type": "string"
                      },
                      "targetFee": {
                        "type": "string",
                        "enum": [
                          "PAYOUT",
                          "CLEANING_FEE",
                          "ACCOMMODATION_FARE"
                        ]
                      },
                      "automationSources": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "automationPlatforms": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "manual",
                            "airbnb",
                            "airbnb2",
                            "rentalsUnited",
                            "bookingCom",
                            "expedia",
                            "homeAway",
                            "agoda",
                            "tripAdvisor",
                            "homeaway2",
                            "siteMinder",
                            "bookingPal"
                          ]
                        }
                      },
                      "RUSources": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "agoda",
                            "bookingCom",
                            "despegar",
                            "expedia",
                            "hostelworld",
                            "homeAway"
                          ]
                        }
                      },
                      "allSources": {
                        "type": "boolean"
                      },
                      "allPlatforms": {
                        "type": "boolean"
                      },
                      "allRUSources": {
                        "type": "boolean"
                      },
                      "isAutomated": {
                        "type": "boolean"
                      },
                      "isPercentage": {
                        "type": "boolean"
                      },
                      "multiplier": {
                        "type": "string",
                        "enum": [
                          "PER_NIGHT",
                          "PER_GUEST",
                          "PER_GUEST_PER_NIGHT",
                          "PER_STAY"
                        ]
                      },
                      "isSyncToSupportedChannelsEnabled": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "examples": {
                  "Fees list": {
                    "description": "list of additional fees",
                    "value": [
                      {
                        "_id": "5fa02fa358d2db673e17bc2d",
                        "isPercentage": false,
                        "automationSources": [],
                        "automationPlatforms": [],
                        "RUSources": [],
                        "listingId": "5c2cc4be46cb1e00226a5b6e",
                        "isAutomated": false,
                        "allPlatforms": false,
                        "allRUSources": false,
                        "allSources": false,
                        "name": "AB",
                        "type": "EARLY_CHECK_IN",
                        "value": 5,
                        "accountId": "596f6fe706112710005d96ff",
                        "isSyncToSupportedChannelsEnabled": false,
                        "multiplier": "PER_GUEST",
                        "__v": 0
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/additional-fees/{id}": {
      "patch": {
        "tags": [
          "AdditionalFees"
        ],
        "summary": "Update existing additional fee",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id of item to update",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Fields to be updated with their value, the same restrictions for the creation of a new additionalFee are applied on the updated AdditionalFee as well",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "when configuring the platform and sources fields, user discretion should be taken to choose platforms or sources that are integrated to the account/listing",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "ADDITIONAL_BED",
                      "AIR_CONDITIONING",
                      "EARLY_CHECK_IN",
                      "LATE_CHECK_IN",
                      "BABY_BED",
                      "CLEANING",
                      "CLUB_CARD",
                      "CONCIERGE",
                      "EARLY_CHECKOUT",
                      "LATE_CHECKOUT",
                      "DEPOSIT",
                      "ELECTRICITY",
                      "FOOD",
                      "HEATING",
                      "INTERNET",
                      "LAUNDRY",
                      "LINENS",
                      "TOWELS",
                      "MANAGEMENT",
                      "OIL",
                      "PARKING",
                      "PET",
                      "POOL",
                      "POOL_HEATING",
                      "RESORT",
                      "SERVICE",
                      "TOILETRIES",
                      "TOUR",
                      "TRANSPORTATION",
                      "CAR_RENTAL",
                      "WATER",
                      "WOOD",
                      "TRANSFER",
                      "HOUSEKEEPING",
                      "INSURANCE",
                      "COMMUNITY",
                      "CREDIT_CARD_PROCESSING_FEE",
                      "DAMAGE_WAIVER",
                      "VIP_SERVICES",
                      "PAYMENT_FEE",
                      "ADDITIONAL_CHARGE",
                      "MISCELLANEOUS",
                      "SHIPPING",
                      "VALET",
                      "ACTIVITIES",
                      "FLIGHTS",
                      "GIFT_BASKET",
                      "SPA",
                      "CHEF",
                      "MEET_AND_GREET",
                      "DOCK_FEE",
                      "UTILITY_FEE",
                      "HOT_TUB",
                      "BOOKING_FEE",
                      "BREAKFAST",
                      "BEVERAGE",
                      "MEAL",
                      "WELLNESS",
                      "MINIBAR",
                      "BUSINESS_CENTER",
                      "WIFI",
                      "GUEST_SERVICE",
                      "COMMISSION_CHARGE",
                      "EQUIPMENT_RENTAL",
                      "RESERVATION_FEE",
                      "DAMAGE_CHARGE",
                      "HOMEOWNERS_ASSOCIATION",
                      "GOLF_CART_RENTAL"
                    ],
                    "description": "Additional fee type.\n !!! Not all additional fee types can be synced with channels. If you select the additional fee type which cannot be synced with channels, and 'isSyncToSupportedChannelsEnabled' is [true] you will receive a validation error"
                  },
                  "value": {
                    "description": "1. must be bigger then 0,\n2. when 'isPercentage' is 'true' then must be also smaller or equal to 100",
                    "type": "integer"
                  },
                  "isPercentage": {
                    "description": "sets wether 'value' should be used as a fixed amount or percentage",
                    "type": "boolean"
                  },
                  "targetFee": {
                    "type": "string",
                    "enum": [
                      "PAYOUT",
                      "CLEANING_FEE",
                      "ACCOMMODATION_FARE"
                    ],
                    "description": "1. the fee to use for the additional fee amount calculation when 'isPercentage' is 'true',\n2. required when 'isPercentage' is 'true'"
                  },
                  "multiplier": {
                    "type": "string",
                    "enum": [
                      "PER_NIGHT",
                      "PER_GUEST",
                      "PER_GUEST_PER_NIGHT",
                      "PER_STAY"
                    ],
                    "description": "1. sets the factor by which the 'value' will be multiplied in the additional fee amount calculation when 'isPercentage' is 'false',\n2. required when 'isPercentage' is 'false'"
                  },
                  "isSyncToSupportedChannelsEnabled": {
                    "type": "boolean",
                    "description": "1. Sync fee to account or listing settings and all future reservations for supported booking channels. \n !!! Not all additional fee types can be synced with channels. If you select the additional fee type which cannot be synced with channels, and 'isSyncToSupportedChannelsEnabled' is [true] you will receive a validation error"
                  },
                  "isAutomated": {
                    "type": "boolean",
                    "description": "1. indicates if there are booking channels in which the additional fee should be added automatically to reservations once the reservation arrives in Guesty,\n2. if set to 'true', you must configure at least one of 'allSources', 'automationSources', 'allPlatforms', 'automationPlatforms', 'allRUSources', 'RUSources'"
                  },
                  "allPlatforms": {
                    "type": "boolean",
                    "description": "1. if 'true' then the additional fee will be added to all future reservations in Guesty for all booking channels,\n2. can not be 'true' when 'isAutomated' is 'false',\n3. can not be 'true' when 'automationPlatforms' is not empty"
                  },
                  "automationPlatforms": {
                    "type": "array",
                    "description": "1. additional fee will be added to future reservations in Guesty for specified booking channels,\n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allPlatforms' is 'true'",
                    "items": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "airbnb",
                        "airbnb2",
                        "rentalsUnited",
                        "bookingCom",
                        "expedia",
                        "homeAway",
                        "agoda",
                        "tripAdvisor",
                        "homeaway2",
                        "siteMinder",
                        "bookingPal"
                      ]
                    }
                  },
                  "allSources": {
                    "type": "boolean",
                    "description": "1. if 'true' then the additional fee will be added to all future reservations for all manual sources,\n2. can not be 'true' when 'isAutomated' is 'false',\n3. can not be 'true' when 'automationSources' is not empty"
                  },
                  "automationSources": {
                    "type": "array",
                    "description": "1. additional fee will be added to future reservations in Guesty for specified manual sources,\n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allSources' is 'true'",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allRUSources": {
                    "type": "boolean",
                    "description": "1. if 'true' then the additional fee will be added to all future rentals united reservations in Guesty for all rentals united booking channels,\n2. can not be 'true' when 'isAutomated' is 'false'\n3. can not be 'true' when 'RUSources' is not empty,\n4. when 'true' then 'rentalsUnited' must be included in 'automationPlatforms' or 'allPlatforms' must be 'true'"
                  },
                  "RUSources": {
                    "type": "array",
                    "description": "1. additional fee will be added to future rentals united reservations in Guesty for specified rentals united booking channels, \n2. can not contain values when 'isAutomated' is 'false',\n3. can not contain values when 'allRUSources' is 'true',\n4. when not empty then 'rentalsUnited' must be included in 'automationPlatforms' or 'allPlatforms' must be 'true'",
                    "items": {
                      "type": "string",
                      "enum": [
                        "agoda",
                        "bookingCom",
                        "despegar",
                        "expedia",
                        "hostelworld",
                        "homeAway"
                      ]
                    }
                  },
                  "isDeducted": {
                    "type": "boolean",
                    "description": "1. Additional fee will be deducted from Accommodation Fare. isDeducted must be [false] without isBundled being [true] when either isSyncToSupportedChannelsEnabled, isAutomated are [true]."
                  },
                  "isBundled": {
                    "type": "boolean",
                    "description": "1. Additional fee value bundles/adds to Accommodation Fare, line item will not be created. when isBundled is [true] isDeducted and isSyncToSupportedChannelsEnabled must be [true], isAutomated must be [false]."
                  }
                }
              },
              "example": {
                "name": "AB",
                "type": "EARLY_CHECK_IN",
                "value": 5,
                "isPercentage": false,
                "multiplier": "PER_GUEST"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated additional fee item",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ADDITIONAL_BED",
                        "AIR_CONDITIONING",
                        "EARLY_CHECK_IN",
                        "LATE_CHECK_IN",
                        "BABY_BED",
                        "CLEANING",
                        "CLUB_CARD",
                        "CONCIERGE",
                        "EARLY_CHECKOUT",
                        "LATE_CHECKOUT",
                        "DEPOSIT",
                        "ELECTRICITY",
                        "FOOD",
                        "HEATING",
                        "INTERNET",
                        "LAUNDRY",
                        "LINENS",
                        "TOWELS",
                        "MANAGEMENT",
                        "OIL",
                        "PARKING",
                        "PET",
                        "POOL",
                        "POOL_HEATING",
                        "RESORT",
                        "SERVICE",
                        "TOILETRIES",
                        "TOUR",
                        "TRANSPORTATION",
                        "CAR_RENTAL",
                        "WATER",
                        "WOOD",
                        "TRANSFER",
                        "HOUSEKEEPING",
                        "INSURANCE",
                        "COMMUNITY",
                        "CREDIT_CARD_PROCESSING_FEE",
                        "DAMAGE_WAIVER",
                        "VIP_SERVICES",
                        "PAYMENT_FEE",
                        "ADDITIONAL_CHARGE",
                        "MISCELLANEOUS",
                        "SHIPPING",
                        "VALET",
                        "ACTIVITIES",
                        "FLIGHTS",
                        "GIFT_BASKET",
                        "SPA",
                        "CHEF",
                        "MEET_AND_GREET",
                        "DOCK_FEE",
                        "UTILITY_FEE",
                        "HOT_TUB",
                        "BOOKING_FEE",
                        "BREAKFAST",
                        "BEVERAGE",
                        "MEAL",
                        "WELLNESS",
                        "MINIBAR",
                        "BUSINESS_CENTER",
                        "WIFI",
                        "GUEST_SERVICE",
                        "COMMISSION_CHARGE",
                        "EQUIPMENT_RENTAL",
                        "RESERVATION_FEE",
                        "DAMAGE_CHARGE",
                        "HOMEOWNERS_ASSOCIATION",
                        "GOLF_CART_RENTAL"
                      ]
                    },
                    "value": {
                      "type": "integer"
                    },
                    "targetFee": {
                      "type": "string",
                      "enum": [
                        "PAYOUT",
                        "CLEANING_FEE",
                        "ACCOMMODATION_FARE"
                      ]
                    },
                    "automationSources": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "automationPlatforms": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "manual",
                          "airbnb",
                          "airbnb2",
                          "rentalsUnited",
                          "bookingCom",
                          "expedia",
                          "homeAway",
                          "agoda",
                          "tripAdvisor",
                          "homeaway2",
                          "siteMinder",
                          "bookingPal"
                        ]
                      }
                    },
                    "RUSources": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "agoda",
                          "bookingCom",
                          "despegar",
                          "expedia",
                          "hostelworld",
                          "homeAway"
                        ]
                      }
                    },
                    "allSources": {
                      "type": "boolean"
                    },
                    "isDeducted": {
                      "type": "boolean"
                    },
                    "isBundled": {
                      "type": "boolean"
                    },
                    "allPlatforms": {
                      "type": "boolean"
                    },
                    "allRUSources": {
                      "type": "boolean"
                    },
                    "isAutomated": {
                      "type": "boolean"
                    },
                    "isPercentage": {
                      "type": "boolean"
                    },
                    "multiplier": {
                      "type": "string",
                      "enum": [
                        "PER_NIGHT",
                        "PER_GUEST",
                        "PER_GUEST_PER_NIGHT",
                        "PER_STAY"
                      ]
                    },
                    "isSyncToSupportedChannelsEnabled": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "Created additional fee": {
                    "description": "additional fee example",
                    "value": {
                      "_id": "5fa02fa358d2db673e17bc2d",
                      "isPercentage": false,
                      "automationSources": [],
                      "automationPlatforms": [],
                      "RUSources": [],
                      "isAutomated": false,
                      "allPlatforms": false,
                      "allRUSources": false,
                      "allSources": false,
                      "name": "AB",
                      "type": "FOOD",
                      "value": 5,
                      "accountId": "596f6fe706112710005d96ff",
                      "isSyncToSupportedChannelsEnabled": false,
                      "__v": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "AdditionalFees"
        ],
        "summary": "Delete existing additional fee",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id of item to remove",
            "required": true,
            "example": "5fa02fa358d2db673e17bc2d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Additional fee item deleted"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/taxes": {
      "post": {
        "operationId": "TaxesController_createTax",
        "summary": "Create tax",
        "description": "Create tax configuration with the provided settings.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "unitTypeId": {
                    "type": "string",
                    "description": "1. The unit (listing) id on which the new tax will apply.\n2. To apply the tax on account level, leave this field empty.",
                    "example": "623892d57f4f56afcb25587c"
                  },
                  "type": {
                    "type": "string",
                    "description": "1. The tax type.\n2. Each tax type can only be defined once on account/listing level.",
                    "enum": [
                      "LOCAL_TAX",
                      "CITY_TAX",
                      "VAT",
                      "GOODS_AND_SERVICES_TAX",
                      "TOURISM_TAX",
                      "OTHER",
                      "STATE_TAX",
                      "COUNTY_TAX",
                      "OCCUPANCY_TAX",
                      "TRANSIENT_OCCUPANCY_TAX",
                      "HOME_SHARING_TAX",
                      "HARMONIZED_SALES_TAX",
                      "MINIMUM_ALTERNATE_TAX"
                    ]
                  },
                  "units": {
                    "type": "string",
                    "description": "Determines whether the tax amount should be treated as a fixed or percentage value",
                    "enum": [
                      "PERCENTAGE",
                      "FIXED"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "minimum": 0,
                    "description": "1. the amount of the tax, could be a fixed value or percentage whether units is 'FIXED' or 'PERCENTAGE' respectively.\n 2. when 'FIXED' then 'amount' has to be greater then 0\n 3. when 'PERCENTAGE' then 'amount' has to be greater then 0 and smaller or equal to 100"
                  },
                  "quantifier": {
                    "type": "string",
                    "description": "Determines by what factor the tax amount will be multiplied",
                    "enum": [
                      "PER_NIGHT",
                      "PER_GUEST",
                      "PER_GUEST_PER_NIGHT",
                      "PER_STAY"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 40,
                    "description": "The name for the tax, which will be used accross guesty. there can be no two taxes with the same name."
                  },
                  "appliedToAllFees": {
                    "type": "boolean",
                    "description": "1. Relevant only when the units equals 'PERCENTAGE'\n2. When equals 'true', then the tax will be calculated on all fees and 'appliedOnFees' must contain all values"
                  },
                  "appliedOnFees": {
                    "description": "1. Relevant only when the unit equals 'PERCENTAGE'\n\n  2. This defines the fees on which the tax will be calculated",
                    "example": [
                      "AF"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isAppliedByDefault": {
                    "type": "boolean",
                    "description": "1. When set to 'true' and 'appliedByDefaultOnChannels' is not empty, then Guesty will prededuct the tax from the accommodation fare.\n 2. can not be 'true' when 'appliedByDefaultOnChannels' is empty"
                  },
                  "appliedByDefaultOnChannels": {
                    "type": "array",
                    "description": "1. When contains values and 'isAppliedByDefault' is set to 'true', then Guesty will prededuct the tax from the accommodation fare.\n 2. can not contain elements when 'isAppliedByDefault' is 'false'\n 3. currently, only supported for reservations received from source Airbnb",
                    "items": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "airbnb",
                        "airbnb2",
                        "rentalsUnited",
                        "bookingCom",
                        "expedia",
                        "homeAway",
                        "agoda",
                        "tripAdvisor",
                        "homeaway2",
                        "siteMinder",
                        "bookingPal"
                      ]
                    }
                  },
                  "conditionalOverrides": {
                    "description": "Set additional conditions for this tax",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "viewType": {
                            "type": "string",
                            "description": "1. The kind of conditions to set on the tax\n 2. When 'units' is 'FIXED' and 'quantifier' is 'guest'/'stay' then 'NiGHTS' and 'NIGHTS_IN_DATES' viewTypes are forbidden,\n 3. When 'units' is 'PERCENTAGE' then all viewTypes are allowed",
                            "enum": [
                              "NIGHTS",
                              "DATES",
                              "NIGHTS_IN_DATES",
                              "LOS"
                            ]
                          },
                          "rules": {
                            "description": "1. The dates and nights ranges that the tax condition will apply for.\n 2. When viewType is 'LOS' then rules is forbidden, else rules is required and can not be empty.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dateRange": {
                                  "description": "1. When viewType is 'NIGHTS' then rules objects can not contain dateRanges.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "from": {
                                          "type": "string",
                                          "example": "12-31"
                                        },
                                        "to": {
                                          "type": "string",
                                          "example": "02-01"
                                        }
                                      },
                                      "required": [
                                        "from",
                                        "to"
                                      ]
                                    }
                                  ]
                                },
                                "nightRanges": {
                                  "description": "1. When viewType is 'DATES' then all rules objects must contain only 1 nightRange with no 'to' field and 'from' field equals 1.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "from": {
                                        "type": "number",
                                        "minimum": 1
                                      },
                                      "to": {
                                        "type": "number",
                                        "minimum": 1
                                      },
                                      "amount": {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "from",
                                      "amount"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "nightRanges"
                              ]
                            }
                          },
                          "maxNightCountToApplyOn": {
                            "type": "number",
                            "minimum": 1,
                            "description": "1. The tax will be applied for all reservation that has night count smaller then 'maxNightCountToApplyOn'\n 2. Only when 'viewType' is 'LOS' then this field is allowed and required"
                          }
                        },
                        "required": [
                          "viewType"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "units",
                  "amount",
                  "quantifier"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The tax has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "df7hf01cnduhdb2125854dj8"
                    },
                    "unitTypeId": {
                      "type": "string",
                      "example": "623892d57f4f56afcb25587c"
                    },
                    "accountId": {
                      "type": "string",
                      "example": "623892d57f4f56afcb25587c"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "LOCAL_TAX",
                        "CITY_TAX",
                        "VAT",
                        "GOODS_AND_SERVICES_TAX",
                        "TOURISM_TAX",
                        "OTHER",
                        "STATE_TAX",
                        "COUNTY_TAX",
                        "OCCUPANCY_TAX",
                        "TRANSIENT_OCCUPANCY_TAX",
                        "HOME_SHARING_TAX",
                        "HARMONIZED_SALES_TAX",
                        "MINIMUM_ALTERNATE_TAX"
                      ]
                    },
                    "units": {
                      "type": "string",
                      "enum": [
                        "PERCENTAGE",
                        "FIXED"
                      ]
                    },
                    "quantifier": {
                      "type": "string",
                      "enum": [
                        "PER_NIGHT",
                        "PER_GUEST",
                        "PER_GUEST_PER_NIGHT",
                        "PER_STAY"
                      ]
                    },
                    "appliedOnFees": {
                      "example": [
                        "AF"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "appliedByDefaultOnChannels": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "manual",
                          "airbnb",
                          "airbnb2",
                          "rentalsUnited",
                          "bookingCom",
                          "expedia",
                          "homeAway",
                          "agoda",
                          "tripAdvisor",
                          "homeaway2",
                          "siteMinder",
                          "bookingPal"
                        ]
                      }
                    },
                    "isDeleted": {
                      "type": "boolean"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "appliedToAllFees": {
                      "type": "boolean"
                    },
                    "isAppliedByDefault": {
                      "type": "boolean"
                    },
                    "conditionalOverrides": {
                      "type": "object",
                      "properties": {
                        "viewType": {
                          "type": "string",
                          "enum": [
                            "NIGHTS",
                            "DATES",
                            "NIGHTS_IN_DATES",
                            "LOS"
                          ]
                        },
                        "rules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dateRange": {
                                "type": "object",
                                "properties": {
                                  "from": {
                                    "type": "string",
                                    "example": "12-31"
                                  },
                                  "to": {
                                    "type": "string",
                                    "example": "02-01"
                                  }
                                },
                                "required": [
                                  "from",
                                  "to"
                                ]
                              },
                              "nightRanges": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "from": {
                                      "type": "number",
                                      "minimum": 1
                                    },
                                    "to": {
                                      "type": "number",
                                      "minimum": 1
                                    },
                                    "amount": {
                                      "type": "number",
                                      "minimum": 0
                                    }
                                  },
                                  "required": [
                                    "from",
                                    "amount"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "nightRanges"
                            ]
                          }
                        },
                        "maxNightCountToApplyOn": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "viewType"
                      ]
                    },
                    "channelConfig": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "channel": {
                            "type": "string"
                          },
                          "userConfig": {
                            "type": "object",
                            "properties": {
                              "syncSelection": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "syncSelection"
                            ]
                          }
                        },
                        "required": [
                          "channel",
                          "userConfig"
                        ]
                      }
                    }
                  },
                  "required": [
                    "accountId",
                    "type",
                    "units",
                    "quantifier",
                    "appliedOnFees",
                    "appliedByDefaultOnChannels",
                    "amount",
                    "appliedToAllFees",
                    "isAppliedByDefault"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The input provided is invalid."
          }
        },
        "tags": [
          "Taxes"
        ]
      }
    },
    "/taxes/{id}": {
      "delete": {
        "operationId": "TaxesController_deleteTax",
        "summary": "Delete tax",
        "description": "Delete tax by id.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "df7hf01cnduhdb2125854dj8",
            "description": "The tax id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tax has been successfully deleted."
          },
          "400": {
            "description": "The input provided is invalid."
          }
        },
        "tags": [
          "Taxes"
        ]
      },
      "patch": {
        "operationId": "TaxesController_updateTax",
        "summary": "Update tax",
        "description": "Update tax by id.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "df7hf01cnduhdb2125854dj8",
            "description": "The tax id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "1. The tax type.\n2. Each tax type can only be defined once on account/listing level.",
                    "enum": [
                      "LOCAL_TAX",
                      "CITY_TAX",
                      "VAT",
                      "GOODS_AND_SERVICES_TAX",
                      "TOURISM_TAX",
                      "OTHER",
                      "STATE_TAX",
                      "COUNTY_TAX",
                      "OCCUPANCY_TAX",
                      "TRANSIENT_OCCUPANCY_TAX",
                      "HOME_SHARING_TAX",
                      "HARMONIZED_SALES_TAX",
                      "MINIMUM_ALTERNATE_TAX"
                    ]
                  },
                  "units": {
                    "type": "string",
                    "description": "Determines whether the tax amount should be treated as a fixed or percentage value",
                    "enum": [
                      "PERCENTAGE",
                      "FIXED"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "minimum": 0,
                    "description": "1. the amount of the tax, could be a fixed value or percentage whether units is 'FIXED' or 'PERCENTAGE' respectively.\n 2. when 'FIXED' then 'amount' has to be greater then 0\n 3. when 'PERCENTAGE' then 'amount' has to be greater then 0 and smaller or equal to 100"
                  },
                  "quantifier": {
                    "type": "string",
                    "description": "Determines by what factor the tax amount will be multiplied",
                    "enum": [
                      "PER_NIGHT",
                      "PER_GUEST",
                      "PER_GUEST_PER_NIGHT",
                      "PER_STAY"
                    ]
                  },
                  "appliedToAllFees": {
                    "type": "boolean",
                    "description": "1. Relevant only when the units equals 'PERCENTAGE'\n2. When equals 'true', then the tax will be calculated on all fees and 'appliedOnFees' must contain all values"
                  },
                  "appliedOnFees": {
                    "description": "1. Relevant only when the unit equals 'PERCENTAGE'\n\n  2. This defines the fees on which the tax will be calculated",
                    "example": [
                      "AF"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "isAppliedByDefault": {
                    "type": "boolean",
                    "description": "1. When set to 'true' and 'appliedByDefaultOnChannels' is not empty, then Guesty will prededuct the tax from the accommodation fare.\n 2. can not be 'true' when 'appliedByDefaultOnChannels' is empty"
                  },
                  "appliedByDefaultOnChannels": {
                    "type": "array",
                    "description": "1. When contains values and 'isAppliedByDefault' is set to 'true', then Guesty will prededuct the tax from the accommodation fare.\n 2. can not contain elements when 'isAppliedByDefault' is 'false'\n 3. currently, only supported for reservations received from source Airbnb",
                    "items": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "airbnb",
                        "airbnb2",
                        "rentalsUnited",
                        "bookingCom",
                        "expedia",
                        "homeAway",
                        "agoda",
                        "tripAdvisor",
                        "homeaway2",
                        "siteMinder",
                        "bookingPal"
                      ]
                    }
                  },
                  "conditionalOverrides": {
                    "description": "Set additional conditions for this tax",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "viewType": {
                            "type": "string",
                            "description": "1. The kind of conditions to set on the tax\n 2. When 'units' is 'FIXED' and 'quantifier' is 'guest'/'stay' then 'NiGHTS' and 'NIGHTS_IN_DATES' viewTypes are forbidden,\n 3. When 'units' is 'PERCENTAGE' then all viewTypes are allowed",
                            "enum": [
                              "NIGHTS",
                              "DATES",
                              "NIGHTS_IN_DATES",
                              "LOS"
                            ]
                          },
                          "rules": {
                            "description": "1. The dates and nights ranges that the tax condition will apply for.\n 2. When viewType is 'LOS' then rules is forbidden, else rules is required and can not be empty.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dateRange": {
                                  "description": "1. When viewType is 'NIGHTS' then rules objects can not contain dateRanges.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "from": {
                                          "type": "string",
                                          "example": "12-31"
                                        },
                                        "to": {
                                          "type": "string",
                                          "example": "02-01"
                                        }
                                      },
                                      "required": [
                                        "from",
                                        "to"
                                      ]
                                    }
                                  ]
                                },
                                "nightRanges": {
                                  "description": "1. When viewType is 'DATES' then all rules objects must contain only 1 nightRange with no 'to' field and 'from' field equals 1.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "from": {
                                        "type": "number",
                                        "minimum": 1
                                      },
                                      "to": {
                                        "type": "number",
                                        "minimum": 1
                                      },
                                      "amount": {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "from",
                                      "amount"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "nightRanges"
                              ]
                            }
                          },
                          "maxNightCountToApplyOn": {
                            "type": "number",
                            "minimum": 1,
                            "description": "1. The tax will be applied for all reservation that has night count smaller then 'maxNightCountToApplyOn'\n 2. Only when 'viewType' is 'LOS' then this field is allowed and required"
                          }
                        },
                        "required": [
                          "viewType"
                        ]
                      }
                    ]
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 40,
                    "description": "The name for the tax, which will be used accross guesty. there can be no two taxes with the same name. to remove a name of existing tax pass empty string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tax has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "df7hf01cnduhdb2125854dj8"
                    },
                    "unitTypeId": {
                      "type": "string",
                      "example": "623892d57f4f56afcb25587c"
                    },
                    "accountId": {
                      "type": "string",
                      "example": "623892d57f4f56afcb25587c"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "LOCAL_TAX",
                        "CITY_TAX",
                        "VAT",
                        "GOODS_AND_SERVICES_TAX",
                        "TOURISM_TAX",
                        "OTHER",
                        "STATE_TAX",
                        "COUNTY_TAX",
                        "OCCUPANCY_TAX",
                        "TRANSIENT_OCCUPANCY_TAX",
                        "HOME_SHARING_TAX",
                        "HARMONIZED_SALES_TAX",
                        "MINIMUM_ALTERNATE_TAX"
                      ]
                    },
                    "units": {
                      "type": "string",
                      "enum": [
                        "PERCENTAGE",
                        "FIXED"
                      ]
                    },
                    "quantifier": {
                      "type": "string",
                      "enum": [
                        "PER_NIGHT",
                        "PER_GUEST",
                        "PER_GUEST_PER_NIGHT",
                        "PER_STAY"
                      ]
                    },
                    "appliedOnFees": {
                      "example": [
                        "AF"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "appliedByDefaultOnChannels": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "manual",
                          "airbnb",
                          "airbnb2",
                          "rentalsUnited",
                          "bookingCom",
                          "expedia",
                          "homeAway",
                          "agoda",
                          "tripAdvisor",
                          "homeaway2",
                          "siteMinder",
                          "bookingPal"
                        ]
                      }
                    },
                    "isDeleted": {
                      "type": "boolean"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "appliedToAllFees": {
                      "type": "boolean"
                    },
                    "isAppliedByDefault": {
                      "type": "boolean"
                    },
                    "conditionalOverrides": {
                      "type": "object",
                      "properties": {
                        "viewType": {
                          "type": "string",
                          "enum": [
                            "NIGHTS",
                            "DATES",
                            "NIGHTS_IN_DATES",
                            "LOS"
                          ]
                        },
                        "rules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dateRange": {
                                "type": "object",
                                "properties": {
                                  "from": {
                                    "type": "string",
                                    "example": "12-31"
                                  },
                                  "to": {
                                    "type": "string",
                                    "example": "02-01"
                                  }
                                },
                                "required": [
                                  "from",
                                  "to"
                                ]
                              },
                              "nightRanges": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "from": {
                                      "type": "number",
                                      "minimum": 1
                                    },
                                    "to": {
                                      "type": "number",
                                      "minimum": 1
                                    },
                                    "amount": {
                                      "type": "number",
                                      "minimum": 0
                                    }
                                  },
                                  "required": [
                                    "from",
                                    "amount"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "nightRanges"
                            ]
                          }
                        },
                        "maxNightCountToApplyOn": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "viewType"
                      ]
                    },
                    "channelConfig": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "channel": {
                            "type": "string"
                          },
                          "userConfig": {
                            "type": "object",
                            "properties": {
                              "syncSelection": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "syncSelection"
                            ]
                          }
                        },
                        "required": [
                          "channel",
                          "userConfig"
                        ]
                      }
                    }
                  },
                  "required": [
                    "accountId",
                    "type",
                    "units",
                    "quantifier",
                    "appliedOnFees",
                    "appliedByDefaultOnChannels",
                    "amount",
                    "appliedToAllFees",
                    "isAppliedByDefault"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The input provided is invalid."
          }
        },
        "tags": [
          "Taxes"
        ]
      }
    },
    "/taxes/account": {
      "get": {
        "operationId": "TaxesController_getAccountLevelTaxes",
        "summary": "Get account level taxes",
        "description": "Get account level taxes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The account level taxes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "df7hf01cnduhdb2125854dj8"
                      },
                      "unitTypeId": {
                        "type": "string",
                        "example": "623892d57f4f56afcb25587c"
                      },
                      "accountId": {
                        "type": "string",
                        "example": "623892d57f4f56afcb25587c"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "LOCAL_TAX",
                          "CITY_TAX",
                          "VAT",
                          "GOODS_AND_SERVICES_TAX",
                          "TOURISM_TAX",
                          "OTHER",
                          "STATE_TAX",
                          "COUNTY_TAX",
                          "OCCUPANCY_TAX",
                          "TRANSIENT_OCCUPANCY_TAX",
                          "HOME_SHARING_TAX",
                          "HARMONIZED_SALES_TAX",
                          "MINIMUM_ALTERNATE_TAX"
                        ]
                      },
                      "units": {
                        "type": "string",
                        "enum": [
                          "PERCENTAGE",
                          "FIXED"
                        ]
                      },
                      "quantifier": {
                        "type": "string",
                        "enum": [
                          "PER_NIGHT",
                          "PER_GUEST",
                          "PER_GUEST_PER_NIGHT",
                          "PER_STAY"
                        ]
                      },
                      "appliedOnFees": {
                        "example": [
                          "AF"
                        ],
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "appliedByDefaultOnChannels": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "manual",
                            "airbnb",
                            "airbnb2",
                            "rentalsUnited",
                            "bookingCom",
                            "expedia",
                            "homeAway",
                            "agoda",
                            "tripAdvisor",
                            "homeaway2",
                            "siteMinder",
                            "bookingPal"
                          ]
                        }
                      },
                      "isDeleted": {
                        "type": "boolean"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "appliedToAllFees": {
                        "type": "boolean"
                      },
                      "isAppliedByDefault": {
                        "type": "boolean"
                      },
                      "conditionalOverrides": {
                        "type": "object",
                        "properties": {
                          "viewType": {
                            "type": "string",
                            "enum": [
                              "NIGHTS",
                              "DATES",
                              "NIGHTS_IN_DATES",
                              "LOS"
                            ]
                          },
                          "rules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dateRange": {
                                  "type": "object",
                                  "properties": {
                                    "from": {
                                      "type": "string",
                                      "example": "12-31"
                                    },
                                    "to": {
                                      "type": "string",
                                      "example": "02-01"
                                    }
                                  },
                                  "required": [
                                    "from",
                                    "to"
                                  ]
                                },
                                "nightRanges": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "from": {
                                        "type": "number",
                                        "minimum": 1
                                      },
                                      "to": {
                                        "type": "number",
                                        "minimum": 1
                                      },
                                      "amount": {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "from",
                                      "amount"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "nightRanges"
                              ]
                            }
                          },
                          "maxNightCountToApplyOn": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "viewType"
                        ]
                      },
                      "channelConfig": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "channel": {
                              "type": "string"
                            },
                            "userConfig": {
                              "type": "object",
                              "properties": {
                                "syncSelection": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "syncSelection"
                              ]
                            }
                          },
                          "required": [
                            "channel",
                            "userConfig"
                          ]
                        }
                      }
                    },
                    "required": [
                      "accountId",
                      "type",
                      "units",
                      "quantifier",
                      "appliedOnFees",
                      "appliedByDefaultOnChannels",
                      "amount",
                      "appliedToAllFees",
                      "isAppliedByDefault"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input provided is invalid."
          }
        },
        "tags": [
          "Taxes"
        ]
      }
    },
    "/taxes/unit-type/{id}": {
      "get": {
        "operationId": "TaxesController_getUnitTypeLevelTaxes",
        "summary": "Get unit type (parent unit) level taxes",
        "description": "Get unit type (parent unit) level taxes",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "df7hf01cnduhdb2125854dj8",
            "description": "The unit type id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The unit type level taxes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "df7hf01cnduhdb2125854dj8"
                      },
                      "unitTypeId": {
                        "type": "string",
                        "example": "623892d57f4f56afcb25587c"
                      },
                      "accountId": {
                        "type": "string",
                        "example": "623892d57f4f56afcb25587c"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "LOCAL_TAX",
                          "CITY_TAX",
                          "VAT",
                          "GOODS_AND_SERVICES_TAX",
                          "TOURISM_TAX",
                          "OTHER",
                          "STATE_TAX",
                          "COUNTY_TAX",
                          "OCCUPANCY_TAX",
                          "TRANSIENT_OCCUPANCY_TAX",
                          "HOME_SHARING_TAX",
                          "HARMONIZED_SALES_TAX",
                          "MINIMUM_ALTERNATE_TAX"
                        ]
                      },
                      "units": {
                        "type": "string",
                        "enum": [
                          "PERCENTAGE",
                          "FIXED"
                        ]
                      },
                      "quantifier": {
                        "type": "string",
                        "enum": [
                          "PER_NIGHT",
                          "PER_GUEST",
                          "PER_GUEST_PER_NIGHT",
                          "PER_STAY"
                        ]
                      },
                      "appliedOnFees": {
                        "example": [
                          "AF"
                        ],
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "appliedByDefaultOnChannels": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "manual",
                            "airbnb",
                            "airbnb2",
                            "rentalsUnited",
                            "bookingCom",
                            "expedia",
                            "homeAway",
                            "agoda",
                            "tripAdvisor",
                            "homeaway2",
                            "siteMinder",
                            "bookingPal"
                          ]
                        }
                      },
                      "isDeleted": {
                        "type": "boolean"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "appliedToAllFees": {
                        "type": "boolean"
                      },
                      "isAppliedByDefault": {
                        "type": "boolean"
                      },
                      "conditionalOverrides": {
                        "type": "object",
                        "properties": {
                          "viewType": {
                            "type": "string",
                            "enum": [
                              "NIGHTS",
                              "DATES",
                              "NIGHTS_IN_DATES",
                              "LOS"
                            ]
                          },
                          "rules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dateRange": {
                                  "type": "object",
                                  "properties": {
                                    "from": {
                                      "type": "string",
                                      "example": "12-31"
                                    },
                                    "to": {
                                      "type": "string",
                                      "example": "02-01"
                                    }
                                  },
                                  "required": [
                                    "from",
                                    "to"
                                  ]
                                },
                                "nightRanges": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "from": {
                                        "type": "number",
                                        "minimum": 1
                                      },
                                      "to": {
                                        "type": "number",
                                        "minimum": 1
                                      },
                                      "amount": {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "from",
                                      "amount"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "nightRanges"
                              ]
                            }
                          },
                          "maxNightCountToApplyOn": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "viewType"
                        ]
                      },
                      "channelConfig": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "channel": {
                              "type": "string"
                            },
                            "userConfig": {
                              "type": "object",
                              "properties": {
                                "syncSelection": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "syncSelection"
                              ]
                            }
                          },
                          "required": [
                            "channel",
                            "userConfig"
                          ]
                        }
                      }
                    },
                    "required": [
                      "accountId",
                      "type",
                      "units",
                      "quantifier",
                      "appliedOnFees",
                      "appliedByDefaultOnChannels",
                      "amount",
                      "appliedToAllFees",
                      "isAppliedByDefault"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input provided is invalid."
          }
        },
        "tags": [
          "Taxes"
        ]
      }
    },
    "/taxes/unit-type/{id}/actual": {
      "get": {
        "operationId": "TaxesController_getUnitTypeActualTaxes",
        "summary": "Get actual taxes of unit type (parent unit level)",
        "description": "Get actual taxes of unit type (parent unit level)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "df7hf01cnduhdb2125854dj8",
            "description": "The unit type id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The taxes of the given unitTypeId according to its configuration level.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "df7hf01cnduhdb2125854dj8"
                      },
                      "unitTypeId": {
                        "type": "string",
                        "example": "623892d57f4f56afcb25587c"
                      },
                      "accountId": {
                        "type": "string",
                        "example": "623892d57f4f56afcb25587c"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "LOCAL_TAX",
                          "CITY_TAX",
                          "VAT",
                          "GOODS_AND_SERVICES_TAX",
                          "TOURISM_TAX",
                          "OTHER",
                          "STATE_TAX",
                          "COUNTY_TAX",
                          "OCCUPANCY_TAX",
                          "TRANSIENT_OCCUPANCY_TAX",
                          "HOME_SHARING_TAX",
                          "HARMONIZED_SALES_TAX",
                          "MINIMUM_ALTERNATE_TAX"
                        ]
                      },
                      "units": {
                        "type": "string",
                        "enum": [
                          "PERCENTAGE",
                          "FIXED"
                        ]
                      },
                      "quantifier": {
                        "type": "string",
                        "enum": [
                          "PER_NIGHT",
                          "PER_GUEST",
                          "PER_GUEST_PER_NIGHT",
                          "PER_STAY"
                        ]
                      },
                      "appliedOnFees": {
                        "example": [
                          "AF"
                        ],
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "appliedByDefaultOnChannels": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "manual",
                            "airbnb",
                            "airbnb2",
                            "rentalsUnited",
                            "bookingCom",
                            "expedia",
                            "homeAway",
                            "agoda",
                            "tripAdvisor",
                            "homeaway2",
                            "siteMinder",
                            "bookingPal"
                          ]
                        }
                      },
                      "isDeleted": {
                        "type": "boolean"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "appliedToAllFees": {
                        "type": "boolean"
                      },
                      "isAppliedByDefault": {
                        "type": "boolean"
                      },
                      "conditionalOverrides": {
                        "type": "object",
                        "properties": {
                          "viewType": {
                            "type": "string",
                            "enum": [
                              "NIGHTS",
                              "DATES",
                              "NIGHTS_IN_DATES",
                              "LOS"
                            ]
                          },
                          "rules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dateRange": {
                                  "type": "object",
                                  "properties": {
                                    "from": {
                                      "type": "string",
                                      "example": "12-31"
                                    },
                                    "to": {
                                      "type": "string",
                                      "example": "02-01"
                                    }
                                  },
                                  "required": [
                                    "from",
                                    "to"
                                  ]
                                },
                                "nightRanges": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "from": {
                                        "type": "number",
                                        "minimum": 1
                                      },
                                      "to": {
                                        "type": "number",
                                        "minimum": 1
                                      },
                                      "amount": {
                                        "type": "number",
                                        "minimum": 0
                                      }
                                    },
                                    "required": [
                                      "from",
                                      "amount"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "nightRanges"
                              ]
                            }
                          },
                          "maxNightCountToApplyOn": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "viewType"
                        ]
                      },
                      "channelConfig": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "channel": {
                              "type": "string"
                            },
                            "userConfig": {
                              "type": "object",
                              "properties": {
                                "syncSelection": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "syncSelection"
                              ]
                            }
                          },
                          "required": [
                            "channel",
                            "userConfig"
                          ]
                        }
                      }
                    },
                    "required": [
                      "accountId",
                      "type",
                      "units",
                      "quantifier",
                      "appliedOnFees",
                      "appliedByDefaultOnChannels",
                      "amount",
                      "appliedToAllFees",
                      "isAppliedByDefault"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input provided is invalid."
          }
        },
        "tags": [
          "Taxes"
        ]
      }
    },
    "/taxes/level-configurations": {
      "put": {
        "operationId": "TaxesLevelConfigurationsController_upsertTaxesLevelConfigurations",
        "summary": "Create or update tax level configuration",
        "description": "Use to define on which level the taxes are defined for a specific unit type.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "unitTypeId": {
                    "type": "string",
                    "description": "1. The unit (listing) id",
                    "example": "df7hf01cnduhdb2125854dj8"
                  },
                  "levelEntityType": {
                    "type": "string",
                    "description": "Sets from what entity will the taxes for reservations made on the unitType will be taken from",
                    "enum": [
                      "ACCOUNT",
                      "UNIT_TYPE"
                    ]
                  }
                },
                "required": [
                  "unitTypeId",
                  "levelEntityType"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The taxes level configuration has been successfully updated or created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unitTypeId": {
                      "type": "string",
                      "example": "df7hf01cnduhdb2125854dj8"
                    },
                    "accountId": {
                      "type": "string",
                      "example": "623892d57f4f56afcb25587c"
                    },
                    "levelEntityType": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT",
                        "UNIT_TYPE"
                      ]
                    }
                  },
                  "required": [
                    "unitTypeId",
                    "accountId",
                    "levelEntityType"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The input provided is invalid."
          }
        },
        "tags": [
          "Taxes"
        ]
      }
    },
    "/taxes/level-configurations/unit-type/{id}": {
      "get": {
        "operationId": "TaxesLevelConfigurationsController_getUnitTypeTaxesLevelConfigurations",
        "summary": "Get tax level configuration",
        "description": "Get tax level configuration",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "df7hf01cnduhdb2125854dj8",
            "description": "The unit type id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The taxes level configuration of the given unitTypeId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unitTypeId": {
                      "type": "string",
                      "example": "df7hf01cnduhdb2125854dj8"
                    },
                    "accountId": {
                      "type": "string",
                      "example": "623892d57f4f56afcb25587c"
                    },
                    "levelEntityType": {
                      "type": "string",
                      "enum": [
                        "ACCOUNT",
                        "UNIT_TYPE"
                      ]
                    }
                  },
                  "required": [
                    "unitTypeId",
                    "accountId",
                    "levelEntityType"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The input provided is invalid."
          }
        },
        "tags": [
          "Taxes"
        ]
      }
    },
    "/price-adjustments/manual-total-amount": {
      "post": {
        "operationId": "PriceAdjustmentsController_createManualPriceAdjustments",
        "summary": "Create a total amount price adjustments",
        "description": "Use to create a manual price adjustments (increase or decrease) for a reservation.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reservationId": {
                    "type": "string",
                    "example": "623892d57f4f56afcb25587c"
                  },
                  "priceAdjustments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "normalType": {
                          "type": "string",
                          "enum": [
                            "AF",
                            "AFO",
                            "ARC",
                            "LOSD",
                            "GCD",
                            "CO",
                            "PRO",
                            "CF",
                            "PCM",
                            "CM",
                            "LT",
                            "CT",
                            "TT",
                            "GST",
                            "VAT",
                            "TTH",
                            "LGT",
                            "HT",
                            "TAF",
                            "TRT",
                            "AFE",
                            "PF",
                            "CFE",
                            "RT",
                            "ST",
                            "COT",
                            "OCT",
                            "TOT",
                            "HSHAT",
                            "HST",
                            "MAT",
                            "SDC",
                            "TAX",
                            "OTHER"
                          ],
                          "description": "Read more about valid enums <a href=\"https://open-api-docs.guesty.com/docs/valid-enumerations\">here</a>"
                        },
                        "secondIdentifier": {
                          "type": "string",
                          "enum": [
                            "ADDITIONAL_BED",
                            "AIR_CONDITIONING",
                            "EARLY_CHECK_IN",
                            "LATE_CHECK_IN",
                            "BABY_BED",
                            "CLEANING",
                            "CLUB_CARD",
                            "CONCIERGE",
                            "EARLY_CHECKOUT",
                            "LATE_CHECKOUT",
                            "DEPOSIT",
                            "ELECTRICITY",
                            "FOOD",
                            "HEATING",
                            "INTERNET",
                            "LAUNDRY",
                            "LINENS",
                            "TOWELS",
                            "MANAGEMENT",
                            "OIL",
                            "PARKING",
                            "PET",
                            "POOL",
                            "POOL_HEATING",
                            "RESORT",
                            "SERVICE",
                            "TOILETRIES",
                            "TOUR",
                            "TRANSPORTATION",
                            "CAR_RENTAL",
                            "WATER",
                            "WOOD",
                            "TRANSFER",
                            "HOUSEKEEPING",
                            "INSURANCE",
                            "COMMUNITY",
                            "CREDIT_CARD_PROCESSING_FEE",
                            "DAMAGE_WAIVER",
                            "VIP_SERVICES",
                            "PAYMENT_FEE",
                            "ADDITIONAL_CHARGE",
                            "MISCELLANEOUS",
                            "SHIPPING",
                            "VALET",
                            "ACTIVITIES",
                            "FLIGHTS",
                            "GIFT_BASKET",
                            "SPA",
                            "CHEF",
                            "MEET_AND_GREET",
                            "DOCK_FEE",
                            "UTILITY_FEE",
                            "HOT_TUB",
                            "BOOKING_FEE",
                            "BREAKFAST",
                            "BEVERAGE",
                            "MEAL",
                            "WELLNESS",
                            "MINIBAR",
                            "BUSINESS_CENTER",
                            "WIFI",
                            "GUEST_SERVICE"
                          ],
                          "description": "When normalType AFE (Additional Fee) is selected, secondIdentifier is required, else it's forbidden. Second identifier is the type of the additional fee"
                        },
                        "amount": {
                          "type": "number"
                        },
                        "description": {
                          "type": "string"
                        },
                        "realizationDates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "date"
                            ]
                          }
                        }
                      },
                      "required": [
                        "normalType",
                        "amount"
                      ]
                    }
                  }
                },
                "required": [
                  "reservationId",
                  "priceAdjustments"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The updated reservation folio."
          }
        },
        "tags": [
          "Price Adjustments"
        ]
      }
    },
    "/price-adjustments/total-amount/{id}": {
      "get": {
        "operationId": "PriceAdjustmentsController_getAllTotalAmountPriceAdjustment",
        "summary": "Get all total amount price adjustments for a reservation",
        "description": "Get all total amount price adjustments for a reservation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "df7hf01cnduhdb2125854dj8",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All total amount price adjustments for the reservation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "object",
                        "example": "df7hf01cnduhdb2125854dj8"
                      },
                      "reservationId": {
                        "type": "object"
                      },
                      "accountId": {
                        "type": "object"
                      },
                      "amount": {
                        "type": "number"
                      },
                      "normalType": {
                        "type": "string"
                      },
                      "secondIdentifier": {
                        "type": "string"
                      },
                      "creationMethod": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "userName": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "attributedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "adjustmentFlow": {
                        "type": "string"
                      },
                      "sourceName": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "_id",
                      "reservationId",
                      "accountId",
                      "amount",
                      "normalType",
                      "creationMethod",
                      "type",
                      "userName",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Price Adjustments"
        ]
      }
    },
    "/channel-commission/account": {
      "put": {
        "operationId": "ChannelCommissionController_updateAccountChannelCommission",
        "summary": "Update account channel commission",
        "description": "This endpoint allows you to send Guesty an updated amount for channel commissions.\nProviding an amount to an existing integration object or manual source will update its channel commission value. If the integration object or manual source do not exist, they will be added.\n\nexample for bookingCom: { bookingCom: {tax: 10, commission: {value: 5, of: [\"ACCOMMODATION_FARE\"]}}}\n\n\nApplying your channel commission on fees & taxes is currently in beta.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "manual": {
                    "description": "Objects that will be provided in manual array will be upserted to the existing array by source. Limited to 200 items in one request.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "commission": {
                          "description": "Set commission definition",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 100,
                                  "description": "The percentage of channel commission to be taken",
                                  "example": 5
                                },
                                "of": {
                                  "description": "The fields which the channel commission will be applied on.\nSupported values: PAYOUT, ACCOMMODATION_FARE, CLEANING_FEE, CANCELLATION_FEE, ADDITIONAL_BED, AIR_CONDITIONING, EARLY_CHECK_IN, LATE_CHECK_IN, BABY_BED, CLEANING, CLUB_CARD, CONCIERGE, EARLY_CHECKOUT, LATE_CHECKOUT, DEPOSIT, ELECTRICITY, FOOD, HEATING, INTERNET, LAUNDRY, LINENS, TOWELS, MANAGEMENT, OIL, PARKING, PET, POOL, POOL_HEATING, RESORT, SERVICE, TOILETRIES, TOUR, TRANSPORTATION, CAR_RENTAL, WATER, WOOD, TRANSFER, HOUSEKEEPING, INSURANCE, COMMUNITY, CREDIT_CARD_PROCESSING_FEE, DAMAGE_WAIVER, VIP_SERVICES, PAYMENT_FEE, ADDITIONAL_CHARGE, MISCELLANEOUS, SHIPPING, VALET, ACTIVITIES, FLIGHTS, GIFT_BASKET, SPA, CHEF, MEET_AND_GREET, DOCK_FEE, UTILITY_FEE, HOT_TUB, BOOKING_FEE, BREAKFAST, BEVERAGE, MEAL, WELLNESS, MINIBAR, BUSINESS_CENTER, WIFI, GUEST_SERVICE, LOCAL_TAX, CITY_TAX, VAT, GOODS_AND_SERVICES_TAX, TOURISM_TAX, OTHER, STATE_TAX, COUNTY_TAX, OCCUPANCY_TAX, TRANSIENT_OCCUPANCY_TAX, HOME_SHARING_TAX, HARMONIZED_SALES_TAX, MINIMUM_ALTERNATE_TAX",
                                  "example": [
                                    "ACCOMMODATION_FARE",
                                    "CLEANING_FEE",
                                    "LOCAL_TAX",
                                    "DAMAGE_WAIVER"
                                  ],
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "value",
                                "of"
                              ]
                            }
                          ]
                        },
                        "tax": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100,
                          "description": "The tax applied on channel commission",
                          "example": 3
                        },
                        "source": {
                          "type": "string",
                          "description": "The name of source",
                          "example": "my source"
                        },
                        "isPreDeduct": {
                          "type": "boolean",
                          "description": "Pre deduct the channel commission if you want Guesty to automatically add a negative Host channel fee invoice item for every reservation created by this source.",
                          "example": false
                        }
                      },
                      "required": [
                        "source",
                        "isPreDeduct"
                      ]
                    }
                  },
                  "rentalsUnited": {
                    "description": "Channel commission formula",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated account channel commission."
          },
          "400": {
            "description": "The params provided are invalid."
          }
        },
        "tags": [
          "Channel Commission"
        ]
      },
      "get": {
        "operationId": "ChannelCommissionController_getAccountChannelCommission",
        "summary": "Get account channel commission",
        "description": "Get account channel commission.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The account channel commission."
          },
          "400": {
            "description": "The params provided are invalid."
          }
        },
        "tags": [
          "Channel Commission"
        ]
      }
    },
    "/channel-commission/listings": {
      "put": {
        "operationId": "ChannelCommissionController_updateListingsChannelCommission",
        "summary": "Update listings channel commission",
        "description": "This endpoint allows you to send Guesty an updated amount for channel commissions.\nProviding an amount to an existing integration object or manual source will update its channel commission value. If the integration object or manual source do not exist, they will be added.\n\n\nexample for bookingCom: {channelCommissions: [{listingId: \"923892d53f4f56cfcb25586d\", bookingCom: {tax: 10, commission: {value: 5, of: [\"ACCOMMODATION_FARE\"]}}}]}\n\n\nApplying your channel commission on fees & taxes is currently in beta.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channelCommissions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "manual": {
                          "description": "Objects that will be provided in manual array will be upserted to the existing array by source. Limited to 200 items in one request.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "commission": {
                                "description": "Set commission definition",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "The percentage of channel commission to be taken",
                                        "example": 5
                                      },
                                      "of": {
                                        "description": "The fields which the channel commission will be applied on.\nSupported values: PAYOUT, ACCOMMODATION_FARE, CLEANING_FEE, CANCELLATION_FEE, ADDITIONAL_BED, AIR_CONDITIONING, EARLY_CHECK_IN, LATE_CHECK_IN, BABY_BED, CLEANING, CLUB_CARD, CONCIERGE, EARLY_CHECKOUT, LATE_CHECKOUT, DEPOSIT, ELECTRICITY, FOOD, HEATING, INTERNET, LAUNDRY, LINENS, TOWELS, MANAGEMENT, OIL, PARKING, PET, POOL, POOL_HEATING, RESORT, SERVICE, TOILETRIES, TOUR, TRANSPORTATION, CAR_RENTAL, WATER, WOOD, TRANSFER, HOUSEKEEPING, INSURANCE, COMMUNITY, CREDIT_CARD_PROCESSING_FEE, DAMAGE_WAIVER, VIP_SERVICES, PAYMENT_FEE, ADDITIONAL_CHARGE, MISCELLANEOUS, SHIPPING, VALET, ACTIVITIES, FLIGHTS, GIFT_BASKET, SPA, CHEF, MEET_AND_GREET, DOCK_FEE, UTILITY_FEE, HOT_TUB, BOOKING_FEE, BREAKFAST, BEVERAGE, MEAL, WELLNESS, MINIBAR, BUSINESS_CENTER, WIFI, GUEST_SERVICE, LOCAL_TAX, CITY_TAX, VAT, GOODS_AND_SERVICES_TAX, TOURISM_TAX, OTHER, STATE_TAX, COUNTY_TAX, OCCUPANCY_TAX, TRANSIENT_OCCUPANCY_TAX, HOME_SHARING_TAX, HARMONIZED_SALES_TAX, MINIMUM_ALTERNATE_TAX",
                                        "example": [
                                          "ACCOMMODATION_FARE",
                                          "CLEANING_FEE",
                                          "LOCAL_TAX",
                                          "DAMAGE_WAIVER"
                                        ],
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "value",
                                      "of"
                                    ]
                                  }
                                ]
                              },
                              "tax": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 100,
                                "description": "The tax applied on channel commission",
                                "example": 3
                              },
                              "source": {
                                "type": "string",
                                "description": "The name of source",
                                "example": "my source"
                              },
                              "isPreDeduct": {
                                "type": "boolean",
                                "description": "Pre deduct the channel commission if you want Guesty to automatically add a negative Host channel fee invoice item for every reservation created by this source.",
                                "example": false
                              }
                            },
                            "required": [
                              "source",
                              "isPreDeduct"
                            ]
                          }
                        },
                        "rentalsUnited": {
                          "description": "Channel commission formula",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {}
                            }
                          ]
                        },
                        "listingId": {
                          "type": "string"
                        },
                        "useAccountSettings": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "listingId",
                        "useAccountSettings"
                      ]
                    }
                  }
                },
                "required": [
                  "channelCommissions"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of the updated channel commission per listing."
          },
          "400": {
            "description": "The params provided are invalid."
          }
        },
        "tags": [
          "Channel Commission"
        ]
      },
      "get": {
        "operationId": "ChannelCommissionController_getListingsChannelCommission",
        "summary": "Get listings channel commission",
        "description": "Get channel commission from multiple listings.",
        "parameters": [
          {
            "name": "listingIds",
            "required": true,
            "in": "query",
            "description": "The desired listing ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The array of the channel commission per listing."
          },
          "400": {
            "description": "The params provided are invalid."
          }
        },
        "tags": [
          "Channel Commission"
        ]
      }
    },
    "/channel-commissions-v2/account": {
      "put": {
        "operationId": "ChannelCommissionController_updateAccountChannelCommission1",
        "summary": "Update account channel commission",
        "description": "This endpoint allows you to send Guesty an updated amount for channel commissions.\nProviding an amount to an existing integration object or manual source will update its channel commission value. If the integration object or manual source do not exist, they will be added.\n\nexample for bookingCom: { bookingCom: {tax: 10, commission: {value: 5, of: [\"ACCOMMODATION_FARE\"]}}}\n\n\nApplying your channel commission on fees & taxes is currently in beta.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "manual": {
                    "description": "Objects that will be provided in manual array will be upserted to the existing array by source. Limited to 200 items in one request.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "commission": {
                          "description": "Set commission definition",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number",
                                  "minimum": 0,
                                  "maximum": 100,
                                  "description": "The percentage of channel commission to be taken",
                                  "example": 5
                                },
                                "of": {
                                  "description": "The fields which the channel commission will be applied on.\nSupported values: PAYOUT, ACCOMMODATION_FARE, CLEANING_FEE, CANCELLATION_FEE, ADDITIONAL_BED, AIR_CONDITIONING, EARLY_CHECK_IN, LATE_CHECK_IN, BABY_BED, CLEANING, CLUB_CARD, CONCIERGE, EARLY_CHECKOUT, LATE_CHECKOUT, DEPOSIT, ELECTRICITY, FOOD, HEATING, INTERNET, LAUNDRY, LINENS, TOWELS, MANAGEMENT, OIL, PARKING, PET, POOL, POOL_HEATING, RESORT, SERVICE, TOILETRIES, TOUR, TRANSPORTATION, CAR_RENTAL, WATER, WOOD, TRANSFER, HOUSEKEEPING, INSURANCE, COMMUNITY, CREDIT_CARD_PROCESSING_FEE, DAMAGE_WAIVER, VIP_SERVICES, PAYMENT_FEE, ADDITIONAL_CHARGE, MISCELLANEOUS, SHIPPING, VALET, ACTIVITIES, FLIGHTS, GIFT_BASKET, SPA, CHEF, MEET_AND_GREET, DOCK_FEE, UTILITY_FEE, HOT_TUB, BOOKING_FEE, BREAKFAST, BEVERAGE, MEAL, WELLNESS, MINIBAR, BUSINESS_CENTER, WIFI, GUEST_SERVICE, LOCAL_TAX, CITY_TAX, VAT, GOODS_AND_SERVICES_TAX, TOURISM_TAX, OTHER, STATE_TAX, COUNTY_TAX, OCCUPANCY_TAX, TRANSIENT_OCCUPANCY_TAX, HOME_SHARING_TAX, HARMONIZED_SALES_TAX, MINIMUM_ALTERNATE_TAX",
                                  "example": [
                                    "ACCOMMODATION_FARE",
                                    "CLEANING_FEE",
                                    "LOCAL_TAX",
                                    "DAMAGE_WAIVER"
                                  ],
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "value",
                                "of"
                              ]
                            }
                          ]
                        },
                        "tax": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100,
                          "description": "The tax applied on channel commission",
                          "example": 3
                        },
                        "source": {
                          "type": "string",
                          "description": "The name of source",
                          "example": "my source"
                        },
                        "isPreDeduct": {
                          "type": "boolean",
                          "description": "Pre deduct the channel commission if you want Guesty to automatically add a negative Host channel fee invoice item for every reservation created by this source.",
                          "example": false
                        }
                      },
                      "required": [
                        "source",
                        "isPreDeduct"
                      ]
                    }
                  },
                  "rentalsUnited": {
                    "description": "Channel commission formula",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated account channel commission."
          },
          "400": {
            "description": "The params provided are invalid."
          }
        },
        "tags": [
          "Channel Commission"
        ]
      },
      "get": {
        "operationId": "ChannelCommissionController_getAccountChannelCommission1",
        "summary": "Get account channel commission",
        "description": "Get account channel commission.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The account channel commission."
          },
          "400": {
            "description": "The params provided are invalid."
          }
        },
        "tags": [
          "Channel Commission"
        ]
      }
    },
    "/channel-commissions-v2/listings": {
      "put": {
        "operationId": "ChannelCommissionController_updateListingsChannelCommission1",
        "summary": "Update listings channel commission",
        "description": "This endpoint allows you to send Guesty an updated amount for channel commissions.\nProviding an amount to an existing integration object or manual source will update its channel commission value. If the integration object or manual source do not exist, they will be added.\n\n\nexample for bookingCom: {channelCommissions: [{listingId: \"923892d53f4f56cfcb25586d\", bookingCom: {tax: 10, commission: {value: 5, of: [\"ACCOMMODATION_FARE\"]}}}]}\n\n\nApplying your channel commission on fees & taxes is currently in beta.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channelCommissions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "manual": {
                          "description": "Objects that will be provided in manual array will be upserted to the existing array by source. Limited to 200 items in one request.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "commission": {
                                "description": "Set commission definition",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "The percentage of channel commission to be taken",
                                        "example": 5
                                      },
                                      "of": {
                                        "description": "The fields which the channel commission will be applied on.\nSupported values: PAYOUT, ACCOMMODATION_FARE, CLEANING_FEE, CANCELLATION_FEE, ADDITIONAL_BED, AIR_CONDITIONING, EARLY_CHECK_IN, LATE_CHECK_IN, BABY_BED, CLEANING, CLUB_CARD, CONCIERGE, EARLY_CHECKOUT, LATE_CHECKOUT, DEPOSIT, ELECTRICITY, FOOD, HEATING, INTERNET, LAUNDRY, LINENS, TOWELS, MANAGEMENT, OIL, PARKING, PET, POOL, POOL_HEATING, RESORT, SERVICE, TOILETRIES, TOUR, TRANSPORTATION, CAR_RENTAL, WATER, WOOD, TRANSFER, HOUSEKEEPING, INSURANCE, COMMUNITY, CREDIT_CARD_PROCESSING_FEE, DAMAGE_WAIVER, VIP_SERVICES, PAYMENT_FEE, ADDITIONAL_CHARGE, MISCELLANEOUS, SHIPPING, VALET, ACTIVITIES, FLIGHTS, GIFT_BASKET, SPA, CHEF, MEET_AND_GREET, DOCK_FEE, UTILITY_FEE, HOT_TUB, BOOKING_FEE, BREAKFAST, BEVERAGE, MEAL, WELLNESS, MINIBAR, BUSINESS_CENTER, WIFI, GUEST_SERVICE, LOCAL_TAX, CITY_TAX, VAT, GOODS_AND_SERVICES_TAX, TOURISM_TAX, OTHER, STATE_TAX, COUNTY_TAX, OCCUPANCY_TAX, TRANSIENT_OCCUPANCY_TAX, HOME_SHARING_TAX, HARMONIZED_SALES_TAX, MINIMUM_ALTERNATE_TAX",
                                        "example": [
                                          "ACCOMMODATION_FARE",
                                          "CLEANING_FEE",
                                          "LOCAL_TAX",
                                          "DAMAGE_WAIVER"
                                        ],
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "value",
                                      "of"
                                    ]
                                  }
                                ]
                              },
                              "tax": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 100,
                                "description": "The tax applied on channel commission",
                                "example": 3
                              },
                              "source": {
                                "type": "string",
                                "description": "The name of source",
                                "example": "my source"
                              },
                              "isPreDeduct": {
                                "type": "boolean",
                                "description": "Pre deduct the channel commission if you want Guesty to automatically add a negative Host channel fee invoice item for every reservation created by this source.",
                                "example": false
                              }
                            },
                            "required": [
                              "source",
                              "isPreDeduct"
                            ]
                          }
                        },
                        "rentalsUnited": {
                          "description": "Channel commission formula",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {}
                            }
                          ]
                        },
                        "listingId": {
                          "type": "string"
                        },
                        "useAccountSettings": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "listingId",
                        "useAccountSettings"
                      ]
                    }
                  }
                },
                "required": [
                  "channelCommissions"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of the updated channel commission per listing."
          },
          "400": {
            "description": "The params provided are invalid."
          }
        },
        "tags": [
          "Channel Commission"
        ]
      },
      "get": {
        "operationId": "ChannelCommissionController_getListingsChannelCommission1",
        "summary": "Get listings channel commission",
        "description": "Get channel commission from multiple listings.",
        "parameters": [
          {
            "name": "listingIds",
            "required": true,
            "in": "query",
            "description": "The desired listing ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The array of the channel commission per listing."
          },
          "400": {
            "description": "The params provided are invalid."
          }
        },
        "tags": [
          "Channel Commission"
        ]
      }
    },
    "/invoice-items/reservation/{reservationId}": {
      "post": {
        "operationId": "InvoiceItemsController_createInvoiceItem",
        "summary": "Create Invoice Item",
        "description": "Create Invoice Item",
        "parameters": [
          {
            "name": "reservationId",
            "required": true,
            "in": "path",
            "description": "Reservation id to which the invoice item is related to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the invoice item"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Price to be charged for the invoice item"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the invoice item"
                  },
                  "secondIdentifier": {
                    "type": "string",
                    "description": "When normalType AFE (Additional Fee) is selected, secondIdentifier is required, else it's forbidden. Second identifier is the type of the additional fee",
                    "enum": [
                      "ADDITIONAL_BED",
                      "AIR_CONDITIONING",
                      "EARLY_CHECK_IN",
                      "LATE_CHECK_IN",
                      "BABY_BED",
                      "CLEANING",
                      "CLUB_CARD",
                      "CONCIERGE",
                      "EARLY_CHECKOUT",
                      "LATE_CHECKOUT",
                      "DEPOSIT",
                      "ELECTRICITY",
                      "FOOD",
                      "HEATING",
                      "INTERNET",
                      "LAUNDRY",
                      "LINENS",
                      "TOWELS",
                      "MANAGEMENT",
                      "OIL",
                      "PARKING",
                      "PET",
                      "POOL",
                      "POOL_HEATING",
                      "RESORT",
                      "SERVICE",
                      "TOILETRIES",
                      "TOUR",
                      "TRANSPORTATION",
                      "CAR_RENTAL",
                      "WATER",
                      "WOOD",
                      "TRANSFER",
                      "HOUSEKEEPING",
                      "INSURANCE",
                      "COMMUNITY",
                      "CREDIT_CARD_PROCESSING_FEE",
                      "DAMAGE_WAIVER",
                      "VIP_SERVICES",
                      "PAYMENT_FEE",
                      "ADDITIONAL_CHARGE",
                      "MISCELLANEOUS",
                      "SHIPPING",
                      "VALET",
                      "ACTIVITIES",
                      "FLIGHTS",
                      "GIFT_BASKET",
                      "SPA",
                      "CHEF",
                      "MEET_AND_GREET",
                      "DOCK_FEE",
                      "UTILITY_FEE",
                      "HOT_TUB",
                      "BOOKING_FEE",
                      "BREAKFAST",
                      "BEVERAGE",
                      "MEAL",
                      "WELLNESS",
                      "MINIBAR",
                      "BUSINESS_CENTER",
                      "WIFI",
                      "GUEST_SERVICE"
                    ]
                  },
                  "normalType": {
                    "type": "string",
                    "description": "Invoice item type identifier. Read more about valid enums <a href=\"https://open-api-docs.guesty.com/docs/valid-enumerations\">here</a>",
                    "enum": [
                      "CF",
                      "CFE",
                      "PCM",
                      "LT",
                      "CT",
                      "VAT",
                      "GST",
                      "TT",
                      "TAX",
                      "ST",
                      "COT",
                      "OCT",
                      "TOT",
                      "HSHAT",
                      "HST",
                      "MAT",
                      "AFE"
                    ]
                  },
                  "realizationDates": {
                    "description": "The date in which the invoice item fee is to be realized",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "date"
                      ]
                    }
                  }
                },
                "required": [
                  "title",
                  "amount",
                  "normalType"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated folio with the new invoice item"
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Some of the request parameters are invalid"
          }
        },
        "tags": [
          "Invoice Items"
        ]
      }
    },
    "/guest-app-api/guest-app-runtime/{reservationId}/module/{moduleType}/summary": {
      "get": {
        "operationId": "GuestAppOpenApiController_getCifSummaryDetails",
        "summary": "Get check-in form summary by reservation id",
        "tags": [
          "Guest app"
        ],
        "description": "Get url and filename of the check-in form summary. Url is valid for 1 hour.",
        "parameters": [
          {
            "name": "reservationId",
            "required": true,
            "in": "path",
            "description": "Reservation id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moduleType",
            "required": true,
            "in": "path",
            "description": "Module type",
            "schema": {
              "enum": [
                "check_in"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of check-in form summary file",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Url to fetch check-in form summary PDF. Valid 1 hour"
                    },
                    "fileName": {
                      "type": "string",
                      "example": "checkinform_My Guest App_James_Doe.pdf",
                      "description": "Name of check-in form summary PDF"
                    }
                  },
                  "required": [
                    "url",
                    "fileName"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Can not pull details, unauthorized"
          },
          "404": {
            "description": "Check-in form summary not found"
          }
        }
      }
    },
    "/icalendar-api/imported-calendars/{importedCalendarId}": {
      "get": {
        "operationId": "ImportedCalendarOpenApiController_getImportedCalendarById",
        "summary": "Get imported calendar by id",
        "description": "\n      To retrieve data for a specific imported calendar, \n      including iCalendar name, URL, state & events adjustment, \n      use the following request",
        "parameters": [
          {
            "name": "importedCalendarId",
            "required": true,
            "in": "path",
            "description": "Id of an imported calendars",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a specific imported calendar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of an imported calendar"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Related listing id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Related account id"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time of creation of an imported calendar"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time of last update of an imported calendar properties"
                    },
                    "status": {
                      "enum": [
                        "active",
                        "paused",
                        "warning",
                        "suspended"
                      ],
                      "type": "string",
                      "description": "Status of an imported calendar"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of an imported calendar"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of an imported calendar"
                    },
                    "lastSyncedAt": {
                      "type": "string",
                      "description": "Timestamp of last successful sync of an imported calendar"
                    },
                    "adjustmentValueStart": {
                      "type": "number",
                      "description": "Defines offset for start date of imported calendar events"
                    },
                    "adjustmentValueEnd": {
                      "type": "number",
                      "description": "Defines offset for end date of imported calendar events"
                    }
                  },
                  "required": [
                    "id",
                    "listingId",
                    "accountId",
                    "createdAt",
                    "updatedAt",
                    "status",
                    "url",
                    "name",
                    "adjustmentValueStart",
                    "adjustmentValueEnd"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Imported calendar not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Calendar Sync (iCal import)"
        ]
      },
      "put": {
        "operationId": "ImportedCalendarOpenApiController_updateImportedCalendar",
        "summary": "Update imported calendar",
        "description": "\n      If any adjustments are made to the values, the import sync process will be automatically triggered. \n      You can use this request to update the URL, name, or events adjustment of a specific imported calendar ID. \n      To pause or resume the import process, navigate to \"Pause/Resume Imported-Calendar Sync.\" \n      Please note that you can only update the allowed properties that are listed below.",
        "parameters": [
          {
            "name": "importedCalendarId",
            "required": true,
            "in": "path",
            "description": "Id of an imported calendars",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 3
                  },
                  "adjustmentValueStart": {
                    "type": "number",
                    "enum": [
                      -2,
                      -1,
                      0,
                      1,
                      2
                    ]
                  },
                  "adjustmentValueEnd": {
                    "type": "number",
                    "enum": [
                      -2,
                      -1,
                      0,
                      1,
                      2
                    ]
                  }
                },
                "required": [
                  "name",
                  "adjustmentValueStart",
                  "adjustmentValueEnd"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns updated state of imported calendar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of an imported calendar"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Related listing id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Related account id"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time of creation of an imported calendar"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time of last update of an imported calendar properties"
                    },
                    "status": {
                      "enum": [
                        "active",
                        "paused",
                        "warning",
                        "suspended"
                      ],
                      "type": "string",
                      "description": "Status of an imported calendar"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of an imported calendar"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of an imported calendar"
                    },
                    "lastSyncedAt": {
                      "type": "string",
                      "description": "Timestamp of last successful sync of an imported calendar"
                    },
                    "adjustmentValueStart": {
                      "type": "number",
                      "description": "Defines offset for start date of imported calendar events"
                    },
                    "adjustmentValueEnd": {
                      "type": "number",
                      "description": "Defines offset for end date of imported calendar events"
                    }
                  },
                  "required": [
                    "id",
                    "listingId",
                    "accountId",
                    "createdAt",
                    "updatedAt",
                    "status",
                    "url",
                    "name",
                    "adjustmentValueStart",
                    "adjustmentValueEnd"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Listing not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Calendar Sync (iCal import)"
        ]
      },
      "delete": {
        "operationId": "ImportedCalendarOpenApiController_deleteImportedCalendar",
        "summary": "Delete imported calendar",
        "description": "\n    You can remove imported calendar with one of the following behaviors (strategies) regarding existing imported events.",
        "parameters": [
          {
            "name": "strategy",
            "required": true,
            "in": "query",
            "description": "One of allowed approaches for deletion of imported calendar",
            "schema": {
              "enum": [
                "remove_all_channel_events",
                "remove_past_channel_events",
                "remove_future_channel_events",
                "preserve_channel_events"
              ],
              "type": "string"
            }
          },
          {
            "name": "importedCalendarId",
            "required": true,
            "in": "path",
            "description": "Id of an imported calendars",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Imported calendar deleted"
          },
          "204": {
            "description": ""
          },
          "404": {
            "description": "Imported calendar not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Calendar Sync (iCal import)"
        ]
      }
    },
    "/icalendar-api/imported-calendars": {
      "get": {
        "operationId": "ImportedCalendarOpenApiController_getImportedCalendars",
        "summary": "Get imported calendars list",
        "description": "To retrieve a list of all imported calendars, use the following request.",
        "parameters": [
          {
            "name": "listingId",
            "required": true,
            "in": "query",
            "description": "Id of a listing to get imported calendars for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of imported calendars",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of an imported calendar"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Related listing id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Related account id"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time of creation of an imported calendar"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time of last update of an imported calendar properties"
                    },
                    "status": {
                      "enum": [
                        "active",
                        "paused",
                        "warning",
                        "suspended"
                      ],
                      "type": "string",
                      "description": "Status of an imported calendar"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of an imported calendar"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of an imported calendar"
                    },
                    "lastSyncedAt": {
                      "type": "string",
                      "description": "Timestamp of last successful sync of an imported calendar"
                    },
                    "adjustmentValueStart": {
                      "type": "number",
                      "description": "Defines offset for start date of imported calendar events"
                    },
                    "adjustmentValueEnd": {
                      "type": "number",
                      "description": "Defines offset for end date of imported calendar events"
                    }
                  },
                  "required": [
                    "id",
                    "listingId",
                    "accountId",
                    "createdAt",
                    "updatedAt",
                    "status",
                    "url",
                    "name",
                    "adjustmentValueStart",
                    "adjustmentValueEnd"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Listing not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Calendar Sync (iCal import)"
        ]
      },
      "post": {
        "operationId": "ImportedCalendarOpenApiController_createImportedCalendar",
        "summary": "Import a calendar",
        "description": "\n      To import external calendar events into Guesty Calendar via the iCalendar link,\n      you must first create an imported-calendar entity. \n      This entity stores the import settings, such as the URL, calendar name, state, and events adjustment. \n      Once the entity is created, the import sync process will be initiated.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 3
                  },
                  "url": {
                    "type": "string"
                  },
                  "listingId": {
                    "type": "string"
                  },
                  "adjustmentValueStart": {
                    "type": "number",
                    "enum": [
                      -2,
                      -1,
                      0,
                      1,
                      2
                    ]
                  },
                  "adjustmentValueEnd": {
                    "type": "number",
                    "enum": [
                      -2,
                      -1,
                      0,
                      1,
                      2
                    ]
                  }
                },
                "required": [
                  "name",
                  "url",
                  "listingId",
                  "adjustmentValueStart",
                  "adjustmentValueEnd"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Imported calendar created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of an imported calendar"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Related listing id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Related account id"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time of creation of an imported calendar"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time of last update of an imported calendar properties"
                    },
                    "status": {
                      "enum": [
                        "active",
                        "paused",
                        "warning",
                        "suspended"
                      ],
                      "type": "string",
                      "description": "Status of an imported calendar"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of an imported calendar"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of an imported calendar"
                    },
                    "lastSyncedAt": {
                      "type": "string",
                      "description": "Timestamp of last successful sync of an imported calendar"
                    },
                    "adjustmentValueStart": {
                      "type": "number",
                      "description": "Defines offset for start date of imported calendar events"
                    },
                    "adjustmentValueEnd": {
                      "type": "number",
                      "description": "Defines offset for end date of imported calendar events"
                    }
                  },
                  "required": [
                    "id",
                    "listingId",
                    "accountId",
                    "createdAt",
                    "updatedAt",
                    "status",
                    "url",
                    "name",
                    "adjustmentValueStart",
                    "adjustmentValueEnd"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of an imported calendar"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Related listing id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Related account id"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time of creation of an imported calendar"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time of last update of an imported calendar properties"
                    },
                    "status": {
                      "enum": [
                        "active",
                        "paused",
                        "warning",
                        "suspended"
                      ],
                      "type": "string",
                      "description": "Status of an imported calendar"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of an imported calendar"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of an imported calendar"
                    },
                    "lastSyncedAt": {
                      "type": "string",
                      "description": "Timestamp of last successful sync of an imported calendar"
                    },
                    "adjustmentValueStart": {
                      "type": "number",
                      "description": "Defines offset for start date of imported calendar events"
                    },
                    "adjustmentValueEnd": {
                      "type": "number",
                      "description": "Defines offset for end date of imported calendar events"
                    }
                  },
                  "required": [
                    "id",
                    "listingId",
                    "accountId",
                    "createdAt",
                    "updatedAt",
                    "status",
                    "url",
                    "name",
                    "adjustmentValueStart",
                    "adjustmentValueEnd"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Listing not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Calendar Sync (iCal import)"
        ]
      }
    },
    "/icalendar-api/imported-calendars/{importedCalendarId}/pause": {
      "post": {
        "operationId": "ImportedCalendarOpenApiController_pauseImportedCaledar",
        "summary": "Unsync imported calendar",
        "description": "\n    You can manually pause or resume the import process with the following requests. \n    Once the imported calendar is resumed, the import sync process will be triggered.\n  ",
        "parameters": [
          {
            "name": "importedCalendarId",
            "required": true,
            "in": "path",
            "description": "Id of an imported calendars",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns updated state of imported calendar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of an imported calendar"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Related listing id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Related account id"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time of creation of an imported calendar"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time of last update of an imported calendar properties"
                    },
                    "status": {
                      "enum": [
                        "active",
                        "paused",
                        "warning",
                        "suspended"
                      ],
                      "type": "string",
                      "description": "Status of an imported calendar"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of an imported calendar"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of an imported calendar"
                    },
                    "lastSyncedAt": {
                      "type": "string",
                      "description": "Timestamp of last successful sync of an imported calendar"
                    },
                    "adjustmentValueStart": {
                      "type": "number",
                      "description": "Defines offset for start date of imported calendar events"
                    },
                    "adjustmentValueEnd": {
                      "type": "number",
                      "description": "Defines offset for end date of imported calendar events"
                    }
                  },
                  "required": [
                    "id",
                    "listingId",
                    "accountId",
                    "createdAt",
                    "updatedAt",
                    "status",
                    "url",
                    "name",
                    "adjustmentValueStart",
                    "adjustmentValueEnd"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Listing not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Calendar Sync (iCal import)"
        ]
      }
    },
    "/icalendar-api/imported-calendars/{importedCalendarId}/resume": {
      "post": {
        "operationId": "ImportedCalendarOpenApiController_resumeImportedCaledar",
        "summary": "Resume imported calendar sync",
        "description": "\n      You can manually pause or resume the import process with the following requests. \n      Once the imported calendar is resumed, the import sync process will be triggered.\n    ",
        "parameters": [
          {
            "name": "importedCalendarId",
            "required": true,
            "in": "path",
            "description": "Id of an imported calendars",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns updated state of imported calendar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of an imported calendar"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Related listing id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Related account id"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time of creation of an imported calendar"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time of last update of an imported calendar properties"
                    },
                    "status": {
                      "enum": [
                        "active",
                        "paused",
                        "warning",
                        "suspended"
                      ],
                      "type": "string",
                      "description": "Status of an imported calendar"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of an imported calendar"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of an imported calendar"
                    },
                    "lastSyncedAt": {
                      "type": "string",
                      "description": "Timestamp of last successful sync of an imported calendar"
                    },
                    "adjustmentValueStart": {
                      "type": "number",
                      "description": "Defines offset for start date of imported calendar events"
                    },
                    "adjustmentValueEnd": {
                      "type": "number",
                      "description": "Defines offset for end date of imported calendar events"
                    }
                  },
                  "required": [
                    "id",
                    "listingId",
                    "accountId",
                    "createdAt",
                    "updatedAt",
                    "status",
                    "url",
                    "name",
                    "adjustmentValueStart",
                    "adjustmentValueEnd"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Listing not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Calendar Sync (iCal import)"
        ]
      }
    },
    "/icalendar-api/exported-calendars": {
      "post": {
        "operationId": "ExportedCalendarOpenApiController_createExportedCalendar",
        "summary": "Create exported calendar link",
        "description": "\n    When you export your Guesty calendar to an external service, \n    the events from the Guesty calendar will block the external calendar. \n    You must create an exported calendar entity to export data from Guesty via the iCalendar link. \n    This entity stores the settings used during the export process, such as the URL, state, and adjustments.\n    Once the entity is created, the export sync process will be triggered. \n    Please note that you can only have one exported calendar per listing. \n    After posting your request, you will receive an exported calendar descriptor, which includes the URL property. \n    You will use this URL in your other services to pull data from Guesty.\n    ",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listingId": {
                    "type": "string",
                    "description": "Listing id"
                  },
                  "adjustmentValueStart": {
                    "type": "number",
                    "enum": [
                      -2,
                      -1,
                      0,
                      1,
                      2
                    ],
                    "description": "Start date offset"
                  },
                  "adjustmentValueEnd": {
                    "type": "number",
                    "enum": [
                      -2,
                      -1,
                      0,
                      1,
                      2
                    ],
                    "description": "End date offset"
                  }
                },
                "required": [
                  "listingId",
                  "adjustmentValueStart",
                  "adjustmentValueEnd"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Exported calendar created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of an exported calendar"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Related listing id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Related account id"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time of creation of an exported calendar"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time of last update of an exported calendar"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of an exported calendar"
                    },
                    "lastSyncedAt": {
                      "type": "string",
                      "description": "Timestamp of last successful sync of an exported calendar"
                    },
                    "adjustmentValueStart": {
                      "type": "number",
                      "description": "Defines offset for start date of exported calendar events"
                    },
                    "adjustmentValueEnd": {
                      "type": "number",
                      "description": "Defines offset for end date of exported calendar events"
                    }
                  },
                  "required": [
                    "id",
                    "listingId",
                    "accountId",
                    "createdAt",
                    "updatedAt",
                    "url",
                    "lastSyncedAt",
                    "adjustmentValueStart",
                    "adjustmentValueEnd"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of an exported calendar"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Related listing id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Related account id"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time of creation of an exported calendar"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time of last update of an exported calendar"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of an exported calendar"
                    },
                    "lastSyncedAt": {
                      "type": "string",
                      "description": "Timestamp of last successful sync of an exported calendar"
                    },
                    "adjustmentValueStart": {
                      "type": "number",
                      "description": "Defines offset for start date of exported calendar events"
                    },
                    "adjustmentValueEnd": {
                      "type": "number",
                      "description": "Defines offset for end date of exported calendar events"
                    }
                  },
                  "required": [
                    "id",
                    "listingId",
                    "accountId",
                    "createdAt",
                    "updatedAt",
                    "url",
                    "lastSyncedAt",
                    "adjustmentValueStart",
                    "adjustmentValueEnd"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Client unauthorized"
          },
          "404": {
            "description": "Listing not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Calendar Sync (iCal export)"
        ]
      },
      "get": {
        "operationId": "ExportedCalendarOpenApiController_getExportedCalendar",
        "summary": "Get active exported calendar",
        "description": "\n    Any listing can have only 1 exported calendar, composed by Guesty. \n    You can use the following request to retrieve an active exported-calendar for a specified listing. \n    Please, note, the response body will contain either an empty list, or a list with a single item - the exported calendar itself.\n    You can use this endpoint to get currently active exported calendar, if you do not have its id.\n    ",
        "parameters": [
          {
            "name": "listingId",
            "required": true,
            "in": "query",
            "description": "Id of a listing to get exported calendars for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exported calendar found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of an exported calendar"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Related listing id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Related account id"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time of creation of an exported calendar"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time of last update of an exported calendar"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of an exported calendar"
                    },
                    "lastSyncedAt": {
                      "type": "string",
                      "description": "Timestamp of last successful sync of an exported calendar"
                    },
                    "adjustmentValueStart": {
                      "type": "number",
                      "description": "Defines offset for start date of exported calendar events"
                    },
                    "adjustmentValueEnd": {
                      "type": "number",
                      "description": "Defines offset for end date of exported calendar events"
                    }
                  },
                  "required": [
                    "id",
                    "listingId",
                    "accountId",
                    "createdAt",
                    "updatedAt",
                    "url",
                    "lastSyncedAt",
                    "adjustmentValueStart",
                    "adjustmentValueEnd"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Listing not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Calendar Sync (iCal export)"
        ]
      }
    },
    "/icalendar-api/exported-calendars/{exportedCalendarId}": {
      "get": {
        "operationId": "ExportedCalendarOpenApiController_getExportedCalendarById",
        "summary": "Get a specific exported calendar",
        "description": "\n    Should return the state of an exported calendar entity by its id.\n    If an exported calendar was removed, you will receive an error.\n    ",
        "parameters": [
          {
            "name": "exportedCalendarId",
            "required": true,
            "in": "path",
            "description": "Id of an exported calendars",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exported calendar found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of an exported calendar"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Related listing id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Related account id"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time of creation of an exported calendar"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time of last update of an exported calendar"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of an exported calendar"
                    },
                    "lastSyncedAt": {
                      "type": "string",
                      "description": "Timestamp of last successful sync of an exported calendar"
                    },
                    "adjustmentValueStart": {
                      "type": "number",
                      "description": "Defines offset for start date of exported calendar events"
                    },
                    "adjustmentValueEnd": {
                      "type": "number",
                      "description": "Defines offset for end date of exported calendar events"
                    }
                  },
                  "required": [
                    "id",
                    "listingId",
                    "accountId",
                    "createdAt",
                    "updatedAt",
                    "url",
                    "lastSyncedAt",
                    "adjustmentValueStart",
                    "adjustmentValueEnd"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Exported calendar not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Calendar Sync (iCal export)"
        ]
      },
      "put": {
        "operationId": "ExportedCalendarOpenApiController_updateExportedCalendar",
        "summary": "Update exported calendar",
        "description": "\n    If adjustment values are updated, the export sync process will be triggered. \n    Use this request to update events adjustment of your exported Guesty calendar. \n    Please note you can update only the parameters listed below.\n    ",
        "parameters": [
          {
            "name": "exportedCalendarId",
            "required": true,
            "in": "path",
            "description": "Id of an exported calendars",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "adjustmentValueStart": {
                    "type": "number",
                    "enum": [
                      -2,
                      -1,
                      0,
                      1,
                      2
                    ]
                  },
                  "adjustmentValueEnd": {
                    "type": "number",
                    "enum": [
                      -2,
                      -1,
                      0,
                      1,
                      2
                    ]
                  }
                },
                "required": [
                  "adjustmentValueStart",
                  "adjustmentValueEnd"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Exported calendar found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of an exported calendar"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "Related listing id"
                    },
                    "accountId": {
                      "type": "string",
                      "description": "Related account id"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time of creation of an exported calendar"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time of last update of an exported calendar"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of an exported calendar"
                    },
                    "lastSyncedAt": {
                      "type": "string",
                      "description": "Timestamp of last successful sync of an exported calendar"
                    },
                    "adjustmentValueStart": {
                      "type": "number",
                      "description": "Defines offset for start date of exported calendar events"
                    },
                    "adjustmentValueEnd": {
                      "type": "number",
                      "description": "Defines offset for end date of exported calendar events"
                    }
                  },
                  "required": [
                    "id",
                    "listingId",
                    "accountId",
                    "createdAt",
                    "updatedAt",
                    "url",
                    "lastSyncedAt",
                    "adjustmentValueStart",
                    "adjustmentValueEnd"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Exported calendar not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Calendar Sync (iCal export)"
        ]
      },
      "delete": {
        "operationId": "ExportedCalendarOpenApiController_deleteExportedCalendar",
        "summary": "Delete exported calendar",
        "description": "\n    Keep in mind - when you remove an exported calendar, any services that use its URL will encounter a 404 error.\n    To permanently delete the exported calendar, use the following request.",
        "parameters": [
          {
            "name": "exportedCalendarId",
            "required": true,
            "in": "path",
            "description": "Id of an exported calendars",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exported calendar deleted"
          },
          "204": {
            "description": ""
          },
          "404": {
            "description": "Exported calendar not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Calendar Sync (iCal export)"
        ]
      }
    },
    "/payment-providers/summary": {
      "get": {
        "tags": [
          "Payment providers"
        ],
        "summary": "Get summary ",
        "operationId": "getSummary",
        "responses": {
          "200": {
            "description": "Response received",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/payment-providers/default": {
      "get": {
        "tags": [
          "Payment providers"
        ],
        "summary": "Get default payment provider",
        "operationId": "getDefaultProvider",
        "responses": {
          "200": {
            "description": "Response received",
            "content": {}
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/payment-providers/stats": {
      "get": {
        "tags": [
          "Payment providers"
        ],
        "summary": "Get provider stats",
        "operationId": "getStats",
        "responses": {
          "200": {
            "description": "Response received",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "required": [
                    "data",
                    "limit",
                    "skip",
                    "total"
                  ],
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "required": [
                          "_id"
                        ],
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "accountName": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "listingsCount": {
                            "type": "number"
                          },
                          "paymentMethodsCount": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "limit": {
                      "type": "number"
                    },
                    "skip": {
                      "type": "number"
                    },
                    "total": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/payment-providers/{providerId}": {
      "get": {
        "tags": [
          "Payment providers"
        ],
        "summary": "Get payment provider by id",
        "operationId": "getPaymentProvider",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "5ee77a05825236b6d5aab005"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response received",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "required": [
                    "_id"
                  ],
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "accountName": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "listingsCount": {
                      "type": "number"
                    },
                    "paymentMethodsCount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/payment-providers/provider-by-listing": {
      "get": {
        "tags": [
          "Payment providers"
        ],
        "summary": "Get payment provider by listing id",
        "operationId": "getPaymentProviderByListing",
        "parameters": [
          {
            "in": "query",
            "name": "includeInactiveProviders",
            "description": "include inactive providers in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "listingId",
            "description": "listing id",
            "schema": {
              "type": "string",
              "default": null
            },
            "required": true
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Selection of fields, separated by space. When null retrieve the main properties of the object. We recommend always specifying the specific fields you'd like to receive to ensure that you get them.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response received",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "_id"
                      ],
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "accountName": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "isDefault": {
                          "type": "boolean"
                        },
                        "listingsCount": {
                          "type": "number"
                        },
                        "paymentMethodsCount": {
                          "type": "number"
                        }
                      }
                    }
                  ],
                  "properties": {
                    "paymentProviderId": {
                      "type": "string"
                    },
                    "fallbackToDefault": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/properties/spaces/bed-types": {
      "get": {
        "tags": [
          "Spaces"
        ],
        "summary": "List bed-types",
        "responses": {
          "200": {
            "description": "Array of all available bed types",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "example": [
                    "KING_BED",
                    "QUEEN_BED",
                    "DOUBLE_BED",
                    "SINGLE_BED",
                    "SOFA_BED",
                    "AIR_MATTRESS",
                    "BUNK_BED",
                    "FLOOR_MATTRESS",
                    "WATER_BED",
                    "TODDLER_BED",
                    "CRIB"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties/spaces/room-types": {
      "get": {
        "tags": [
          "Spaces"
        ],
        "summary": "List room-types",
        "responses": {
          "200": {
            "description": "Array of all available room types",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "example": [
                    "BEDROOM",
                    "SHARED_SPACE"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties/spaces/unit-type/{unitTypeId}": {
      "get": {
        "tags": [
          "Spaces"
        ],
        "summary": "Retrieve spaces for a unit-type",
        "parameters": [
          {
            "name": "unitTypeId",
            "in": "path",
            "description": "ID of the requested unit type",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "5d6e7a7ebf8e3800207735af"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns spaces for a requested unitTypeId",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unitTypeId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "spaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "unitTypeId": {
                            "type": "string",
                            "example": "5d6e7a7ebf8e3800207735ae"
                          },
                          "accountId": {
                            "type": "string",
                            "example": "5d6e7a7ebf8e3800207735ae"
                          },
                          "name": {
                            "type": "string",
                            "example": "Space room"
                          },
                          "roomIds": {
                            "type": "object",
                            "properties": {
                              "airbnb": {
                                "type": "string"
                              }
                            }
                          },
                          "beds": {
                            "type": "object",
                            "properties": {
                              "KING_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "QUEEN_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "DOUBLE_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "SINGLE_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "SOFA_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "AIR_MATTRESS": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "BUNK_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              }
                            }
                          },
                          "other": {
                            "type": "object",
                            "properties": {
                              "FLOOR_MATTRESS": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "WATER_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "TODDLER_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "CRIB": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    "bedroomsAllowed": {
                      "type": "boolean",
                      "example": true
                    },
                    "bathrooms": {
                      "type": "object",
                      "properties": {
                        "SHARED": {
                          "type": "number",
                          "example": 1
                        },
                        "PRIVATE": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties/spaces/complex/{complexId}": {
      "get": {
        "tags": [
          "Spaces"
        ],
        "summary": "Retrieve spaces for a complex",
        "parameters": [
          {
            "name": "complexId",
            "in": "path",
            "description": "ID of the requested complexId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "5d6e7a7ebf8e3800207735bf"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns spaces for a requested Complex",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "complexId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "unitTypeSpaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "unitTypeId": {
                            "type": "string",
                            "example": "5d6e7a7ebf8e3800207735ae"
                          },
                          "spaces": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "unitTypeId": {
                                  "type": "string",
                                  "example": "5d6e7a7ebf8e3800207735ae"
                                },
                                "accountId": {
                                  "type": "string",
                                  "example": "5d6e7a7ebf8e3800207735ae"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Space room"
                                },
                                "roomIds": {
                                  "type": "object",
                                  "properties": {
                                    "airbnb": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "beds": {
                                  "type": "object",
                                  "properties": {
                                    "KING_BED": {
                                      "minimum": 0,
                                      "type": "number",
                                      "example": 1,
                                      "default": 0
                                    },
                                    "QUEEN_BED": {
                                      "minimum": 0,
                                      "type": "number",
                                      "example": 1,
                                      "default": 0
                                    },
                                    "DOUBLE_BED": {
                                      "minimum": 0,
                                      "type": "number",
                                      "example": 1,
                                      "default": 0
                                    },
                                    "SINGLE_BED": {
                                      "minimum": 0,
                                      "type": "number",
                                      "example": 1,
                                      "default": 0
                                    },
                                    "SOFA_BED": {
                                      "minimum": 0,
                                      "type": "number",
                                      "example": 1,
                                      "default": 0
                                    },
                                    "AIR_MATTRESS": {
                                      "minimum": 0,
                                      "type": "number",
                                      "example": 1,
                                      "default": 0
                                    },
                                    "BUNK_BED": {
                                      "minimum": 0,
                                      "type": "number",
                                      "example": 1,
                                      "default": 0
                                    }
                                  }
                                },
                                "other": {
                                  "type": "object",
                                  "properties": {
                                    "FLOOR_MATTRESS": {
                                      "minimum": 0,
                                      "type": "number",
                                      "example": 1,
                                      "default": 0
                                    },
                                    "WATER_BED": {
                                      "minimum": 0,
                                      "type": "number",
                                      "example": 1,
                                      "default": 0
                                    },
                                    "TODDLER_BED": {
                                      "minimum": 0,
                                      "type": "number",
                                      "example": 1,
                                      "default": 0
                                    },
                                    "CRIB": {
                                      "minimum": 0,
                                      "type": "number",
                                      "example": 1,
                                      "default": 0
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "bedroomsAllowed": {
                            "type": "boolean",
                            "example": true
                          },
                          "bathrooms": {
                            "type": "object",
                            "properties": {
                              "SHARED": {
                                "type": "number",
                                "example": 1
                              },
                              "PRIVATE": {
                                "type": "number",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties/spaces/unit-type/{unitTypeId}/add": {
      "post": {
        "tags": [
          "Spaces"
        ],
        "summary": "Add space to unit-type (Create Space)",
        "parameters": [
          {
            "name": "unitTypeId",
            "in": "path",
            "description": "Unit type Id to add room to",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "5d6e7a7ebf8e3800207735af"
          }
        ],
        "requestBody": {
          "description": "Room object to add",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "5d6e7a7ebf8e3800207735ae"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "BEDROOM",
                      "SHARED_SPACE",
                      "FULL_BATHROOM",
                      "HALF_BATHROOM"
                    ]
                  },
                  "airbnb_room_id": {
                    "type": "string"
                  },
                  "beds": {
                    "type": "object",
                    "properties": {
                      "KING_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "QUEEN_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "DOUBLE_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "SINGLE_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "SOFA_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "AIR_MATTRESS": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "BUNK_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      }
                    }
                  },
                  "other": {
                    "type": "object",
                    "properties": {
                      "FLOOR_MATTRESS": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "WATER_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "TODDLER_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "CRIB": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the newly added space",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unitTypeId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "spaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "unitTypeId": {
                            "type": "string",
                            "example": "5d6e7a7ebf8e3800207735ae"
                          },
                          "accountId": {
                            "type": "string",
                            "example": "5d6e7a7ebf8e3800207735ae"
                          },
                          "name": {
                            "type": "string",
                            "example": "Space room"
                          },
                          "roomIds": {
                            "type": "object",
                            "properties": {
                              "airbnb": {
                                "type": "string"
                              }
                            }
                          },
                          "beds": {
                            "type": "object",
                            "properties": {
                              "KING_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "QUEEN_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "DOUBLE_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "SINGLE_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "SOFA_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "AIR_MATTRESS": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "BUNK_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              }
                            }
                          },
                          "other": {
                            "type": "object",
                            "properties": {
                              "FLOOR_MATTRESS": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "WATER_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "TODDLER_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "CRIB": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    "bedroomsAllowed": {
                      "type": "boolean",
                      "example": true
                    },
                    "bathrooms": {
                      "type": "object",
                      "properties": {
                        "SHARED": {
                          "type": "number",
                          "example": 1
                        },
                        "PRIVATE": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties/spaces/space/{spaceId}/details": {
      "patch": {
        "tags": [
          "Spaces"
        ],
        "summary": "Edit space details",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "spaceId to edit",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "5d6e7a7ebf8e3800207735de"
          }
        ],
        "requestBody": {
          "description": "Room details to edit",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "BEDROOM",
                      "SHARED_SPACE",
                      "FULL_BATHROOM",
                      "HALF_BATHROOM"
                    ]
                  },
                  "airbnb_room_id": {
                    "type": "string",
                    "example": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the edited space",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unitTypeId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "spaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "unitTypeId": {
                            "type": "string",
                            "example": "5d6e7a7ebf8e3800207735ae"
                          },
                          "accountId": {
                            "type": "string",
                            "example": "5d6e7a7ebf8e3800207735ae"
                          },
                          "name": {
                            "type": "string",
                            "example": "Space room"
                          },
                          "roomIds": {
                            "type": "object",
                            "properties": {
                              "airbnb": {
                                "type": "string"
                              }
                            }
                          },
                          "beds": {
                            "type": "object",
                            "properties": {
                              "KING_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "QUEEN_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "DOUBLE_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "SINGLE_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "SOFA_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "AIR_MATTRESS": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "BUNK_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              }
                            }
                          },
                          "other": {
                            "type": "object",
                            "properties": {
                              "FLOOR_MATTRESS": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "WATER_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "TODDLER_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "CRIB": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    "bedroomsAllowed": {
                      "type": "boolean",
                      "example": true
                    },
                    "bathrooms": {
                      "type": "object",
                      "properties": {
                        "SHARED": {
                          "type": "number",
                          "example": 1
                        },
                        "PRIVATE": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties/spaces/space/{spaceId}/remove": {
      "post": {
        "tags": [
          "Spaces"
        ],
        "summary": "Remove space from unit-type",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "spaceId to remove",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "5d6e7a7ebf8e3800207735df"
          }
        ],
        "responses": {
          "200": {
            "description": "Space was removed, returns the spaces left on the unitType",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unitTypeId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "spaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "unitTypeId": {
                            "type": "string",
                            "example": "5d6e7a7ebf8e3800207735ae"
                          },
                          "accountId": {
                            "type": "string",
                            "example": "5d6e7a7ebf8e3800207735ae"
                          },
                          "name": {
                            "type": "string",
                            "example": "Space room"
                          },
                          "roomIds": {
                            "type": "object",
                            "properties": {
                              "airbnb": {
                                "type": "string"
                              }
                            }
                          },
                          "beds": {
                            "type": "object",
                            "properties": {
                              "KING_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "QUEEN_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "DOUBLE_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "SINGLE_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "SOFA_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "AIR_MATTRESS": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "BUNK_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              }
                            }
                          },
                          "other": {
                            "type": "object",
                            "properties": {
                              "FLOOR_MATTRESS": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "WATER_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "TODDLER_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "CRIB": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    "bedroomsAllowed": {
                      "type": "boolean",
                      "example": true
                    },
                    "bathrooms": {
                      "type": "object",
                      "properties": {
                        "SHARED": {
                          "type": "number",
                          "example": 1
                        },
                        "PRIVATE": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties/spaces/space/{spaceId}/edit": {
      "post": {
        "tags": [
          "Spaces"
        ],
        "summary": "Edit space beds",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "spaceId to edit",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "6287a21df5dbf500360254d0"
          }
        ],
        "requestBody": {
          "description": "Room object to edit",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "beds": {
                    "type": "object",
                    "properties": {
                      "KING_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "QUEEN_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "DOUBLE_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "SINGLE_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "SOFA_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "AIR_MATTRESS": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "BUNK_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      }
                    }
                  },
                  "other": {
                    "type": "object",
                    "properties": {
                      "FLOOR_MATTRESS": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "WATER_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "TODDLER_BED": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      },
                      "CRIB": {
                        "minimum": 0,
                        "type": "number",
                        "example": 1,
                        "default": 0
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the edited space",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unitTypeId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "spaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "unitTypeId": {
                            "type": "string",
                            "example": "5d6e7a7ebf8e3800207735ae"
                          },
                          "accountId": {
                            "type": "string",
                            "example": "5d6e7a7ebf8e3800207735ae"
                          },
                          "name": {
                            "type": "string",
                            "example": "Space room"
                          },
                          "roomIds": {
                            "type": "object",
                            "properties": {
                              "airbnb": {
                                "type": "string"
                              }
                            }
                          },
                          "beds": {
                            "type": "object",
                            "properties": {
                              "KING_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "QUEEN_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "DOUBLE_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "SINGLE_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "SOFA_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "AIR_MATTRESS": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "BUNK_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              }
                            }
                          },
                          "other": {
                            "type": "object",
                            "properties": {
                              "FLOOR_MATTRESS": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "WATER_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "TODDLER_BED": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              },
                              "CRIB": {
                                "minimum": 0,
                                "type": "number",
                                "example": 1,
                                "default": 0
                              }
                            }
                          }
                        }
                      }
                    },
                    "bedroomsAllowed": {
                      "type": "boolean",
                      "example": true
                    },
                    "bathrooms": {
                      "type": "object",
                      "properties": {
                        "SHARED": {
                          "type": "number",
                          "example": 1
                        },
                        "PRIVATE": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties/house-rules/unit-type/{unitTypeId}": {
      "get": {
        "tags": [
          "House Rules"
        ],
        "summary": "Retrieve unit-type house-rules",
        "parameters": [
          {
            "name": "unitTypeId",
            "in": "path",
            "description": "ID of the requested unitType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "5accf6954c5ed10025902aed"
          }
        ],
        "responses": {
          "200": {
            "description": "House rules fields of unitType",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "suitableForChildren": {
                      "type": "boolean"
                    },
                    "suitableForInfants": {
                      "type": "boolean"
                    },
                    "petsAllowed": {
                      "type": "boolean"
                    },
                    "petsCharged": {
                      "type": "boolean"
                    },
                    "smokingAllowed": {
                      "type": "boolean"
                    },
                    "partiesAllowed": {
                      "type": "boolean"
                    },
                    "additionalRules": {
                      "type": "string"
                    },
                    "quietHours": {
                      "type": "object",
                      "properties": {
                        "set": {
                          "type": "boolean"
                        },
                        "start": {
                          "type": "string"
                        },
                        "end": {
                          "type": "string"
                        }
                      }
                    },
                    "minimumAge": {
                      "type": "integer"
                    }
                  },
                  "example": {
                    "suitableForChildren": true,
                    "suitableForInfants": false,
                    "petsAllowed": true,
                    "petsCharged": true,
                    "smokingAllowed": false,
                    "partiesAllowed": false,
                    "additionalRules": "No alcohol",
                    "quietHours": {
                      "set": true,
                      "start": "22:00",
                      "end": "08:00"
                    },
                    "minimumAge": 21
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "House Rules"
        ],
        "summary": "Update unit-type house-rules",
        "parameters": [
          {
            "name": "unitTypeId",
            "in": "path",
            "description": "ID of the requested unitType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "5accf6954c5ed10025902aed"
          }
        ],
        "requestBody": {
          "description": "The object of house rules that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "additionalRules": {
                    "type": "string"
                  },
                  "childrenRules": {
                    "type": "object",
                    "properties": {
                      "suitableForChildren": {
                        "type": "boolean"
                      },
                      "suitableForInfants": {
                        "type": "boolean"
                      },
                      "reason": {
                        "type": "string"
                      }
                    }
                  },
                  "petsAllowed": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "chargeType": {
                        "type": "string"
                      }
                    }
                  },
                  "quietBetween": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "hours": {
                        "type": "object",
                        "properties": {
                          "start": {
                            "type": "string"
                          },
                          "end": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "smokingAllowed": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      }
                    }
                  },
                  "suitableForEvents": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      }
                    }
                  },
                  "minimumAge": {
                    "type": "integer"
                  }
                },
                "example": {
                  "childrenRules": {
                    "suitableForChildren": true,
                    "suitableForInfants": true,
                    "reason": "Children rules reason"
                  },
                  "petsAllowed": {
                    "enabled": true,
                    "chargeType": "Credit"
                  },
                  "smokingAllowed": {
                    "enabled": false
                  },
                  "suitableForEvents": {
                    "enabled": false
                  },
                  "additionalRules": "No alcohol",
                  "quietBetween": {
                    "enabled": true,
                    "hours": {
                      "start": "22:00",
                      "end": "08:00"
                    }
                  },
                  "minimumAge": 21
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "When successfully updated"
          },
          "500": {
            "description": "TBA"
          }
        }
      }
    },
    "/properties/house-rules/": {
      "get": {
        "tags": [
          "House Rules"
        ],
        "summary": "List house rules",
        "parameters": [
          {
            "name": "propertyIds",
            "in": "query",
            "description": "IDs of the requested unitTypes",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "House rules fields of unitTypes",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "suitableForChildren": {
                        "type": "boolean"
                      },
                      "suitableForInfants": {
                        "type": "boolean"
                      },
                      "petsAllowed": {
                        "type": "boolean"
                      },
                      "petsCharged": {
                        "type": "boolean"
                      },
                      "smokingAllowed": {
                        "type": "boolean"
                      },
                      "partiesAllowed": {
                        "type": "boolean"
                      },
                      "additionalRules": {
                        "type": "string"
                      },
                      "quietHours": {
                        "type": "object",
                        "properties": {
                          "set": {
                            "type": "boolean"
                          },
                          "start": {
                            "type": "string"
                          },
                          "end": {
                            "type": "string"
                          }
                        }
                      },
                      "minimumAge": {
                        "type": "integer"
                      }
                    },
                    "example": {
                      "suitableForChildren": true,
                      "suitableForInfants": false,
                      "petsAllowed": true,
                      "petsCharged": true,
                      "smokingAllowed": false,
                      "partiesAllowed": false,
                      "additionalRules": "No alcohol",
                      "quietHours": {
                        "set": true,
                        "start": "22:00",
                        "end": "08:00"
                      },
                      "minimumAge": 21
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "House Rules"
        ],
        "summary": "Update multiple unit-type house-rules",
        "requestBody": {
          "description": "house rules objects to edit",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "unitTypeId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "houseRules": {
                      "type": "object",
                      "properties": {
                        "suitableForChildren": {
                          "type": "boolean"
                        },
                        "suitableForInfants": {
                          "type": "boolean"
                        },
                        "petsAllowed": {
                          "type": "boolean"
                        },
                        "petsCharged": {
                          "type": "boolean"
                        },
                        "smokingAllowed": {
                          "type": "boolean"
                        },
                        "partiesAllowed": {
                          "type": "boolean"
                        },
                        "additionalRules": {
                          "type": "string"
                        },
                        "quietHours": {
                          "type": "object",
                          "properties": {
                            "set": {
                              "type": "boolean"
                            },
                            "start": {
                              "type": "string"
                            },
                            "end": {
                              "type": "string"
                            }
                          }
                        },
                        "minimumAge": {
                          "type": "integer"
                        }
                      },
                      "example": {
                        "suitableForChildren": true,
                        "suitableForInfants": false,
                        "petsAllowed": true,
                        "petsCharged": true,
                        "smokingAllowed": false,
                        "partiesAllowed": false,
                        "additionalRules": "No alcohol",
                        "quietHours": {
                          "set": true,
                          "start": "22:00",
                          "end": "08:00"
                        },
                        "minimumAge": 21
                      }
                    }
                  },
                  "example": {
                    "unitTypeId": "5accf6954c5ed10025902aed",
                    "houseRules": {
                      "childrenRules": {
                        "suitableForChildren": true,
                        "suitableForInfants": true,
                        "reason": "Children rules reason"
                      },
                      "petsAllowed": {
                        "enabled": true,
                        "chargeType": "Credit"
                      },
                      "smokingAllowed": {
                        "enabled": false
                      },
                      "suitableForEvents": {
                        "enabled": false
                      },
                      "additionalRules": "No alcohol",
                      "quietBetween": {
                        "enabled": true,
                        "hours": {
                          "start": "22:00",
                          "end": "08:00"
                        }
                      },
                      "minimumAge": 21
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "House rules fields of unitTypes",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "suitableForChildren": {
                        "type": "boolean"
                      },
                      "suitableForInfants": {
                        "type": "boolean"
                      },
                      "petsAllowed": {
                        "type": "boolean"
                      },
                      "petsCharged": {
                        "type": "boolean"
                      },
                      "smokingAllowed": {
                        "type": "boolean"
                      },
                      "partiesAllowed": {
                        "type": "boolean"
                      },
                      "additionalRules": {
                        "type": "string"
                      },
                      "quietHours": {
                        "type": "object",
                        "properties": {
                          "set": {
                            "type": "boolean"
                          },
                          "start": {
                            "type": "string"
                          },
                          "end": {
                            "type": "string"
                          }
                        }
                      },
                      "minimumAge": {
                        "type": "integer"
                      }
                    },
                    "example": {
                      "suitableForChildren": true,
                      "suitableForInfants": false,
                      "petsAllowed": true,
                      "petsCharged": true,
                      "smokingAllowed": false,
                      "partiesAllowed": false,
                      "additionalRules": "No alcohol",
                      "quietHours": {
                        "set": true,
                        "start": "22:00",
                        "end": "08:00"
                      },
                      "minimumAge": 21
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties-api/complexes": {
      "get": {
        "operationId": "getAllComplexes",
        "summary": "Get a list of all complexes",
        "description": "Get a list of all complexes, including their IDs, titles, nicknames, propertyIds, and tags",
        "tags": [
          "Complexes"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A list of all complexes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the complex",
                        "example": "645774fe76e5da340bf915e7"
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the complex",
                        "example": "Complex 1"
                      },
                      "nickname": {
                        "type": "string",
                        "description": "The nickname of the complex",
                        "example": "C1"
                      },
                      "propertyIds": {
                        "type": "array",
                        "description": "An array of IDs of the properties in the complex",
                        "items": {
                          "type": "string",
                          "example": "6457751476e5da340bf915e8"
                        }
                      },
                      "tags": {
                        "type": "array",
                        "description": "An array of tags associated with the complex",
                        "items": {
                          "type": "string",
                          "example": "tag1"
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "id": "645774fe76e5da340bf915e7",
                      "title": "Complex 1",
                      "nickname": "C1",
                      "propertyIds": [
                        "6457751476e5da340bf915e8",
                        "6457751e76e5da340bf915e9"
                      ],
                      "tags": [
                        "tag1",
                        "tag2"
                      ]
                    },
                    {
                      "id": "6457752b76e5da340bf915ea",
                      "title": "Complex 2",
                      "nickname": "C2",
                      "propertyIds": [],
                      "tags": [
                        "tag3",
                        "tag4"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No Complexs were found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Could not find complex"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "addComplex",
        "summary": "Create a new complex",
        "description": "Create a new complex and return the ID of the newly created complex",
        "tags": [
          "Complexes"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the Complex",
                    "example": "My Title"
                  },
                  "nickname": {
                    "type": "string",
                    "description": "The nickname of the Complex. Useful in searches",
                    "example": "My Nickname"
                  },
                  "propertyIds": {
                    "description": "An array that contains Ids for propertyIds that belong to this Complex. Could be an empty array [] (default)",
                    "example": [
                      "63baba9c5c25ccae5595832b",
                      "63babaab5c25ccae5595832c"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tags": {
                    "description": "An array containing Tags for this Complex",
                    "example": [
                      "Tag 1",
                      "Tag 2"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "title",
                  "nickname"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The ID of the newly created complex",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "645788211c405b56beaf26c0"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "status": {
                          "type": "integer",
                          "example": 422
                        },
                        "data": {
                          "type": "string",
                          "example": "Title and Nickname must not be empty"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Complex not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Could not find complex"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties-api/complexes/{id}": {
      "get": {
        "operationId": "ComplexesController_getComplexById",
        "summary": "Get complex",
        "description": "Get a specific complex based on the complexId",
        "tags": [
          "Complexes"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the complex to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested complex.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "propertyIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "id": "645774fe76e5da340bf915e7",
                    "title": "Complex 1",
                    "nickname": "C1",
                    "propertyIds": [
                      "6457751476e5da340bf915e8",
                      "6457751e76e5da340bf915e9"
                    ],
                    "tags": [
                      "tag1",
                      "tag2"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Complex not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Could not find complex"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ComplexesController_updateComplexDetails",
        "summary": "Update complex details",
        "description": "Updates the details of a specific complex based on the complexId, and returns the modified values",
        "tags": [
          "Complexes"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the complex to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the Complex",
                    "example": "My Title"
                  },
                  "nickname": {
                    "type": "string",
                    "description": "The nickname of the Complex. Useful in searches",
                    "example": "My Nickname"
                  },
                  "tags": {
                    "description": "An array containing Tags for this Complex",
                    "example": [
                      "Tag 1",
                      "Tag 2"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The complex was updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "id": "645774fe76e5da340bf915e7",
                    "title": "Complex 1",
                    "nickname": "C1",
                    "tags": [
                      "tag1",
                      "tag2"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Complex not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Could not find complex"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ComplexesController_removeComplex",
        "summary": "Delete complex",
        "description": "Deletes a specific complex based on the complexId",
        "tags": [
          "Complexes"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the complex to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The complex was deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acknowledged": {
                      "type": "boolean",
                      "example": true
                    },
                    "deletedCount": {
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Complex not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Could not find complex"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties-api/complexes/{id}/assign": {
      "put": {
        "operationId": "ComplexesController_assignComplexPropertyIds",
        "summary": "Assign propertyIds to a complex",
        "description": "Assign propertyIds to a specific complex based on the complexId, and returns the assigned values",
        "tags": [
          "Complexes"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the complex to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The complex was updated successfully. If all of the property Ids exist in the complex, a 404 will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "propertyIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "example": [
                    "6457751476e5da340bf915e8",
                    "6457751e76e5da340bf915e9"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Complex not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Could not find complex"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties-api/complexes/{id}/unassign": {
      "put": {
        "operationId": "ComplexesController_unassignComplexPropertyIds",
        "summary": "Un-Assign propertyIds from a complex",
        "description": "Unassign propertyIds from a specific complex based on the complexId, and returns the unassigned values",
        "tags": [
          "Complexes"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the complex to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The complex was updated successfully. If none of the property Ids exist in the complex, a 404 will be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "propertyIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "example": [
                    "6457751476e5da340bf915e8"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Complex not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Could not find complex"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties-api/amenities/supported": {
      "get": {
        "operationId": "getSupportedAmenities",
        "summary": "Get a List of All Supported Amenities",
        "description": "Get a list of all supported amenities, including their names, groups and channels",
        "tags": [
          "Amenities"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A list of all supported amenities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the amenity",
                        "example": "Elevator"
                      },
                      "group": {
                        "type": "string",
                        "description": "The name of the amenity group that it belongs to",
                        "example": "Accessibility"
                      },
                      "channels": {
                        "type": "object",
                        "description": "An array of channels as key, and their values on the channels",
                        "example": {
                          "airbnb2": "elevator",
                          "bookingCom": "5132",
                          "homeaway2": "AMENITIES_ELEVATOR",
                          "rentalsUnited": "689",
                          "tripAdvisor": "ELEVATOR_IN_BUILDING"
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "name": "Elevator",
                      "group": "Accessibility",
                      "channels": {
                        "airbnb2": "elevator",
                        "bookingCom": "5132",
                        "homeaway2": "AMENITIES_ELEVATOR",
                        "rentalsUnited": "689",
                        "tripAdvisor": "ELEVATOR_IN_BUILDING"
                      }
                    },
                    {
                      "name": "Gym",
                      "group": "Wellness",
                      "channels": {
                        "airbnb2": "gym"
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties-api/amenities/groups": {
      "get": {
        "operationId": "getAmenitiesGroups",
        "summary": "Get a List Of All Available Amenity Groups",
        "description": "Get a list of all available amenity groups",
        "tags": [
          "Amenities"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A list of all available amenities, groups",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The name of the amenity group",
                    "example": "Accessibility"
                  },
                  "example": [
                    "Accessibility",
                    "Bathroom",
                    "Bedroom & Laundry"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties-api/amenities/{propertyId}": {
      "get": {
        "operationId": "AmenitiesController_getForUnitType",
        "summary": "Retrieve Property Amenities",
        "description": "Retrieve a property's amenities.",
        "tags": [
          "Amenities"
        ],
        "parameters": [
          {
            "name": "propertyId",
            "required": true,
            "in": "path",
            "description": "The id of the property to retrieve a list of amenities",
            "example": "5b2149c9f579400024388c47",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of amenities assigned to specific property",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "propertyId": {
                      "type": "string"
                    },
                    "amenities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "An array containing amenities supported by guesty and assigned to the property"
                    },
                    "otherAmenities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "An array containing all other amenities assigned to the property after the operation"
                    }
                  },
                  "example": {
                    "propertyId": "645774fe76e5da340bf915e7",
                    "amenities": [
                      "Shampoo",
                      "Piano"
                    ],
                    "otherAmenities": [
                      "Red wine"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Amenities not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Amenities not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "AmenitiesController_setAmenitiesForProperty",
        "summary": "Set Amenities For Property",
        "description": "Set selected amenities list to the property",
        "tags": [
          "Amenities"
        ],
        "parameters": [
          {
            "name": "propertyId",
            "required": true,
            "in": "path",
            "description": "The id of the property to set amenities to",
            "example": "5b2149c9f579400024388c47",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amenities": {
                    "description": "An array containing supported amenities to set to the property",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "amenities"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the updated list of amenities assigned to specific property",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "propertyId": {
                      "type": "string"
                    },
                    "amenities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "An array containing amenities supported by guesty and assigned to the property after the operation"
                    },
                    "otherAmenities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "An array containing all other amenities assigned to the property after the operation"
                    }
                  },
                  "example": {
                    "propertyId": "645774fe76e5da340bf915e7",
                    "amenities": [
                      "Shampoo",
                      "Piano"
                    ],
                    "otherAmenities": [
                      "Red wine"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Only MTL and SINGLE property types are supported",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Only MTL and SINGLE property types are supported"
                        },
                        "status": {
                          "type": "integer",
                          "example": 400
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unit type not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Amenities not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties-api/room-photos/property/{propertyId}": {
      "get": {
        "operationId": "getRoomPhotosByPropertyId",
        "summary": "List All Room Photos per Property",
        "description": "Retrieve a list of all room photo mappings for each property, including photo ID, space ID, and photo URL.",
        "tags": [
          "Room Photos [Beta]"
        ],
        "parameters": [
          {
            "name": "propertyId",
            "required": true,
            "in": "path",
            "description": "The id of the property",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all property room photo mappings, including photo ID, space ID and photo URL.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "propertyId": {
                      "type": "string"
                    },
                    "roomPhotos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "accountId": {
                            "type": "string"
                          },
                          "spaceId": {
                            "type": "string"
                          },
                          "photoId": {
                            "type": "string"
                          },
                          "photoUrl": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "An array containing a list of all property room photo mappings, including photo ID, space ID and photo URL."
                    }
                  },
                  "example": {
                    "propertyId": "645774fe76e5da340bf915e7",
                    "roomPhotos": [
                      {
                        "_id": "5d9e9f4a6d5b2e0017b6d5b2",
                        "spaceId": "545774fe76e5da340bf915e8",
                        "photoUrl": "https://image.com",
                        "photoId": "145774fe76e5da340bf915e2",
                        "accountId": "345774fe76e5da340bf915e3"
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Property not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Property not found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties-api/room-photos/photos/{photoId}/assign": {
      "put": {
        "operationId": "RoomPhotosController_assignRoomPhoto",
        "summary": "Assign a Photo to a Space",
        "description": "Assigns the selected photo to a space.",
        "tags": [
          "Room Photos [Beta]"
        ],
        "parameters": [
          {
            "name": "photoId",
            "required": true,
            "in": "path",
            "description": "The id of the photo to set spaceId to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "spaceId": {
                    "type": "string",
                    "description": "Space Id to assign room photo to"
                  },
                  "propertyId": {
                    "type": "string",
                    "description": "The space ID to which the room photo should be assigned."
                  }
                },
                "required": [
                  "spaceId",
                  "propertyId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a list of all property room photo mappings, including photo ID, space ID and photo URL.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "propertyId": {
                      "type": "string"
                    },
                    "roomPhotos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "accountId": {
                            "type": "string"
                          },
                          "spaceId": {
                            "type": "string"
                          },
                          "photoId": {
                            "type": "string"
                          },
                          "photoUrl": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "An array containing a list of all property room photo mappings, including photo ID, space ID and photo URL."
                    }
                  },
                  "example": {
                    "propertyId": "645774fe76e5da340bf915e7",
                    "roomPhotos": [
                      {
                        "_id": "5d9e9f4a6d5b2e0017b6d5b2",
                        "spaceId": "545774fe76e5da340bf915e8",
                        "photoUrl": "https://image.com",
                        "photoId": "145774fe76e5da340bf915e2",
                        "accountId": "345774fe76e5da340bf915e3"
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Property not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Property not found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties-api/room-photos/photos/{photoId}/unassign": {
      "put": {
        "operationId": "RoomPhotosController_unassignRoomPhoto",
        "summary": "Unassign a Photo from a Space",
        "description": "Removes the selected photo from the designated space.",
        "tags": [
          "Room Photos [Beta]"
        ],
        "parameters": [
          {
            "name": "photoId",
            "required": true,
            "in": "path",
            "description": "The id of the photo",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "propertyId": {
                    "type": "string",
                    "description": "The Guesty ID of the property associated with this space."
                  }
                },
                "required": [
                  "propertyId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a list of all property room photo mappings, including photo ID, space ID and photo URL.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "propertyId": {
                      "type": "string"
                    },
                    "roomPhotos": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "accountId": {
                            "type": "string"
                          },
                          "spaceId": {
                            "type": "string"
                          },
                          "photoId": {
                            "type": "string"
                          },
                          "photoUrl": {
                            "type": "string"
                          }
                        }
                      },
                      "description": "An array containing a list of all property room photo mappings, including photo ID, space ID and photo URL."
                    }
                  },
                  "example": {
                    "propertyId": "645774fe76e5da340bf915e7",
                    "roomPhotos": [
                      {
                        "_id": "5d9e9f4a6d5b2e0017b6d5b2",
                        "spaceId": "545774fe76e5da340bf915e8",
                        "photoUrl": "https://image.com",
                        "photoId": "145774fe76e5da340bf915e2",
                        "accountId": "345774fe76e5da340bf915e3"
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Property not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Property not found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/properties-api/room-photos/photos/{photoId}": {
      "get": {
        "operationId": "get",
        "summary": "Retrieve a Room Photo by ID",
        "description": "Get a room photo mapping for a photo, including photo id, space id and photo URL",
        "tags": [
          "Room Photos [Beta]"
        ],
        "parameters": [
          {
            "name": "photoId",
            "required": true,
            "in": "path",
            "description": "The id of the photo to set spaceId to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get room photo mapping for a specific photo, including photo ID, space ID, and photo URL.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "spaceId": {
                      "type": "string"
                    },
                    "photoId": {
                      "type": "string"
                    },
                    "photoUrl": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "_id": "5d9e9f4a6d5b2e0017b6d5b2",
                    "spaceId": "545774fe76e5da340bf915e8",
                    "photoUrl": "https://image.com",
                    "photoId": "145774fe76e5da340bf915e2",
                    "accountId": "345774fe76e5da340bf915e3"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Photo not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Photo not found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/marketing/fields/{id}": {
      "get": {
        "operationId": "getFields",
        "summary": "Get a list of translation fields",
        "description": "Get a list of translation fields for specific language slug or for all",
        "tags": [
          "Marketing fields"
        ],
        "parameters": [
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Language slug for retrieving the translation. To get all translations for a specific listing, please use language=all",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The listing ID whose translations you wish to retrieve",
            "example": "5b2149c9f579400024388c47",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the translation objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "listingId": {
                      "type": "string",
                      "description": "Listing ID",
                      "example": "5b2149c9f579400024388c47"
                    },
                    "en_us": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "en_gb": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "en_au": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "en_nz": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "en_ca": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "da_dk": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "es_ar": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "es_es": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "es_mx": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "hu_hu": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "nl_nl": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "pt_pt": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "pt_br": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "de_de": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "fr_fr": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "fr_ca": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "it_it": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "pl_pl": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "ru_ru": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "hr_hr": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "ga_gp": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    },
                    "zh_chs": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Is translation active",
                          "example": true
                        },
                        "title": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "space": {
                          "type": "string"
                        },
                        "access": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "transit": {
                          "type": "string"
                        },
                        "notes": {
                          "type": "string",
                          "description": "Listing notes",
                          "example": "Some notes about listing"
                        },
                        "interactionWithGuests": {
                          "type": "string"
                        },
                        "checkInInstructions": {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      },
                      "required": [
                        "active",
                        "title",
                        "summary",
                        "space",
                        "access",
                        "neighborhood",
                        "transit",
                        "interactionWithGuests",
                        "checkInInstructions"
                      ]
                    }
                  },
                  "required": [
                    "listingId",
                    "en_us",
                    "en_gb",
                    "en_au",
                    "en_nz",
                    "en_ca",
                    "da_dk",
                    "es_ar",
                    "es_es",
                    "es_mx",
                    "hu_hu",
                    "nl_nl",
                    "pt_pt",
                    "pt_br",
                    "de_de",
                    "fr_fr",
                    "fr_ca",
                    "it_it",
                    "pl_pl",
                    "ru_ru",
                    "hr_hr",
                    "ga_gp",
                    "zh_chs"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Not Found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/marketing/fields/{id}/upsert": {
      "put": {
        "operationId": "upsertFields",
        "summary": "Upsert translation",
        "description": "Upsert a new translation for specific listing and language slug",
        "tags": [
          "Marketing fields"
        ],
        "parameters": [
          {
            "name": "language",
            "required": true,
            "in": "query",
            "description": "Language slug for the translation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The listing ID upsert the translation",
            "example": "5b2149c9f579400024388c47",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean",
                    "description": "Show if translation is active",
                    "example": true
                  },
                  "title": {
                    "type": "string",
                    "description": "Listing title",
                    "example": "Private 2BR near Downtown Detroit Queen Beds"
                  },
                  "summary": {
                    "type": "string",
                    "description": "Listing description",
                    "example": "You can end your search NOW. You've just found an ideal place for your trip to Detroit"
                  },
                  "space": {
                    "type": "string",
                    "description": "Listing space description",
                    "example": "We take absolute pleasure in welcoming you to the inviting 2B2B. With a stunning top floor view of Detroit"
                  },
                  "access": {
                    "type": "string",
                    "description": "Listing access description",
                    "example": "Laundry and Dryer is available in your unit. Paid Car parking is available for attached car garage"
                  },
                  "neighborhood": {
                    "type": "string",
                    "description": "Listing neighborhood description",
                    "example": "This apartment is situated right in the heart of Detroit"
                  },
                  "transit": {
                    "type": "string",
                    "description": "Listing transit description",
                    "example": "The apartment is easy reachable by train as St James stations"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Listing notes",
                    "example": "The keys will be available to collect from a local Keynest Shop"
                  },
                  "interactionWithGuests": {
                    "type": "string",
                    "description": "Interaction with guests description",
                    "example": "We will welcome you in person and explain about the area and answer any question you may have."
                  },
                  "checkInInstructions": {
                    "description": "Details about check-in process",
                    "example": {
                      "primaryCheckIn": "RECEPTION",
                      "alternativeCheckIn": "LOCK_BOX",
                      "notes": "Happy to see you in our apartments",
                      "welcomeMessage": "Happy to see you in our apartments"
                    },
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "primaryCheckIn": {
                            "type": "string"
                          },
                          "alternativeCheckIn": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "welcomeMessage": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "primaryCheckIn",
                          "alternativeCheckIn",
                          "notes",
                          "welcomeMessage"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "active",
                  "title"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return the updated translation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "languageSlug": {
                      "type": "string"
                    },
                    "active": {
                      "type": "boolean"
                    },
                    "title": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string"
                    },
                    "space": {
                      "type": "string"
                    },
                    "access": {
                      "type": "string"
                    },
                    "neighborhood": {
                      "type": "string"
                    },
                    "transit": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "interactionWithGuests": {
                      "type": "string"
                    },
                    "checkInInstructions": {
                      "description": "Details about check-in process",
                      "example": {
                        "primaryCheckIn": "RECEPTION",
                        "alternativeCheckIn": "LOCK_BOX",
                        "notes": "Happy to see you in our apartments",
                        "welcomeMessage": "Happy to see you in our apartments"
                      },
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "primaryCheckIn": {
                              "type": "string"
                            },
                            "alternativeCheckIn": {
                              "type": "string"
                            },
                            "notes": {
                              "type": "string"
                            },
                            "welcomeMessage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "primaryCheckIn",
                            "alternativeCheckIn",
                            "notes",
                            "welcomeMessage"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "languageSlug",
                    "active",
                    "title",
                    "summary",
                    "space",
                    "access",
                    "neighborhood",
                    "transit",
                    "notes",
                    "interactionWithGuests",
                    "checkInInstructions"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Not Found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/marketing/languages": {
      "get": {
        "operationId": "getLanguages",
        "summary": "Get a list of supported languages",
        "description": "Get a list of supported languages",
        "tags": [
          "Marketing fields"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return a list of supported languages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "name": "German - Germany",
                      "slug": "de_de"
                    }
                  },
                  "example": [
                    {
                      "name": "German - Germany",
                      "slug": "de_de"
                    },
                    {
                      "name": "Italian - Italy",
                      "slug": "it_it"
                    },
                    {
                      "name": "Portuguese - Portugal",
                      "slug": "pt_pt"
                    },
                    {
                      "name": "Polish - Poland",
                      "slug": "pl_pl"
                    },
                    {
                      "name": "Spanish - Spain",
                      "slug": "es_es"
                    },
                    {
                      "name": "English - United States",
                      "slug": "en_us"
                    },
                    {
                      "name": "Japanese - Japan",
                      "slug": "ja_jp"
                    },
                    {
                      "name": "Greek - Greece",
                      "slug": "el_gr"
                    },
                    {
                      "name": "Korean - Korea",
                      "slug": "ko_kr"
                    },
                    {
                      "name": "Romanian - Romania",
                      "slug": "ro_ro"
                    },
                    {
                      "name": "Indonesian - Indonesia",
                      "slug": "in_in"
                    },
                    {
                      "name": "French - France",
                      "slug": "fr_fr"
                    },
                    {
                      "name": "Chinese - China",
                      "slug": "zh_chs"
                    },
                    {
                      "name": "Dutch - Netherlands",
                      "slug": "nl_nl"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/address/{id}": {
      "get": {
        "operationId": "AddressController_getAddress",
        "summary": "Retrieve Property Address",
        "description": "Get the listing address of the given property.",
        "tags": [
          "Address [Beta]"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The Guesty ID of the property for which you would like to retrieve the address.",
            "example": "5b2149c9f579400024388c47",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the address object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "object",
                      "properties": {
                        "full": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "lat": {
                              "type": "number"
                            },
                            "lng": {
                              "type": "number"
                            }
                          }
                        },
                        "state": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "zipcode": {
                          "type": "string"
                        },
                        "apartment": {
                          "type": "string"
                        },
                        "county": {
                          "type": "string"
                        },
                        "floor": {
                          "type": "string"
                        },
                        "unitNumber": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "searchable": {
                          "type": "string"
                        },
                        "buildingName": {
                          "type": "string"
                        }
                      },
                      "description": "Address object configuration."
                    },
                    "publishedAddress": {
                      "type": "object",
                      "properties": {
                        "full": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "lat": {
                              "type": "number"
                            },
                            "lng": {
                              "type": "number"
                            }
                          }
                        },
                        "state": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "zipcode": {
                          "type": "string"
                        },
                        "apartment": {
                          "type": "string"
                        },
                        "county": {
                          "type": "string"
                        },
                        "floor": {
                          "type": "string"
                        },
                        "unitNumber": {
                          "type": "string"
                        },
                        "neighborhood": {
                          "type": "string"
                        },
                        "searchable": {
                          "type": "string"
                        },
                        "buildingName": {
                          "type": "string"
                        }
                      },
                      "description": "Address object configuration."
                    },
                    "isPublishedAddressEnabled": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "address": {
                      "full": "30-19 32nd St, Long Island City, NY 11102, USA",
                      "street": "32nd Street",
                      "city": "New York",
                      "country": "United States",
                      "state": "New York",
                      "location": {
                        "lat": 40.7659021,
                        "lng": -73.9208235
                      },
                      "zipcode": 11102
                    },
                    "publishedAddress": {
                      "full": "30-19 32nd St, Long Island City, NY 11102, USA",
                      "street": "32nd Street",
                      "city": "New York",
                      "country": "United States",
                      "state": "New York",
                      "location": {
                        "lat": 40.7659021,
                        "lng": -73.9208235
                      },
                      "zipcode": 11102
                    },
                    "isPublishedAddressEnabled": true
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Address not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Address not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/address/geocode": {
      "post": {
        "operationId": "AddressController_geocodeAddress",
        "summary": "Geocode Location by Full Address",
        "description": "Converts the full address into latitude and longitude coordinates and populates individual address fields.",
        "tags": [
          "Address [Beta]"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "object",
                    "properties": {
                      "full": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "full": "30-19 32nd St, Long Island City, NY 11102, USA"
                    }
                  },
                  "publishedAddress": {
                    "type": "object",
                    "properties": {
                      "full": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "full": "30-19 32nd St, Long Island City, NY 11102, USA"
                    }
                  }
                },
                "required": [
                  "address",
                  "publishedAddress"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return geocoded addresses.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "properties": {
                        "full": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "lat": {
                              "type": "number"
                            },
                            "lng": {
                              "type": "number"
                            }
                          }
                        },
                        "state": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "zipcode": {
                          "type": "string"
                        }
                      }
                    },
                    "publishedAddress": {
                      "properties": {
                        "full": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "lat": {
                              "type": "number"
                            },
                            "lng": {
                              "type": "number"
                            }
                          }
                        },
                        "state": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "zipcode": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "address": {
                      "full": "30-19 32nd St, Long Island City, NY 11102, USA",
                      "street": "32nd Street",
                      "city": "New York",
                      "country": "United States",
                      "state": "New York",
                      "location": {
                        "lat": 40.7659021,
                        "lng": -73.9208235
                      },
                      "zipcode": 11102
                    },
                    "publishedAddress": {
                      "full": "30-19 32nd St, Long Island City, NY 11102, USA",
                      "street": "32nd Street",
                      "city": "New York",
                      "country": "United States",
                      "state": "New York",
                      "location": {
                        "lat": 40.7659021,
                        "lng": -73.9208235
                      },
                      "zipcode": 11102
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/address/{id}/update": {
      "put": {
        "operationId": "AddressController_updateAddress",
        "summary": "Update Property Address",
        "description": "Edit the address of a given property. If it is a multi-unit, all sub-units will be updated too.",
        "tags": [
          "Address [Beta]"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The Guesty ID of the property for which you would like to edit the address. If it is a multi-unit parent, all sub-units will be updated too.",
            "example": "5b2149c9f579400024388c47",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "object",
                    "properties": {
                      "full": {
                        "type": "string",
                        "example": "30-19 32nd St, Long Island City, NY 11102, USA"
                      },
                      "apartment": {
                        "type": "string",
                        "example": "4d"
                      },
                      "city": {
                        "type": "string",
                        "example": "New York City"
                      },
                      "country": {
                        "type": "string",
                        "example": "United States"
                      },
                      "county": {
                        "type": "string",
                        "example": "Nassau County"
                      },
                      "floor": {
                        "type": "string",
                        "example": "1D"
                      },
                      "unitNumber": {
                        "type": "string",
                        "example": "30a"
                      },
                      "location": {
                        "type": "object",
                        "properties": {
                          "lat": {
                            "type": "number",
                            "example": 40.7659021
                          },
                          "lng": {
                            "type": "number",
                            "example": -73.9208235
                          }
                        }
                      },
                      "neighborhood": {
                        "type": "string",
                        "example": "Astoria"
                      },
                      "searchable": {
                        "type": "string",
                        "example": "30-19 32nd St, Long Island City, NY 11102, USA"
                      },
                      "state": {
                        "type": "string",
                        "example": "New York"
                      },
                      "street": {
                        "type": "string",
                        "example": "32nd Street"
                      },
                      "zipcode": {
                        "type": "string",
                        "example": "11102"
                      },
                      "buildingName": {
                        "type": "string",
                        "example": "Metropolis campus"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  },
                  "publishedAddress": {
                    "type": "object",
                    "properties": {
                      "full": {
                        "type": "string",
                        "example": "30-19 32nd St, Long Island City, NY 11102, USA"
                      },
                      "apartment": {
                        "type": "string",
                        "example": "4d"
                      },
                      "city": {
                        "type": "string",
                        "example": "New York City"
                      },
                      "country": {
                        "type": "string",
                        "example": "United States"
                      },
                      "county": {
                        "type": "string",
                        "example": "Nassau County"
                      },
                      "floor": {
                        "type": "string",
                        "example": "1D"
                      },
                      "unitNumber": {
                        "type": "string",
                        "example": "30a"
                      },
                      "location": {
                        "type": "object",
                        "properties": {
                          "lat": {
                            "type": "number",
                            "example": 40.7659021
                          },
                          "lng": {
                            "type": "number",
                            "example": -73.9208235
                          }
                        }
                      },
                      "neighborhood": {
                        "type": "string",
                        "example": "Astoria"
                      },
                      "searchable": {
                        "type": "string",
                        "example": "30-19 32nd St, Long Island City, NY 11102, USA"
                      },
                      "state": {
                        "type": "string",
                        "example": "New York"
                      },
                      "street": {
                        "type": "string",
                        "example": "32nd Street"
                      },
                      "zipcode": {
                        "type": "string",
                        "example": "11102"
                      },
                      "buildingName": {
                        "type": "string",
                        "example": "Metropolis campus"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  },
                  "isPublishedAddressEnabled": {
                    "type": "boolean",
                    "example": true
                  }
                },
                "required": [
                  "address",
                  "publishedAddress",
                  "isPublishedAddressEnabled"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return updated addresses.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "properties": {
                        "full": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "lat": {
                              "type": "number"
                            },
                            "lng": {
                              "type": "number"
                            }
                          }
                        },
                        "state": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "zipcode": {
                          "type": "string"
                        }
                      }
                    },
                    "publishedAddress": {
                      "properties": {
                        "full": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "lat": {
                              "type": "number"
                            },
                            "lng": {
                              "type": "number"
                            }
                          }
                        },
                        "state": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "zipcode": {
                          "type": "string"
                        }
                      }
                    },
                    "isPublishedAddressEnabled": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "address": {
                      "full": "30-19 32nd St, Long Island City, NY 11102, USA",
                      "street": "32nd Street",
                      "city": "New York",
                      "country": "United States",
                      "state": "New York",
                      "location": {
                        "lat": 40.7659021,
                        "lng": -73.9208235
                      },
                      "zipcode": 11102
                    },
                    "publishedAddress": {
                      "full": "30-19 32nd St, Long Island City, NY 11102, USA",
                      "street": "32nd Street",
                      "city": "New York",
                      "country": "United States",
                      "state": "New York",
                      "location": {
                        "lat": 40.7659021,
                        "lng": -73.9208235
                      },
                      "zipcode": 11102
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Address not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Address not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/address/{id}/update/complex": {
      "put": {
        "operationId": "AddressController_updateComplexAddress",
        "summary": "Update Complex Address",
        "description": "Edit a complex's address. All children will be updated too.",
        "tags": [
          "Address [Beta]"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The Guesty ID of the complex for which you would like to edit the address.",
            "example": "5b2149c9f579400024388c47",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "object",
                    "properties": {
                      "full": {
                        "type": "string",
                        "example": "30-19 32nd St, Long Island City, NY 11102, USA"
                      },
                      "apartment": {
                        "type": "string",
                        "example": "4d"
                      },
                      "city": {
                        "type": "string",
                        "example": "New York City"
                      },
                      "country": {
                        "type": "string",
                        "example": "United States"
                      },
                      "county": {
                        "type": "string",
                        "example": "Nassau County"
                      },
                      "floor": {
                        "type": "string",
                        "example": "1D"
                      },
                      "unitNumber": {
                        "type": "string",
                        "example": "30a"
                      },
                      "location": {
                        "type": "object",
                        "properties": {
                          "lat": {
                            "type": "number",
                            "example": 40.7659021
                          },
                          "lng": {
                            "type": "number",
                            "example": -73.9208235
                          }
                        }
                      },
                      "neighborhood": {
                        "type": "string",
                        "example": "Astoria"
                      },
                      "searchable": {
                        "type": "string",
                        "example": "30-19 32nd St, Long Island City, NY 11102, USA"
                      },
                      "state": {
                        "type": "string",
                        "example": "New York"
                      },
                      "street": {
                        "type": "string",
                        "example": "32nd Street"
                      },
                      "zipcode": {
                        "type": "string",
                        "example": "11102"
                      },
                      "buildingName": {
                        "type": "string",
                        "example": "Metropolis campus"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  },
                  "publishedAddress": {
                    "type": "object",
                    "properties": {
                      "full": {
                        "type": "string",
                        "example": "30-19 32nd St, Long Island City, NY 11102, USA"
                      },
                      "apartment": {
                        "type": "string",
                        "example": "4d"
                      },
                      "city": {
                        "type": "string",
                        "example": "New York City"
                      },
                      "country": {
                        "type": "string",
                        "example": "United States"
                      },
                      "county": {
                        "type": "string",
                        "example": "Nassau County"
                      },
                      "floor": {
                        "type": "string",
                        "example": "1D"
                      },
                      "unitNumber": {
                        "type": "string",
                        "example": "30a"
                      },
                      "location": {
                        "type": "object",
                        "properties": {
                          "lat": {
                            "type": "number",
                            "example": 40.7659021
                          },
                          "lng": {
                            "type": "number",
                            "example": -73.9208235
                          }
                        }
                      },
                      "neighborhood": {
                        "type": "string",
                        "example": "Astoria"
                      },
                      "searchable": {
                        "type": "string",
                        "example": "30-19 32nd St, Long Island City, NY 11102, USA"
                      },
                      "state": {
                        "type": "string",
                        "example": "New York"
                      },
                      "street": {
                        "type": "string",
                        "example": "32nd Street"
                      },
                      "zipcode": {
                        "type": "string",
                        "example": "11102"
                      },
                      "buildingName": {
                        "type": "string",
                        "example": "Metropolis campus"
                      }
                    },
                    "required": [
                      "location"
                    ]
                  },
                  "isPublishedAddressEnabled": {
                    "type": "boolean",
                    "example": true
                  }
                },
                "required": [
                  "address",
                  "publishedAddress",
                  "isPublishedAddressEnabled"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return updated complex addresses.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "properties": {
                        "full": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "lat": {
                              "type": "number"
                            },
                            "lng": {
                              "type": "number"
                            }
                          }
                        },
                        "state": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "zipcode": {
                          "type": "string"
                        }
                      }
                    },
                    "publishedAddress": {
                      "properties": {
                        "full": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "lat": {
                              "type": "number"
                            },
                            "lng": {
                              "type": "number"
                            }
                          }
                        },
                        "state": {
                          "type": "string"
                        },
                        "street": {
                          "type": "string"
                        },
                        "zipcode": {
                          "type": "string"
                        }
                      }
                    },
                    "isPublishedAddressEnabled": {
                      "type": "boolean"
                    }
                  },
                  "example": {
                    "address": {
                      "full": "30-19 32nd St, Long Island City, NY 11102, USA",
                      "street": "32nd Street",
                      "city": "New York",
                      "country": "United States",
                      "state": "New York",
                      "location": {
                        "lat": 40.7659021,
                        "lng": -73.9208235
                      },
                      "zipcode": 11102
                    },
                    "publishedAddress": {
                      "full": "30-19 32nd St, Long Island City, NY 11102, USA",
                      "street": "32nd Street",
                      "city": "New York",
                      "country": "United States",
                      "state": "New York",
                      "location": {
                        "lat": 40.7659021,
                        "lng": -73.9208235
                      },
                      "zipcode": 11102
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized Request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "UNAUTHORIZED"
                        },
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Address not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "integer",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Address not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reservations-api/reservations/{reservationId}/pre-approve": {
      "x-summary": "pre-approve",
      "post": {
        "tags": [
          "Pre-approve inquiry"
        ],
        "summary": "Pre-approve an existing inquiry (Airbnb)",
        "description": "Use this call to send a [pre-approval](https://www.airbnb.com/help/article/35).",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "ID of reservation",
            "required": true,
            "schema": {
              "type": "string",
              "example": "5cc84c6919031c00212a0a38"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "accountId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "listingId": {
                      "type": "string",
                      "example": "5d6e7a7ebf8e3800207735ae"
                    },
                    "status": {
                      "type": "string",
                      "example": "CONNECTED"
                    },
                    "checkInDateLocalized": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "checkOutDateLocalized": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "preApproveState": {
                      "type": "boolean",
                      "example": true
                    },
                    "pendingTasks": {
                      "type": "array"
                    },
                    "integration": {
                      "type": "object",
                      "properties": {
                        "platform": {
                          "type": "string",
                          "example": "manual"
                        },
                        "_id": {
                          "type": "string",
                          "example": "5d6e7a7ebf8e3800207735ae"
                        }
                      }
                    }
                  },
                  "required": [
                    "_id",
                    "accountId",
                    "listingId",
                    "status",
                    "checkInDateLocalized",
                    "checkOutDateLocalized",
                    "preApproveState",
                    "pendingTasks",
                    "integration"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\\\"reservationId\\\" with value \\\"63c40b0e5821e4d9e87536sd\\\" fails to match the valid mongo id pattern"
                    },
                    "type": {
                      "type": "string",
                      "example": "error"
                    },
                    "code": {
                      "type": "string",
                      "example": "VALIDATION_ERROR"
                    }
                  },
                  "example": "{\n    \"message\": \"\\\"reservationId\\\" with value \\\"63c40b0e5821e4d9e87536sd\\\" fails to match the valid mongo id pattern\",\n    \"type\": \"error\",\n    \"code\": \"VALIDATION_ERROR\"\n}",
                  "required": [
                    "message",
                    "type",
                    "code"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/reservations-v3/quote": {
      "post": {
        "operationId": "ReservationsOpenApiController_createReservation",
        "summary": "Create a reservation from quote",
        "description": "Create a reservation based on an existing quote with all the necessary reservation data. You can create a quote using the [dedicated endpoint](https://open-api-docs.guesty.com/reference/quotesopenapicontroller_create) or the [booking engine API](https://booking-api-docs.guesty.com/reference/createreservationquote).",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quoteId": {
                    "type": "string",
                    "description": "The quote to convert into a reservation",
                    "example": "6213b03e7f0ba50032296f4a"
                  },
                  "status": {
                    "enum": [
                      "confirmed",
                      "reserved",
                      "awaiting_payment",
                      "inquiry",
                      "canceled",
                      "closed",
                      "declined",
                      "expired"
                    ],
                    "type": "string",
                    "description": "Choose from: \"inquiry\", \"reserved\", or \"confirmed\"",
                    "example": "confirmed"
                  },
                  "ratePlanId": {
                    "type": "string",
                    "description": "The ID of an active rate plan when you wish to apply it to the reservation",
                    "example": "5f92cbf10cf217478ba93561"
                  },
                  "reservedUntil": {
                    "enum": [
                      "twelveHours",
                      "day",
                      "thirtySixHours",
                      "twoDays",
                      "threeDays",
                      -1,
                      0.5,
                      0.25,
                      0.17
                    ],
                    "type": "string",
                    "description": "It can be -1 (no limit), 0.17 (10 minutes), 0.25 (15 minutes), 0.5 (30 minutes), or 24/48/72 hours when the reservation is a booking request that reserves dates (i.e., status = “reserved”)",
                    "example": "-1",
                    "default": -1
                  },
                  "guestId": {
                    "type": "string",
                    "description": "The primary ID for returning/existing guests and new guests that were created beforehand",
                    "example": "5f92cbf10cf217478ba93532"
                  },
                  "guest": {
                    "description": "For a new guest. We recommend you create the guest first in a separate request and attach their ID to the reservation instead",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "Guest's first name",
                            "example": "Joe"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Guest's last name",
                            "example": "Black"
                          },
                          "phones": {
                            "description": "The guest’s phone numbers written in E.164 format:  [+] [country code] [subscriber number including area code]",
                            "example": [
                              "+972-525180054",
                              "+972-225146062"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "email": {
                            "type": "string",
                            "description": "Guest's primary email address",
                            "example": "guest@email.com"
                          }
                        },
                        "required": [
                          "firstName",
                          "lastName",
                          "phones",
                          "email"
                        ]
                      }
                    ]
                  },
                  "ignoreCalendar": {
                    "type": "boolean",
                    "description": "The system will check calendar availability and decline (401) if unavailable unless this flag is set to true"
                  },
                  "ignoreTerms": {
                    "type": "boolean",
                    "description": "The system will ensure the reservation accords with the terms (min, max nights, any other terms) of the property and will decline(401) if it is. To override, set this flag to true"
                  },
                  "ignoreBlocks": {
                    "type": "boolean",
                    "description": "Set this flag to true to ignore existing flexible blocks (advance notice, preparation time, etc)"
                  },
                  "confirmedAt": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Define the confirmation date. If null and status is confirmed, use the current date (YYYY-MM-DDTHh.mm.ssZ). If null and status is not confirmed, leave it as null"
                  }
                },
                "required": [
                  "quoteId",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservationId": {
                      "type": "string"
                    },
                    "quoteId": {
                      "type": "string"
                    },
                    "confirmationCode": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "guestId": {
                      "type": "string"
                    },
                    "numberOfGuests": {
                      "type": "object",
                      "properties": {
                        "numberOfChildren": {
                          "type": "number",
                          "description": "Number of children",
                          "example": 1
                        },
                        "numberOfInfants": {
                          "type": "number",
                          "description": "Number of infants",
                          "example": 1
                        },
                        "numberOfPets": {
                          "type": "number",
                          "description": "Number of pets",
                          "example": 1
                        },
                        "numberOfAdults": {
                          "type": "number",
                          "description": "Number of adults",
                          "example": 1
                        }
                      },
                      "required": [
                        "numberOfAdults"
                      ]
                    },
                    "creationTime": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "reservedExpiresAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "checkInDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "checkOutDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "unitTypeId": {
                      "type": "string"
                    },
                    "unitId": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "channel": {
                      "type": "string"
                    },
                    "guestsCount": {
                      "type": "number"
                    },
                    "creationInfo": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "required": [
                    "reservationId",
                    "quoteId",
                    "confirmationCode",
                    "status",
                    "guestId",
                    "numberOfGuests",
                    "creationTime",
                    "reservedExpiresAt",
                    "checkInDate",
                    "checkOutDate",
                    "unitTypeId",
                    "unitId",
                    "source",
                    "channel",
                    "guestsCount",
                    "creationInfo"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "422": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "500": {
            "description": "Indicates server-side error while processing the request"
          }
        },
        "tags": [
          "Reservations Open Api [Beta]"
        ]
      }
    },
    "/reservations-v3/owner/confirmed": {
      "post": {
        "operationId": "ReservationsOpenApiController_createOwnerConfirmed",
        "summary": "Create a confirmed owner reservation",
        "description": "Create a confirmed owner reservation - This endpoint enables the creation of an Owner Reservation instantly with minimal required input. It is designed for simplicity and speed, focusing on essential details only. Behind the scenes, it will create a quote + reservation from a quote picking the first applicable rate plan and promotions",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkInDateLocalized": {
                    "type": "string",
                    "description": "The date when the Owner will check in - with the format of YYYY-MM-DD",
                    "example": "2021-01-01"
                  },
                  "checkOutDateLocalized": {
                    "type": "string",
                    "description": "The date when the Owner will check out - with the format of YYYY-MM-DD",
                    "example": "2021-01-02"
                  },
                  "listingId": {
                    "type": "string",
                    "description": "Listing Id of the unit that the Owner will be staying in",
                    "example": "5f92cbf10cf217478ba93561"
                  },
                  "guestId": {
                    "type": "string",
                    "description": "Guest id of the guest that will be staying in",
                    "example": "5f92cbf10cf217478ba93532"
                  },
                  "guest": {
                    "description": "The Owner or Owner's guest for specific reservation",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "Guest's first name",
                            "example": "Joe"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Guest's last name",
                            "example": "Black"
                          },
                          "phones": {
                            "description": "The guest’s phone numbers written in E.164 format:  [+] [country code] [subscriber number including area code]",
                            "example": [
                              "+972-525180054",
                              "+972-225146062"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "email": {
                            "type": "string",
                            "description": "Guest's primary email address",
                            "example": "guest@email.com"
                          }
                        },
                        "required": [
                          "firstName",
                          "lastName",
                          "phones",
                          "email"
                        ]
                      }
                    ]
                  },
                  "numberOfGuests": {
                    "description": "Total number of guests with breakdown",
                    "example": {
                      "numberOfAdults": 2,
                      "numberOfChildren": 0,
                      "numberOfInfants": 0
                    },
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "numberOfChildren": {
                            "type": "number",
                            "description": "Number of children in the reservation. It can be zero"
                          },
                          "numberOfInfants": {
                            "type": "number",
                            "description": "Number of infants in the reservation. It can be zero"
                          },
                          "numberOfAdults": {
                            "type": "number",
                            "description": "Count of adults, must be > 0"
                          }
                        }
                      }
                    ]
                  },
                  "source": {
                    "enum": [
                      "owner",
                      "owner-guest"
                    ],
                    "type": "string",
                    "description": "Source of reservation. \"owner\" for owner reservations, \"owner-guest\" for owner friends & family reservations",
                    "example": "owner"
                  },
                  "guestsCount": {
                    "type": "number",
                    "description": "Count of guests",
                    "minimum": 1,
                    "example": 2
                  },
                  "notes": {
                    "description": "The reservation notes",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "other": {
                            "type": "string",
                            "description": "Other notes",
                            "example": "Other notes"
                          },
                          "cleaning": {
                            "type": "string",
                            "description": "Notes for cleaning",
                            "example": "Cleaning notes"
                          },
                          "guest": {
                            "type": "string",
                            "description": "For notes about the guest",
                            "example": "Guest notes"
                          },
                          "specialRequests": {
                            "type": "string",
                            "description": "For recording the guest's special requests",
                            "example": "Special request"
                          },
                          "keyCode": {
                            "type": "string",
                            "description": "Store the relevant key code for using with workflow automation",
                            "example": "123456"
                          },
                          "doneBy": {
                            "type": "string",
                            "description": "The name of the Guesty user"
                          }
                        }
                      }
                    ]
                  },
                  "creationInfo": {
                    "description": "Keeps info about who created the reservation.",
                    "example": {
                      "owner": {
                        "_id": "5f92cbf10cf217478ba93532"
                      }
                    },
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "owner": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "The owner ID",
                                "example": "6213b03e7f0ba50032296f4a"
                              },
                              "fullName": {
                                "type": "string",
                                "description": "The owner's full name",
                                "example": "John Doe"
                              },
                              "email": {
                                "type": "string",
                                "description": "The owner's email",
                                "example": "john.doe@example.com"
                              },
                              "phone": {
                                "type": "string",
                                "description": "The owner's phone number",
                                "example": "+1 123 456 7890"
                              },
                              "locale": {
                                "type": "string",
                                "description": "The owner's locale",
                                "example": "en-US"
                              }
                            },
                            "required": [
                              "_id"
                            ]
                          }
                        },
                        "required": [
                          "owner"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "checkInDateLocalized",
                  "checkOutDateLocalized",
                  "listingId",
                  "source",
                  "creationInfo"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reservation created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservationId": {
                      "type": "string"
                    },
                    "quoteId": {
                      "type": "string"
                    },
                    "confirmationCode": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "guestId": {
                      "type": "string"
                    },
                    "numberOfGuests": {
                      "type": "object",
                      "properties": {
                        "numberOfChildren": {
                          "type": "number",
                          "description": "Number of children",
                          "example": 1
                        },
                        "numberOfInfants": {
                          "type": "number",
                          "description": "Number of infants",
                          "example": 1
                        },
                        "numberOfPets": {
                          "type": "number",
                          "description": "Number of pets",
                          "example": 1
                        },
                        "numberOfAdults": {
                          "type": "number",
                          "description": "Number of adults",
                          "example": 1
                        }
                      },
                      "required": [
                        "numberOfAdults"
                      ]
                    },
                    "creationTime": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "reservedExpiresAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "checkInDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "checkOutDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "unitTypeId": {
                      "type": "string"
                    },
                    "unitId": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "channel": {
                      "type": "string"
                    },
                    "guestsCount": {
                      "type": "number"
                    },
                    "creationInfo": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "required": [
                    "reservationId",
                    "quoteId",
                    "confirmationCode",
                    "status",
                    "guestId",
                    "numberOfGuests",
                    "creationTime",
                    "reservedExpiresAt",
                    "checkInDate",
                    "checkOutDate",
                    "unitTypeId",
                    "unitId",
                    "source",
                    "channel",
                    "guestsCount",
                    "creationInfo"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error failed from create reservation."
          }
        },
        "tags": [
          "Reservations Open Api [Beta]"
        ]
      }
    },
    "/reservations-v3": {
      "post": {
        "operationId": "ReservationsOpenApiController_quickBooking",
        "summary": "Create a Reservation Without a Quote",
        "description": "Create a reservation without needing a quote. When the listing doesn't have an active rate plan assigned, a default rate plan is selected. Otherwise, the first active rate plan is selected.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkInDateLocalized": {
                    "type": "string",
                    "description": "The reservation check-in date, localized to the property’s timezone (YYYY-MM-DD)",
                    "example": "2024-01-01"
                  },
                  "checkOutDateLocalized": {
                    "type": "string",
                    "description": "The reservation check-out date, localized to the property’s timezone (YYYY-MM-DD)",
                    "example": "2024-01-02"
                  },
                  "listingId": {
                    "type": "string",
                    "description": "The property’s ID as defined in Guesty",
                    "example": "5f92cbf10cf217478ba93561"
                  },
                  "source": {
                    "type": "string",
                    "description": "Define the source for getting an updated price quote",
                    "example": "manual"
                  },
                  "status": {
                    "enum": [
                      "confirmed",
                      "reserved",
                      "awaiting_payment",
                      "inquiry",
                      "canceled",
                      "closed",
                      "declined",
                      "expired"
                    ],
                    "type": "string",
                    "description": "Define the reservation status",
                    "example": "confirmed"
                  },
                  "guestId": {
                    "type": "string",
                    "description": "The primary ID for returning guests and new guests that were created beforehand",
                    "example": "5f92cbf10cf217478ba93532"
                  },
                  "guest": {
                    "description": "For a new guest, note that we recommend that you create the guest first in a separate request and add their guestId to the reservation instead",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "Guest's first name",
                            "example": "Joe"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Guest's last name",
                            "example": "Black"
                          },
                          "phones": {
                            "description": "The guest’s phone numbers written in E.164 format:  [+] [country code] [subscriber number including area code]",
                            "example": [
                              "+972-525180054",
                              "+972-225146062"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "email": {
                            "type": "string",
                            "description": "Guest's primary email address",
                            "example": "guest@email.com"
                          }
                        },
                        "required": [
                          "firstName",
                          "lastName",
                          "phones",
                          "email"
                        ]
                      }
                    ]
                  },
                  "guestsCount": {
                    "type": "number",
                    "description": "Number of guests to be included in the quote",
                    "example": 2
                  },
                  "numberOfGuests": {
                    "description": "Total number of guests with breakdown",
                    "example": {
                      "numberOfAdults": 2,
                      "numberOfChildren": 0,
                      "numberOfInfants": 0
                    },
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "numberOfChildren": {
                            "type": "number",
                            "description": "Number of children in the reservation. It can be zero"
                          },
                          "numberOfInfants": {
                            "type": "number",
                            "description": "Number of infants in the reservation. It can be zero"
                          },
                          "numberOfAdults": {
                            "type": "number",
                            "description": "Count of adults, must be > 0"
                          }
                        }
                      }
                    ]
                  },
                  "couponCode": {
                    "type": "string",
                    "description": "A single coupon code defined under the accounted Revenue Management settings",
                    "example": "OOM20-DISCOUNT"
                  },
                  "ratePlanId": {
                    "type": "string",
                    "description": "The ID of an active rate plan when you wish to apply it to the reservation",
                    "example": "5f92cbf10cf217478ba93561"
                  },
                  "applyPromotions": {
                    "type": "boolean",
                    "default": true,
                    "description": "Apply account promotions setup (if toggled off (false), do not take promotions when creating a reservation)",
                    "example": false
                  },
                  "ignoreCalendar": {
                    "type": "boolean",
                    "default": false,
                    "description": "The system will check calendar availability and decline (401) if unavailable unless this flag is set to true",
                    "example": true
                  },
                  "ignoreTerms": {
                    "type": "boolean",
                    "default": false,
                    "description": "The system will ensure the reservation accords with the terms (min, max nights, any other terms) of the property and will decline(401) if it is. To override, set this flag to true",
                    "example": true
                  },
                  "ignoreBlocks": {
                    "type": "boolean",
                    "default": false,
                    "description": "Set this flag to true to ignore existing flexible blocks (advance notice, preparation time, etc)",
                    "example": true
                  },
                  "confirmedAt": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Define the confirmation date. If null and status is confirmed, use the current date. If null and status is not confirmed, leave it as null",
                    "example": "2024-07-06T09:12:06.574Z"
                  },
                  "reservedUntil": {
                    "enum": [
                      -1,
                      0.5,
                      0.25,
                      0.17,
                      12,
                      24,
                      36,
                      48,
                      72
                    ],
                    "type": "number",
                    "description": "It can be -1 (no limit), 0.17 (10 minutes), 0.25 (15 minutes), 0.5 (30 minutes), or 24/48/72 hours when the reservation is a booking request that reserves dates (i.e., status = “reserved”)",
                    "example": 36
                  },
                  "money": {
                    "type": "object"
                  }
                },
                "required": [
                  "checkInDateLocalized",
                  "checkOutDateLocalized",
                  "listingId",
                  "source",
                  "status",
                  "guestsCount"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservationId": {
                      "type": "string"
                    },
                    "quoteId": {
                      "type": "string"
                    },
                    "confirmationCode": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "guestId": {
                      "type": "string"
                    },
                    "numberOfGuests": {
                      "type": "object",
                      "properties": {
                        "numberOfChildren": {
                          "type": "number",
                          "description": "Number of children",
                          "example": 1
                        },
                        "numberOfInfants": {
                          "type": "number",
                          "description": "Number of infants",
                          "example": 1
                        },
                        "numberOfPets": {
                          "type": "number",
                          "description": "Number of pets",
                          "example": 1
                        },
                        "numberOfAdults": {
                          "type": "number",
                          "description": "Number of adults",
                          "example": 1
                        }
                      },
                      "required": [
                        "numberOfAdults"
                      ]
                    },
                    "creationTime": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "reservedExpiresAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "checkInDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "checkOutDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "unitTypeId": {
                      "type": "string"
                    },
                    "unitId": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "channel": {
                      "type": "string"
                    },
                    "guestsCount": {
                      "type": "number"
                    },
                    "creationInfo": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "required": [
                    "reservationId",
                    "quoteId",
                    "confirmationCode",
                    "status",
                    "guestId",
                    "numberOfGuests",
                    "creationTime",
                    "reservedExpiresAt",
                    "checkInDate",
                    "checkOutDate",
                    "unitTypeId",
                    "unitId",
                    "source",
                    "channel",
                    "guestsCount",
                    "creationInfo"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "422": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "500": {
            "description": "Indicates server-side error while processing the request"
          }
        },
        "tags": [
          "Reservations Open Api [Beta]"
        ]
      },
      "get": {
        "operationId": "ReservationsOpenApiController_getReservationsByIds",
        "summary": "Retrieve Reservations",
        "description": "Retrieve multiple reservations by ID. Use this endpoint to get all the relevant information about your reservation including the financial breakdown and guest details",
        "parameters": [
          {
            "name": "reservationIds",
            "required": true,
            "in": "query",
            "description": "Reservation IDs from Guesty",
            "example": [
              "5f92cbf10cf217478ba93561",
              "5f92cbf10cf217478ba93562"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "object",
                        "example": "df7hf01cnduhdb2125854dj8"
                      },
                      "groupId": {
                        "type": "object",
                        "example": "df7hf01cnduhdb2125854dj8"
                      },
                      "sendQuoteId": {
                        "example": "df7hf01cnduhdb2125854dj8",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {}
                          }
                        ]
                      },
                      "integrationId": {
                        "type": "object",
                        "example": "df7hf01cnduhdb2125854dj9"
                      },
                      "stay": {
                        "example": [
                          {
                            "checkInDateLocalized": "2021-12-20",
                            "checkOutDateLocalized": "2021-12-22",
                            "guestsCount": 3,
                            "numberOfGuests": {
                              "numberOfAdults": 3,
                              "numberOfChildren": 0,
                              "numberOfInfants": 0
                            },
                            "unitTypeId": "5e384c9fc2700d002670b61b",
                            "unitId": "5e384c9fc2700d002670b61b",
                            "ratePlanId": "5e384c9fc2700d002670b61b"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "object",
                              "properties": {}
                            },
                            "checkInDateLocalized": {
                              "type": "string"
                            },
                            "checkOutDateLocalized": {
                              "type": "string"
                            },
                            "guestsCount": {
                              "type": "number"
                            },
                            "unitTypeId": {
                              "type": "object",
                              "properties": {}
                            },
                            "unitId": {
                              "type": "object",
                              "properties": {}
                            },
                            "ratePlanId": {
                              "type": "string"
                            },
                            "eta": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "etd": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "numberOfGuests": {
                              "type": "object",
                              "properties": {
                                "numberOfChildren": {
                                  "type": "number",
                                  "description": "Number of children",
                                  "example": 1
                                },
                                "numberOfInfants": {
                                  "type": "number",
                                  "description": "Number of infants",
                                  "example": 1
                                },
                                "numberOfPets": {
                                  "type": "number",
                                  "description": "Number of pets",
                                  "example": 1
                                },
                                "numberOfAdults": {
                                  "type": "number",
                                  "description": "Number of adults",
                                  "example": 1
                                }
                              },
                              "required": [
                                "numberOfAdults"
                              ]
                            },
                            "earlyCheckIn": {
                              "type": "object",
                              "properties": {}
                            },
                            "lateCheckOut": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "required": [
                            "checkInDateLocalized",
                            "checkOutDateLocalized",
                            "guestsCount",
                            "unitTypeId",
                            "eta",
                            "etd"
                          ]
                        }
                      },
                      "bookerId": {
                        "type": "string",
                        "example": "df7hf01cnduhdb2125854dj8"
                      },
                      "platform": {
                        "type": "string",
                        "example": "direct"
                      },
                      "quoteId": {
                        "type": "object",
                        "example": "df7hf01cnduhdb2125854dj8"
                      },
                      "accountId": {
                        "type": "object",
                        "example": "df7hf01cnduhdb2125854dj8"
                      },
                      "source": {
                        "type": "string",
                        "example": "fb-campaign-01"
                      },
                      "confirmedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "reservedAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "reservedUntil": {
                        "enum": [
                          "twelveHours",
                          "day",
                          "thirtySixHours",
                          "twoDays",
                          "threeDays",
                          -1,
                          0.5,
                          0.25,
                          0.17
                        ],
                        "type": "string"
                      },
                      "canceledAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "isAssigned": {
                        "type": "boolean"
                      },
                      "moneyId": {
                        "type": "string",
                        "example": "df7hf01cnduhdb2125854dj8"
                      },
                      "specialRequests": {
                        "type": "string",
                        "example": "notes, requests",
                        "deprecated": true
                      },
                      "keyCode": {
                        "type": "string",
                        "example": "code for the key",
                        "deprecated": true
                      },
                      "alteredAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "conversationId": {
                        "type": "string",
                        "example": "df7hf01cnduhdb2125854dj8"
                      },
                      "transportation": {
                        "type": "object"
                      },
                      "agentBooking": {
                        "type": "boolean"
                      },
                      "reasonForVisit": {
                        "enum": [
                          "business",
                          "leisure",
                          "family",
                          "event",
                          "other"
                        ],
                        "type": "string"
                      },
                      "canceledBy": {
                        "enum": [
                          "OWNER",
                          "GUEST",
                          "TEAM_MEMBER"
                        ],
                        "type": "string"
                      },
                      "cancellationReason": {
                        "type": "string"
                      },
                      "guestStay": {
                        "type": "object",
                        "properties": {
                          "doneBy": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "status": {
                            "enum": [
                              "not_set",
                              "checked_in",
                              "checked_out",
                              "no_show"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "createdAt",
                          "updatedAt",
                          "status"
                        ]
                      },
                      "pointOfSale": {
                        "type": "string"
                      },
                      "creationInfo": {
                        "description": "Reservation creation info. It is used to track the user who created the reservation, currently used for owner reservations.",
                        "example": {
                          "owner": {
                            "_id": "5e384c9fc2700d002670b61b",
                            "fullName": "John Doe",
                            "email": "john.doe@gmail.com",
                            "phone": "+1 123 456 7890",
                            "locale": "en-US"
                          }
                        },
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "owner": {
                                "type": "object",
                                "properties": {
                                  "_id": {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  "fullName": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string"
                                  },
                                  "phone": {
                                    "type": "string"
                                  },
                                  "locale": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "_id"
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "customFields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string"
                            },
                            "fieldId": {
                              "type": "string"
                            },
                            "value": {
                              "type": "object"
                            }
                          },
                          "required": [
                            "_id",
                            "fieldId",
                            "value"
                          ]
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "confirmed",
                          "reserved",
                          "awaiting_payment",
                          "inquiry",
                          "canceled",
                          "closed",
                          "declined",
                          "expired"
                        ]
                      },
                      "notes": {
                        "type": "object",
                        "properties": {
                          "other": {
                            "type": "string"
                          },
                          "cleaning": {
                            "type": "string"
                          },
                          "guest": {
                            "type": "string"
                          },
                          "specialRequests": {
                            "type": "string"
                          },
                          "keyCode": {
                            "type": "string"
                          }
                        }
                      },
                      "confirmationCode": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "_id",
                      "stay",
                      "bookerId",
                      "platform",
                      "quoteId",
                      "accountId",
                      "source",
                      "createdAt",
                      "status",
                      "notes",
                      "confirmationCode"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "500": {
            "description": "Indicates server-side error while processing the request"
          }
        },
        "tags": [
          "Reservations Open Api [Beta]"
        ]
      }
    },
    "/reservations-v3/guest-stay": {
      "put": {
        "operationId": "ReservationsOpenApiController_changeStay",
        "summary": "Change Reservation Guest Stay Status",
        "description": "Change the guest stay status of the reservation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reservationId": {
                    "type": "string",
                    "description": "Guesty reservation ID",
                    "example": "5acca18ffe1641001f17a999"
                  },
                  "status": {
                    "enum": [
                      "not_set",
                      "checked_in",
                      "checked_out",
                      "no_show"
                    ],
                    "type": "string",
                    "description": "Set the guest stay status. Choose from: “not_set”, “checked_in”, “checked_out”, or “no_show”",
                    "example": "checked_in"
                  }
                },
                "required": [
                  "reservationId",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {}
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "422": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "500": {
            "description": "Indicates server-side error while processing the request"
          }
        },
        "tags": [
          "Reservations Open Api [Beta]"
        ]
      }
    },
    "/reservations-v3/{reservationId}/source": {
      "put": {
        "operationId": "ReservationsOpenApiController_updateReservationSource",
        "summary": "Change Reservation Source",
        "description": "Change a reservation's source and point of sale parameters and choose whether to recalculate financials",
        "parameters": [
          {
            "name": "reservationId",
            "required": true,
            "in": "path",
            "description": "The Guesty reservation ID",
            "example": "5f92cbf10cf217478ba93561",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "source": {
                    "type": "string",
                    "description": "Set the source of the reservation",
                    "example": "summer-campaign"
                  },
                  "pointOfSale": {
                    "type": "string",
                    "description": "Define the point of sale",
                    "example": "sales agent"
                  },
                  "applyRecalculation": {
                    "type": "boolean",
                    "default": true,
                    "description": "Should the update trigger a financial recalculation",
                    "example": false
                  }
                },
                "required": [
                  "source"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservationId": {
                      "type": "string"
                    },
                    "money": {
                      "type": "object",
                      "properties": {
                        "invoiceItems": {
                          "example": [
                            {
                              "title": "Cleaning fee",
                              "amount": 20,
                              "currency": "USD",
                              "type": "CLEANING_FEE",
                              "isLocked": true,
                              "normalType": "CF"
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "object"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "isLocked": {
                                "type": "boolean"
                              },
                              "normalType": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "isTax": {
                                "type": "boolean"
                              },
                              "isDeducted": {
                                "type": "boolean"
                              },
                              "metadata": {
                                "type": "boolean"
                              },
                              "evaluatedPercent": {
                                "type": "number"
                              },
                              "baseAmount": {
                                "type": "number"
                              },
                              "isAutoAdditionalFee": {
                                "type": "boolean"
                              },
                              "secondIdentifier": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "_id",
                              "amount",
                              "currency",
                              "isLocked",
                              "normalType",
                              "title",
                              "type"
                            ]
                          }
                        },
                        "_id": {
                          "type": "object",
                          "properties": {}
                        },
                        "reservationId": {
                          "type": "string"
                        },
                        "fareAccommodationAdjustment": {
                          "type": "number"
                        },
                        "fareAccommodationDiscount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "fareAccommodation": {
                          "type": "number"
                        },
                        "fareAccommodationAdjusted": {
                          "type": "number"
                        },
                        "fareCleaning": {
                          "type": "number"
                        },
                        "hostServiceFee": {
                          "type": "number"
                        },
                        "hostServiceFeeTax": {
                          "type": "number"
                        },
                        "hostServiceFeeIncTax": {
                          "type": "number"
                        },
                        "subTotalPrice": {
                          "type": "number"
                        },
                        "hostPayout": {
                          "type": "number"
                        },
                        "hostPayoutUsd": {
                          "type": "number"
                        },
                        "totalTaxes": {
                          "type": "number"
                        },
                        "payments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "totalRefunded": {
                          "type": "number"
                        },
                        "totalPaid": {
                          "type": "number"
                        },
                        "paymentsDue": {
                          "type": "number"
                        },
                        "balanceDue": {
                          "type": "number"
                        },
                        "isFullyPaid": {
                          "type": "boolean"
                        },
                        "settingsSnapshot": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "invoiceItems",
                        "_id",
                        "reservationId",
                        "fareAccommodationAdjustment",
                        "fareAccommodationDiscount",
                        "currency",
                        "fareAccommodation",
                        "fareAccommodationAdjusted",
                        "fareCleaning",
                        "hostServiceFee",
                        "hostServiceFeeTax",
                        "hostServiceFeeIncTax",
                        "subTotalPrice",
                        "hostPayout",
                        "hostPayoutUsd",
                        "totalTaxes",
                        "payments",
                        "totalRefunded",
                        "totalPaid",
                        "paymentsDue",
                        "balanceDue",
                        "isFullyPaid",
                        "settingsSnapshot"
                      ]
                    },
                    "source": {
                      "type": "string"
                    },
                    "pointOfSale": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "reservationId",
                    "money",
                    "source",
                    "pointOfSale"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "422": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "500": {
            "description": "Indicates server-side error while processing the request"
          }
        },
        "tags": [
          "Reservations Open Api [Beta]"
        ]
      }
    },
    "/reservations-v3/{reservationId}/notes": {
      "put": {
        "operationId": "ReservationsOpenApiController_updateReservationNotes",
        "summary": "Update Reservation notes",
        "description": "Update reservation notes, including the key code and special requests fields",
        "parameters": [
          {
            "name": "reservationId",
            "required": true,
            "in": "path",
            "description": "The Guesty reservation ID",
            "example": "5f92cbf10cf217478ba93561",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notes": {
                    "description": "Object which contains the various types of notes",
                    "example": {
                      "other": "Other notes",
                      "cleaning": "Cleaning notes",
                      "guest": "Guest notes",
                      "specialRequests": "Special request",
                      "keyCode": "123456"
                    },
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "other": {
                            "type": "string",
                            "description": "Other notes",
                            "example": "Other notes"
                          },
                          "cleaning": {
                            "type": "string",
                            "description": "Notes for cleaning",
                            "example": "Cleaning notes"
                          },
                          "guest": {
                            "type": "string",
                            "description": "For notes about the guest",
                            "example": "Guest notes"
                          },
                          "specialRequests": {
                            "type": "string",
                            "description": "For recording the guest's special requests",
                            "example": "Special request"
                          },
                          "keyCode": {
                            "type": "string",
                            "description": "Store the relevant key code for using with workflow automation",
                            "example": "123456"
                          },
                          "doneBy": {
                            "type": "string",
                            "description": "The name of the Guesty user"
                          }
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "notes"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservationId": {
                      "type": "string"
                    },
                    "money": {
                      "type": "object",
                      "properties": {
                        "invoiceItems": {
                          "example": [
                            {
                              "title": "Cleaning fee",
                              "amount": 20,
                              "currency": "USD",
                              "type": "CLEANING_FEE",
                              "isLocked": true,
                              "normalType": "CF"
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "object"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "isLocked": {
                                "type": "boolean"
                              },
                              "normalType": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "isTax": {
                                "type": "boolean"
                              },
                              "isDeducted": {
                                "type": "boolean"
                              },
                              "metadata": {
                                "type": "boolean"
                              },
                              "evaluatedPercent": {
                                "type": "number"
                              },
                              "baseAmount": {
                                "type": "number"
                              },
                              "isAutoAdditionalFee": {
                                "type": "boolean"
                              },
                              "secondIdentifier": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "_id",
                              "amount",
                              "currency",
                              "isLocked",
                              "normalType",
                              "title",
                              "type"
                            ]
                          }
                        },
                        "_id": {
                          "type": "object",
                          "properties": {}
                        },
                        "reservationId": {
                          "type": "string"
                        },
                        "fareAccommodationAdjustment": {
                          "type": "number"
                        },
                        "fareAccommodationDiscount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "fareAccommodation": {
                          "type": "number"
                        },
                        "fareAccommodationAdjusted": {
                          "type": "number"
                        },
                        "fareCleaning": {
                          "type": "number"
                        },
                        "hostServiceFee": {
                          "type": "number"
                        },
                        "hostServiceFeeTax": {
                          "type": "number"
                        },
                        "hostServiceFeeIncTax": {
                          "type": "number"
                        },
                        "subTotalPrice": {
                          "type": "number"
                        },
                        "hostPayout": {
                          "type": "number"
                        },
                        "hostPayoutUsd": {
                          "type": "number"
                        },
                        "totalTaxes": {
                          "type": "number"
                        },
                        "payments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "totalRefunded": {
                          "type": "number"
                        },
                        "totalPaid": {
                          "type": "number"
                        },
                        "paymentsDue": {
                          "type": "number"
                        },
                        "balanceDue": {
                          "type": "number"
                        },
                        "isFullyPaid": {
                          "type": "boolean"
                        },
                        "settingsSnapshot": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "invoiceItems",
                        "_id",
                        "reservationId",
                        "fareAccommodationAdjustment",
                        "fareAccommodationDiscount",
                        "currency",
                        "fareAccommodation",
                        "fareAccommodationAdjusted",
                        "fareCleaning",
                        "hostServiceFee",
                        "hostServiceFeeTax",
                        "hostServiceFeeIncTax",
                        "subTotalPrice",
                        "hostPayout",
                        "hostPayoutUsd",
                        "totalTaxes",
                        "payments",
                        "totalRefunded",
                        "totalPaid",
                        "paymentsDue",
                        "balanceDue",
                        "isFullyPaid",
                        "settingsSnapshot"
                      ]
                    },
                    "notes": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "reservationId",
                    "money",
                    "notes"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "422": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "500": {
            "description": "Indicates server-side error while processing the request"
          }
        },
        "tags": [
          "Reservations Open Api [Beta]"
        ]
      }
    },
    "/reservations-v3/{reservationId}/dates": {
      "put": {
        "operationId": "ReservationsOpenApiController_updateReservationDates",
        "summary": "Update Reservation Dates",
        "description": "Change the check-in or check-out date and time for a specific reservation. Modifying the date will automatically trigger a financial recalculation, regardless of the `applyRecalculation` flag",
        "parameters": [
          {
            "name": "reservationId",
            "required": true,
            "in": "path",
            "description": "The Guesty reservation ID",
            "example": "5f92cbf10cf217478ba93561",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkInDateLocalized": {
                    "type": "string",
                    "description": "The reservation check-in date, localized to the property’s timezone (YYYY-MM-DD)",
                    "example": "2024-01-01"
                  },
                  "checkOutDateLocalized": {
                    "type": "string",
                    "description": "The reservation check-out date, localized to the property’s timezone (YYYY-MM-DD)",
                    "example": "2024-01-02"
                  },
                  "plannedArrival": {
                    "type": "string",
                    "description": "Use this to specify a different check-in time (Hh:mm) from the property’s default time",
                    "example": "11:00"
                  },
                  "plannedDeparture": {
                    "type": "string",
                    "description": "Use this to specify a different check-out time (Hh:mm) from the property’s default time",
                    "example": "15:00"
                  },
                  "earlyCheckIn": {
                    "description": "Define if it should be marked as ‘early check-in’. E.g., true if defined, false if not",
                    "example": true,
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "blockDay": {
                            "type": "boolean",
                            "description": "Whether day will be blocked"
                          },
                          "addAdditionalFee": {
                            "type": "boolean",
                            "description": "Whether additional fee will be added"
                          }
                        }
                      }
                    ]
                  },
                  "lateCheckOut": {
                    "description": "Define if it should be marked as ‘late check-out‘. E.g., true if defined, false if not",
                    "example": false,
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "blockDay": {
                            "type": "boolean",
                            "description": "Whether day will be blocked"
                          },
                          "addAdditionalFee": {
                            "type": "boolean",
                            "description": "Whether additional fee will be added"
                          }
                        }
                      }
                    ]
                  },
                  "applyRecalculation": {
                    "type": "boolean",
                    "default": true,
                    "description": "Should the update trigger a financial recalculation? E.g., true or false.\nNote that altering the date will automatically apply recalculation, regardless of your choice",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservationId": {
                      "type": "string"
                    },
                    "money": {
                      "type": "object",
                      "properties": {
                        "invoiceItems": {
                          "example": [
                            {
                              "title": "Cleaning fee",
                              "amount": 20,
                              "currency": "USD",
                              "type": "CLEANING_FEE",
                              "isLocked": true,
                              "normalType": "CF"
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "object"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "isLocked": {
                                "type": "boolean"
                              },
                              "normalType": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "isTax": {
                                "type": "boolean"
                              },
                              "isDeducted": {
                                "type": "boolean"
                              },
                              "metadata": {
                                "type": "boolean"
                              },
                              "evaluatedPercent": {
                                "type": "number"
                              },
                              "baseAmount": {
                                "type": "number"
                              },
                              "isAutoAdditionalFee": {
                                "type": "boolean"
                              },
                              "secondIdentifier": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "_id",
                              "amount",
                              "currency",
                              "isLocked",
                              "normalType",
                              "title",
                              "type"
                            ]
                          }
                        },
                        "_id": {
                          "type": "object",
                          "properties": {}
                        },
                        "reservationId": {
                          "type": "string"
                        },
                        "fareAccommodationAdjustment": {
                          "type": "number"
                        },
                        "fareAccommodationDiscount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "fareAccommodation": {
                          "type": "number"
                        },
                        "fareAccommodationAdjusted": {
                          "type": "number"
                        },
                        "fareCleaning": {
                          "type": "number"
                        },
                        "hostServiceFee": {
                          "type": "number"
                        },
                        "hostServiceFeeTax": {
                          "type": "number"
                        },
                        "hostServiceFeeIncTax": {
                          "type": "number"
                        },
                        "subTotalPrice": {
                          "type": "number"
                        },
                        "hostPayout": {
                          "type": "number"
                        },
                        "hostPayoutUsd": {
                          "type": "number"
                        },
                        "totalTaxes": {
                          "type": "number"
                        },
                        "payments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "totalRefunded": {
                          "type": "number"
                        },
                        "totalPaid": {
                          "type": "number"
                        },
                        "paymentsDue": {
                          "type": "number"
                        },
                        "balanceDue": {
                          "type": "number"
                        },
                        "isFullyPaid": {
                          "type": "boolean"
                        },
                        "settingsSnapshot": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "invoiceItems",
                        "_id",
                        "reservationId",
                        "fareAccommodationAdjustment",
                        "fareAccommodationDiscount",
                        "currency",
                        "fareAccommodation",
                        "fareAccommodationAdjusted",
                        "fareCleaning",
                        "hostServiceFee",
                        "hostServiceFeeTax",
                        "hostServiceFeeIncTax",
                        "subTotalPrice",
                        "hostPayout",
                        "hostPayoutUsd",
                        "totalTaxes",
                        "payments",
                        "totalRefunded",
                        "totalPaid",
                        "paymentsDue",
                        "balanceDue",
                        "isFullyPaid",
                        "settingsSnapshot"
                      ]
                    },
                    "creationTime": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "checkInDate": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "checkOutDate": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "reservationId",
                    "money",
                    "creationTime",
                    "checkInDate",
                    "checkOutDate"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "422": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "500": {
            "description": "Indicates server-side error while processing the request"
          }
        },
        "tags": [
          "Reservations Open Api [Beta]"
        ]
      }
    },
    "/reservations-v3/{reservationId}/relocate": {
      "put": {
        "operationId": "ReservationsOpenApiController_updateReservationListing",
        "summary": "Update reservation listing",
        "description": "Change a listing for specific reservations.",
        "parameters": [
          {
            "name": "reservationId",
            "required": true,
            "in": "path",
            "description": "The Guesty reservation ID",
            "example": "5f92cbf10cf217478ba93561",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listingId": {
                    "type": "string",
                    "description": "Listing ID for the reservation",
                    "example": "5f92cbf10cf217478ba93561"
                  }
                },
                "required": [
                  "listingId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reservation Listing Updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservationId": {
                      "type": "string"
                    },
                    "money": {
                      "type": "object",
                      "properties": {
                        "invoiceItems": {
                          "example": [
                            {
                              "title": "Cleaning fee",
                              "amount": 20,
                              "currency": "USD",
                              "type": "CLEANING_FEE",
                              "isLocked": true,
                              "normalType": "CF"
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "object"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "isLocked": {
                                "type": "boolean"
                              },
                              "normalType": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "isTax": {
                                "type": "boolean"
                              },
                              "isDeducted": {
                                "type": "boolean"
                              },
                              "metadata": {
                                "type": "boolean"
                              },
                              "evaluatedPercent": {
                                "type": "number"
                              },
                              "baseAmount": {
                                "type": "number"
                              },
                              "isAutoAdditionalFee": {
                                "type": "boolean"
                              },
                              "secondIdentifier": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "_id",
                              "amount",
                              "currency",
                              "isLocked",
                              "normalType",
                              "title",
                              "type"
                            ]
                          }
                        },
                        "_id": {
                          "type": "object",
                          "properties": {}
                        },
                        "reservationId": {
                          "type": "string"
                        },
                        "fareAccommodationAdjustment": {
                          "type": "number"
                        },
                        "fareAccommodationDiscount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "fareAccommodation": {
                          "type": "number"
                        },
                        "fareAccommodationAdjusted": {
                          "type": "number"
                        },
                        "fareCleaning": {
                          "type": "number"
                        },
                        "hostServiceFee": {
                          "type": "number"
                        },
                        "hostServiceFeeTax": {
                          "type": "number"
                        },
                        "hostServiceFeeIncTax": {
                          "type": "number"
                        },
                        "subTotalPrice": {
                          "type": "number"
                        },
                        "hostPayout": {
                          "type": "number"
                        },
                        "hostPayoutUsd": {
                          "type": "number"
                        },
                        "totalTaxes": {
                          "type": "number"
                        },
                        "payments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "totalRefunded": {
                          "type": "number"
                        },
                        "totalPaid": {
                          "type": "number"
                        },
                        "paymentsDue": {
                          "type": "number"
                        },
                        "balanceDue": {
                          "type": "number"
                        },
                        "isFullyPaid": {
                          "type": "boolean"
                        },
                        "settingsSnapshot": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "invoiceItems",
                        "_id",
                        "reservationId",
                        "fareAccommodationAdjustment",
                        "fareAccommodationDiscount",
                        "currency",
                        "fareAccommodation",
                        "fareAccommodationAdjusted",
                        "fareCleaning",
                        "hostServiceFee",
                        "hostServiceFeeTax",
                        "hostServiceFeeIncTax",
                        "subTotalPrice",
                        "hostPayout",
                        "hostPayoutUsd",
                        "totalTaxes",
                        "payments",
                        "totalRefunded",
                        "totalPaid",
                        "paymentsDue",
                        "balanceDue",
                        "isFullyPaid",
                        "settingsSnapshot"
                      ]
                    },
                    "listingId": {
                      "type": "string"
                    },
                    "unitId": {
                      "type": "string"
                    },
                    "unitTypeId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "reservationId",
                    "money",
                    "listingId",
                    "unitId",
                    "unitTypeId"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error failed during updating listing."
          }
        },
        "tags": [
          "Reservations Open Api [Beta]"
        ]
      }
    },
    "/reservations-v3/{reservationId}/status": {
      "put": {
        "operationId": "ReservationsOpenApiController_updateReservationStatus",
        "summary": "Update reservation status",
        "description": "Choose between inquiry/reserved/confirmed/canceled",
        "parameters": [
          {
            "name": "reservationId",
            "required": true,
            "in": "path",
            "description": "The Guesty reservation ID",
            "example": "5f92cbf10cf217478ba93561",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "enum": [
                      "confirmed",
                      "reserved",
                      "awaiting_payment",
                      "inquiry",
                      "canceled",
                      "closed",
                      "declined",
                      "expired"
                    ],
                    "type": "string",
                    "description": "Status of the reservation",
                    "example": "confirmed"
                  },
                  "canceledBy": {
                    "enum": [
                      "OWNER",
                      "GUEST",
                      "TEAM_MEMBER"
                    ],
                    "type": "string",
                    "description": "The person who cancelled reservation, if not defined will be TEAM MEMBER by default",
                    "example": "GUEST"
                  },
                  "cancellationReason": {
                    "type": "string",
                    "description": "The reason for cancelling a reservation",
                    "example": "Personal changes"
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reservation Status Updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservationId": {
                      "type": "string"
                    },
                    "money": {
                      "type": "object",
                      "properties": {
                        "invoiceItems": {
                          "example": [
                            {
                              "title": "Cleaning fee",
                              "amount": 20,
                              "currency": "USD",
                              "type": "CLEANING_FEE",
                              "isLocked": true,
                              "normalType": "CF"
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "object"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "isLocked": {
                                "type": "boolean"
                              },
                              "normalType": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "isTax": {
                                "type": "boolean"
                              },
                              "isDeducted": {
                                "type": "boolean"
                              },
                              "metadata": {
                                "type": "boolean"
                              },
                              "evaluatedPercent": {
                                "type": "number"
                              },
                              "baseAmount": {
                                "type": "number"
                              },
                              "isAutoAdditionalFee": {
                                "type": "boolean"
                              },
                              "secondIdentifier": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "_id",
                              "amount",
                              "currency",
                              "isLocked",
                              "normalType",
                              "title",
                              "type"
                            ]
                          }
                        },
                        "_id": {
                          "type": "object",
                          "properties": {}
                        },
                        "reservationId": {
                          "type": "string"
                        },
                        "fareAccommodationAdjustment": {
                          "type": "number"
                        },
                        "fareAccommodationDiscount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "fareAccommodation": {
                          "type": "number"
                        },
                        "fareAccommodationAdjusted": {
                          "type": "number"
                        },
                        "fareCleaning": {
                          "type": "number"
                        },
                        "hostServiceFee": {
                          "type": "number"
                        },
                        "hostServiceFeeTax": {
                          "type": "number"
                        },
                        "hostServiceFeeIncTax": {
                          "type": "number"
                        },
                        "subTotalPrice": {
                          "type": "number"
                        },
                        "hostPayout": {
                          "type": "number"
                        },
                        "hostPayoutUsd": {
                          "type": "number"
                        },
                        "totalTaxes": {
                          "type": "number"
                        },
                        "payments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "totalRefunded": {
                          "type": "number"
                        },
                        "totalPaid": {
                          "type": "number"
                        },
                        "paymentsDue": {
                          "type": "number"
                        },
                        "balanceDue": {
                          "type": "number"
                        },
                        "isFullyPaid": {
                          "type": "boolean"
                        },
                        "settingsSnapshot": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "invoiceItems",
                        "_id",
                        "reservationId",
                        "fareAccommodationAdjustment",
                        "fareAccommodationDiscount",
                        "currency",
                        "fareAccommodation",
                        "fareAccommodationAdjusted",
                        "fareCleaning",
                        "hostServiceFee",
                        "hostServiceFeeTax",
                        "hostServiceFeeIncTax",
                        "subTotalPrice",
                        "hostPayout",
                        "hostPayoutUsd",
                        "totalTaxes",
                        "payments",
                        "totalRefunded",
                        "totalPaid",
                        "paymentsDue",
                        "balanceDue",
                        "isFullyPaid",
                        "settingsSnapshot"
                      ]
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "reservationId",
                    "money",
                    "status"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error failed updating status."
          }
        },
        "tags": [
          "Reservations Open Api [Beta]"
        ]
      }
    },
    "/reservations-v3/{reservationId}/guests": {
      "put": {
        "operationId": "ReservationsOpenApiController_updateReservationGuests",
        "summary": "Update Reservation Guests Breakdown",
        "description": "Update the reservation guest count, including the guest breakdown object (adults, children, infants, pets, etc.). Financial recalculation is automatically applied",
        "parameters": [
          {
            "name": "reservationId",
            "required": true,
            "in": "path",
            "description": "The Guesty reservation ID",
            "example": "5f92cbf10cf217478ba93561",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "guestsCount": {
                    "type": "number",
                    "description": "The number of guests is to be included in the reservation",
                    "example": 3
                  },
                  "numberOfGuests": {
                    "description": "Object. Contains the breakdown of the guests",
                    "example": {
                      "numberOfChildren": 1,
                      "numberOfInfants": 0,
                      "numberOfPets": 1,
                      "numberOfAdults": 2
                    },
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "numberOfChildren": {
                            "type": "number",
                            "description": "Number of children",
                            "example": 1
                          },
                          "numberOfInfants": {
                            "type": "number",
                            "description": "Number of infants",
                            "example": 1
                          },
                          "numberOfPets": {
                            "type": "number",
                            "description": "Number of pets",
                            "example": 1
                          },
                          "numberOfAdults": {
                            "type": "number",
                            "description": "Number of adults",
                            "example": 1
                          }
                        },
                        "required": [
                          "numberOfAdults"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "guestsCount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservationId": {
                      "type": "string"
                    },
                    "money": {
                      "type": "object",
                      "properties": {
                        "invoiceItems": {
                          "example": [
                            {
                              "title": "Cleaning fee",
                              "amount": 20,
                              "currency": "USD",
                              "type": "CLEANING_FEE",
                              "isLocked": true,
                              "normalType": "CF"
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "object"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "currency": {
                                "type": "string"
                              },
                              "isLocked": {
                                "type": "boolean"
                              },
                              "normalType": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "isTax": {
                                "type": "boolean"
                              },
                              "isDeducted": {
                                "type": "boolean"
                              },
                              "metadata": {
                                "type": "boolean"
                              },
                              "evaluatedPercent": {
                                "type": "number"
                              },
                              "baseAmount": {
                                "type": "number"
                              },
                              "isAutoAdditionalFee": {
                                "type": "boolean"
                              },
                              "secondIdentifier": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "_id",
                              "amount",
                              "currency",
                              "isLocked",
                              "normalType",
                              "title",
                              "type"
                            ]
                          }
                        },
                        "_id": {
                          "type": "object",
                          "properties": {}
                        },
                        "reservationId": {
                          "type": "string"
                        },
                        "fareAccommodationAdjustment": {
                          "type": "number"
                        },
                        "fareAccommodationDiscount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "fareAccommodation": {
                          "type": "number"
                        },
                        "fareAccommodationAdjusted": {
                          "type": "number"
                        },
                        "fareCleaning": {
                          "type": "number"
                        },
                        "hostServiceFee": {
                          "type": "number"
                        },
                        "hostServiceFeeTax": {
                          "type": "number"
                        },
                        "hostServiceFeeIncTax": {
                          "type": "number"
                        },
                        "subTotalPrice": {
                          "type": "number"
                        },
                        "hostPayout": {
                          "type": "number"
                        },
                        "hostPayoutUsd": {
                          "type": "number"
                        },
                        "totalTaxes": {
                          "type": "number"
                        },
                        "payments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "totalRefunded": {
                          "type": "number"
                        },
                        "totalPaid": {
                          "type": "number"
                        },
                        "paymentsDue": {
                          "type": "number"
                        },
                        "balanceDue": {
                          "type": "number"
                        },
                        "isFullyPaid": {
                          "type": "boolean"
                        },
                        "settingsSnapshot": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "invoiceItems",
                        "_id",
                        "reservationId",
                        "fareAccommodationAdjustment",
                        "fareAccommodationDiscount",
                        "currency",
                        "fareAccommodation",
                        "fareAccommodationAdjusted",
                        "fareCleaning",
                        "hostServiceFee",
                        "hostServiceFeeTax",
                        "hostServiceFeeIncTax",
                        "subTotalPrice",
                        "hostPayout",
                        "hostPayoutUsd",
                        "totalTaxes",
                        "payments",
                        "totalRefunded",
                        "totalPaid",
                        "paymentsDue",
                        "balanceDue",
                        "isFullyPaid",
                        "settingsSnapshot"
                      ]
                    },
                    "guestsCount": {
                      "type": "number"
                    },
                    "numberOfGuests": {
                      "type": "object",
                      "properties": {
                        "numberOfChildren": {
                          "type": "number",
                          "description": "Number of children",
                          "example": 1
                        },
                        "numberOfInfants": {
                          "type": "number",
                          "description": "Number of infants",
                          "example": 1
                        },
                        "numberOfPets": {
                          "type": "number",
                          "description": "Number of pets",
                          "example": 1
                        },
                        "numberOfAdults": {
                          "type": "number",
                          "description": "Number of adults",
                          "example": 1
                        }
                      },
                      "required": [
                        "numberOfAdults"
                      ]
                    }
                  },
                  "required": [
                    "reservationId",
                    "money",
                    "guestsCount",
                    "numberOfGuests"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "422": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "500": {
            "description": "Indicates server-side error while processing the request"
          }
        },
        "tags": [
          "Reservations Open Api [Beta]"
        ]
      }
    },
    "/reservations-v3/{reservationId}/custom-fields": {
      "put": {
        "operationId": "ReservationsOpenApiController_updateReservationCustomFields",
        "summary": "Update reservation's Custom Fields",
        "description": "Edit the values of any custom fields on an existing reservation.",
        "parameters": [
          {
            "name": "reservationId",
            "required": true,
            "in": "path",
            "description": "The Guesty reservation ID",
            "example": "5f92cbf10cf217478ba93561",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customFields": {
                    "description": "Custom fields of the reservation",
                    "example": [
                      {
                        "fieldId": "5fa02fa358d2db673e17bc2d",
                        "value": "Including Jacuzzi"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fieldId": {
                          "type": "string",
                          "description": "The ID of the custom field",
                          "example": "65fab102a5284d73c6206db0"
                        },
                        "value": {
                          "type": "object",
                          "description": "The custom field value that should assigned",
                          "example": "some custom field value"
                        }
                      },
                      "required": [
                        "fieldId",
                        "value"
                      ]
                    }
                  }
                },
                "required": [
                  "customFields"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reservation Custom Fields Updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reservationId": {
                      "type": "string"
                    },
                    "customFields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "fieldId": {
                            "type": "string"
                          },
                          "value": {
                            "type": "object"
                          }
                        },
                        "required": [
                          "_id",
                          "fieldId",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "reservationId",
                    "customFields"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation error - failed updating custom fields."
          }
        },
        "tags": [
          "Reservations Open Api [Beta]"
        ]
      }
    },
    "/reservations-v3/group/{groupId}": {
      "get": {
        "operationId": "GroupReservationsOpenAPIController_getGroupReservation",
        "summary": "Get group reservation by group id",
        "description": "Get group reservation by group id, including it's sub reservations (up to 25 sub reservations)",
        "parameters": [
          {
            "name": "groupId",
            "required": true,
            "in": "path",
            "description": "The ID of the group reservation to fetch",
            "example": "5f92cbf10cf217478ba93561",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The group reservation has been successfully fetched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groupReservation": {
                      "type": "object"
                    },
                    "subReservations": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "groupReservation",
                    "subReservations"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Group reservation wasnt found."
          }
        },
        "tags": [
          "Group Reservations Open Api [Beta]"
        ]
      }
    },
    "/reservations-v3/group": {
      "post": {
        "operationId": "GroupReservationsOpenAPIController_create",
        "summary": "Create a group reservation",
        "description": "This endpoint allows the creation of a group reservation, based on an array of quotes",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quoteAndRatePlanIds": {
                    "description": "An array of objects containing quote IDs and rate plan IDs",
                    "example": [
                      {
                        "quoteId": "6213b03e7f0ba50032296f4a",
                        "ratePlanId": "default-rateplan-id"
                      },
                      {
                        "quoteId": "6213b03e7f0ba50032296f4b",
                        "ratePlanId": "36ft523e7f0ba500323hf736"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "quoteId": {
                          "type": "string",
                          "description": "The quote ID",
                          "example": "6213b03e7f0ba50032296f4a"
                        },
                        "ratePlanId": {
                          "type": "string",
                          "description": "The rate plan ID",
                          "example": "6213b03e7f0ba50032296f4a"
                        },
                        "status": {
                          "enum": [
                            "confirmed",
                            "reserved",
                            "awaiting_payment",
                            "inquiry",
                            "canceled",
                            "closed",
                            "declined",
                            "expired"
                          ],
                          "type": "string",
                          "example": "reserved",
                          "description": "Status for an individual reservation, if not defined we will use the status of the group"
                        },
                        "booker": {
                          "description": "The booker for specific reservation",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "type": "string",
                                  "description": "The booker ID",
                                  "example": "6213b03e7f0ba50032296f4a"
                                },
                                "fullName": {
                                  "type": "string",
                                  "description": "The booker's full name",
                                  "example": "Full Name"
                                }
                              },
                              "required": [
                                "_id",
                                "fullName"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "quoteId",
                        "ratePlanId"
                      ]
                    }
                  },
                  "name": {
                    "type": "string",
                    "example": "guesty-company-trip"
                  },
                  "source": {
                    "type": "string",
                    "description": "Source of reservation",
                    "example": "Manual"
                  },
                  "status": {
                    "enum": [
                      "confirmed",
                      "reserved",
                      "awaiting_payment",
                      "inquiry",
                      "canceled",
                      "closed",
                      "declined",
                      "expired"
                    ],
                    "type": "string",
                    "example": "reserved"
                  },
                  "reservedUntil": {
                    "enum": [
                      -1,
                      0.5,
                      0.25,
                      0.17,
                      12,
                      24,
                      36,
                      48,
                      72
                    ],
                    "type": "number",
                    "description": "Indicates for how long a reservation is valid after creation (in hours)",
                    "example": 36
                  },
                  "note": {
                    "type": "string",
                    "description": "The reservation notes"
                  },
                  "groupBooker": {
                    "description": "The default booker for group reservation",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "The booker ID",
                            "example": "6213b03e7f0ba50032296f4a"
                          },
                          "fullName": {
                            "type": "string",
                            "description": "The booker's full name",
                            "example": "Full Name"
                          }
                        },
                        "required": [
                          "_id",
                          "fullName"
                        ]
                      }
                    ]
                  },
                  "coupons": {
                    "description": "List of coupons",
                    "example": [
                      "VeryCoolCoupon",
                      "VeryCoolCoupon2"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "chargeMethod": {
                    "enum": [
                      "PER_GROUP",
                      "PER_RESERVATION"
                    ],
                    "type": "string",
                    "default": "PER_GROUP",
                    "example": "PER_RESERVATION"
                  }
                },
                "required": [
                  "quoteAndRatePlanIds",
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The group reservation has been created successfuly",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "example": "df7hf01cnduhdb2125854dj8",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {}
                        }
                      ]
                    },
                    "accountId": {
                      "example": "df7hf01cnduhdb2125854dj8",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {}
                        }
                      ]
                    },
                    "platform": {
                      "type": "string",
                      "example": "direct"
                    },
                    "name": {
                      "type": "string",
                      "example": "guesty-company-trip"
                    },
                    "source": {
                      "type": "string",
                      "example": "manual"
                    },
                    "bookerId": {
                      "type": "string"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "note": {
                      "type": "string"
                    },
                    "confirmationCode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "accountId",
                    "platform",
                    "name",
                    "source",
                    "createdAt",
                    "note",
                    "confirmationCode"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Group reservation creating failed"
          }
        },
        "tags": [
          "Group Reservations Open Api [Beta]"
        ]
      }
    },
    "/quotes/{quoteId}": {
      "get": {
        "operationId": "QuotesOpenApiController_getQuote",
        "summary": "Retrieve a Quote by ID",
        "description": "This endpoint allows retrieval of a specific quote using its unique ID. It is used to fetch details of a previously created quote. If the quote has expired, the endpoint returns an error message indicating that the quote is expired and suggests creating a new quote.",
        "parameters": [
          {
            "name": "quoteId",
            "required": true,
            "in": "path",
            "description": "The unique identifier of the quote being retrieved",
            "example": "df7hf01cnduhdb2125854dj8",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the quote",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "df7hf01cnduhdb2125854dj8"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "reservationId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "valid"
                      ]
                    },
                    "guestsCount": {
                      "type": "number",
                      "example": 1
                    },
                    "channel": {
                      "enum": [
                        "manual_reservations",
                        "owner_reservations",
                        "booking_engine"
                      ],
                      "type": "string"
                    },
                    "source": {
                      "type": "string",
                      "example": "source-fb-for-bi"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "expiresAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "unitTypeId": {
                      "type": "string"
                    },
                    "unitId": {
                      "type": "string"
                    },
                    "unassign": {
                      "type": "boolean"
                    },
                    "checkInDateLocalized": {
                      "type": "string"
                    },
                    "checkOutDateLocalized": {
                      "type": "string"
                    },
                    "rates": {
                      "type": "object"
                    },
                    "bookerId": {
                      "type": "string"
                    },
                    "coupons": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "promotions": {
                      "type": "object"
                    },
                    "alterationPayload": {
                      "type": "object",
                      "properties": {
                        "dates": {
                          "type": "object",
                          "properties": {
                            "checkInDateLocalized": {
                              "type": "string"
                            },
                            "checkOutDateLocalized": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "checkInDateLocalized",
                            "checkOutDateLocalized"
                          ]
                        },
                        "unit": {
                          "type": "object",
                          "properties": {
                            "unitId": {
                              "type": "string"
                            },
                            "unitTypeId": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "unitTypeId"
                          ]
                        },
                        "guestsCount": {
                          "type": "number"
                        },
                        "ratePlanId": {
                          "type": "string"
                        },
                        "reservationId": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "confirmed",
                            "reserved",
                            "awaiting_payment",
                            "inquiry",
                            "canceled",
                            "closed",
                            "declined",
                            "expired"
                          ]
                        },
                        "numberOfGuests": {
                          "type": "object",
                          "properties": {
                            "numberOfChildren": {
                              "type": "number"
                            },
                            "numberOfInfants": {
                              "type": "number"
                            },
                            "numberOfAdults": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "numberOfAdults"
                          ]
                        }
                      },
                      "required": [
                        "reservationId"
                      ]
                    },
                    "numberOfGuests": {
                      "type": "object",
                      "properties": {
                        "numberOfChildren": {
                          "type": "number",
                          "description": "Number of children",
                          "example": 1
                        },
                        "numberOfInfants": {
                          "type": "number",
                          "description": "Number of infants",
                          "example": 1
                        },
                        "numberOfPets": {
                          "type": "number",
                          "description": "Number of pets",
                          "example": 1
                        },
                        "numberOfAdults": {
                          "type": "number",
                          "description": "Number of adults",
                          "example": 1
                        }
                      },
                      "required": [
                        "numberOfAdults"
                      ]
                    },
                    "pointOfSale": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "accountId",
                    "status",
                    "guestsCount",
                    "channel",
                    "source",
                    "createdAt",
                    "expiresAt",
                    "unitTypeId",
                    "checkInDateLocalized",
                    "checkOutDateLocalized",
                    "rates",
                    "coupons",
                    "promotions"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Returned if the quoteId is missing or malformed"
          },
          "404": {
            "description": "Returned if the quote with the specified ID does not exist"
          },
          "410": {
            "description": "Returned if the quote has expired. The error message should indicate \"Quote is expired, please create a new quote.\""
          }
        },
        "tags": [
          "Quotes Open Api [Beta]"
        ]
      }
    },
    "/quotes": {
      "post": {
        "operationId": "QuotesOpenApiController_create",
        "summary": "Create a Quote",
        "description": "This endpoint allows the creation of a price quote for a reservation. It requires details such as the listing ID, check-in and check-out dates, and guest count. The response includes detailed information about the quote, including rates, promotions, and applicable fees.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkInDateLocalized": {
                    "type": "string",
                    "description": "Localized to listing timezone reservation check-in date (YYYY-MM-DD)",
                    "example": "2024-01-04"
                  },
                  "checkOutDateLocalized": {
                    "type": "string",
                    "description": "Localized to listing timezone reservation checkout date (YYYY-MM-DD)",
                    "example": "2024-01-05"
                  },
                  "listingId": {
                    "type": "string",
                    "description": "Guesty listing ID",
                    "example": "6213b03e7f0ba50032296f4a"
                  },
                  "source": {
                    "type": "string",
                    "description": "Define the source for getting an updated price quote",
                    "example": "manual"
                  },
                  "guestsCount": {
                    "type": "number",
                    "description": "Number of guests to be included in the quote",
                    "minimum": 1,
                    "example": 2
                  },
                  "numberOfGuests": {
                    "description": "Keeps information on the number of guests",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "numberOfChildren": {
                            "type": "number",
                            "description": "Number of children in the reservation. It can be zero"
                          },
                          "numberOfInfants": {
                            "type": "number",
                            "description": "Number of infants in the reservation. It can be zero"
                          },
                          "numberOfAdults": {
                            "type": "number",
                            "description": "Count of adults, must be > 0"
                          }
                        }
                      }
                    ]
                  },
                  "ignoreCalendar": {
                    "type": "boolean",
                    "description": "The system will check calendar availability and decline (401) if unavailable unless this flag is set to true"
                  },
                  "ignoreTerms": {
                    "type": "boolean",
                    "description": "The system will ensure the reservation accords with the terms (min, max nights, any other terms) of the property and will decline(401) if it is. To override, set this flag to true"
                  },
                  "ignoreBlocks": {
                    "type": "boolean",
                    "description": "Set this flag to true to ignore existing flexible blocks (advance notice, preparation time, etc)"
                  },
                  "couponCode": {
                    "type": "string",
                    "description": "Coupon code to be applied to the quote",
                    "example": "OOM20-DISCOUNT"
                  }
                },
                "required": [
                  "checkInDateLocalized",
                  "checkOutDateLocalized",
                  "listingId",
                  "source",
                  "guestsCount"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "df7hf01cnduhdb2125854dj8"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "reservationId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "valid"
                      ]
                    },
                    "guestsCount": {
                      "type": "number",
                      "example": 1
                    },
                    "channel": {
                      "enum": [
                        "manual_reservations",
                        "owner_reservations",
                        "booking_engine"
                      ],
                      "type": "string"
                    },
                    "source": {
                      "type": "string",
                      "example": "source-fb-for-bi"
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "expiresAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "unitTypeId": {
                      "type": "string"
                    },
                    "unitId": {
                      "type": "string"
                    },
                    "unassign": {
                      "type": "boolean"
                    },
                    "checkInDateLocalized": {
                      "type": "string"
                    },
                    "checkOutDateLocalized": {
                      "type": "string"
                    },
                    "rates": {
                      "type": "object"
                    },
                    "bookerId": {
                      "type": "string"
                    },
                    "coupons": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "promotions": {
                      "type": "object"
                    },
                    "alterationPayload": {
                      "type": "object",
                      "properties": {
                        "dates": {
                          "type": "object",
                          "properties": {
                            "checkInDateLocalized": {
                              "type": "string"
                            },
                            "checkOutDateLocalized": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "checkInDateLocalized",
                            "checkOutDateLocalized"
                          ]
                        },
                        "unit": {
                          "type": "object",
                          "properties": {
                            "unitId": {
                              "type": "string"
                            },
                            "unitTypeId": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "unitTypeId"
                          ]
                        },
                        "guestsCount": {
                          "type": "number"
                        },
                        "ratePlanId": {
                          "type": "string"
                        },
                        "reservationId": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "confirmed",
                            "reserved",
                            "awaiting_payment",
                            "inquiry",
                            "canceled",
                            "closed",
                            "declined",
                            "expired"
                          ]
                        },
                        "numberOfGuests": {
                          "type": "object",
                          "properties": {
                            "numberOfChildren": {
                              "type": "number"
                            },
                            "numberOfInfants": {
                              "type": "number"
                            },
                            "numberOfAdults": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "numberOfAdults"
                          ]
                        }
                      },
                      "required": [
                        "reservationId"
                      ]
                    },
                    "numberOfGuests": {
                      "type": "object",
                      "properties": {
                        "numberOfChildren": {
                          "type": "number",
                          "description": "Number of children",
                          "example": 1
                        },
                        "numberOfInfants": {
                          "type": "number",
                          "description": "Number of infants",
                          "example": 1
                        },
                        "numberOfPets": {
                          "type": "number",
                          "description": "Number of pets",
                          "example": 1
                        },
                        "numberOfAdults": {
                          "type": "number",
                          "description": "Number of adults",
                          "example": 1
                        }
                      },
                      "required": [
                        "numberOfAdults"
                      ]
                    },
                    "pointOfSale": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "_id",
                    "accountId",
                    "status",
                    "guestsCount",
                    "channel",
                    "source",
                    "createdAt",
                    "expiresAt",
                    "unitTypeId",
                    "checkInDateLocalized",
                    "checkOutDateLocalized",
                    "rates",
                    "coupons",
                    "promotions"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Returned if required fields are missing or there is a validation error in the request body"
          },
          "500": {
            "description": "Indicates server-side error while processing the request"
          }
        },
        "tags": [
          "Quotes Open Api [Beta]"
        ]
      }
    },
    "/quotes/multiple": {
      "post": {
        "operationId": "QuotesOpenApiController_createMultiple",
        "summary": "Create multiple quotes for reservation",
        "description": "This endpoint allows the creation of multiple price quotes for a reservation.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quotes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "checkInDateLocalized": {
                          "type": "string",
                          "description": "Booker's check-in date",
                          "example": "2021-01-04"
                        },
                        "checkOutDateLocalized": {
                          "type": "string",
                          "description": "Booker's check-out date",
                          "example": "2021-01-05"
                        },
                        "unitId": {
                          "type": "string",
                          "description": "The unit ID (MTL Child or Single listing)",
                          "example": "6213b03e7f0ba50032296f4a"
                        },
                        "unitTypeId": {
                          "type": "string",
                          "description": "The unit type ID (MTL Parent or Single listing)",
                          "example": "6213b03e7f0ba50032296f4a"
                        },
                        "guestsCount": {
                          "type": "number",
                          "description": "Count of guests",
                          "minimum": 1,
                          "example": 2
                        },
                        "bookerId": {
                          "type": "string",
                          "description": "The booker ID",
                          "example": "1e384c9fc2700d002670b61c"
                        },
                        "source": {
                          "type": "string",
                          "description": "Source of the inquiry",
                          "example": "fb-campaign"
                        },
                        "channel": {
                          "type": "string",
                          "description": "The channel that sent the inquiry",
                          "enum": [
                            "manual_reservations",
                            "owner_reservations",
                            "booking_engine"
                          ]
                        },
                        "numberOfGuests": {
                          "description": "Keeps information on the number of guests",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "numberOfChildren": {
                                  "type": "number",
                                  "description": "Number of children in the reservation. It can be zero"
                                },
                                "numberOfInfants": {
                                  "type": "number",
                                  "description": "Number of infants in the reservation. It can be zero"
                                },
                                "numberOfAdults": {
                                  "type": "number",
                                  "description": "Count of adults, must be > 0"
                                }
                              }
                            }
                          ]
                        },
                        "applyPromotions": {
                          "type": "boolean",
                          "description": "Whether to apply promotions",
                          "example": false,
                          "default": true
                        },
                        "count": {
                          "type": "number",
                          "description": "The number of inquiries to create",
                          "example": 2
                        }
                      },
                      "required": [
                        "checkInDateLocalized",
                        "checkOutDateLocalized",
                        "unitTypeId",
                        "source",
                        "applyPromotions",
                        "count"
                      ]
                    }
                  }
                },
                "required": [
                  "quotes"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The quotes have been successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "unitTypeId": {
                            "type": "string"
                          },
                          "unitId": {
                            "type": "string"
                          },
                          "inquiryId": {
                            "type": "string"
                          },
                          "errorMessage": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "unitTypeId",
                          "unitId",
                          "inquiryId",
                          "errorMessage"
                        ]
                      }
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "df7hf01cnduhdb2125854dj8"
                          },
                          "accountId": {
                            "type": "string"
                          },
                          "reservationId": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "valid"
                            ]
                          },
                          "guestsCount": {
                            "type": "number",
                            "example": 1
                          },
                          "channel": {
                            "enum": [
                              "manual_reservations",
                              "owner_reservations",
                              "booking_engine"
                            ],
                            "type": "string"
                          },
                          "source": {
                            "type": "string",
                            "example": "source-fb-for-bi"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "expiresAt": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "unitTypeId": {
                            "type": "string"
                          },
                          "unitId": {
                            "type": "string"
                          },
                          "unassign": {
                            "type": "boolean"
                          },
                          "checkInDateLocalized": {
                            "type": "string"
                          },
                          "checkOutDateLocalized": {
                            "type": "string"
                          },
                          "rates": {
                            "type": "object"
                          },
                          "bookerId": {
                            "type": "string"
                          },
                          "coupons": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "promotions": {
                            "type": "object"
                          },
                          "alterationPayload": {
                            "type": "object",
                            "properties": {
                              "dates": {
                                "type": "object",
                                "properties": {
                                  "checkInDateLocalized": {
                                    "type": "string"
                                  },
                                  "checkOutDateLocalized": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "checkInDateLocalized",
                                  "checkOutDateLocalized"
                                ]
                              },
                              "unit": {
                                "type": "object",
                                "properties": {
                                  "unitId": {
                                    "type": "string"
                                  },
                                  "unitTypeId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "unitTypeId"
                                ]
                              },
                              "guestsCount": {
                                "type": "number"
                              },
                              "ratePlanId": {
                                "type": "string"
                              },
                              "reservationId": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "confirmed",
                                  "reserved",
                                  "awaiting_payment",
                                  "inquiry",
                                  "canceled",
                                  "closed",
                                  "declined",
                                  "expired"
                                ]
                              },
                              "numberOfGuests": {
                                "type": "object",
                                "properties": {
                                  "numberOfChildren": {
                                    "type": "number"
                                  },
                                  "numberOfInfants": {
                                    "type": "number"
                                  },
                                  "numberOfAdults": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "numberOfAdults"
                                ]
                              }
                            },
                            "required": [
                              "reservationId"
                            ]
                          },
                          "numberOfGuests": {
                            "type": "object",
                            "properties": {
                              "numberOfChildren": {
                                "type": "number",
                                "description": "Number of children",
                                "example": 1
                              },
                              "numberOfInfants": {
                                "type": "number",
                                "description": "Number of infants",
                                "example": 1
                              },
                              "numberOfPets": {
                                "type": "number",
                                "description": "Number of pets",
                                "example": 1
                              },
                              "numberOfAdults": {
                                "type": "number",
                                "description": "Number of adults",
                                "example": 1
                              }
                            },
                            "required": [
                              "numberOfAdults"
                            ]
                          },
                          "pointOfSale": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "_id",
                          "accountId",
                          "status",
                          "guestsCount",
                          "channel",
                          "source",
                          "createdAt",
                          "expiresAt",
                          "unitTypeId",
                          "checkInDateLocalized",
                          "checkOutDateLocalized",
                          "rates",
                          "coupons",
                          "promotions"
                        ]
                      }
                    }
                  },
                  "required": [
                    "errors",
                    "results"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Multiple quote creation failed."
          }
        },
        "tags": [
          "Quotes Open Api [Beta]"
        ]
      }
    },
    "/reviews": {
      "get": {
        "operationId": "ReviewController_getReviews",
        "summary": "Retrieve reviews sorted descending by last update time",
        "description": "Retrieve reviews sorted descending by last update time",
        "parameters": [
          {
            "name": "externalReviewId",
            "required": false,
            "in": "query",
            "description": "Channel Review ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End date-time, less than equal to updatedAt date-time of the review",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start date-time, greater than equal to updatedAt date-time of the review",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "externalReservationId",
            "required": false,
            "in": "query",
            "description": "Channel Reservation ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reservationId",
            "required": false,
            "in": "query",
            "description": "Guesty Reservation ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listingId",
            "required": false,
            "in": "query",
            "description": "Guesty Listing ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channelId",
            "required": false,
            "in": "query",
            "description": "Channel",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Reviews Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isRawResponse": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object"
                    },
                    "skip": {
                      "type": "number"
                    },
                    "limit": {
                      "type": "number"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "data": {
                          "type": "object"
                        }
                      },
                      "required": [
                        "code",
                        "message",
                        "data"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Review"
        ]
      },
      "put": {
        "operationId": "ReviewController_upsertReview",
        "summary": "Publish a review by channel",
        "description": "Publish a review by channel",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "channelId": {
                    "enum": [
                      "bookingCom",
                      "airbnb2",
                      "homeaway2"
                    ],
                    "type": "string",
                    "format": "string",
                    "example": "bookingCom"
                  },
                  "rawReview": {
                    "type": "object"
                  },
                  "metaData": {
                    "type": "object"
                  }
                },
                "required": [
                  "channelId",
                  "rawReview"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upsert Review Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object",
                      "format": "string"
                    },
                    "accountId": {
                      "type": "object",
                      "format": "string"
                    },
                    "externalReviewId": {
                      "type": "string",
                      "format": "string"
                    },
                    "channelId": {
                      "enum": [
                        "bookingCom",
                        "airbnb2",
                        "homeaway2"
                      ],
                      "type": "string",
                      "format": "string",
                      "example": "bookingCom"
                    },
                    "subListingId": {
                      "type": "object",
                      "format": "string"
                    },
                    "listingId": {
                      "type": "object",
                      "format": "string"
                    },
                    "complexId": {
                      "type": "object",
                      "format": "string"
                    },
                    "externalListingId": {
                      "type": "string",
                      "format": "string"
                    },
                    "externalComplexId": {
                      "type": "string",
                      "format": "string"
                    },
                    "reservationId": {
                      "type": "object",
                      "format": "string"
                    },
                    "externalReservationId": {
                      "type": "string",
                      "format": "string"
                    },
                    "guestId": {
                      "type": "object",
                      "format": "string"
                    },
                    "createdAt": {
                      "format": "YYYY-MM-DD",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "YYYY-MM-DD",
                      "type": "string"
                    },
                    "createdAtGuesty": {
                      "format": "YYYY-MM-DD",
                      "type": "string"
                    },
                    "updatedAtGuesty": {
                      "format": "YYYY-MM-DD",
                      "type": "string"
                    },
                    "rawReview": {
                      "type": "object"
                    },
                    "reviewReplies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "enum": [
                              "PENDING",
                              "FAILED",
                              "COMPLETED",
                              "NOT_FOUND"
                            ],
                            "type": "string"
                          },
                          "reviewReply": {
                            "type": "string"
                          },
                          "replyAt": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "reviewReply",
                          "replyAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "_id",
                    "accountId",
                    "externalReviewId",
                    "channelId",
                    "listingId",
                    "externalListingId",
                    "externalReservationId",
                    "rawReview"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Review"
        ]
      }
    },
    "/reviews/listings-average": {
      "get": {
        "operationId": "ReviewController_getListingsAverageReview",
        "summary": "Retrieve Average reviews score by Listings IDs",
        "description": "Retrieve Average reviews score by Listings IDs",
        "parameters": [
          {
            "name": "listingIds",
            "required": true,
            "in": "query",
            "description": "Guesty Listing IDs array",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Average Reviews Score Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "listingId": {
                      "type": "string"
                    },
                    "avg": {
                      "type": "number"
                    },
                    "total": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "listingId",
                    "avg",
                    "total"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Review"
        ]
      }
    },
    "/reviews/{reviewId}": {
      "get": {
        "operationId": "ReviewController_getReview",
        "summary": "Retrieve a review",
        "description": "Retrieve a review",
        "parameters": [
          {
            "name": "reviewId",
            "required": true,
            "in": "path",
            "description": "Guesty Review ID",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Get Review Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object",
                      "format": "string"
                    },
                    "accountId": {
                      "type": "object",
                      "format": "string"
                    },
                    "externalReviewId": {
                      "type": "string",
                      "format": "string"
                    },
                    "channelId": {
                      "enum": [
                        "bookingCom",
                        "airbnb2",
                        "homeaway2"
                      ],
                      "type": "string",
                      "format": "string",
                      "example": "bookingCom"
                    },
                    "subListingId": {
                      "type": "object",
                      "format": "string"
                    },
                    "listingId": {
                      "type": "object",
                      "format": "string"
                    },
                    "complexId": {
                      "type": "object",
                      "format": "string"
                    },
                    "externalListingId": {
                      "type": "string",
                      "format": "string"
                    },
                    "externalComplexId": {
                      "type": "string",
                      "format": "string"
                    },
                    "reservationId": {
                      "type": "object",
                      "format": "string"
                    },
                    "externalReservationId": {
                      "type": "string",
                      "format": "string"
                    },
                    "guestId": {
                      "type": "object",
                      "format": "string"
                    },
                    "createdAt": {
                      "format": "YYYY-MM-DD",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "YYYY-MM-DD",
                      "type": "string"
                    },
                    "createdAtGuesty": {
                      "format": "YYYY-MM-DD",
                      "type": "string"
                    },
                    "updatedAtGuesty": {
                      "format": "YYYY-MM-DD",
                      "type": "string"
                    },
                    "rawReview": {
                      "type": "object"
                    },
                    "reviewReplies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "enum": [
                              "PENDING",
                              "FAILED",
                              "COMPLETED",
                              "NOT_FOUND"
                            ],
                            "type": "string"
                          },
                          "reviewReply": {
                            "type": "string"
                          },
                          "replyAt": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "reviewReply",
                          "replyAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "_id",
                    "accountId",
                    "externalReviewId",
                    "channelId",
                    "listingId",
                    "externalListingId",
                    "externalReservationId",
                    "rawReview"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Review"
        ]
      }
    },
    "/reviews/{reviewId}/reply": {
      "put": {
        "operationId": "ReviewController_upsertReviewReply",
        "summary": "Publish review reply to channel",
        "description": "Publish reply to channel and store in DB. Airbnb and Booking.com allow to publish only one reply per review. Airbnb allows to update reply. Booking.com does not allow to update reply",
        "parameters": [
          {
            "name": "reviewId",
            "required": true,
            "in": "path",
            "description": "Guesty Review ID",
            "schema": {}
          }
        ],
        "requestBody": {
          "required": true,
          "description": "The reply text",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reviewReply": {
                    "type": "string",
                    "format": "string"
                  }
                },
                "required": [
                  "reviewReply"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upsert Review Reply Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object",
                      "format": "string"
                    },
                    "accountId": {
                      "type": "object",
                      "format": "string"
                    },
                    "externalReviewId": {
                      "type": "string",
                      "format": "string"
                    },
                    "channelId": {
                      "enum": [
                        "bookingCom",
                        "airbnb2",
                        "homeaway2"
                      ],
                      "type": "string",
                      "format": "string",
                      "example": "bookingCom"
                    },
                    "subListingId": {
                      "type": "object",
                      "format": "string"
                    },
                    "listingId": {
                      "type": "object",
                      "format": "string"
                    },
                    "complexId": {
                      "type": "object",
                      "format": "string"
                    },
                    "externalListingId": {
                      "type": "string",
                      "format": "string"
                    },
                    "externalComplexId": {
                      "type": "string",
                      "format": "string"
                    },
                    "reservationId": {
                      "type": "object",
                      "format": "string"
                    },
                    "externalReservationId": {
                      "type": "string",
                      "format": "string"
                    },
                    "guestId": {
                      "type": "object",
                      "format": "string"
                    },
                    "createdAt": {
                      "format": "YYYY-MM-DD",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "YYYY-MM-DD",
                      "type": "string"
                    },
                    "createdAtGuesty": {
                      "format": "YYYY-MM-DD",
                      "type": "string"
                    },
                    "updatedAtGuesty": {
                      "format": "YYYY-MM-DD",
                      "type": "string"
                    },
                    "rawReview": {
                      "type": "object"
                    },
                    "reviewReplies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "enum": [
                              "PENDING",
                              "FAILED",
                              "COMPLETED",
                              "NOT_FOUND"
                            ],
                            "type": "string"
                          },
                          "reviewReply": {
                            "type": "string"
                          },
                          "replyAt": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "reviewReply",
                          "replyAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "_id",
                    "accountId",
                    "externalReviewId",
                    "channelId",
                    "listingId",
                    "externalListingId",
                    "externalReservationId",
                    "rawReview"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Review"
        ]
      }
    },
    "/rm-los-calendar-service/unitType/{unitTypeId}/calendar": {
      "get": {
        "operationId": "CalendarController_get",
        "summary": "Get LOS calendar",
        "description": "Get LOS calendar",
        "parameters": [
          {
            "name": "unitTypeId",
            "required": true,
            "in": "path",
            "description": "unit type id",
            "example": "62d7d58327dba40034e9670e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "example": "2023-01-23",
            "description": "LOS calendar search start date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "example": "2023-01-29",
            "description": "LOS calendar search end date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "example": 10,
            "description": "limit of received data",
            "schema": {}
          },
          {
            "name": "skip",
            "required": true,
            "in": "query",
            "example": 1,
            "description": "skip number",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "LOS calendar has been received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "calendar": {
                      "description": "los calendar",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "date": {
                              "format": "date-time",
                              "type": "string",
                              "description": "date of calendar",
                              "example": "2022-09-29T19:59:18+08:00"
                            },
                            "adultOccupancy": {
                              "type": "number",
                              "description": "adult occupancy",
                              "example": 2
                            },
                            "losPrice": {
                              "type": "object",
                              "additionalProperties": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": "length of stay price",
                              "example": {
                                "1": 100,
                                "2": 90
                              }
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string",
                              "description": "date when metadata was created",
                              "example": "2022-09-29T19:59:18+08:00"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string",
                              "description": "date when metadata was updated",
                              "example": "2022-09-29T19:59:18+08:00"
                            }
                          },
                          "required": [
                            "date",
                            "adultOccupancy",
                            "losPrice",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    },
                    "requestId": {
                      "type": "string",
                      "description": "request id",
                      "example": "63358a07d027853ee92eede0"
                    },
                    "unitTypeId": {
                      "type": "string",
                      "description": "unitType id",
                      "example": "63358a07d027853ee92eede0"
                    },
                    "skip": {
                      "type": "number",
                      "description": "how much page to skip",
                      "example": 3
                    },
                    "limit": {
                      "type": "number",
                      "description": "max amount of items",
                      "example": 100
                    }
                  },
                  "required": [
                    "calendar",
                    "requestId",
                    "unitTypeId",
                    "skip",
                    "limit"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "The feature `LOS calendar` is turned off for this client"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Revenue management"
        ]
      },
      "put": {
        "operationId": "CalendarController_upsert",
        "summary": "Upsert LOS calendar",
        "description": "Upsert LOS calendar",
        "parameters": [
          {
            "name": "unitTypeId",
            "required": true,
            "in": "path",
            "description": "unit type id",
            "example": "62d7d58327dba40034e9670e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "LOS calendar upsert dto",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "startDate": {
                      "format": "date-time",
                      "type": "string",
                      "description": "start date of upserted calendar interval",
                      "example": "2022-09-29"
                    },
                    "endDate": {
                      "format": "date-time",
                      "type": "string",
                      "description": "end date of upserted calendar interval",
                      "example": "2022-10-11"
                    },
                    "lengthOfStay": {
                      "type": "number",
                      "description": "length of reservation",
                      "example": 10
                    },
                    "price": {
                      "type": "number",
                      "description": "price for this length of reservation",
                      "example": 100
                    },
                    "adultOccupancy": {
                      "type": "number",
                      "description": "adult occupancy for this length of reservation",
                      "example": 2
                    }
                  },
                  "required": [
                    "startDate",
                    "endDate",
                    "lengthOfStay",
                    "price",
                    "adultOccupancy"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "LOS calendar has been upserted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unitTypeId": {
                      "type": "string",
                      "description": "unitType id",
                      "example": "63358a07d027853ee92eede0"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "request id",
                      "example": "63358a07d027853ee92eede0"
                    }
                  },
                  "required": [
                    "unitTypeId",
                    "requestId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "The feature `LOS calendar` is turned off for this client"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Revenue management"
        ]
      }
    },
    "/rm-los-calendar-service/unitType/{unitTypeId}/calendarMetadata": {
      "get": {
        "operationId": "CalendarMetadataController_get",
        "summary": "Get LOS calendar metadata",
        "description": "Get LOS calendar metadata",
        "parameters": [
          {
            "name": "unitTypeId",
            "required": true,
            "in": "path",
            "description": "unit type id",
            "example": "62d7d58327dba40034e9670e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "LOS calendar metadata has been received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "calendarMetadata": {
                      "description": "calendar metadata",
                      "example": {
                        "status": "ACTIVE",
                        "unitTypeId": "63358a07d027853ee92eede0"
                      },
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "unitTypeId": {
                              "type": "string",
                              "description": "calendar unitTypeId",
                              "example": "63358a07d027853ee92eede0"
                            },
                            "status": {
                              "enum": [
                                "ACTIVE",
                                "IN_ACTIVE"
                              ],
                              "type": "string",
                              "description": "calendar status",
                              "example": "ACTIVE"
                            }
                          },
                          "required": [
                            "unitTypeId",
                            "status"
                          ]
                        }
                      ]
                    },
                    "requestId": {
                      "type": "string",
                      "description": "request id",
                      "example": "63358a07d027853ee92eede0"
                    }
                  },
                  "required": [
                    "calendarMetadata",
                    "requestId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Сlient unauthorized"
          },
          "403": {
            "description": "The feature `LOS calendar` is turned off for this client"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Revenue management"
        ]
      },
      "put": {
        "operationId": "CalendarMetadataController_upsert",
        "summary": "Upsert LOS calendar metadata",
        "description": "Upsert LOS calendar metadata",
        "parameters": [
          {
            "name": "unitTypeId",
            "required": true,
            "in": "path",
            "description": "unit type id",
            "example": "62d7d58327dba40034e9670e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "LOS calendar metadata upsert dto",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "enum": [
                        "ACTIVE",
                        "IN_ACTIVE"
                      ],
                      "type": "string",
                      "description": "calendar status",
                      "example": "ACTIVE"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "LOS Calendar metadata has been upserted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unitTypeId": {
                      "type": "string",
                      "description": "unitType id",
                      "example": "63358a07d027853ee92eede0"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "request id",
                      "example": "63358a07d027853ee92eede0"
                    }
                  },
                  "required": [
                    "unitTypeId",
                    "requestId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "The feature `LOS calendar` is turned off for this client"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Revenue management"
        ]
      }
    },
    "/rm-promotions/promotions": {
      "get": {
        "operationId": "PromotionController_getList",
        "summary": "Get promotion list by account id.",
        "description": "Get promotion list by account id.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get promotion list by account id."
          },
          "400": {
            "description": "Validation error."
          },
          "401": {
            "description": "Authorization error."
          },
          "403": {
            "description": "Feature is not enabled for this accountId."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "tags": [
          "Promotions Open Api"
        ]
      }
    },
    "/rm-promotions/promotions/{promotionId}/assign": {
      "put": {
        "operationId": "PromotionController_assignListings",
        "summary": "Assign listings to promotion.",
        "description": "Assign listings to promotion.",
        "parameters": [
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "example": "63ee4b7e459ca31532f",
            "description": "promotion id.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                },
                "required": [
                  "listings"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request for assigning listings has been accepted and is in the process of being processed."
          },
          "400": {
            "description": "Validation error."
          },
          "401": {
            "description": "Authorization error."
          },
          "403": {
            "description": "Feature is not enabled for this accountId."
          },
          "404": {
            "description": "Promotion was not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "tags": [
          "Promotions Open Api"
        ]
      }
    },
    "/rm-promotions/promotions/{promotionId}/unassign": {
      "put": {
        "operationId": "PromotionController_unassignListings",
        "summary": "Unassign listings from promotion.",
        "description": "Unassign listings from promotion.",
        "parameters": [
          {
            "name": "promotionId",
            "required": true,
            "in": "path",
            "example": "63ee4b7e459ca31532f",
            "description": "promotion id.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                },
                "required": [
                  "listings"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request for unassigning listings has been accepted and is in the process of being processed."
          },
          "400": {
            "description": "Validation error."
          },
          "401": {
            "description": "Authorization error."
          },
          "403": {
            "description": "Feature is not enabled for this accountId."
          },
          "404": {
            "description": "Promotion was not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "tags": [
          "Promotions Open Api"
        ]
      }
    },
    "/rm-rate-plans-ext/rate-plans": {
      "get": {
        "operationId": "RatePlanController_getAll",
        "summary": "Get All Rate Plans",
        "description": "Retrieves all rate plans by channel.",
        "parameters": [
          {
            "name": "skip",
            "required": true,
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "example": 1,
            "schema": {
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "description": "The numbers of items to return.",
            "example": 10,
            "schema": {
              "default": 25,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": true,
            "in": "query",
            "example": "name",
            "description": "The field by which to sort the items returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channelId",
            "required": true,
            "in": "query",
            "example": "bookingCom",
            "description": "The channel to which the rate plans apply.",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "requestId": {
                      "type": "string"
                    },
                    "ratePlans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "5fae51c4fdff570029b147e8",
                            "description": "id"
                          },
                          "accountId": {
                            "type": "string",
                            "example": "5213a2d206112710005d96ff",
                            "description": "account id"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "independent"
                            ],
                            "example": "independent",
                            "description": "type"
                          },
                          "name": {
                            "type": "string",
                            "example": "My rate plan",
                            "description": "name"
                          },
                          "description": {
                            "type": "string",
                            "example": "My rate plan description",
                            "description": "description"
                          },
                          "cancellationPolicy": {
                            "nullable": true,
                            "enum": [
                              "strict",
                              "strict_60",
                              "strict_90",
                              "super_strict",
                              "moderate",
                              "semi_moderate",
                              "semi_flexible",
                              "firm",
                              "flex",
                              "free"
                            ],
                            "type": "string",
                            "example": "firm",
                            "description": "cancellationPolicy"
                          },
                          "cancellationFee": {
                            "nullable": true,
                            "enum": [
                              "FIRST_NIGHT",
                              "50%_TOTAL_PRICE",
                              "TOTAL_PRICE",
                              100,
                              50,
                              0
                            ],
                            "type": "string",
                            "example": 50,
                            "description": "cancellationFee"
                          },
                          "mealPlans": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "enum": [
                                [
                                  "breakfast",
                                  "lunch",
                                  "dinner",
                                  "all_inclusive"
                                ]
                              ]
                            },
                            "example": [
                              "all_inclusive"
                            ],
                            "description": "mealPlans"
                          },
                          "availabilityRules": {
                            "example": {
                              "advanceNotice": 10,
                              "bookingWindow": 20
                            },
                            "description": "availabilityRules",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "advanceNotice": {
                                    "type": "number",
                                    "description": "advance notice",
                                    "example": 1
                                  },
                                  "bookingWindow": {
                                    "type": "number",
                                    "description": "booking window",
                                    "example": 3
                                  },
                                  "dateRange": {
                                    "description": "date range",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "to": {
                                            "format": "date-time",
                                            "type": "string",
                                            "description": "to date"
                                          },
                                          "from": {
                                            "format": "date-time",
                                            "type": "string",
                                            "description": "from date"
                                          },
                                          "repeatedDays": {
                                            "description": "repeated days",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "0": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  },
                                                  "1": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  },
                                                  "2": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  },
                                                  "3": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  },
                                                  "4": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  },
                                                  "5": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  },
                                                  "6": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "0",
                                                  "1",
                                                  "2",
                                                  "3",
                                                  "4",
                                                  "5",
                                                  "6"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "to",
                                          "from",
                                          "repeatedDays"
                                        ]
                                      }
                                    ]
                                  },
                                  "restrictedDates": {
                                    "description": "restricted dates",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          "pricingModel": {
                            "type": "string",
                            "enum": [
                              "nightly_rate"
                            ],
                            "example": "nightly_rate",
                            "description": "pricingModel"
                          },
                          "channelSync": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "bookingCom",
                                "manual_reservations",
                                "booking_engine"
                              ]
                            },
                            "example": [
                              "bookingCom"
                            ],
                            "description": "channelSync"
                          },
                          "active": {
                            "type": "boolean",
                            "example": true,
                            "description": "is active"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string",
                            "example": "2023-12-01T04:09:27.335Z",
                            "description": "createdAt"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string",
                            "example": "2023-12-01T04:09:27.335Z",
                            "description": "updatedAt"
                          }
                        },
                        "required": [
                          "_id",
                          "accountId",
                          "type",
                          "name",
                          "pricingModel",
                          "active",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "count": {
                      "type": "number"
                    },
                    "limit": {
                      "type": "number"
                    },
                    "skip": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "requestId",
                    "ratePlans",
                    "count",
                    "limit",
                    "skip"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "Access is forbidden for this client"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Open Api Rate Plan CRUD v1"
        ]
      },
      "post": {
        "operationId": "RatePlanController_create",
        "summary": "Create a Rate Plan",
        "description": "Creates a Rate Plan",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "rate plan create dto",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Rate plan name.",
                    "example": "My RatePlan"
                  },
                  "description": {
                    "type": "string",
                    "description": "Describe the rate plan.",
                    "example": "Rate plan description."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "independent"
                    ],
                    "description": "Rate plan type.",
                    "example": "independent"
                  },
                  "pricingModel": {
                    "type": "string",
                    "nullable": true,
                    "enum": [
                      "nightly_rate"
                    ],
                    "description": "The pricing model.",
                    "example": "nightly_rate"
                  },
                  "cancellationPolicy": {
                    "nullable": true,
                    "enum": [
                      "strict",
                      "strict_60",
                      "strict_90",
                      "super_strict",
                      "moderate",
                      "semi_moderate",
                      "semi_flexible",
                      "firm",
                      "flex",
                      "free",
                      "special",
                      "direct_reservation_long_stay"
                    ],
                    "type": "string",
                    "example": "strict",
                    "description": "The rate plan cancellation policy."
                  },
                  "cancellationFee": {
                    "nullable": true,
                    "enum": [
                      100,
                      50,
                      0
                    ],
                    "type": "number",
                    "example": 100,
                    "description": "The rate plan cancellation fee."
                  },
                  "channelSync": {
                    "default": [],
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "bookingCom",
                        "manual_reservations",
                        "booking_engine"
                      ]
                    },
                    "example": [
                      "bookingCom"
                    ],
                    "description": "The channel to which the rate plan applies."
                  },
                  "mealPlans": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "breakfast",
                        "lunch",
                        "dinner",
                        "all_inclusive"
                      ]
                    },
                    "example": [
                      "dinner",
                      "lunch"
                    ],
                    "description": "Rate plan meal plans."
                  },
                  "availabilityRules": {
                    "description": "Rate plan availability rules.n",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "advanceNotice": {
                            "type": "number",
                            "description": "advance notice",
                            "example": 1
                          },
                          "bookingWindow": {
                            "type": "number",
                            "description": "booking window",
                            "example": 3
                          }
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ratePlan": {
                      "description": "rate plan",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "5fae51c4fdff570029b147e8",
                              "description": "id"
                            },
                            "accountId": {
                              "type": "string",
                              "example": "5213a2d206112710005d96ff",
                              "description": "account id"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "independent"
                              ],
                              "example": "independent",
                              "description": "type"
                            },
                            "name": {
                              "type": "string",
                              "example": "My rate plan",
                              "description": "name"
                            },
                            "description": {
                              "type": "string",
                              "example": "My rate plan description",
                              "description": "description"
                            },
                            "cancellationPolicy": {
                              "nullable": true,
                              "enum": [
                                "strict",
                                "strict_60",
                                "strict_90",
                                "super_strict",
                                "moderate",
                                "semi_moderate",
                                "semi_flexible",
                                "firm",
                                "flex",
                                "free"
                              ],
                              "type": "string",
                              "example": "firm",
                              "description": "cancellationPolicy"
                            },
                            "cancellationFee": {
                              "nullable": true,
                              "enum": [
                                "FIRST_NIGHT",
                                "50%_TOTAL_PRICE",
                                "TOTAL_PRICE",
                                100,
                                50,
                                0
                              ],
                              "type": "string",
                              "example": 50,
                              "description": "cancellationFee"
                            },
                            "mealPlans": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "enum": [
                                  [
                                    "breakfast",
                                    "lunch",
                                    "dinner",
                                    "all_inclusive"
                                  ]
                                ]
                              },
                              "example": [
                                "all_inclusive"
                              ],
                              "description": "mealPlans"
                            },
                            "availabilityRules": {
                              "example": {
                                "advanceNotice": 10,
                                "bookingWindow": 20
                              },
                              "description": "availabilityRules",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "advanceNotice": {
                                      "type": "number",
                                      "description": "advance notice",
                                      "example": 1
                                    },
                                    "bookingWindow": {
                                      "type": "number",
                                      "description": "booking window",
                                      "example": 3
                                    },
                                    "dateRange": {
                                      "description": "date range",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "to": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "to date"
                                            },
                                            "from": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "from date"
                                            },
                                            "repeatedDays": {
                                              "description": "repeated days",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "0": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "1": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "2": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "3": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "4": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "5": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "6": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "0",
                                                    "1",
                                                    "2",
                                                    "3",
                                                    "4",
                                                    "5",
                                                    "6"
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "to",
                                            "from",
                                            "repeatedDays"
                                          ]
                                        }
                                      ]
                                    },
                                    "restrictedDates": {
                                      "description": "restricted dates",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "pricingModel": {
                              "type": "string",
                              "enum": [
                                "nightly_rate"
                              ],
                              "example": "nightly_rate",
                              "description": "pricingModel"
                            },
                            "channelSync": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "bookingCom",
                                  "manual_reservations",
                                  "booking_engine"
                                ]
                              },
                              "example": [
                                "bookingCom"
                              ],
                              "description": "channelSync"
                            },
                            "active": {
                              "type": "boolean",
                              "example": true,
                              "description": "is active"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "createdAt"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "updatedAt"
                            }
                          },
                          "required": [
                            "_id",
                            "accountId",
                            "type",
                            "name",
                            "pricingModel",
                            "active",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    },
                    "requestId": {
                      "type": "string",
                      "description": "request id"
                    }
                  },
                  "required": [
                    "ratePlan",
                    "requestId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "default": 400,
                      "enum": [
                        "CONTINUE",
                        "SWITCHING_PROTOCOLS",
                        "PROCESSING",
                        "EARLYHINTS",
                        "OK",
                        "CREATED",
                        "ACCEPTED",
                        "NON_AUTHORITATIVE_INFORMATION",
                        "NO_CONTENT",
                        "RESET_CONTENT",
                        "PARTIAL_CONTENT",
                        "AMBIGUOUS",
                        "MOVED_PERMANENTLY",
                        "FOUND",
                        "SEE_OTHER",
                        "NOT_MODIFIED",
                        "TEMPORARY_REDIRECT",
                        "PERMANENT_REDIRECT",
                        "BAD_REQUEST",
                        "UNAUTHORIZED",
                        "PAYMENT_REQUIRED",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "METHOD_NOT_ALLOWED",
                        "NOT_ACCEPTABLE",
                        "PROXY_AUTHENTICATION_REQUIRED",
                        "REQUEST_TIMEOUT",
                        "CONFLICT",
                        "GONE",
                        "LENGTH_REQUIRED",
                        "PRECONDITION_FAILED",
                        "PAYLOAD_TOO_LARGE",
                        "URI_TOO_LONG",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "REQUESTED_RANGE_NOT_SATISFIABLE",
                        "EXPECTATION_FAILED",
                        "I_AM_A_TEAPOT",
                        "MISDIRECTED",
                        "UNPROCESSABLE_ENTITY",
                        "FAILED_DEPENDENCY",
                        "PRECONDITION_REQUIRED",
                        "TOO_MANY_REQUESTS",
                        "INTERNAL_SERVER_ERROR",
                        "NOT_IMPLEMENTED",
                        "BAD_GATEWAY",
                        "SERVICE_UNAVAILABLE",
                        "GATEWAY_TIMEOUT",
                        "HTTP_VERSION_NOT_SUPPORTED"
                      ],
                      "example": 400
                    },
                    "code": {
                      "type": "object",
                      "default": "VALIDATION_FAILED",
                      "example": "VALIDATION_FAILED"
                    },
                    "message": {
                      "type": "object",
                      "default": "Bad Request",
                      "example": "Bad Request"
                    },
                    "error": {
                      "default": {},
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            },
                            "property2Name": {
                              "type": "object",
                              "properties": {
                                "subPropertyName": {
                                  "items": {
                                    "type": "array"
                                  },
                                  "type": "array"
                                }
                              }
                            },
                            "property3Name": {
                              "nullable": true,
                              "example": [
                                null,
                                [
                                  "\"property3Name[1]\" does not match any of the allowed types"
                                ]
                              ],
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "Access is forbidden for this client"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Open Api Rate Plan CRUD v1"
        ]
      }
    },
    "/rm-rate-plans-ext/rate-plans/{ratePlanId}": {
      "get": {
        "operationId": "RatePlanController_getById",
        "summary": "Get a Rate Plan by ID",
        "description": "Retrieves a rate plan by querying its ID.",
        "parameters": [
          {
            "name": "ratePlanId",
            "required": true,
            "in": "path",
            "description": "The rate plan ID.",
            "example": "62d7d58327dba40034e9670e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ratePlan": {
                      "description": "rate plan",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "5fae51c4fdff570029b147e8",
                              "description": "id"
                            },
                            "accountId": {
                              "type": "string",
                              "example": "5213a2d206112710005d96ff",
                              "description": "account id"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "independent"
                              ],
                              "example": "independent",
                              "description": "type"
                            },
                            "name": {
                              "type": "string",
                              "example": "My rate plan",
                              "description": "name"
                            },
                            "description": {
                              "type": "string",
                              "example": "My rate plan description",
                              "description": "description"
                            },
                            "cancellationPolicy": {
                              "nullable": true,
                              "enum": [
                                "strict",
                                "strict_60",
                                "strict_90",
                                "super_strict",
                                "moderate",
                                "semi_moderate",
                                "semi_flexible",
                                "firm",
                                "flex",
                                "free"
                              ],
                              "type": "string",
                              "example": "firm",
                              "description": "cancellationPolicy"
                            },
                            "cancellationFee": {
                              "nullable": true,
                              "enum": [
                                "FIRST_NIGHT",
                                "50%_TOTAL_PRICE",
                                "TOTAL_PRICE",
                                100,
                                50,
                                0
                              ],
                              "type": "string",
                              "example": 50,
                              "description": "cancellationFee"
                            },
                            "mealPlans": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "enum": [
                                  [
                                    "breakfast",
                                    "lunch",
                                    "dinner",
                                    "all_inclusive"
                                  ]
                                ]
                              },
                              "example": [
                                "all_inclusive"
                              ],
                              "description": "mealPlans"
                            },
                            "availabilityRules": {
                              "example": {
                                "advanceNotice": 10,
                                "bookingWindow": 20
                              },
                              "description": "availabilityRules",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "advanceNotice": {
                                      "type": "number",
                                      "description": "advance notice",
                                      "example": 1
                                    },
                                    "bookingWindow": {
                                      "type": "number",
                                      "description": "booking window",
                                      "example": 3
                                    },
                                    "dateRange": {
                                      "description": "date range",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "to": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "to date"
                                            },
                                            "from": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "from date"
                                            },
                                            "repeatedDays": {
                                              "description": "repeated days",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "0": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "1": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "2": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "3": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "4": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "5": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "6": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "0",
                                                    "1",
                                                    "2",
                                                    "3",
                                                    "4",
                                                    "5",
                                                    "6"
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "to",
                                            "from",
                                            "repeatedDays"
                                          ]
                                        }
                                      ]
                                    },
                                    "restrictedDates": {
                                      "description": "restricted dates",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "pricingModel": {
                              "type": "string",
                              "enum": [
                                "nightly_rate"
                              ],
                              "example": "nightly_rate",
                              "description": "pricingModel"
                            },
                            "channelSync": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "bookingCom",
                                  "manual_reservations",
                                  "booking_engine"
                                ]
                              },
                              "example": [
                                "bookingCom"
                              ],
                              "description": "channelSync"
                            },
                            "active": {
                              "type": "boolean",
                              "example": true,
                              "description": "is active"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "createdAt"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "updatedAt"
                            }
                          },
                          "required": [
                            "_id",
                            "accountId",
                            "type",
                            "name",
                            "pricingModel",
                            "active",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    },
                    "requestId": {
                      "type": "string",
                      "description": "request id"
                    }
                  },
                  "required": [
                    "ratePlan",
                    "requestId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "Access is forbidden for this client"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "default": {
                        "code": "RATE_PLAN_NOT_FOUND",
                        "data": "RatePlan not found",
                        "message": "Not Found",
                        "status": 404
                      }
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Open Api Rate Plan CRUD v1"
        ]
      },
      "put": {
        "operationId": "RatePlanController_update",
        "summary": "Update a Rate Plan",
        "description": "Updates an existing rate plan.",
        "parameters": [
          {
            "name": "ratePlanId",
            "required": true,
            "in": "path",
            "description": "The rate plan ID.",
            "example": "62d7d58327dba40034e9670e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "update rate plan dto",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Rate plan name.",
                    "example": "My RatePlan"
                  },
                  "description": {
                    "type": "string",
                    "description": "Describe the rate plan.",
                    "example": "Rate plan description."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "independent"
                    ],
                    "description": "Rate plan type.",
                    "example": "independent"
                  },
                  "pricingModel": {
                    "type": "string",
                    "nullable": true,
                    "enum": [
                      "nightly_rate"
                    ],
                    "description": "The pricing model.",
                    "example": "nightly_rate"
                  },
                  "cancellationPolicy": {
                    "nullable": true,
                    "enum": [
                      "strict",
                      "strict_60",
                      "strict_90",
                      "super_strict",
                      "moderate",
                      "semi_moderate",
                      "semi_flexible",
                      "firm",
                      "flex",
                      "free",
                      "special",
                      "direct_reservation_long_stay"
                    ],
                    "type": "string",
                    "example": "strict",
                    "description": "The rate plan cancellation policy."
                  },
                  "cancellationFee": {
                    "nullable": true,
                    "enum": [
                      100,
                      50,
                      0
                    ],
                    "type": "number",
                    "example": 100,
                    "description": "The rate plan cancellation fee."
                  },
                  "channelSync": {
                    "default": [],
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "bookingCom",
                        "manual_reservations",
                        "booking_engine"
                      ]
                    },
                    "example": [
                      "bookingCom"
                    ],
                    "description": "The channel to which the rate plan applies."
                  },
                  "mealPlans": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "breakfast",
                        "lunch",
                        "dinner",
                        "all_inclusive"
                      ]
                    },
                    "example": [
                      "dinner",
                      "lunch"
                    ],
                    "description": "Rate plan meal plans."
                  },
                  "availabilityRules": {
                    "description": "Rate plan availability rules.n",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "advanceNotice": {
                            "type": "number",
                            "description": "advance notice",
                            "example": 1
                          },
                          "bookingWindow": {
                            "type": "number",
                            "description": "booking window",
                            "example": 3
                          }
                        }
                      }
                    ]
                  },
                  "active": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates whether the rate plan is active or not.",
                    "example": true
                  }
                },
                "required": [
                  "name",
                  "type",
                  "active"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ratePlan": {
                      "description": "rate plan",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "5fae51c4fdff570029b147e8",
                              "description": "id"
                            },
                            "accountId": {
                              "type": "string",
                              "example": "5213a2d206112710005d96ff",
                              "description": "account id"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "independent"
                              ],
                              "example": "independent",
                              "description": "type"
                            },
                            "name": {
                              "type": "string",
                              "example": "My rate plan",
                              "description": "name"
                            },
                            "description": {
                              "type": "string",
                              "example": "My rate plan description",
                              "description": "description"
                            },
                            "cancellationPolicy": {
                              "nullable": true,
                              "enum": [
                                "strict",
                                "strict_60",
                                "strict_90",
                                "super_strict",
                                "moderate",
                                "semi_moderate",
                                "semi_flexible",
                                "firm",
                                "flex",
                                "free"
                              ],
                              "type": "string",
                              "example": "firm",
                              "description": "cancellationPolicy"
                            },
                            "cancellationFee": {
                              "nullable": true,
                              "enum": [
                                "FIRST_NIGHT",
                                "50%_TOTAL_PRICE",
                                "TOTAL_PRICE",
                                100,
                                50,
                                0
                              ],
                              "type": "string",
                              "example": 50,
                              "description": "cancellationFee"
                            },
                            "mealPlans": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "enum": [
                                  [
                                    "breakfast",
                                    "lunch",
                                    "dinner",
                                    "all_inclusive"
                                  ]
                                ]
                              },
                              "example": [
                                "all_inclusive"
                              ],
                              "description": "mealPlans"
                            },
                            "availabilityRules": {
                              "example": {
                                "advanceNotice": 10,
                                "bookingWindow": 20
                              },
                              "description": "availabilityRules",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "advanceNotice": {
                                      "type": "number",
                                      "description": "advance notice",
                                      "example": 1
                                    },
                                    "bookingWindow": {
                                      "type": "number",
                                      "description": "booking window",
                                      "example": 3
                                    },
                                    "dateRange": {
                                      "description": "date range",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "to": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "to date"
                                            },
                                            "from": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "from date"
                                            },
                                            "repeatedDays": {
                                              "description": "repeated days",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "0": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "1": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "2": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "3": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "4": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "5": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "6": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "0",
                                                    "1",
                                                    "2",
                                                    "3",
                                                    "4",
                                                    "5",
                                                    "6"
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "to",
                                            "from",
                                            "repeatedDays"
                                          ]
                                        }
                                      ]
                                    },
                                    "restrictedDates": {
                                      "description": "restricted dates",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "pricingModel": {
                              "type": "string",
                              "enum": [
                                "nightly_rate"
                              ],
                              "example": "nightly_rate",
                              "description": "pricingModel"
                            },
                            "channelSync": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "bookingCom",
                                  "manual_reservations",
                                  "booking_engine"
                                ]
                              },
                              "example": [
                                "bookingCom"
                              ],
                              "description": "channelSync"
                            },
                            "active": {
                              "type": "boolean",
                              "example": true,
                              "description": "is active"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "createdAt"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "updatedAt"
                            }
                          },
                          "required": [
                            "_id",
                            "accountId",
                            "type",
                            "name",
                            "pricingModel",
                            "active",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    },
                    "requestId": {
                      "type": "string",
                      "description": "request id"
                    }
                  },
                  "required": [
                    "ratePlan",
                    "requestId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "default": 400,
                      "enum": [
                        "CONTINUE",
                        "SWITCHING_PROTOCOLS",
                        "PROCESSING",
                        "EARLYHINTS",
                        "OK",
                        "CREATED",
                        "ACCEPTED",
                        "NON_AUTHORITATIVE_INFORMATION",
                        "NO_CONTENT",
                        "RESET_CONTENT",
                        "PARTIAL_CONTENT",
                        "AMBIGUOUS",
                        "MOVED_PERMANENTLY",
                        "FOUND",
                        "SEE_OTHER",
                        "NOT_MODIFIED",
                        "TEMPORARY_REDIRECT",
                        "PERMANENT_REDIRECT",
                        "BAD_REQUEST",
                        "UNAUTHORIZED",
                        "PAYMENT_REQUIRED",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "METHOD_NOT_ALLOWED",
                        "NOT_ACCEPTABLE",
                        "PROXY_AUTHENTICATION_REQUIRED",
                        "REQUEST_TIMEOUT",
                        "CONFLICT",
                        "GONE",
                        "LENGTH_REQUIRED",
                        "PRECONDITION_FAILED",
                        "PAYLOAD_TOO_LARGE",
                        "URI_TOO_LONG",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "REQUESTED_RANGE_NOT_SATISFIABLE",
                        "EXPECTATION_FAILED",
                        "I_AM_A_TEAPOT",
                        "MISDIRECTED",
                        "UNPROCESSABLE_ENTITY",
                        "FAILED_DEPENDENCY",
                        "PRECONDITION_REQUIRED",
                        "TOO_MANY_REQUESTS",
                        "INTERNAL_SERVER_ERROR",
                        "NOT_IMPLEMENTED",
                        "BAD_GATEWAY",
                        "SERVICE_UNAVAILABLE",
                        "GATEWAY_TIMEOUT",
                        "HTTP_VERSION_NOT_SUPPORTED"
                      ],
                      "example": 400
                    },
                    "code": {
                      "type": "object",
                      "default": "VALIDATION_FAILED",
                      "example": "VALIDATION_FAILED"
                    },
                    "message": {
                      "type": "object",
                      "default": "Bad Request",
                      "example": "Bad Request"
                    },
                    "error": {
                      "default": {},
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            },
                            "property2Name": {
                              "type": "object",
                              "properties": {
                                "subPropertyName": {
                                  "items": {
                                    "type": "array"
                                  },
                                  "type": "array"
                                }
                              }
                            },
                            "property3Name": {
                              "nullable": true,
                              "example": [
                                null,
                                [
                                  "\"property3Name[1]\" does not match any of the allowed types"
                                ]
                              ],
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "Access is forbidden for this client"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "default": {
                        "code": "RATE_PLAN_NOT_FOUND",
                        "data": "RatePlan not found",
                        "message": "Not Found",
                        "status": 404
                      }
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Open Api Rate Plan CRUD v1"
        ]
      },
      "patch": {
        "operationId": "RatePlanController_patch",
        "summary": "patch rate plan",
        "description": "patch rate plan",
        "parameters": [
          {
            "name": "ratePlanId",
            "required": true,
            "in": "path",
            "description": "The rate plan ID.",
            "example": "62d7d58327dba40034e9670e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "patch rate plan dto",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Rate plan name.",
                    "example": "My RatePlan"
                  },
                  "description": {
                    "type": "string",
                    "description": "Describe the rate plan.",
                    "example": "Rate plan description."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "independent"
                    ],
                    "description": "Rate plan type.",
                    "example": "independent"
                  },
                  "pricingModel": {
                    "type": "string",
                    "nullable": true,
                    "enum": [
                      "nightly_rate"
                    ],
                    "description": "The pricing model.",
                    "example": "nightly_rate"
                  },
                  "cancellationPolicy": {
                    "nullable": true,
                    "enum": [
                      "strict",
                      "strict_60",
                      "strict_90",
                      "super_strict",
                      "moderate",
                      "semi_moderate",
                      "semi_flexible",
                      "firm",
                      "flex",
                      "free",
                      "special",
                      "direct_reservation_long_stay"
                    ],
                    "type": "string",
                    "example": "strict",
                    "description": "The rate plan cancellation policy."
                  },
                  "cancellationFee": {
                    "nullable": true,
                    "enum": [
                      100,
                      50,
                      0
                    ],
                    "type": "number",
                    "example": 100,
                    "description": "The rate plan cancellation fee."
                  },
                  "channelSync": {
                    "default": [],
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "bookingCom",
                        "manual_reservations",
                        "booking_engine"
                      ]
                    },
                    "example": [
                      "bookingCom"
                    ],
                    "description": "The channel to which the rate plan applies."
                  },
                  "mealPlans": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "breakfast",
                        "lunch",
                        "dinner",
                        "all_inclusive"
                      ]
                    },
                    "example": [
                      "dinner",
                      "lunch"
                    ],
                    "description": "Rate plan meal plans."
                  },
                  "availabilityRules": {
                    "description": "Rate plan availability rules.n",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "advanceNotice": {
                            "type": "number",
                            "description": "advance notice",
                            "example": 1
                          },
                          "bookingWindow": {
                            "type": "number",
                            "description": "booking window",
                            "example": 3
                          }
                        }
                      }
                    ]
                  },
                  "active": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates whether the rate plan is active or not.",
                    "example": true
                  }
                },
                "required": [
                  "name",
                  "type",
                  "active"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ratePlan": {
                      "description": "rate plan",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "5fae51c4fdff570029b147e8",
                              "description": "id"
                            },
                            "accountId": {
                              "type": "string",
                              "example": "5213a2d206112710005d96ff",
                              "description": "account id"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "independent"
                              ],
                              "example": "independent",
                              "description": "type"
                            },
                            "name": {
                              "type": "string",
                              "example": "My rate plan",
                              "description": "name"
                            },
                            "description": {
                              "type": "string",
                              "example": "My rate plan description",
                              "description": "description"
                            },
                            "cancellationPolicy": {
                              "nullable": true,
                              "enum": [
                                "strict",
                                "strict_60",
                                "strict_90",
                                "super_strict",
                                "moderate",
                                "semi_moderate",
                                "semi_flexible",
                                "firm",
                                "flex",
                                "free"
                              ],
                              "type": "string",
                              "example": "firm",
                              "description": "cancellationPolicy"
                            },
                            "cancellationFee": {
                              "nullable": true,
                              "enum": [
                                "FIRST_NIGHT",
                                "50%_TOTAL_PRICE",
                                "TOTAL_PRICE",
                                100,
                                50,
                                0
                              ],
                              "type": "string",
                              "example": 50,
                              "description": "cancellationFee"
                            },
                            "mealPlans": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "enum": [
                                  [
                                    "breakfast",
                                    "lunch",
                                    "dinner",
                                    "all_inclusive"
                                  ]
                                ]
                              },
                              "example": [
                                "all_inclusive"
                              ],
                              "description": "mealPlans"
                            },
                            "availabilityRules": {
                              "example": {
                                "advanceNotice": 10,
                                "bookingWindow": 20
                              },
                              "description": "availabilityRules",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "advanceNotice": {
                                      "type": "number",
                                      "description": "advance notice",
                                      "example": 1
                                    },
                                    "bookingWindow": {
                                      "type": "number",
                                      "description": "booking window",
                                      "example": 3
                                    },
                                    "dateRange": {
                                      "description": "date range",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "to": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "to date"
                                            },
                                            "from": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "from date"
                                            },
                                            "repeatedDays": {
                                              "description": "repeated days",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "0": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "1": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "2": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "3": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "4": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "5": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "6": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "0",
                                                    "1",
                                                    "2",
                                                    "3",
                                                    "4",
                                                    "5",
                                                    "6"
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "to",
                                            "from",
                                            "repeatedDays"
                                          ]
                                        }
                                      ]
                                    },
                                    "restrictedDates": {
                                      "description": "restricted dates",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "pricingModel": {
                              "type": "string",
                              "enum": [
                                "nightly_rate"
                              ],
                              "example": "nightly_rate",
                              "description": "pricingModel"
                            },
                            "channelSync": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "bookingCom",
                                  "manual_reservations",
                                  "booking_engine"
                                ]
                              },
                              "example": [
                                "bookingCom"
                              ],
                              "description": "channelSync"
                            },
                            "active": {
                              "type": "boolean",
                              "example": true,
                              "description": "is active"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "createdAt"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "updatedAt"
                            }
                          },
                          "required": [
                            "_id",
                            "accountId",
                            "type",
                            "name",
                            "pricingModel",
                            "active",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    },
                    "requestId": {
                      "type": "string",
                      "description": "request id"
                    }
                  },
                  "required": [
                    "ratePlan",
                    "requestId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "default": 400,
                      "enum": [
                        "CONTINUE",
                        "SWITCHING_PROTOCOLS",
                        "PROCESSING",
                        "EARLYHINTS",
                        "OK",
                        "CREATED",
                        "ACCEPTED",
                        "NON_AUTHORITATIVE_INFORMATION",
                        "NO_CONTENT",
                        "RESET_CONTENT",
                        "PARTIAL_CONTENT",
                        "AMBIGUOUS",
                        "MOVED_PERMANENTLY",
                        "FOUND",
                        "SEE_OTHER",
                        "NOT_MODIFIED",
                        "TEMPORARY_REDIRECT",
                        "PERMANENT_REDIRECT",
                        "BAD_REQUEST",
                        "UNAUTHORIZED",
                        "PAYMENT_REQUIRED",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "METHOD_NOT_ALLOWED",
                        "NOT_ACCEPTABLE",
                        "PROXY_AUTHENTICATION_REQUIRED",
                        "REQUEST_TIMEOUT",
                        "CONFLICT",
                        "GONE",
                        "LENGTH_REQUIRED",
                        "PRECONDITION_FAILED",
                        "PAYLOAD_TOO_LARGE",
                        "URI_TOO_LONG",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "REQUESTED_RANGE_NOT_SATISFIABLE",
                        "EXPECTATION_FAILED",
                        "I_AM_A_TEAPOT",
                        "MISDIRECTED",
                        "UNPROCESSABLE_ENTITY",
                        "FAILED_DEPENDENCY",
                        "PRECONDITION_REQUIRED",
                        "TOO_MANY_REQUESTS",
                        "INTERNAL_SERVER_ERROR",
                        "NOT_IMPLEMENTED",
                        "BAD_GATEWAY",
                        "SERVICE_UNAVAILABLE",
                        "GATEWAY_TIMEOUT",
                        "HTTP_VERSION_NOT_SUPPORTED"
                      ],
                      "example": 400
                    },
                    "code": {
                      "type": "object",
                      "default": "VALIDATION_FAILED",
                      "example": "VALIDATION_FAILED"
                    },
                    "message": {
                      "type": "object",
                      "default": "Bad Request",
                      "example": "Bad Request"
                    },
                    "error": {
                      "default": {},
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            },
                            "property2Name": {
                              "type": "object",
                              "properties": {
                                "subPropertyName": {
                                  "items": {
                                    "type": "array"
                                  },
                                  "type": "array"
                                }
                              }
                            },
                            "property3Name": {
                              "nullable": true,
                              "example": [
                                null,
                                [
                                  "\"property3Name[1]\" does not match any of the allowed types"
                                ]
                              ],
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "Access is forbidden for this client"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "default": {
                        "code": "RATE_PLAN_NOT_FOUND",
                        "data": "RatePlan not found",
                        "message": "Not Found",
                        "status": 404
                      }
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Open Api Rate Plan CRUD v1"
        ]
      },
      "delete": {
        "operationId": "RatePlanController_remove",
        "summary": "Remove a Rate Plan",
        "description": "Deletes an existing rate plan.",
        "parameters": [
          {
            "name": "ratePlanId",
            "required": true,
            "in": "path",
            "description": "The rate plan ID.",
            "example": "62d7d58327dba40034e9670e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "Access is forbidden for this client"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "default": {
                        "code": "RATE_PLAN_NOT_FOUND",
                        "data": "RatePlan not found",
                        "message": "Not Found",
                        "status": 404
                      }
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Open Api Rate Plan CRUD v1"
        ]
      }
    },
    "/rm-rate-plans-ext/rate-plans/{ratePlanId}/init-assign-listings": {
      "put": {
        "operationId": "RatePlanController_initAssignListings",
        "summary": "Assign Properties to a Rate Plan",
        "description": "Assigns listings to a rate plan.",
        "parameters": [
          {
            "name": "ratePlanId",
            "required": true,
            "in": "path",
            "description": "The rate plan ID.",
            "example": "62d7d58327dba40034e9670e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "init listing assign dto",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listingIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "listingIds"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ratePlan": {
                      "description": "rate plan",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "5fae51c4fdff570029b147e8",
                              "description": "id"
                            },
                            "accountId": {
                              "type": "string",
                              "example": "5213a2d206112710005d96ff",
                              "description": "account id"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "independent"
                              ],
                              "example": "independent",
                              "description": "type"
                            },
                            "name": {
                              "type": "string",
                              "example": "My rate plan",
                              "description": "name"
                            },
                            "description": {
                              "type": "string",
                              "example": "My rate plan description",
                              "description": "description"
                            },
                            "cancellationPolicy": {
                              "nullable": true,
                              "enum": [
                                "strict",
                                "strict_60",
                                "strict_90",
                                "super_strict",
                                "moderate",
                                "semi_moderate",
                                "semi_flexible",
                                "firm",
                                "flex",
                                "free"
                              ],
                              "type": "string",
                              "example": "firm",
                              "description": "cancellationPolicy"
                            },
                            "cancellationFee": {
                              "nullable": true,
                              "enum": [
                                "FIRST_NIGHT",
                                "50%_TOTAL_PRICE",
                                "TOTAL_PRICE",
                                100,
                                50,
                                0
                              ],
                              "type": "string",
                              "example": 50,
                              "description": "cancellationFee"
                            },
                            "mealPlans": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "enum": [
                                  [
                                    "breakfast",
                                    "lunch",
                                    "dinner",
                                    "all_inclusive"
                                  ]
                                ]
                              },
                              "example": [
                                "all_inclusive"
                              ],
                              "description": "mealPlans"
                            },
                            "availabilityRules": {
                              "example": {
                                "advanceNotice": 10,
                                "bookingWindow": 20
                              },
                              "description": "availabilityRules",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "advanceNotice": {
                                      "type": "number",
                                      "description": "advance notice",
                                      "example": 1
                                    },
                                    "bookingWindow": {
                                      "type": "number",
                                      "description": "booking window",
                                      "example": 3
                                    },
                                    "dateRange": {
                                      "description": "date range",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "to": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "to date"
                                            },
                                            "from": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "from date"
                                            },
                                            "repeatedDays": {
                                              "description": "repeated days",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "0": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "1": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "2": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "3": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "4": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "5": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "6": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "0",
                                                    "1",
                                                    "2",
                                                    "3",
                                                    "4",
                                                    "5",
                                                    "6"
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "to",
                                            "from",
                                            "repeatedDays"
                                          ]
                                        }
                                      ]
                                    },
                                    "restrictedDates": {
                                      "description": "restricted dates",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "pricingModel": {
                              "type": "string",
                              "enum": [
                                "nightly_rate"
                              ],
                              "example": "nightly_rate",
                              "description": "pricingModel"
                            },
                            "channelSync": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "bookingCom",
                                  "manual_reservations",
                                  "booking_engine"
                                ]
                              },
                              "example": [
                                "bookingCom"
                              ],
                              "description": "channelSync"
                            },
                            "active": {
                              "type": "boolean",
                              "example": true,
                              "description": "is active"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "createdAt"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "updatedAt"
                            }
                          },
                          "required": [
                            "_id",
                            "accountId",
                            "type",
                            "name",
                            "pricingModel",
                            "active",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    },
                    "requestId": {
                      "type": "string",
                      "description": "request id"
                    }
                  },
                  "required": [
                    "ratePlan",
                    "requestId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "default": 400,
                      "enum": [
                        "CONTINUE",
                        "SWITCHING_PROTOCOLS",
                        "PROCESSING",
                        "EARLYHINTS",
                        "OK",
                        "CREATED",
                        "ACCEPTED",
                        "NON_AUTHORITATIVE_INFORMATION",
                        "NO_CONTENT",
                        "RESET_CONTENT",
                        "PARTIAL_CONTENT",
                        "AMBIGUOUS",
                        "MOVED_PERMANENTLY",
                        "FOUND",
                        "SEE_OTHER",
                        "NOT_MODIFIED",
                        "TEMPORARY_REDIRECT",
                        "PERMANENT_REDIRECT",
                        "BAD_REQUEST",
                        "UNAUTHORIZED",
                        "PAYMENT_REQUIRED",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "METHOD_NOT_ALLOWED",
                        "NOT_ACCEPTABLE",
                        "PROXY_AUTHENTICATION_REQUIRED",
                        "REQUEST_TIMEOUT",
                        "CONFLICT",
                        "GONE",
                        "LENGTH_REQUIRED",
                        "PRECONDITION_FAILED",
                        "PAYLOAD_TOO_LARGE",
                        "URI_TOO_LONG",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "REQUESTED_RANGE_NOT_SATISFIABLE",
                        "EXPECTATION_FAILED",
                        "I_AM_A_TEAPOT",
                        "MISDIRECTED",
                        "UNPROCESSABLE_ENTITY",
                        "FAILED_DEPENDENCY",
                        "PRECONDITION_REQUIRED",
                        "TOO_MANY_REQUESTS",
                        "INTERNAL_SERVER_ERROR",
                        "NOT_IMPLEMENTED",
                        "BAD_GATEWAY",
                        "SERVICE_UNAVAILABLE",
                        "GATEWAY_TIMEOUT",
                        "HTTP_VERSION_NOT_SUPPORTED"
                      ],
                      "example": 400
                    },
                    "code": {
                      "type": "object",
                      "default": "VALIDATION_FAILED",
                      "example": "VALIDATION_FAILED"
                    },
                    "message": {
                      "type": "object",
                      "default": "Bad Request",
                      "example": "Bad Request"
                    },
                    "error": {
                      "default": {},
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            },
                            "property2Name": {
                              "type": "object",
                              "properties": {
                                "subPropertyName": {
                                  "items": {
                                    "type": "array"
                                  },
                                  "type": "array"
                                }
                              }
                            },
                            "property3Name": {
                              "nullable": true,
                              "example": [
                                null,
                                [
                                  "\"property3Name[1]\" does not match any of the allowed types"
                                ]
                              ],
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "Access is forbidden for this client"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "default": {
                        "code": "RATE_PLAN_NOT_FOUND",
                        "data": "RatePlan not found",
                        "message": "Not Found",
                        "status": 404
                      }
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Open Api Rate Plan CRUD v1"
        ]
      }
    },
    "/rm-rate-plans-ext/rate-plans/{ratePlanId}/init-unassign-listings": {
      "put": {
        "operationId": "RatePlanController_initUnassignListings",
        "summary": "Unassign Properties from a Rate Plan",
        "description": "Removes listings from a rate plan.",
        "parameters": [
          {
            "name": "ratePlanId",
            "required": true,
            "in": "path",
            "description": "The rate plan ID.",
            "example": "62d7d58327dba40034e9670e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "init listing unassign dto",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listingIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "listingIds"
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ratePlan": {
                      "description": "rate plan",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "5fae51c4fdff570029b147e8",
                              "description": "id"
                            },
                            "accountId": {
                              "type": "string",
                              "example": "5213a2d206112710005d96ff",
                              "description": "account id"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "independent"
                              ],
                              "example": "independent",
                              "description": "type"
                            },
                            "name": {
                              "type": "string",
                              "example": "My rate plan",
                              "description": "name"
                            },
                            "description": {
                              "type": "string",
                              "example": "My rate plan description",
                              "description": "description"
                            },
                            "cancellationPolicy": {
                              "nullable": true,
                              "enum": [
                                "strict",
                                "strict_60",
                                "strict_90",
                                "super_strict",
                                "moderate",
                                "semi_moderate",
                                "semi_flexible",
                                "firm",
                                "flex",
                                "free"
                              ],
                              "type": "string",
                              "example": "firm",
                              "description": "cancellationPolicy"
                            },
                            "cancellationFee": {
                              "nullable": true,
                              "enum": [
                                "FIRST_NIGHT",
                                "50%_TOTAL_PRICE",
                                "TOTAL_PRICE",
                                100,
                                50,
                                0
                              ],
                              "type": "string",
                              "example": 50,
                              "description": "cancellationFee"
                            },
                            "mealPlans": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "enum": [
                                  [
                                    "breakfast",
                                    "lunch",
                                    "dinner",
                                    "all_inclusive"
                                  ]
                                ]
                              },
                              "example": [
                                "all_inclusive"
                              ],
                              "description": "mealPlans"
                            },
                            "availabilityRules": {
                              "example": {
                                "advanceNotice": 10,
                                "bookingWindow": 20
                              },
                              "description": "availabilityRules",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "advanceNotice": {
                                      "type": "number",
                                      "description": "advance notice",
                                      "example": 1
                                    },
                                    "bookingWindow": {
                                      "type": "number",
                                      "description": "booking window",
                                      "example": 3
                                    },
                                    "dateRange": {
                                      "description": "date range",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "to": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "to date"
                                            },
                                            "from": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "from date"
                                            },
                                            "repeatedDays": {
                                              "description": "repeated days",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "0": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "1": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "2": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "3": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "4": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "5": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "6": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "0",
                                                    "1",
                                                    "2",
                                                    "3",
                                                    "4",
                                                    "5",
                                                    "6"
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "to",
                                            "from",
                                            "repeatedDays"
                                          ]
                                        }
                                      ]
                                    },
                                    "restrictedDates": {
                                      "description": "restricted dates",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "pricingModel": {
                              "type": "string",
                              "enum": [
                                "nightly_rate"
                              ],
                              "example": "nightly_rate",
                              "description": "pricingModel"
                            },
                            "channelSync": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "bookingCom",
                                  "manual_reservations",
                                  "booking_engine"
                                ]
                              },
                              "example": [
                                "bookingCom"
                              ],
                              "description": "channelSync"
                            },
                            "active": {
                              "type": "boolean",
                              "example": true,
                              "description": "is active"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "createdAt"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "updatedAt"
                            }
                          },
                          "required": [
                            "_id",
                            "accountId",
                            "type",
                            "name",
                            "pricingModel",
                            "active",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    },
                    "requestId": {
                      "type": "string",
                      "description": "request id"
                    }
                  },
                  "required": [
                    "ratePlan",
                    "requestId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "default": 400,
                      "enum": [
                        "CONTINUE",
                        "SWITCHING_PROTOCOLS",
                        "PROCESSING",
                        "EARLYHINTS",
                        "OK",
                        "CREATED",
                        "ACCEPTED",
                        "NON_AUTHORITATIVE_INFORMATION",
                        "NO_CONTENT",
                        "RESET_CONTENT",
                        "PARTIAL_CONTENT",
                        "AMBIGUOUS",
                        "MOVED_PERMANENTLY",
                        "FOUND",
                        "SEE_OTHER",
                        "NOT_MODIFIED",
                        "TEMPORARY_REDIRECT",
                        "PERMANENT_REDIRECT",
                        "BAD_REQUEST",
                        "UNAUTHORIZED",
                        "PAYMENT_REQUIRED",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "METHOD_NOT_ALLOWED",
                        "NOT_ACCEPTABLE",
                        "PROXY_AUTHENTICATION_REQUIRED",
                        "REQUEST_TIMEOUT",
                        "CONFLICT",
                        "GONE",
                        "LENGTH_REQUIRED",
                        "PRECONDITION_FAILED",
                        "PAYLOAD_TOO_LARGE",
                        "URI_TOO_LONG",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "REQUESTED_RANGE_NOT_SATISFIABLE",
                        "EXPECTATION_FAILED",
                        "I_AM_A_TEAPOT",
                        "MISDIRECTED",
                        "UNPROCESSABLE_ENTITY",
                        "FAILED_DEPENDENCY",
                        "PRECONDITION_REQUIRED",
                        "TOO_MANY_REQUESTS",
                        "INTERNAL_SERVER_ERROR",
                        "NOT_IMPLEMENTED",
                        "BAD_GATEWAY",
                        "SERVICE_UNAVAILABLE",
                        "GATEWAY_TIMEOUT",
                        "HTTP_VERSION_NOT_SUPPORTED"
                      ],
                      "example": 400
                    },
                    "code": {
                      "type": "object",
                      "default": "VALIDATION_FAILED",
                      "example": "VALIDATION_FAILED"
                    },
                    "message": {
                      "type": "object",
                      "default": "Bad Request",
                      "example": "Bad Request"
                    },
                    "error": {
                      "default": {},
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            },
                            "property2Name": {
                              "type": "object",
                              "properties": {
                                "subPropertyName": {
                                  "items": {
                                    "type": "array"
                                  },
                                  "type": "array"
                                }
                              }
                            },
                            "property3Name": {
                              "nullable": true,
                              "example": [
                                null,
                                [
                                  "\"property3Name[1]\" does not match any of the allowed types"
                                ]
                              ],
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "Access is forbidden for this client"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "default": {
                        "code": "RATE_PLAN_NOT_FOUND",
                        "data": "RatePlan not found",
                        "message": "Not Found",
                        "status": 404
                      }
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Open Api Rate Plan CRUD v1"
        ]
      }
    },
    "/rm-rate-plans-ext/rate-plans/listing/{listingId}": {
      "get": {
        "operationId": "RatePlanController_getByListing",
        "summary": "Get Rate Plans by Property",
        "description": "Retrieve rate plans by the listing ID.",
        "parameters": [
          {
            "name": "listingId",
            "required": true,
            "in": "path",
            "description": "The property ID.",
            "example": "62d7d58327dba40034e9670e",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "required": true,
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "example": 1,
            "schema": {
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "description": "The numbers of items to return.",
            "example": 10,
            "schema": {
              "default": 25,
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": true,
            "in": "query",
            "example": "name",
            "description": "The field by which to sort the items returned. (link to list of filterable fields)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channelId",
            "required": true,
            "in": "query",
            "example": "bookingCom",
            "description": "The channel to which the rate plans apply.",
            "schema": {
              "enum": [
                "bookingCom",
                "manual_reservations",
                "booking_engine"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "listingId": {
                      "type": "string",
                      "description": "Guesty property ID."
                    },
                    "ratePlans": {
                      "description": "Rate Plans List",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "5fae51c4fdff570029b147e8",
                            "description": "id"
                          },
                          "accountId": {
                            "type": "string",
                            "example": "5213a2d206112710005d96ff",
                            "description": "account id"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "independent"
                            ],
                            "example": "independent",
                            "description": "type"
                          },
                          "name": {
                            "type": "string",
                            "example": "My rate plan",
                            "description": "name"
                          },
                          "description": {
                            "type": "string",
                            "example": "My rate plan description",
                            "description": "description"
                          },
                          "cancellationPolicy": {
                            "nullable": true,
                            "enum": [
                              "strict",
                              "strict_60",
                              "strict_90",
                              "super_strict",
                              "moderate",
                              "semi_moderate",
                              "semi_flexible",
                              "firm",
                              "flex",
                              "free"
                            ],
                            "type": "string",
                            "example": "firm",
                            "description": "cancellationPolicy"
                          },
                          "cancellationFee": {
                            "nullable": true,
                            "enum": [
                              "FIRST_NIGHT",
                              "50%_TOTAL_PRICE",
                              "TOTAL_PRICE",
                              100,
                              50,
                              0
                            ],
                            "type": "string",
                            "example": 50,
                            "description": "cancellationFee"
                          },
                          "mealPlans": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "enum": [
                                [
                                  "breakfast",
                                  "lunch",
                                  "dinner",
                                  "all_inclusive"
                                ]
                              ]
                            },
                            "example": [
                              "all_inclusive"
                            ],
                            "description": "mealPlans"
                          },
                          "availabilityRules": {
                            "example": {
                              "advanceNotice": 10,
                              "bookingWindow": 20
                            },
                            "description": "availabilityRules",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "advanceNotice": {
                                    "type": "number",
                                    "description": "advance notice",
                                    "example": 1
                                  },
                                  "bookingWindow": {
                                    "type": "number",
                                    "description": "booking window",
                                    "example": 3
                                  },
                                  "dateRange": {
                                    "description": "date range",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "to": {
                                            "format": "date-time",
                                            "type": "string",
                                            "description": "to date"
                                          },
                                          "from": {
                                            "format": "date-time",
                                            "type": "string",
                                            "description": "from date"
                                          },
                                          "repeatedDays": {
                                            "description": "repeated days",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "0": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  },
                                                  "1": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  },
                                                  "2": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  },
                                                  "3": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  },
                                                  "4": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  },
                                                  "5": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  },
                                                  "6": {
                                                    "type": "object",
                                                    "properties": {
                                                      "available": {
                                                        "type": "boolean",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "available"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "0",
                                                  "1",
                                                  "2",
                                                  "3",
                                                  "4",
                                                  "5",
                                                  "6"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "to",
                                          "from",
                                          "repeatedDays"
                                        ]
                                      }
                                    ]
                                  },
                                  "restrictedDates": {
                                    "description": "restricted dates",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          "pricingModel": {
                            "type": "string",
                            "enum": [
                              "nightly_rate"
                            ],
                            "example": "nightly_rate",
                            "description": "pricingModel"
                          },
                          "channelSync": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "bookingCom",
                                "manual_reservations",
                                "booking_engine"
                              ]
                            },
                            "example": [
                              "bookingCom"
                            ],
                            "description": "channelSync"
                          },
                          "active": {
                            "type": "boolean",
                            "example": true,
                            "description": "is active"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string",
                            "example": "2023-12-01T04:09:27.335Z",
                            "description": "createdAt"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string",
                            "example": "2023-12-01T04:09:27.335Z",
                            "description": "updatedAt"
                          }
                        },
                        "required": [
                          "_id",
                          "accountId",
                          "type",
                          "name",
                          "pricingModel",
                          "active",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "requestId": {
                      "type": "string",
                      "description": "The request ID."
                    },
                    "count": {
                      "type": "number"
                    },
                    "limit": {
                      "type": "number"
                    },
                    "skip": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "listingId",
                    "ratePlans",
                    "requestId",
                    "count",
                    "limit",
                    "skip"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "Access is forbidden for this client"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "default": {
                        "code": "RATE_PLAN_NOT_FOUND",
                        "data": "RatePlan not found",
                        "message": "Not Found",
                        "status": 404
                      }
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Open Api Rate Plan CRUD v1"
        ]
      }
    },
    "/rm-rate-plans-ext/ari-calendar/listing/{listingId}/ratePlan/{ratePlanId}": {
      "get": {
        "operationId": "AriCalendarController_get",
        "summary": "GET Rate Plan Calendar",
        "description": "Retrieves the rate plan's rates, availability and inventory by calendar date.",
        "parameters": [
          {
            "name": "fromDate",
            "required": true,
            "in": "query",
            "example": "2022-11-21",
            "description": "Period start date.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "required": true,
            "in": "query",
            "example": "2022-11-28",
            "description": "Period end date.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "ratePlanId",
            "required": true,
            "in": "path",
            "example": "62d7d58327dba40034e9670e",
            "description": "Rate plan ID.",
            "schema": {}
          },
          {
            "name": "listingId",
            "required": true,
            "in": "path",
            "example": "62d7d58327dba40034e9670e",
            "description": "Property ID.",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ratePlan": {
                      "description": "rate plan id",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "5fae51c4fdff570029b147e8",
                              "description": "id"
                            },
                            "accountId": {
                              "type": "string",
                              "example": "5213a2d206112710005d96ff",
                              "description": "account id"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "independent"
                              ],
                              "example": "independent",
                              "description": "type"
                            },
                            "name": {
                              "type": "string",
                              "example": "My rate plan",
                              "description": "name"
                            },
                            "description": {
                              "type": "string",
                              "example": "My rate plan description",
                              "description": "description"
                            },
                            "cancellationPolicy": {
                              "nullable": true,
                              "enum": [
                                "strict",
                                "strict_60",
                                "strict_90",
                                "super_strict",
                                "moderate",
                                "semi_moderate",
                                "semi_flexible",
                                "firm",
                                "flex",
                                "free"
                              ],
                              "type": "string",
                              "example": "firm",
                              "description": "cancellationPolicy"
                            },
                            "cancellationFee": {
                              "nullable": true,
                              "enum": [
                                "FIRST_NIGHT",
                                "50%_TOTAL_PRICE",
                                "TOTAL_PRICE",
                                100,
                                50,
                                0
                              ],
                              "type": "string",
                              "example": 50,
                              "description": "cancellationFee"
                            },
                            "mealPlans": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "enum": [
                                  [
                                    "breakfast",
                                    "lunch",
                                    "dinner",
                                    "all_inclusive"
                                  ]
                                ]
                              },
                              "example": [
                                "all_inclusive"
                              ],
                              "description": "mealPlans"
                            },
                            "availabilityRules": {
                              "example": {
                                "advanceNotice": 10,
                                "bookingWindow": 20
                              },
                              "description": "availabilityRules",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "advanceNotice": {
                                      "type": "number",
                                      "description": "advance notice",
                                      "example": 1
                                    },
                                    "bookingWindow": {
                                      "type": "number",
                                      "description": "booking window",
                                      "example": 3
                                    },
                                    "dateRange": {
                                      "description": "date range",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "to": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "to date"
                                            },
                                            "from": {
                                              "format": "date-time",
                                              "type": "string",
                                              "description": "from date"
                                            },
                                            "repeatedDays": {
                                              "description": "repeated days",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "0": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "1": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "2": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "3": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "4": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "5": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    },
                                                    "6": {
                                                      "type": "object",
                                                      "properties": {
                                                        "available": {
                                                          "type": "boolean",
                                                          "default": true
                                                        }
                                                      },
                                                      "required": [
                                                        "available"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "0",
                                                    "1",
                                                    "2",
                                                    "3",
                                                    "4",
                                                    "5",
                                                    "6"
                                                  ]
                                                }
                                              ]
                                            }
                                          },
                                          "required": [
                                            "to",
                                            "from",
                                            "repeatedDays"
                                          ]
                                        }
                                      ]
                                    },
                                    "restrictedDates": {
                                      "description": "restricted dates",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "pricingModel": {
                              "type": "string",
                              "enum": [
                                "nightly_rate"
                              ],
                              "example": "nightly_rate",
                              "description": "pricingModel"
                            },
                            "channelSync": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "bookingCom",
                                  "manual_reservations",
                                  "booking_engine"
                                ]
                              },
                              "example": [
                                "bookingCom"
                              ],
                              "description": "channelSync"
                            },
                            "active": {
                              "type": "boolean",
                              "example": true,
                              "description": "is active"
                            },
                            "createdAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "createdAt"
                            },
                            "updatedAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2023-12-01T04:09:27.335Z",
                              "description": "updatedAt"
                            }
                          },
                          "required": [
                            "_id",
                            "accountId",
                            "type",
                            "name",
                            "pricingModel",
                            "active",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    },
                    "days": {
                      "description": "calendar days",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "object",
                            "example": "2023-11-27",
                            "description": "day date"
                          },
                          "price": {
                            "type": "object",
                            "example": 250,
                            "description": "day price"
                          },
                          "minNights": {
                            "type": "number",
                            "example": 1,
                            "description": "day min nights"
                          },
                          "maxNights": {
                            "type": "number",
                            "example": 45,
                            "description": "day max nights"
                          },
                          "cta": {
                            "type": "boolean",
                            "example": false,
                            "description": "cta"
                          },
                          "ctd": {
                            "type": "boolean",
                            "example": false,
                            "description": "ctd"
                          },
                          "allotment": {
                            "type": "number",
                            "example": 3,
                            "description": "allotment"
                          },
                          "closed": {
                            "type": "boolean",
                            "example": false,
                            "description": "is day closed"
                          },
                          "createdAt": {
                            "format": "date-time",
                            "type": "string",
                            "example": "2023-11-27",
                            "description": "cteated at"
                          },
                          "updatedAt": {
                            "format": "date-time",
                            "type": "string",
                            "example": "2023-11-27",
                            "description": "udated at"
                          }
                        },
                        "required": [
                          "date",
                          "price"
                        ]
                      }
                    },
                    "listingId": {
                      "type": "string",
                      "description": "listing id"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "request id"
                    }
                  },
                  "required": [
                    "ratePlan",
                    "days",
                    "listingId",
                    "requestId"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "Access is forbidden for this client"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Open Api Ari Calendar v1"
        ]
      },
      "put": {
        "operationId": "AriCalendarController_upsert",
        "summary": "Upsert Rate Plan ARI Calendar",
        "description": "Set rate plan calendar availability, rates and inventory.",
        "parameters": [
          {
            "name": "ratePlanId",
            "required": true,
            "in": "path",
            "example": "62d7d58327dba40034e9670e",
            "description": "Rate plan ID.",
            "schema": {}
          },
          {
            "name": "listingId",
            "required": true,
            "in": "path",
            "example": "62d7d58327dba40034e9670e",
            "description": "Property ID.",
            "schema": {}
          }
        ],
        "requestBody": {
          "required": true,
          "description": "UpsertAriCalendarDto",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "startDate": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Period start date"
                    },
                    "endDate": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Period end date"
                    },
                    "price": {
                      "type": "number",
                      "description": "Price for the period."
                    },
                    "minNights": {
                      "type": "number",
                      "description": "Minimum stay length."
                    },
                    "maxNights": {
                      "type": "number",
                      "description": "Maximum stay length."
                    },
                    "allotment": {
                      "type": "number",
                      "description": "Actual availability at the property."
                    },
                    "cta": {
                      "type": "boolean",
                      "description": "Closed to check-in."
                    },
                    "ctd": {
                      "type": "boolean",
                      "description": "Closed to check-out."
                    },
                    "closed": {
                      "type": "boolean",
                      "description": "is closed"
                    }
                  },
                  "required": [
                    "startDate",
                    "endDate"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ratePlanId": {
                      "type": "string",
                      "description": "rate plan id"
                    },
                    "listingId": {
                      "type": "string",
                      "description": "listing id"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "request id"
                    }
                  },
                  "required": [
                    "ratePlanId",
                    "listingId",
                    "requestId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "default": 400,
                      "enum": [
                        "CONTINUE",
                        "SWITCHING_PROTOCOLS",
                        "PROCESSING",
                        "EARLYHINTS",
                        "OK",
                        "CREATED",
                        "ACCEPTED",
                        "NON_AUTHORITATIVE_INFORMATION",
                        "NO_CONTENT",
                        "RESET_CONTENT",
                        "PARTIAL_CONTENT",
                        "AMBIGUOUS",
                        "MOVED_PERMANENTLY",
                        "FOUND",
                        "SEE_OTHER",
                        "NOT_MODIFIED",
                        "TEMPORARY_REDIRECT",
                        "PERMANENT_REDIRECT",
                        "BAD_REQUEST",
                        "UNAUTHORIZED",
                        "PAYMENT_REQUIRED",
                        "FORBIDDEN",
                        "NOT_FOUND",
                        "METHOD_NOT_ALLOWED",
                        "NOT_ACCEPTABLE",
                        "PROXY_AUTHENTICATION_REQUIRED",
                        "REQUEST_TIMEOUT",
                        "CONFLICT",
                        "GONE",
                        "LENGTH_REQUIRED",
                        "PRECONDITION_FAILED",
                        "PAYLOAD_TOO_LARGE",
                        "URI_TOO_LONG",
                        "UNSUPPORTED_MEDIA_TYPE",
                        "REQUESTED_RANGE_NOT_SATISFIABLE",
                        "EXPECTATION_FAILED",
                        "I_AM_A_TEAPOT",
                        "MISDIRECTED",
                        "UNPROCESSABLE_ENTITY",
                        "FAILED_DEPENDENCY",
                        "PRECONDITION_REQUIRED",
                        "TOO_MANY_REQUESTS",
                        "INTERNAL_SERVER_ERROR",
                        "NOT_IMPLEMENTED",
                        "BAD_GATEWAY",
                        "SERVICE_UNAVAILABLE",
                        "GATEWAY_TIMEOUT",
                        "HTTP_VERSION_NOT_SUPPORTED"
                      ],
                      "example": 400
                    },
                    "code": {
                      "type": "object",
                      "default": "VALIDATION_FAILED",
                      "example": "VALIDATION_FAILED"
                    },
                    "message": {
                      "type": "object",
                      "default": "Bad Request",
                      "example": "Bad Request"
                    },
                    "error": {
                      "default": {},
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            },
                            "property2Name": {
                              "type": "object",
                              "properties": {
                                "subPropertyName": {
                                  "items": {
                                    "type": "array"
                                  },
                                  "type": "array"
                                }
                              }
                            },
                            "property3Name": {
                              "nullable": true,
                              "example": [
                                null,
                                [
                                  "\"property3Name[1]\" does not match any of the allowed types"
                                ]
                              ],
                              "items": {
                                "type": "array"
                              },
                              "type": "array"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "code",
                    "message",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Client unauthorized"
          },
          "403": {
            "description": "Access is forbidden for this client"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Open Api Ari Calendar v1"
        ]
      }
    },
    "/rm-rate-strategies-open-api/rate-strategies": {
      "get": {
        "operationId": "RateStrategyController_getList",
        "summary": "Retrieve All Rate Strategies.",
        "description": "Use this endpoint to retrieve an account's associated rate strategy settings.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Rate strategies have been received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rateStrategies": {
                      "description": "Partial rate strategies information",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "object",
                            "description": "ID of the strategy",
                            "example": "5c07a535a9e7a8003cf0e43c"
                          },
                          "accountId": {
                            "type": "object",
                            "description": "Account ID",
                            "example": "5c07a535a9e7a8003cf0e43c"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the strategy",
                            "example": "my rate strategy name"
                          },
                          "assignedListingCount": {
                            "type": "number",
                            "description": "Assigned listing count",
                            "example": 1
                          },
                          "rules": {
                            "description": "Rules for the strategy",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "seasonal": {
                                    "description": "Seasonal rules",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "_id": {
                                          "type": "object",
                                          "description": "ID of the seasonal",
                                          "example": "5c07a535a9e7a8003cf0e43c"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the rule",
                                          "example": "event name"
                                        },
                                        "from": {
                                          "type": "object",
                                          "description": "Start date",
                                          "example": "2023-11-30"
                                        },
                                        "to": {
                                          "type": "object",
                                          "description": "End date",
                                          "example": "2023-12-01"
                                        },
                                        "restriction": {
                                          "description": "Restrictions",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "active": {
                                                  "type": "boolean",
                                                  "description": "Is the rule active?",
                                                  "example": false
                                                },
                                                "checkInWeekDays": {
                                                  "description": "Check-in weekdays",
                                                  "example": [
                                                    1,
                                                    3,
                                                    5
                                                  ],
                                                  "type": "array",
                                                  "items": {
                                                    "type": "number"
                                                  }
                                                },
                                                "checkOutWeekDays": {
                                                  "description": "Check-out weekdays",
                                                  "example": [
                                                    1,
                                                    3,
                                                    4,
                                                    5
                                                  ],
                                                  "type": "array",
                                                  "items": {
                                                    "type": "number"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "adjustmentPercentage": {
                                          "type": "number",
                                          "description": "Adjustment percentage",
                                          "example": 3
                                        },
                                        "minNights": {
                                          "type": "number",
                                          "description": "Minimum nights",
                                          "example": 1
                                        },
                                        "isAnnual": {
                                          "type": "boolean",
                                          "description": "Is it annual?",
                                          "example": false
                                        },
                                        "weekDays": {
                                          "description": "Weekdays",
                                          "example": [
                                            0,
                                            1,
                                            2,
                                            3,
                                            4,
                                            5,
                                            6
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "number"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "events": {
                                    "description": "Events rules",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "_id": {
                                          "type": "object",
                                          "description": "ID of the events",
                                          "example": "5c07a535a9e7a8003cf0e43c"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the rule",
                                          "example": "event name"
                                        },
                                        "from": {
                                          "type": "object",
                                          "description": "Start date",
                                          "example": "2023-11-30"
                                        },
                                        "to": {
                                          "type": "object",
                                          "description": "End date",
                                          "example": "2023-12-01"
                                        },
                                        "restriction": {
                                          "description": "Restrictions",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "active": {
                                                  "type": "boolean",
                                                  "description": "Is the rule active?",
                                                  "example": false
                                                },
                                                "checkInWeekDays": {
                                                  "description": "Check-in weekdays",
                                                  "example": [
                                                    1,
                                                    3,
                                                    5
                                                  ],
                                                  "type": "array",
                                                  "items": {
                                                    "type": "number"
                                                  }
                                                },
                                                "checkOutWeekDays": {
                                                  "description": "Check-out weekdays",
                                                  "example": [
                                                    1,
                                                    3,
                                                    4,
                                                    5
                                                  ],
                                                  "type": "array",
                                                  "items": {
                                                    "type": "number"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "adjustmentPercentage": {
                                          "type": "number",
                                          "description": "Adjustment percentage",
                                          "example": 3
                                        },
                                        "minNights": {
                                          "type": "number",
                                          "description": "Minimum nights",
                                          "example": 1
                                        },
                                        "isAnnual": {
                                          "type": "boolean",
                                          "description": "Is it annual?",
                                          "example": false
                                        }
                                      }
                                    }
                                  },
                                  "upcomingAvailability": {
                                    "description": "Upcoming availability rules",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the rule",
                                          "example": "upcoming availability rule name"
                                        },
                                        "fromDays": {
                                          "type": "number",
                                          "description": "Starting days",
                                          "example": 1
                                        },
                                        "toDays": {
                                          "type": "number",
                                          "description": "Ending days",
                                          "example": 3
                                        },
                                        "weekDays": {
                                          "description": "Weekdays",
                                          "example": [
                                            1,
                                            2,
                                            3,
                                            5
                                          ],
                                          "type": "array",
                                          "items": {
                                            "type": "number"
                                          }
                                        },
                                        "adjustmentPercentage": {
                                          "type": "number",
                                          "description": "Adjustment percentage",
                                          "example": 3
                                        },
                                        "minNights": {
                                          "type": "number",
                                          "description": "Minimum nights",
                                          "example": 4
                                        }
                                      }
                                    }
                                  },
                                  "customizedGaps": {
                                    "description": "Customized gaps rules",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "_id": {
                                          "type": "object",
                                          "description": "ID of the customized gap",
                                          "example": "5c07a535a9e7a8003cf0e43c"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the rule",
                                          "example": "gap rule name"
                                        },
                                        "fromDays": {
                                          "type": "number",
                                          "description": "Starting days",
                                          "example": 2
                                        },
                                        "toDays": {
                                          "type": "number",
                                          "description": "Ending days",
                                          "example": 5
                                        },
                                        "adjustmentPercentage": {
                                          "type": "number",
                                          "description": "Adjustment percentage",
                                          "example": 4
                                        },
                                        "maxGap": {
                                          "type": "number",
                                          "description": "Maximum gap",
                                          "example": 3
                                        }
                                      }
                                    }
                                  },
                                  "lengthOfStay": {
                                    "description": "Length of stay rules",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "_id": {
                                          "type": "object",
                                          "description": "ID of the length of stay",
                                          "example": "5c07a535a9e7a8003cf0e43c"
                                        },
                                        "length": {
                                          "description": "Length details",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "from": {
                                                  "type": "number",
                                                  "description": "Starting length",
                                                  "example": "2023-11-30"
                                                },
                                                "to": {
                                                  "type": "number",
                                                  "description": "Ending length",
                                                  "example": "2023-12-03"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "adjustmentPercentage": {
                                          "type": "number",
                                          "description": "Adjustment percentage",
                                          "example": 1
                                        },
                                        "type": {
                                          "enum": [
                                            "single",
                                            "range"
                                          ],
                                          "type": "string",
                                          "description": "Type of length",
                                          "example": "range"
                                        }
                                      }
                                    }
                                  },
                                  "repeatedDays": {
                                    "description": "Repeated days rules",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "0": {
                                            "description": "Rule applied to Sundays",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "_id": {
                                                    "type": "object",
                                                    "description": "ID of the repeated day",
                                                    "example": "5c07a535a9e7a8003cf0e43c"
                                                  },
                                                  "adjustmentPercentage": {
                                                    "type": "number",
                                                    "description": "Adjustment percentage",
                                                    "example": 1
                                                  },
                                                  "minNights": {
                                                    "type": "number",
                                                    "description": "Minimum nights",
                                                    "example": 2
                                                  },
                                                  "cta": {
                                                    "type": "boolean",
                                                    "description": "CTA flag",
                                                    "example": false
                                                  },
                                                  "ctd": {
                                                    "type": "boolean",
                                                    "description": "CTD flag",
                                                    "example": true
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "1": {
                                            "description": "Rule applied to Mondays",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "_id": {
                                                    "type": "object",
                                                    "description": "ID of the repeated day",
                                                    "example": "5c07a535a9e7a8003cf0e43c"
                                                  },
                                                  "adjustmentPercentage": {
                                                    "type": "number",
                                                    "description": "Adjustment percentage",
                                                    "example": 1
                                                  },
                                                  "minNights": {
                                                    "type": "number",
                                                    "description": "Minimum nights",
                                                    "example": 2
                                                  },
                                                  "cta": {
                                                    "type": "boolean",
                                                    "description": "CTA flag",
                                                    "example": false
                                                  },
                                                  "ctd": {
                                                    "type": "boolean",
                                                    "description": "CTD flag",
                                                    "example": true
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "2": {
                                            "description": "Rule applied to Tuesdays",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "_id": {
                                                    "type": "object",
                                                    "description": "ID of the repeated day",
                                                    "example": "5c07a535a9e7a8003cf0e43c"
                                                  },
                                                  "adjustmentPercentage": {
                                                    "type": "number",
                                                    "description": "Adjustment percentage",
                                                    "example": 1
                                                  },
                                                  "minNights": {
                                                    "type": "number",
                                                    "description": "Minimum nights",
                                                    "example": 2
                                                  },
                                                  "cta": {
                                                    "type": "boolean",
                                                    "description": "CTA flag",
                                                    "example": false
                                                  },
                                                  "ctd": {
                                                    "type": "boolean",
                                                    "description": "CTD flag",
                                                    "example": true
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "3": {
                                            "description": "Rule applied to Wednesdays",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "_id": {
                                                    "type": "object",
                                                    "description": "ID of the repeated day",
                                                    "example": "5c07a535a9e7a8003cf0e43c"
                                                  },
                                                  "adjustmentPercentage": {
                                                    "type": "number",
                                                    "description": "Adjustment percentage",
                                                    "example": 1
                                                  },
                                                  "minNights": {
                                                    "type": "number",
                                                    "description": "Minimum nights",
                                                    "example": 2
                                                  },
                                                  "cta": {
                                                    "type": "boolean",
                                                    "description": "CTA flag",
                                                    "example": false
                                                  },
                                                  "ctd": {
                                                    "type": "boolean",
                                                    "description": "CTD flag",
                                                    "example": true
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "4": {
                                            "description": "Rule applied to Thursdays",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "_id": {
                                                    "type": "object",
                                                    "description": "ID of the repeated day",
                                                    "example": "5c07a535a9e7a8003cf0e43c"
                                                  },
                                                  "adjustmentPercentage": {
                                                    "type": "number",
                                                    "description": "Adjustment percentage",
                                                    "example": 1
                                                  },
                                                  "minNights": {
                                                    "type": "number",
                                                    "description": "Minimum nights",
                                                    "example": 2
                                                  },
                                                  "cta": {
                                                    "type": "boolean",
                                                    "description": "CTA flag",
                                                    "example": false
                                                  },
                                                  "ctd": {
                                                    "type": "boolean",
                                                    "description": "CTD flag",
                                                    "example": true
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "5": {
                                            "description": "Rule applied to Fridays",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "_id": {
                                                    "type": "object",
                                                    "description": "ID of the repeated day",
                                                    "example": "5c07a535a9e7a8003cf0e43c"
                                                  },
                                                  "adjustmentPercentage": {
                                                    "type": "number",
                                                    "description": "Adjustment percentage",
                                                    "example": 1
                                                  },
                                                  "minNights": {
                                                    "type": "number",
                                                    "description": "Minimum nights",
                                                    "example": 2
                                                  },
                                                  "cta": {
                                                    "type": "boolean",
                                                    "description": "CTA flag",
                                                    "example": false
                                                  },
                                                  "ctd": {
                                                    "type": "boolean",
                                                    "description": "CTD flag",
                                                    "example": true
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "6": {
                                            "description": "Rule applied to Saturdays",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "_id": {
                                                    "type": "object",
                                                    "description": "ID of the repeated day",
                                                    "example": "5c07a535a9e7a8003cf0e43c"
                                                  },
                                                  "adjustmentPercentage": {
                                                    "type": "number",
                                                    "description": "Adjustment percentage",
                                                    "example": 1
                                                  },
                                                  "minNights": {
                                                    "type": "number",
                                                    "description": "Minimum nights",
                                                    "example": 2
                                                  },
                                                  "cta": {
                                                    "type": "boolean",
                                                    "description": "CTA flag",
                                                    "example": false
                                                  },
                                                  "ctd": {
                                                    "type": "boolean",
                                                    "description": "CTD flag",
                                                    "example": true
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the rate strategy",
                            "example": "rate strategy best description"
                          },
                          "singleUnitsCount": {
                            "type": "number",
                            "description": "Count of single units",
                            "example": 3
                          },
                          "multiUnitsCount": {
                            "type": "number",
                            "description": "Count of multiple units",
                            "example": 1
                          },
                          "subUnitsCount": {
                            "type": "number",
                            "description": "Count of sub-units",
                            "example": 4
                          },
                          "minAdjustmentPercentage": {
                            "type": "number",
                            "description": "Minimum adjustment percentage",
                            "example": 5
                          },
                          "maxAdjustmentPercentage": {
                            "type": "number",
                            "description": "Maximum adjustment percentage",
                            "example": 10
                          },
                          "minNights": {
                            "type": "number",
                            "description": "Minimum number of nights",
                            "example": 4
                          },
                          "isOptimized": {
                            "type": "boolean",
                            "description": "Is the rate strategy optimized?",
                            "example": true
                          },
                          "pendingSync": {
                            "type": "boolean",
                            "description": "Is the rate strategy pending for sync?",
                            "example": false
                          },
                          "createdAt": {
                            "type": "object",
                            "description": "Rate strategy creation date",
                            "example": "2023-12-19T07:53:09.567Z"
                          },
                          "updatedAt": {
                            "type": "object",
                            "description": "Rate strategy last update date",
                            "example": "2023-12-19T07:55:09.567Z"
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "number",
                      "description": "Number of rate strategies in the result set",
                      "example": 10
                    },
                    "limit": {
                      "type": "number",
                      "description": "Maximum number of rate strategies that can be returned in the response",
                      "example": 10
                    },
                    "skip": {
                      "type": "number",
                      "description": "Number of rate strategies that should be skipped from the result set",
                      "example": 0
                    },
                    "requestId": {
                      "type": "string",
                      "description": "ID of the request",
                      "example": "65a0639e9d142279"
                    }
                  },
                  "required": [
                    "rateStrategies",
                    "count",
                    "limit",
                    "skip",
                    "requestId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error."
          },
          "401": {
            "description": "Сlient unauthorized."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "tags": [
          "RateStrategyOpenApi"
        ]
      }
    },
    "/rm-rate-strategies-open-api/rate-strategies/unitType/{unitTypeId}": {
      "get": {
        "operationId": "RateStrategyController_getByUnitTypeId",
        "summary": "Retrieve Property's Rate Strategy.",
        "description": "Use this endpoint to retrieve the property's associated rate strategy settings.",
        "parameters": [
          {
            "name": "unitTypeId",
            "required": true,
            "in": "path",
            "description": "Unit type id.",
            "example": "63ee4b7e459ca31532fdfd232",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rate strategy has been received.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rateStrategy": {
                      "description": "Partial rate strategy information",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "object",
                              "description": "ID of the strategy",
                              "example": "5c07a535a9e7a8003cf0e43c"
                            },
                            "accountId": {
                              "type": "object",
                              "description": "Account ID",
                              "example": "5c07a535a9e7a8003cf0e43c"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the strategy",
                              "example": "my rate strategy name"
                            },
                            "assignedListingCount": {
                              "type": "number",
                              "description": "Assigned listing count",
                              "example": 1
                            },
                            "rules": {
                              "description": "Rules for the strategy",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "seasonal": {
                                      "description": "Seasonal rules",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "object",
                                            "description": "ID of the seasonal",
                                            "example": "5c07a535a9e7a8003cf0e43c"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the rule",
                                            "example": "event name"
                                          },
                                          "from": {
                                            "type": "object",
                                            "description": "Start date",
                                            "example": "2023-11-30"
                                          },
                                          "to": {
                                            "type": "object",
                                            "description": "End date",
                                            "example": "2023-12-01"
                                          },
                                          "restriction": {
                                            "description": "Restrictions",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "active": {
                                                    "type": "boolean",
                                                    "description": "Is the rule active?",
                                                    "example": false
                                                  },
                                                  "checkInWeekDays": {
                                                    "description": "Check-in weekdays",
                                                    "example": [
                                                      1,
                                                      3,
                                                      5
                                                    ],
                                                    "type": "array",
                                                    "items": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "checkOutWeekDays": {
                                                    "description": "Check-out weekdays",
                                                    "example": [
                                                      1,
                                                      3,
                                                      4,
                                                      5
                                                    ],
                                                    "type": "array",
                                                    "items": {
                                                      "type": "number"
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "adjustmentPercentage": {
                                            "type": "number",
                                            "description": "Adjustment percentage",
                                            "example": 3
                                          },
                                          "minNights": {
                                            "type": "number",
                                            "description": "Minimum nights",
                                            "example": 1
                                          },
                                          "isAnnual": {
                                            "type": "boolean",
                                            "description": "Is it annual?",
                                            "example": false
                                          },
                                          "weekDays": {
                                            "description": "Weekdays",
                                            "example": [
                                              0,
                                              1,
                                              2,
                                              3,
                                              4,
                                              5,
                                              6
                                            ],
                                            "type": "array",
                                            "items": {
                                              "type": "number"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "events": {
                                      "description": "Events rules",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "object",
                                            "description": "ID of the events",
                                            "example": "5c07a535a9e7a8003cf0e43c"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the rule",
                                            "example": "event name"
                                          },
                                          "from": {
                                            "type": "object",
                                            "description": "Start date",
                                            "example": "2023-11-30"
                                          },
                                          "to": {
                                            "type": "object",
                                            "description": "End date",
                                            "example": "2023-12-01"
                                          },
                                          "restriction": {
                                            "description": "Restrictions",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "active": {
                                                    "type": "boolean",
                                                    "description": "Is the rule active?",
                                                    "example": false
                                                  },
                                                  "checkInWeekDays": {
                                                    "description": "Check-in weekdays",
                                                    "example": [
                                                      1,
                                                      3,
                                                      5
                                                    ],
                                                    "type": "array",
                                                    "items": {
                                                      "type": "number"
                                                    }
                                                  },
                                                  "checkOutWeekDays": {
                                                    "description": "Check-out weekdays",
                                                    "example": [
                                                      1,
                                                      3,
                                                      4,
                                                      5
                                                    ],
                                                    "type": "array",
                                                    "items": {
                                                      "type": "number"
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "adjustmentPercentage": {
                                            "type": "number",
                                            "description": "Adjustment percentage",
                                            "example": 3
                                          },
                                          "minNights": {
                                            "type": "number",
                                            "description": "Minimum nights",
                                            "example": 1
                                          },
                                          "isAnnual": {
                                            "type": "boolean",
                                            "description": "Is it annual?",
                                            "example": false
                                          }
                                        }
                                      }
                                    },
                                    "upcomingAvailability": {
                                      "description": "Upcoming availability rules",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the rule",
                                            "example": "upcoming availability rule name"
                                          },
                                          "fromDays": {
                                            "type": "number",
                                            "description": "Starting days",
                                            "example": 1
                                          },
                                          "toDays": {
                                            "type": "number",
                                            "description": "Ending days",
                                            "example": 3
                                          },
                                          "weekDays": {
                                            "description": "Weekdays",
                                            "example": [
                                              1,
                                              2,
                                              3,
                                              5
                                            ],
                                            "type": "array",
                                            "items": {
                                              "type": "number"
                                            }
                                          },
                                          "adjustmentPercentage": {
                                            "type": "number",
                                            "description": "Adjustment percentage",
                                            "example": 3
                                          },
                                          "minNights": {
                                            "type": "number",
                                            "description": "Minimum nights",
                                            "example": 4
                                          }
                                        }
                                      }
                                    },
                                    "customizedGaps": {
                                      "description": "Customized gaps rules",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "object",
                                            "description": "ID of the customized gap",
                                            "example": "5c07a535a9e7a8003cf0e43c"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the rule",
                                            "example": "gap rule name"
                                          },
                                          "fromDays": {
                                            "type": "number",
                                            "description": "Starting days",
                                            "example": 2
                                          },
                                          "toDays": {
                                            "type": "number",
                                            "description": "Ending days",
                                            "example": 5
                                          },
                                          "adjustmentPercentage": {
                                            "type": "number",
                                            "description": "Adjustment percentage",
                                            "example": 4
                                          },
                                          "maxGap": {
                                            "type": "number",
                                            "description": "Maximum gap",
                                            "example": 3
                                          }
                                        }
                                      }
                                    },
                                    "lengthOfStay": {
                                      "description": "Length of stay rules",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "object",
                                            "description": "ID of the length of stay",
                                            "example": "5c07a535a9e7a8003cf0e43c"
                                          },
                                          "length": {
                                            "description": "Length details",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "from": {
                                                    "type": "number",
                                                    "description": "Starting length",
                                                    "example": "2023-11-30"
                                                  },
                                                  "to": {
                                                    "type": "number",
                                                    "description": "Ending length",
                                                    "example": "2023-12-03"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "adjustmentPercentage": {
                                            "type": "number",
                                            "description": "Adjustment percentage",
                                            "example": 1
                                          },
                                          "type": {
                                            "enum": [
                                              "single",
                                              "range"
                                            ],
                                            "type": "string",
                                            "description": "Type of length",
                                            "example": "range"
                                          }
                                        }
                                      }
                                    },
                                    "repeatedDays": {
                                      "description": "Repeated days rules",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "0": {
                                              "description": "Rule applied to Sundays",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "_id": {
                                                      "type": "object",
                                                      "description": "ID of the repeated day",
                                                      "example": "5c07a535a9e7a8003cf0e43c"
                                                    },
                                                    "adjustmentPercentage": {
                                                      "type": "number",
                                                      "description": "Adjustment percentage",
                                                      "example": 1
                                                    },
                                                    "minNights": {
                                                      "type": "number",
                                                      "description": "Minimum nights",
                                                      "example": 2
                                                    },
                                                    "cta": {
                                                      "type": "boolean",
                                                      "description": "CTA flag",
                                                      "example": false
                                                    },
                                                    "ctd": {
                                                      "type": "boolean",
                                                      "description": "CTD flag",
                                                      "example": true
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "1": {
                                              "description": "Rule applied to Mondays",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "_id": {
                                                      "type": "object",
                                                      "description": "ID of the repeated day",
                                                      "example": "5c07a535a9e7a8003cf0e43c"
                                                    },
                                                    "adjustmentPercentage": {
                                                      "type": "number",
                                                      "description": "Adjustment percentage",
                                                      "example": 1
                                                    },
                                                    "minNights": {
                                                      "type": "number",
                                                      "description": "Minimum nights",
                                                      "example": 2
                                                    },
                                                    "cta": {
                                                      "type": "boolean",
                                                      "description": "CTA flag",
                                                      "example": false
                                                    },
                                                    "ctd": {
                                                      "type": "boolean",
                                                      "description": "CTD flag",
                                                      "example": true
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "2": {
                                              "description": "Rule applied to Tuesdays",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "_id": {
                                                      "type": "object",
                                                      "description": "ID of the repeated day",
                                                      "example": "5c07a535a9e7a8003cf0e43c"
                                                    },
                                                    "adjustmentPercentage": {
                                                      "type": "number",
                                                      "description": "Adjustment percentage",
                                                      "example": 1
                                                    },
                                                    "minNights": {
                                                      "type": "number",
                                                      "description": "Minimum nights",
                                                      "example": 2
                                                    },
                                                    "cta": {
                                                      "type": "boolean",
                                                      "description": "CTA flag",
                                                      "example": false
                                                    },
                                                    "ctd": {
                                                      "type": "boolean",
                                                      "description": "CTD flag",
                                                      "example": true
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "3": {
                                              "description": "Rule applied to Wednesdays",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "_id": {
                                                      "type": "object",
                                                      "description": "ID of the repeated day",
                                                      "example": "5c07a535a9e7a8003cf0e43c"
                                                    },
                                                    "adjustmentPercentage": {
                                                      "type": "number",
                                                      "description": "Adjustment percentage",
                                                      "example": 1
                                                    },
                                                    "minNights": {
                                                      "type": "number",
                                                      "description": "Minimum nights",
                                                      "example": 2
                                                    },
                                                    "cta": {
                                                      "type": "boolean",
                                                      "description": "CTA flag",
                                                      "example": false
                                                    },
                                                    "ctd": {
                                                      "type": "boolean",
                                                      "description": "CTD flag",
                                                      "example": true
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "4": {
                                              "description": "Rule applied to Thursdays",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "_id": {
                                                      "type": "object",
                                                      "description": "ID of the repeated day",
                                                      "example": "5c07a535a9e7a8003cf0e43c"
                                                    },
                                                    "adjustmentPercentage": {
                                                      "type": "number",
                                                      "description": "Adjustment percentage",
                                                      "example": 1
                                                    },
                                                    "minNights": {
                                                      "type": "number",
                                                      "description": "Minimum nights",
                                                      "example": 2
                                                    },
                                                    "cta": {
                                                      "type": "boolean",
                                                      "description": "CTA flag",
                                                      "example": false
                                                    },
                                                    "ctd": {
                                                      "type": "boolean",
                                                      "description": "CTD flag",
                                                      "example": true
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "5": {
                                              "description": "Rule applied to Fridays",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "_id": {
                                                      "type": "object",
                                                      "description": "ID of the repeated day",
                                                      "example": "5c07a535a9e7a8003cf0e43c"
                                                    },
                                                    "adjustmentPercentage": {
                                                      "type": "number",
                                                      "description": "Adjustment percentage",
                                                      "example": 1
                                                    },
                                                    "minNights": {
                                                      "type": "number",
                                                      "description": "Minimum nights",
                                                      "example": 2
                                                    },
                                                    "cta": {
                                                      "type": "boolean",
                                                      "description": "CTA flag",
                                                      "example": false
                                                    },
                                                    "ctd": {
                                                      "type": "boolean",
                                                      "description": "CTD flag",
                                                      "example": true
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "6": {
                                              "description": "Rule applied to Saturdays",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "_id": {
                                                      "type": "object",
                                                      "description": "ID of the repeated day",
                                                      "example": "5c07a535a9e7a8003cf0e43c"
                                                    },
                                                    "adjustmentPercentage": {
                                                      "type": "number",
                                                      "description": "Adjustment percentage",
                                                      "example": 1
                                                    },
                                                    "minNights": {
                                                      "type": "number",
                                                      "description": "Minimum nights",
                                                      "example": 2
                                                    },
                                                    "cta": {
                                                      "type": "boolean",
                                                      "description": "CTA flag",
                                                      "example": false
                                                    },
                                                    "ctd": {
                                                      "type": "boolean",
                                                      "description": "CTD flag",
                                                      "example": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "description": {
                              "type": "string",
                              "description": "Description of the rate strategy",
                              "example": "rate strategy best description"
                            },
                            "singleUnitsCount": {
                              "type": "number",
                              "description": "Count of single units",
                              "example": 3
                            },
                            "multiUnitsCount": {
                              "type": "number",
                              "description": "Count of multiple units",
                              "example": 1
                            },
                            "subUnitsCount": {
                              "type": "number",
                              "description": "Count of sub-units",
                              "example": 4
                            },
                            "minAdjustmentPercentage": {
                              "type": "number",
                              "description": "Minimum adjustment percentage",
                              "example": 5
                            },
                            "maxAdjustmentPercentage": {
                              "type": "number",
                              "description": "Maximum adjustment percentage",
                              "example": 10
                            },
                            "minNights": {
                              "type": "number",
                              "description": "Minimum number of nights",
                              "example": 4
                            },
                            "isOptimized": {
                              "type": "boolean",
                              "description": "Is the rate strategy optimized?",
                              "example": true
                            },
                            "pendingSync": {
                              "type": "boolean",
                              "description": "Is the rate strategy pending for sync?",
                              "example": false
                            },
                            "createdAt": {
                              "type": "object",
                              "description": "Rate strategy creation date",
                              "example": "2023-12-19T07:53:09.567Z"
                            },
                            "updatedAt": {
                              "type": "object",
                              "description": "Rate strategy last update date",
                              "example": "2023-12-19T07:55:09.567Z"
                            }
                          }
                        }
                      ]
                    },
                    "unitTypeId": {
                      "type": "string",
                      "description": "ID of the unit type",
                      "example": "65814be58b41561467b95de9"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "ID of the request",
                      "example": "65814be58b41561467b95de9"
                    }
                  },
                  "required": [
                    "rateStrategy",
                    "unitTypeId",
                    "requestId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation error."
          },
          "401": {
            "description": "Сlient unauthorized."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "tags": [
          "RateStrategyOpenApi"
        ]
      }
    },
    "/api/scr-v2/open-api/{scrId}": {
      "get": {
        "operationId": "ScrOpenApiController_getScrByPublicId",
        "summary": "Get smart calendar rule",
        "description": "Get a specific Smart Calendar Rule",
        "parameters": [
          {
            "name": "scrId",
            "required": true,
            "in": "path",
            "description": "The ID of the smart calendar rule to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The record has been successfully fetched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "sourceListingId": {
                      "type": "string"
                    },
                    "destinationListingId": {
                      "type": "string"
                    },
                    "isTwoWayRule": {
                      "type": "boolean"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "status": {
                      "enum": [
                        "active",
                        "disabled",
                        "removed"
                      ],
                      "type": "string"
                    },
                    "triggers": {
                      "type": "object",
                      "properties": {
                        "manual": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "manual"
                      ]
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "accountId",
                    "sourceListingId",
                    "destinationListingId",
                    "isTwoWayRule",
                    "isActive",
                    "status",
                    "triggers",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Smart calendar rule was not found. Please check smart calendar rule ID"
          }
        },
        "tags": [
          "Smart Calendar Rules [Beta]"
        ]
      },
      "delete": {
        "operationId": "ScrOpenApiController_removeSmartCalendarRule",
        "summary": "Remove a Smart Calendar Rule",
        "description": "Remove a specific Smart Calendar Rule from Guesty.",
        "parameters": [
          {
            "name": "scrId",
            "required": true,
            "in": "path",
            "description": "The ID of the smart calendar rule to remove",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Smart rule was removed"
          },
          "404": {
            "description": "Smart calendar rule was not found. Please check the smart calendar rule ID"
          }
        },
        "tags": [
          "Smart Calendar Rules [Beta]"
        ]
      },
      "put": {
        "operationId": "ScrOpenApiController_updateScr",
        "summary": "Update a Smart Calendar Rule",
        "description": "Update a specific Smart Calendar Rule in Guesty",
        "parameters": [
          {
            "name": "scrId",
            "required": true,
            "in": "path",
            "description": "The ID of the smart calendar rule to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isTwoWayRule": {
                    "type": "boolean",
                    "description": "Applies the rule both ways between properties. Booking one property blocks off the other and the other way around."
                  },
                  "applyRetroactively": {
                    "type": "boolean",
                    "description": "Rules can be applied retroactively for upcoming reservations. This also includes manual blocks if they were added to this rule."
                  },
                  "triggers": {
                    "description": "Enforces the rule on manual blocks your team created directly in the Multi-Calendar instead of only enforcing the rule on reservations.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "manual": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "manual"
                        ]
                      }
                    ]
                  },
                  "isActive": {
                    "type": "boolean",
                    "description": "Define if the rule should be active or not. Note: in case of activation it is recommended to apply with `applyRetroactively`. Example input: active or disabled"
                  }
                },
                "required": [
                  "isTwoWayRule",
                  "applyRetroactively",
                  "triggers",
                  "isActive"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Smart calendar rule updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "sourceListingId": {
                      "type": "string"
                    },
                    "destinationListingId": {
                      "type": "string"
                    },
                    "isTwoWayRule": {
                      "type": "boolean"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "status": {
                      "enum": [
                        "active",
                        "disabled",
                        "removed"
                      ],
                      "type": "string"
                    },
                    "triggers": {
                      "type": "object",
                      "properties": {
                        "manual": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "manual"
                      ]
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "accountId",
                    "sourceListingId",
                    "destinationListingId",
                    "isTwoWayRule",
                    "isActive",
                    "status",
                    "triggers",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Smart calendar rule was not found. Please check scrId"
          }
        },
        "tags": [
          "Smart Calendar Rules [Beta]"
        ]
      }
    },
    "/api/scr-v2/open-api/{listingId}/list": {
      "get": {
        "operationId": "ScrOpenApiController_getScrList",
        "summary": "Get Smart Calendar Rules per listing",
        "description": "Get a list of Smart Calendar Rules based on specific property",
        "parameters": [
          {
            "name": "listingId",
            "required": true,
            "in": "path",
            "description": "The ID of the listing to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The record has been successfully fetched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "accountId": {
                        "type": "string"
                      },
                      "sourceListingId": {
                        "type": "string"
                      },
                      "destinationListingId": {
                        "type": "string"
                      },
                      "isTwoWayRule": {
                        "type": "boolean"
                      },
                      "isActive": {
                        "type": "boolean"
                      },
                      "status": {
                        "enum": [
                          "active",
                          "disabled",
                          "removed"
                        ],
                        "type": "string"
                      },
                      "triggers": {
                        "type": "object",
                        "properties": {
                          "manual": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "manual"
                        ]
                      },
                      "createdAt": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "accountId",
                      "sourceListingId",
                      "destinationListingId",
                      "isTwoWayRule",
                      "isActive",
                      "status",
                      "triggers",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "No Smart calendar rules found for this listing"
          }
        },
        "tags": [
          "Smart Calendar Rules [Beta]"
        ]
      }
    },
    "/api/scr-v2/open-api": {
      "post": {
        "operationId": "ScrOpenApiController_createScr",
        "summary": "Create a smart calendar rule",
        "description": "Create a new smart calendar rule in Guesty to sync between two or more property calendars",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sourceListingId": {
                    "type": "string",
                    "description": "Listing ID that triggers the rule"
                  },
                  "destinationListingId": {
                    "type": "string",
                    "description": "Listing ID that the rule will work on"
                  },
                  "isTwoWayRule": {
                    "type": "boolean",
                    "description": "Applies the rule both ways between properties. Booking one property blocks off the other and the other way around."
                  },
                  "applyRetroactively": {
                    "type": "boolean",
                    "description": "Rules can be applied retroactively for upcoming reservations. This also includes manual blocks if they were added to this rule."
                  },
                  "triggers": {
                    "description": "Enforces the rule on manual blocks your team created directly in the Multi-Calendar instead of only enforcing the rule on reservations.",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "manual": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "manual"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "sourceListingId",
                  "destinationListingId",
                  "isTwoWayRule",
                  "applyRetroactively",
                  "triggers"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New smart calendar rule created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "accountId": {
                      "type": "string"
                    },
                    "sourceListingId": {
                      "type": "string"
                    },
                    "destinationListingId": {
                      "type": "string"
                    },
                    "isTwoWayRule": {
                      "type": "boolean"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "status": {
                      "enum": [
                        "active",
                        "disabled",
                        "removed"
                      ],
                      "type": "string"
                    },
                    "triggers": {
                      "type": "object",
                      "properties": {
                        "manual": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "manual"
                      ]
                    },
                    "createdAt": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "updatedAt": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "accountId",
                    "sourceListingId",
                    "destinationListingId",
                    "isTwoWayRule",
                    "isActive",
                    "status",
                    "triggers",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Listing not found"
          }
        },
        "tags": [
          "Smart Calendar Rules [Beta]"
        ]
      }
    },
    "/guest-code": {
      "get": {
        "operationId": "ReservationAccessCodeController_getLocksAndCodesByReservation",
        "summary": "Get guest code",
        "description": "Get guest code data for reservations with future check-out times, by reservation ID.\n      Note: The main guest codes are codes with \"purpose\" set to \"GUEST\".\n      Codes with \"purpose\" set to \"GUEST_BACKUP\" are codes to share with guests in case the \"GUEST\" code has errors, starting from the check-in day.\n      \"GUEST_BACKUP\" codes are a dynamic pool of codes associated with reservations on check-in day. When fetching a \"GUEST_BACKUP\" code before the check-in day, the code is not guaranteed to stay the same until the check-in day.",
        "tags": [
          "Guesty Locks Manager"
        ],
        "parameters": [
          {
            "name": "reservationId",
            "required": true,
            "in": "query",
            "description": "Reservation ID for which the guest code is needed",
            "example": "5f9b2b3b9c6b4e000f1e3b1e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "codes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "purpose": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "startsAt": {
                            "format": "date-time",
                            "type": "string",
                            "nullable": true
                          },
                          "endsAt": {
                            "format": "date-time",
                            "type": "string",
                            "nullable": true
                          },
                          "lockIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "code",
                          "purpose",
                          "status",
                          "startsAt",
                          "endsAt",
                          "lockIds"
                        ]
                      }
                    },
                    "locks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "batteryLevel": {
                            "type": "number"
                          },
                          "online": {
                            "type": "boolean"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "imageUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "hasIssues": {
                            "type": "boolean",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "batteryLevel",
                          "online",
                          "provider",
                          "imageUrl"
                        ]
                      }
                    }
                  },
                  "required": [
                    "codes",
                    "locks"
                  ]
                }
              }
            }
          },
          "204": {
            "description": "The reservation does not have associated guest codes"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_FAILED"
                        },
                        "status": {
                          "type": "number",
                          "example": 400
                        },
                        "data": {
                          "example": [
                            "reservationId must be a mongodb id"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "message",
                        "code",
                        "status",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Can't find reservation, by provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Can't find reservation with ID {reservation_id}"
                        },
                        "status": {
                          "type": "number",
                          "example": 404
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/vendors": {
      "get": {
        "operationId": "VendorsController_getAll",
        "summary": "Query vendors",
        "description": "Get a list of vendors",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Pagination param. Limit the number of results",
            "schema": {
              "minimum": 25,
              "maximum": 100,
              "default": 25,
              "type": "number"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "description": "Pagination param. Skip a number of the first results.",
            "schema": {
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of vendors response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "company": {
                            "type": "string"
                          },
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          },
                          "fullName": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "email": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "address": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "company",
                          "firstName",
                          "lastName",
                          "phone",
                          "email"
                        ]
                      }
                    }
                  },
                  "required": [
                    "count",
                    "results"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Bad Request"
                        },
                        "status": {
                          "type": "number",
                          "example": 400
                        },
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_FAILED"
                        },
                        "data": {
                          "example": [
                            "limit must not be less than 25"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "message",
                        "status",
                        "code",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "You do not have sufficient permissions to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Missing account_id error message"
                        },
                        "status": {
                          "type": "number",
                          "example": 403
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Something went wrong"
                        },
                        "status": {
                          "type": "number",
                          "example": 500
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Vendors (only available for accounting add-on users)"
        ]
      }
    },
    "/vendors/{id}": {
      "get": {
        "operationId": "VendorsController_getById",
        "summary": "Query a vendor",
        "description": "Get specific vendor by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Vendor id to get",
            "example": "6092061fdeaae7002f92078e",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vendor response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "company": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "fullName": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "address": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "company",
                    "firstName",
                    "lastName",
                    "phone",
                    "email"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "You do not have sufficient permissions to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Missing account_id error message"
                        },
                        "status": {
                          "type": "number",
                          "example": 403
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Can't find vendor, by provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Not Found"
                        },
                        "status": {
                          "type": "number",
                          "example": 404
                        },
                        "data": {
                          "type": "string",
                          "example": "Not Found"
                        }
                      },
                      "required": [
                        "message",
                        "status",
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unhandled exception. Something went wrong on server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Something went wrong"
                        },
                        "status": {
                          "type": "number",
                          "example": 500
                        }
                      },
                      "required": [
                        "message",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Vendors (only available for accounting add-on users)"
        ]
      }
    }
  }
}